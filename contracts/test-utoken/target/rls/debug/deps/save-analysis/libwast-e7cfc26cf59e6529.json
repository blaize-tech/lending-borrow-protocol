{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0","program":"C:\\Users\\комфи\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","wast","--edition=2018","C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"wasm-module\"","-C","metadata=e7cfc26cf59e6529","-C","extra-filename=-e7cfc26cf59e6529","--out-dir","c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\test-utoken\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\test-utoken\\target\\rls\\debug\\deps","--extern","leb128=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\test-utoken\\target\\rls\\debug\\deps\\libleb128-3e49b5c86d971034.rmeta","--extern","memchr=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\test-utoken\\target\\rls\\debug\\deps\\libmemchr-1302ee278b1ee1ae.rmeta","--extern","unicode_width=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\test-utoken\\target\\rls\\debug\\deps\\libunicode_width-945a61acd170b3dc.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\комфи\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\test-utoken\\target\\rls\\debug\\deps\\libwast-e7cfc26cf59e6529.rmeta"},"prelude":{"crate_id":{"name":"wast","disambiguator":[5181905013049709359,0]},"crate_root":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src","external_crates":[{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[7976927198175868373,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[11165144592143370822,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[252041924521724887,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5467317383579905353,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7624884120048857693,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[11703982264691436790,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[2970152443746782806,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9222488229097456044,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7853498759631503325,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16147963203778103955,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[14622278557065309757,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[12620427935833221912,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[5227252993197737239,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","num":14,"id":{"name":"unicode_width","disambiguator":[15041917927987499597,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","num":15,"id":{"name":"leb128","disambiguator":[9761876771889172693,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","num":16,"id":{"name":"memchr","disambiguator":[14479689056587954301,0]}}],"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":0,"byte_end":8366,"line_start":1,"line_end":255,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":2535,"byte_end":2536,"line_start":60,"line_end":60,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"Span, AssertExpression, V128Pattern, NanPattern","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":0,"byte_end":8366,"line_start":1,"line_end":255,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":234},{"krate":0,"index":511},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":609},{"krate":0,"index":8689},{"krate":0,"index":8691},{"krate":0,"index":8693},{"krate":0,"index":8698},{"krate":0,"index":8700},{"krate":0,"index":8704},{"krate":0,"index":8706},{"krate":0,"index":8713},{"krate":0,"index":750},{"krate":0,"index":759},{"krate":0,"index":762},{"krate":0,"index":763}],"decl_id":null,"docs":" A crate for low-level parsing of the WebAssembly text formats: WAT and WAST.","sig":null,"attributes":[{"value":"/ A crate for low-level parsing of the WebAssembly text formats: WAT and WAST.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":0,"byte_end":80,"line_start":1,"line_end":1,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":81,"byte_end":84,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate is intended to be a low-level detail of the `wat` crate,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":85,"byte_end":156,"line_start":3,"line_end":3,"column_start":1,"column_end":72}},{"value":"/ providing a low-level parsing API for parsing WebAssembly text format","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":157,"byte_end":230,"line_start":4,"line_end":4,"column_start":1,"column_end":74}},{"value":"/ structures. The API provided by this crate is very similar to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":231,"byte_end":296,"line_start":5,"line_end":5,"column_start":1,"column_end":66}},{"value":"/ [`syn`](https://docs.rs/syn) and provides the ability to write customized","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":297,"byte_end":374,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ parsers which may be an extension to the core WebAssembly text format. For","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":375,"byte_end":453,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ more documentation see the [`parser`] module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":454,"byte_end":503,"line_start":8,"line_end":8,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":504,"byte_end":507,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # High-level Overview","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":508,"byte_end":533,"line_start":10,"line_end":10,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":534,"byte_end":537,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This crate provides a few major pieces of functionality","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":538,"byte_end":597,"line_start":12,"line_end":12,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":598,"byte_end":601,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ * [`lexer`] - this is a raw lexer for the wasm text format. This is not","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":602,"byte_end":677,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/   customizable, but if you'd like to iterate over raw tokens this is the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":678,"byte_end":754,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/   module for you. You likely won't use this much.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":755,"byte_end":808,"line_start":16,"line_end":16,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":809,"byte_end":812,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * [`parser`] - this is the workhorse of this crate. The [`parser`] module","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":813,"byte_end":890,"line_start":18,"line_end":18,"column_start":1,"column_end":78}},{"value":"/   provides the [`Parse`][] trait primarily and utilities","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":891,"byte_end":951,"line_start":19,"line_end":19,"column_start":1,"column_end":61}},{"value":"/   around working with a [`Parser`](`parser::Parser`) to parse streams of","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":952,"byte_end":1028,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/   tokens.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":1029,"byte_end":1042,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":1043,"byte_end":1046,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * [`Module`] - this contains an Abstract Syntax Tree (AST) of the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":1047,"byte_end":1116,"line_start":23,"line_end":23,"column_start":1,"column_end":70}},{"value":"/   WebAssembly Text format (WAT) as well as the unofficial WAST format. This","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":1117,"byte_end":1196,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/   also has a [`Module::encode`] method to emit a module in its binary form.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":1197,"byte_end":1276,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":1277,"byte_end":1280,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Stability and WebAssembly Features","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":1281,"byte_end":1321,"line_start":27,"line_end":27,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":1322,"byte_end":1325,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This crate provides support for many in-progress WebAssembly features such","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":1326,"byte_end":1404,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/ as reference types, multi-value, etc. Be sure to check out the documentation","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":1405,"byte_end":1485,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ of the [`wast` crate](https://docs.rs/wast) for policy information on crate","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":1486,"byte_end":1565,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ stability vs WebAssembly Features. The tl;dr; version is that this crate","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":1566,"byte_end":1642,"line_start":32,"line_end":32,"column_start":1,"column_end":77}},{"value":"/ will issue semver-non-breaking releases which will break the parsing of the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":1643,"byte_end":1722,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ text format. This crate, unlike `wast`, is expected to have numerous Rust","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":1723,"byte_end":1800,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"/ public API changes, all of which will be accompanied with a semver-breaking","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":1801,"byte_end":1880,"line_start":35,"line_end":35,"column_start":1,"column_end":80}},{"value":"/ release.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":1881,"byte_end":1893,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":1894,"byte_end":1897,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Compile-time Cargo features","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":1898,"byte_end":1931,"line_start":38,"line_end":38,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":1932,"byte_end":1935,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ This crate has a `wasm-module` feature which is turned on by default which","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":1936,"byte_end":2014,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"/ includes all necessary support to parse full WebAssembly modules. If you","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":2015,"byte_end":2091,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"/ don't need this (for example you're parsing your own s-expression format)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":2092,"byte_end":2169,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ then this feature can be disabled.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":2170,"byte_end":2208,"line_start":43,"line_end":43,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":2209,"byte_end":2212,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ [`Parse`]: parser::Parse","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":2213,"byte_end":2241,"line_start":45,"line_end":45,"column_start":1,"column_end":29}},{"value":"/ [`LexError`]: lexer::LexError","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":2242,"byte_end":2275,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"deny(missing_docs, rustdoc :: broken_intra_doc_links)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":2277,"byte_end":2332,"line_start":48,"line_end":48,"column_start":1,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":445},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\types.rs","byte_start":121985,"byte_end":121988,"line_start":281,"line_end":281,"column_start":10,"column_end":13},"name":"Key","qualname":"::resolve::types::TypeReference::Key","value":"type Key: TypeKey<'a>;","parent":{"krate":0,"index":443},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":923},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\mod.rs","byte_start":47636,"byte_end":47641,"line_start":90,"line_end":90,"column_start":12,"column_end":17},"name":"Names","qualname":"::resolve::Names","value":"Names {  }","parent":null,"children":[{"krate":0,"index":925}],"decl_id":null,"docs":" Representation of the results of name resolution for a module.","sig":null,"attributes":[{"value":"/ Representation of the results of name resolution for a module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\mod.rs","byte_start":47366,"byte_end":47432,"line_start":84,"line_end":84,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\mod.rs","byte_start":47433,"byte_end":47436,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ This structure is returned from the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\mod.rs","byte_start":47437,"byte_end":47476,"line_start":86,"line_end":86,"column_start":1,"column_end":40}},{"value":"/ [`Module::resolve`](crate::Module::resolve) function and can be used to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\mod.rs","byte_start":47477,"byte_end":47552,"line_start":87,"line_end":87,"column_start":1,"column_end":76}},{"value":"/ resolve your own name arguments if you have any.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\mod.rs","byte_start":47553,"byte_end":47605,"line_start":88,"line_end":88,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\mod.rs","byte_start":47997,"byte_end":48009,"line_start":100,"line_end":100,"column_start":12,"column_end":24},"name":"resolve_func","qualname":"<Names>::resolve_func","value":"pub fn resolve_func(&Self, &mut Index) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Resolves `idx` within the function namespace.","sig":null,"attributes":[{"value":"/ Resolves `idx` within the function namespace.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\mod.rs","byte_start":47711,"byte_end":47760,"line_start":95,"line_end":95,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\mod.rs","byte_start":47765,"byte_end":47768,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ If `idx` is a `Num`, it is ignored, but if it's an `Id` then it will be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\mod.rs","byte_start":47773,"byte_end":47848,"line_start":97,"line_end":97,"column_start":5,"column_end":80}},{"value":"/ looked up in the function namespace and converted to a `Num`. If the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\mod.rs","byte_start":47853,"byte_end":47925,"line_start":98,"line_end":98,"column_start":5,"column_end":77}},{"value":"/ `Id` is not defined then an error will be returned.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\mod.rs","byte_start":47930,"byte_end":47985,"line_start":99,"line_end":99,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\mod.rs","byte_start":48416,"byte_end":48430,"line_start":110,"line_end":110,"column_start":12,"column_end":26},"name":"resolve_memory","qualname":"<Names>::resolve_memory","value":"pub fn resolve_memory(&Self, &mut Index) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Resolves `idx` within the memory namespace.","sig":null,"attributes":[{"value":"/ Resolves `idx` within the memory namespace.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\mod.rs","byte_start":48134,"byte_end":48181,"line_start":105,"line_end":105,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\mod.rs","byte_start":48186,"byte_end":48189,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ If `idx` is a `Num`, it is ignored, but if it's an `Id` then it will be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\mod.rs","byte_start":48194,"byte_end":48269,"line_start":107,"line_end":107,"column_start":5,"column_end":80}},{"value":"/ looked up in the memory namespace and converted to a `Num`. If the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\mod.rs","byte_start":48274,"byte_end":48344,"line_start":108,"line_end":108,"column_start":5,"column_end":75}},{"value":"/ `Id` is not defined then an error will be returned.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\mod.rs","byte_start":48349,"byte_end":48404,"line_start":109,"line_end":109,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\mod.rs","byte_start":48837,"byte_end":48850,"line_start":120,"line_end":120,"column_start":12,"column_end":25},"name":"resolve_table","qualname":"<Names>::resolve_table","value":"pub fn resolve_table(&Self, &mut Index) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Resolves `idx` within the table namespace.","sig":null,"attributes":[{"value":"/ Resolves `idx` within the table namespace.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\mod.rs","byte_start":48557,"byte_end":48603,"line_start":115,"line_end":115,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\mod.rs","byte_start":48608,"byte_end":48611,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ If `idx` is a `Num`, it is ignored, but if it's an `Id` then it will be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\mod.rs","byte_start":48616,"byte_end":48691,"line_start":117,"line_end":117,"column_start":5,"column_end":80}},{"value":"/ looked up in the table namespace and converted to a `Num`. If the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\mod.rs","byte_start":48696,"byte_end":48765,"line_start":118,"line_end":118,"column_start":5,"column_end":74}},{"value":"/ `Id` is not defined then an error will be returned.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\mod.rs","byte_start":48770,"byte_end":48825,"line_start":119,"line_end":119,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\mod.rs","byte_start":49258,"byte_end":49272,"line_start":130,"line_end":130,"column_start":12,"column_end":26},"name":"resolve_global","qualname":"<Names>::resolve_global","value":"pub fn resolve_global(&Self, &mut Index) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Resolves `idx` within the global namespace.","sig":null,"attributes":[{"value":"/ Resolves `idx` within the global namespace.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\mod.rs","byte_start":48976,"byte_end":49023,"line_start":125,"line_end":125,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\mod.rs","byte_start":49028,"byte_end":49031,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ If `idx` is a `Num`, it is ignored, but if it's an `Id` then it will be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\mod.rs","byte_start":49036,"byte_end":49111,"line_start":127,"line_end":127,"column_start":5,"column_end":80}},{"value":"/ looked up in the global namespace and converted to a `Num`. If the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\mod.rs","byte_start":49116,"byte_end":49186,"line_start":128,"line_end":128,"column_start":5,"column_end":75}},{"value":"/ `Id` is not defined then an error will be returned.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\mod.rs","byte_start":49191,"byte_end":49246,"line_start":129,"line_end":129,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":8715},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12435260,"byte_end":12435264,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Span","qualname":"::ast::token::Span","value":"Span {  }","parent":null,"children":[{"krate":0,"index":8716}],"decl_id":null,"docs":" A position in the original source stream, used to render errors.\n","sig":null,"attributes":[{"value":"/ A position in the original source stream, used to render errors.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12435112,"byte_end":12435180,"line_start":8,"line_end":8,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":970},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12435389,"byte_end":12435400,"line_start":16,"line_end":16,"column_start":12,"column_end":23},"name":"from_offset","qualname":"<Span>::from_offset","value":"pub fn from_offset(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a `Span` from a byte offset in the source file.\n","sig":null,"attributes":[{"value":"/ Construct a `Span` from a byte offset in the source file.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12435316,"byte_end":12435377,"line_start":15,"line_end":15,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":971},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12435719,"byte_end":12435729,"line_start":24,"line_end":24,"column_start":12,"column_end":22},"name":"linecol_in","qualname":"<Span>::linecol_in","value":"pub fn linecol_in(&Self, &str) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Returns the line/column information of this span within `text`.\n Line and column numbers are 0-indexed. User presentation is typically\n 1-indexed, but 0-indexing is appropriate for internal use with\n iterators and slices.\n","sig":null,"attributes":[{"value":"/ Returns the line/column information of this span within `text`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12435461,"byte_end":12435528,"line_start":20,"line_end":20,"column_start":5,"column_end":72}},{"value":"/ Line and column numbers are 0-indexed. User presentation is typically","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12435533,"byte_end":12435606,"line_start":21,"line_end":21,"column_start":5,"column_end":78}},{"value":"/ 1-indexed, but 0-indexing is appropriate for internal use with","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12435611,"byte_end":12435677,"line_start":22,"line_end":22,"column_start":5,"column_end":71}},{"value":"/ iterators and slices.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12435682,"byte_end":12435707,"line_start":23,"line_end":23,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":1070},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12436486,"byte_end":12436488,"line_start":45,"line_end":45,"column_start":12,"column_end":14},"name":"Id","qualname":"::ast::token::Id","value":"Id {  }","parent":null,"children":[{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1074}],"decl_id":null,"docs":" An identifier in a WebAssembly module, prefixed by `$` in the textual\n format.","sig":null,"attributes":[{"value":"/ An identifier in a WebAssembly module, prefixed by `$` in the textual","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12436247,"byte_end":12436320,"line_start":39,"line_end":39,"column_start":1,"column_end":74}},{"value":"/ format.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12436321,"byte_end":12436332,"line_start":40,"line_end":40,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12436333,"byte_end":12436336,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ An identifier is used to symbolically refer to items in a a wasm module,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12436337,"byte_end":12436413,"line_start":42,"line_end":42,"column_start":1,"column_end":77}},{"value":"/ typically via the [`Index`] type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12436414,"byte_end":12436451,"line_start":43,"line_end":43,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":976},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12436943,"byte_end":12436947,"line_start":67,"line_end":67,"column_start":12,"column_end":16},"name":"name","qualname":"<Id>::name","value":"pub fn name(&Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying name of this identifier.","sig":null,"attributes":[{"value":"/ Returns the underlying name of this identifier.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12436812,"byte_end":12436863,"line_start":64,"line_end":64,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12436868,"byte_end":12436871,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ The name returned does not contain the leading `$`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12436876,"byte_end":12436931,"line_start":66,"line_end":66,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":977},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12437067,"byte_end":12437071,"line_start":72,"line_end":72,"column_start":12,"column_end":16},"name":"span","qualname":"<Id>::span","value":"pub fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns span of this identifier in the original source\n","sig":null,"attributes":[{"value":"/ Returns span of this identifier in the original source","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12436997,"byte_end":12437055,"line_start":71,"line_end":71,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1082},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12438801,"byte_end":12438804,"line_start":139,"line_end":139,"column_start":5,"column_end":8},"name":"Num","qualname":"::ast::token::Index::Num","value":"Index::Num(u32, Span)","parent":{"krate":0,"index":1080},"children":[],"decl_id":null,"docs":" A numerical index that this references. The index space this is\n referencing is implicit based on where this [`Index`] is stored.\n","sig":null,"attributes":[{"value":"/ A numerical index that this references. The index space this is","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12438656,"byte_end":12438723,"line_start":137,"line_end":137,"column_start":5,"column_end":72}},{"value":"/ referencing is implicit based on where this [`Index`] is stored.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12438728,"byte_end":12438796,"line_start":138,"line_end":138,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1086},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12438958,"byte_end":12438960,"line_start":142,"line_end":142,"column_start":5,"column_end":7},"name":"Id","qualname":"::ast::token::Index::Id","value":"Index::Id(Id)","parent":{"krate":0,"index":1080},"children":[],"decl_id":null,"docs":" A human-readable identifier this references. Like `Num`, the namespace\n this references is based on where this is stored.\n","sig":null,"attributes":[{"value":"/ A human-readable identifier this references. Like `Num`, the namespace","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12438821,"byte_end":12438895,"line_start":140,"line_end":140,"column_start":5,"column_end":79}},{"value":"/ this references is based on where this is stored.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12438900,"byte_end":12438953,"line_start":141,"line_end":141,"column_start":5,"column_end":58}}]},{"kind":"Enum","id":{"krate":0,"index":1080},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12438640,"byte_end":12438645,"line_start":136,"line_end":136,"column_start":10,"column_end":15},"name":"Index","qualname":"::ast::token::Index","value":"pub enum Index<'a> { Num(u32, Span), Id(Id), }","parent":null,"children":[{"krate":0,"index":1082},{"krate":0,"index":1086}],"decl_id":null,"docs":" A reference to another item in a wasm module.","sig":null,"attributes":[{"value":"/ A reference to another item in a wasm module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12438232,"byte_end":12438281,"line_start":127,"line_end":127,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12438282,"byte_end":12438285,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ This type is used for items referring to other items (such as `call $foo`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12438286,"byte_end":12438363,"line_start":129,"line_end":129,"column_start":1,"column_end":78}},{"value":"/ referencing function `$foo`). References can be either an index (u32) or an","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12438364,"byte_end":12438443,"line_start":130,"line_end":130,"column_start":1,"column_end":80}},{"value":"/ [`Id`] in the textual format.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12438444,"byte_end":12438477,"line_start":131,"line_end":131,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12438478,"byte_end":12438481,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ The emission phase of a module will ensure that `Index::Id` is never used","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12438482,"byte_end":12438559,"line_start":133,"line_end":133,"column_start":1,"column_end":78}},{"value":"/ and switch them all to `Index::Num`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12438560,"byte_end":12438600,"line_start":134,"line_end":134,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":998},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12439069,"byte_end":12439073,"line_start":147,"line_end":147,"column_start":12,"column_end":16},"name":"span","qualname":"<Index>::span","value":"pub fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the source location where this `Index` was defined.\n","sig":null,"attributes":[{"value":"/ Returns the source location where this `Index` was defined.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12438994,"byte_end":12439057,"line_start":146,"line_end":146,"column_start":5,"column_end":68}}]},{"kind":"StructVariant","id":{"krate":0,"index":1100},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12440860,"byte_end":12440865,"line_start":226,"line_end":226,"column_start":5,"column_end":10},"name":"Outer","qualname":"::ast::token::ItemRef::Outer","value":"ItemRef::Outer { kind, module, idx }","parent":{"krate":0,"index":1097},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1104},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12440947,"byte_end":12440951,"line_start":231,"line_end":231,"column_start":5,"column_end":9},"name":"Item","qualname":"::ast::token::ItemRef::Item","value":"ItemRef::Item { kind, idx, exports }","parent":{"krate":0,"index":1097},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1097},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12440839,"byte_end":12440846,"line_start":225,"line_end":225,"column_start":10,"column_end":17},"name":"ItemRef","qualname":"::ast::token::ItemRef","value":"pub enum ItemRef<'a, K> {\n    Outer {\n        kind: K,\n        module: Index,\n        idx: Index,\n    },\n    Item {\n        kind: K,\n        idx: Index,\n        exports: Vec<&'a str>,\n    },\n}","parent":null,"children":[{"krate":0,"index":1100},{"krate":0,"index":1104}],"decl_id":null,"docs":" Parses `(func $foo)`","sig":null,"attributes":[{"value":"/ Parses `(func $foo)`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12440658,"byte_end":12440682,"line_start":219,"line_end":219,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12440683,"byte_end":12440686,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ Optionally includes export strings for module-linking sugar syntax for alias","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12440687,"byte_end":12440767,"line_start":221,"line_end":221,"column_start":1,"column_end":81}},{"value":"/ injection.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12440768,"byte_end":12440782,"line_start":222,"line_end":222,"column_start":1,"column_end":15}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12440807,"byte_end":12440829,"line_start":224,"line_end":224,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1018},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12441297,"byte_end":12441309,"line_start":245,"line_end":245,"column_start":12,"column_end":24},"name":"unwrap_index","qualname":"<ItemRef>::unwrap_index","value":"pub fn unwrap_index(&Self) -> &Index","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the underlying `Index` for `ItemRef::Item`.","sig":null,"attributes":[{"value":"/ Unwraps the underlying `Index` for `ItemRef::Item`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12441130,"byte_end":12441185,"line_start":241,"line_end":241,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12441190,"byte_end":12441193,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ Panics if this is `ItemRef::Outer` or if exports haven't been expanded","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12441198,"byte_end":12441272,"line_start":243,"line_end":243,"column_start":5,"column_end":79}},{"value":"/ yet.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12441277,"byte_end":12441285,"line_start":244,"line_end":244,"column_start":5,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":1116},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12442859,"byte_end":12442869,"line_start":298,"line_end":298,"column_start":12,"column_end":22},"name":"IndexOrRef","qualname":"::ast::token::IndexOrRef","value":"","parent":null,"children":[],"decl_id":null,"docs":" Convenience structure to parse `$f` or `(item $f)`.\n","sig":null,"attributes":[{"value":"/ Convenience structure to parse `$f` or `(item $f)`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12442768,"byte_end":12442823,"line_start":296,"line_end":296,"column_start":1,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1120},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12442877,"byte_end":12442895,"line_start":298,"line_end":298,"column_start":30,"column_end":48},"name":"0","qualname":"::ast::token::IndexOrRef::0","value":"ast::token::ItemRef<'a, K>","parent":{"krate":0,"index":1116},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1129},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12443748,"byte_end":12443762,"line_start":331,"line_end":331,"column_start":12,"column_end":26},"name":"NameAnnotation","qualname":"::ast::token::NameAnnotation","value":"NameAnnotation { name }","parent":null,"children":[{"krate":0,"index":1131}],"decl_id":null,"docs":" An `@name` annotation in source, currently of the form `@name \"foo\"`\n","sig":null,"attributes":[{"value":"/ An `@name` annotation in source, currently of the form `@name \"foo\"`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12443623,"byte_end":12443695,"line_start":329,"line_end":329,"column_start":1,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":1131},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12443817,"byte_end":12443821,"line_start":333,"line_end":333,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::token::NameAnnotation::name","value":"&'a str","parent":{"krate":0,"index":1129},"children":[],"decl_id":null,"docs":" The name specified for the item\n","sig":null,"attributes":[{"value":"/ The name specified for the item","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12443773,"byte_end":12443808,"line_start":332,"line_end":332,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1258},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12457129,"byte_end":12457136,"line_start":691,"line_end":691,"column_start":5,"column_end":12},"name":"Float32","qualname":"::ast::token::Float32","value":"Float32 { bits }","parent":null,"children":[{"krate":0,"index":1259}],"decl_id":null,"docs":" A parsed floating-point type\n","sig":null,"attributes":[{"value":"/ A parsed floating-point type","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12447051,"byte_end":12447083,"line_start":453,"line_end":453,"column_start":9,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1262},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12457239,"byte_end":12457246,"line_start":697,"line_end":697,"column_start":5,"column_end":12},"name":"Float64","qualname":"::ast::token::Float64","value":"Float64 { bits }","parent":null,"children":[{"krate":0,"index":1263}],"decl_id":null,"docs":" A parsed floating-point type\n","sig":null,"attributes":[{"value":"/ A parsed floating-point type","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12447051,"byte_end":12447083,"line_start":453,"line_end":453,"column_start":9,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1064},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12457653,"byte_end":12457659,"line_start":715,"line_end":715,"column_start":12,"column_end":18},"name":"LParen","qualname":"::ast::token::LParen","value":"LParen {  }","parent":null,"children":[{"krate":0,"index":1065}],"decl_id":null,"docs":" A convenience type to use with [`Parser::peek`](crate::parser::Parser::peek)\n to see if the next token is an s-expression.\n","sig":null,"attributes":[{"value":"/ A convenience type to use with [`Parser::peek`](crate::parser::Parser::peek)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12457512,"byte_end":12457592,"line_start":713,"line_end":713,"column_start":1,"column_end":81}},{"value":"/ to see if the next token is an s-expression.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12457593,"byte_end":12457641,"line_start":714,"line_end":714,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":2082},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\alias.rs","byte_start":12459579,"byte_end":12459584,"line_start":6,"line_end":6,"column_start":12,"column_end":17},"name":"Alias","qualname":"::ast::alias::Alias","value":"Alias { span, id, name, source, kind }","parent":null,"children":[{"krate":0,"index":2084},{"krate":0,"index":2085},{"krate":0,"index":2086},{"krate":0,"index":2087},{"krate":0,"index":2088}],"decl_id":null,"docs":" An `alias` statement used to juggle indices with nested modules.\n","sig":null,"attributes":[{"value":"/ An `alias` statement used to juggle indices with nested modules.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\alias.rs","byte_start":12459482,"byte_end":12459550,"line_start":4,"line_end":4,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":2084},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\alias.rs","byte_start":12459639,"byte_end":12459643,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::alias::Alias::span","value":"ast::token::Span","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Where this `alias` was defined.\n","sig":null,"attributes":[{"value":"/ Where this `alias` was defined.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\alias.rs","byte_start":12459595,"byte_end":12459630,"line_start":7,"line_end":7,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":2085},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\alias.rs","byte_start":12459761,"byte_end":12459763,"line_start":11,"line_end":11,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::alias::Alias::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" An identifier that this alias is resolved with (optionally) for name\n resolution.\n","sig":null,"attributes":[{"value":"/ An identifier that this alias is resolved with (optionally) for name","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\alias.rs","byte_start":12459660,"byte_end":12459732,"line_start":9,"line_end":9,"column_start":5,"column_end":77}},{"value":"/ resolution.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\alias.rs","byte_start":12459737,"byte_end":12459752,"line_start":10,"line_end":10,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":2086},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\alias.rs","byte_start":12459871,"byte_end":12459875,"line_start":13,"line_end":13,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::alias::Alias::name","value":"std::option::Option<ast::token::NameAnnotation<'a>>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" An optional name for this alias stored in the custom `name` section.\n","sig":null,"attributes":[{"value":"/ An optional name for this alias stored in the custom `name` section.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\alias.rs","byte_start":12459790,"byte_end":12459862,"line_start":12,"line_end":12,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":2087},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\alias.rs","byte_start":12459952,"byte_end":12459958,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"source","qualname":"::ast::alias::Alias::source","value":"ast::alias::AliasSource<'a>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" The source of this alias.\n","sig":null,"attributes":[{"value":"/ The source of this alias.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\alias.rs","byte_start":12459914,"byte_end":12459943,"line_start":14,"line_end":14,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":2088},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\alias.rs","byte_start":12460032,"byte_end":12460036,"line_start":17,"line_end":17,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::alias::Alias::kind","value":"ast::export::ExportKind","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" The kind of item that's being aliased.\n","sig":null,"attributes":[{"value":"/ The kind of item that's being aliased.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\alias.rs","byte_start":12459981,"byte_end":12460023,"line_start":16,"line_end":16,"column_start":5,"column_end":47}}]},{"kind":"StructVariant","id":{"krate":0,"index":2094},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\alias.rs","byte_start":12460129,"byte_end":12460143,"line_start":23,"line_end":23,"column_start":5,"column_end":19},"name":"InstanceExport","qualname":"::ast::alias::AliasSource::InstanceExport","value":"AliasSource::InstanceExport { instance, export }","parent":{"krate":0,"index":2092},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2097},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\alias.rs","byte_start":12460232,"byte_end":12460237,"line_start":27,"line_end":27,"column_start":5,"column_end":10},"name":"Outer","qualname":"::ast::alias::AliasSource::Outer","value":"AliasSource::Outer { module, index }","parent":{"krate":0,"index":2092},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2092},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\alias.rs","byte_start":12460107,"byte_end":12460118,"line_start":22,"line_end":22,"column_start":10,"column_end":21},"name":"AliasSource","qualname":"::ast::alias::AliasSource","value":"pub enum AliasSource<'a> {\n    InstanceExport {\n        instance: ast::ItemRef,\n        export: &'a str,\n    },\n    Outer {\n        module: ast::Index,\n        index: ast::Index,\n    },\n}","parent":null,"children":[{"krate":0,"index":2094},{"krate":0,"index":2097}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\alias.rs","byte_start":12460075,"byte_end":12460097,"line_start":21,"line_end":21,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2105},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\assert_expr.rs","byte_start":12461882,"byte_end":12461885,"line_start":14,"line_end":14,"column_start":5,"column_end":8},"name":"I32","qualname":"::ast::assert_expr::AssertExpression::I32","value":"AssertExpression::I32(i32)","parent":{"krate":0,"index":2103},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2108},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\assert_expr.rs","byte_start":12461896,"byte_end":12461899,"line_start":15,"line_end":15,"column_start":5,"column_end":8},"name":"I64","qualname":"::ast::assert_expr::AssertExpression::I64","value":"AssertExpression::I64(i64)","parent":{"krate":0,"index":2103},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2111},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\assert_expr.rs","byte_start":12461910,"byte_end":12461913,"line_start":16,"line_end":16,"column_start":5,"column_end":8},"name":"F32","qualname":"::ast::assert_expr::AssertExpression::F32","value":"AssertExpression::F32(NanPattern<Float32>)","parent":{"krate":0,"index":2103},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2114},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\assert_expr.rs","byte_start":12461940,"byte_end":12461943,"line_start":17,"line_end":17,"column_start":5,"column_end":8},"name":"F64","qualname":"::ast::assert_expr::AssertExpression::F64","value":"AssertExpression::F64(NanPattern<Float64>)","parent":{"krate":0,"index":2103},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2117},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\assert_expr.rs","byte_start":12461970,"byte_end":12461974,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"V128","qualname":"::ast::assert_expr::AssertExpression::V128","value":"AssertExpression::V128(V128Pattern)","parent":{"krate":0,"index":2103},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2120},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\assert_expr.rs","byte_start":12461994,"byte_end":12462001,"line_start":20,"line_end":20,"column_start":5,"column_end":12},"name":"RefNull","qualname":"::ast::assert_expr::AssertExpression::RefNull","value":"AssertExpression::RefNull(Option<HeapType>)","parent":{"krate":0,"index":2103},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2123},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\assert_expr.rs","byte_start":12462029,"byte_end":12462038,"line_start":21,"line_end":21,"column_start":5,"column_end":14},"name":"RefExtern","qualname":"::ast::assert_expr::AssertExpression::RefExtern","value":"AssertExpression::RefExtern(u32)","parent":{"krate":0,"index":2103},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2126},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\assert_expr.rs","byte_start":12462049,"byte_end":12462056,"line_start":22,"line_end":22,"column_start":5,"column_end":12},"name":"RefFunc","qualname":"::ast::assert_expr::AssertExpression::RefFunc","value":"AssertExpression::RefFunc(Option<Index>)","parent":{"krate":0,"index":2103},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2129},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\assert_expr.rs","byte_start":12462148,"byte_end":12462167,"line_start":25,"line_end":25,"column_start":5,"column_end":24},"name":"LegacyArithmeticNaN","qualname":"::ast::assert_expr::AssertExpression::LegacyArithmeticNaN","value":"AssertExpression::LegacyArithmeticNaN","parent":{"krate":0,"index":2103},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2131},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\assert_expr.rs","byte_start":12462237,"byte_end":12462255,"line_start":27,"line_end":27,"column_start":5,"column_end":23},"name":"LegacyCanonicalNaN","qualname":"::ast::assert_expr::AssertExpression::LegacyCanonicalNaN","value":"AssertExpression::LegacyCanonicalNaN","parent":{"krate":0,"index":2103},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2103},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\assert_expr.rs","byte_start":12461855,"byte_end":12461871,"line_start":13,"line_end":13,"column_start":10,"column_end":26},"name":"AssertExpression","qualname":"::ast::assert_expr::AssertExpression","value":"pub enum AssertExpression<'a> {\n    I32(i32),\n    I64(i64),\n    F32(NanPattern<Float32>),\n    F64(NanPattern<Float64>),\n    V128(V128Pattern),\n    RefNull(Option<HeapType>),\n    RefExtern(u32),\n    RefFunc(Option<Index>),\n    LegacyArithmeticNaN,\n    LegacyCanonicalNaN,\n}","parent":null,"children":[{"krate":0,"index":2105},{"krate":0,"index":2108},{"krate":0,"index":2111},{"krate":0,"index":2114},{"krate":0,"index":2117},{"krate":0,"index":2120},{"krate":0,"index":2123},{"krate":0,"index":2126},{"krate":0,"index":2129},{"krate":0,"index":2131}],"decl_id":null,"docs":" An expression that is valid inside an `assert_return` directive.","sig":null,"attributes":[{"value":"/ An expression that is valid inside an `assert_return` directive.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\assert_expr.rs","byte_start":12461337,"byte_end":12461405,"line_start":4,"line_end":4,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\assert_expr.rs","byte_start":12461406,"byte_end":12461409,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ As of https://github.com/WebAssembly/spec/pull/1104, spec tests may include `assert_return`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\assert_expr.rs","byte_start":12461410,"byte_end":12461505,"line_start":6,"line_end":6,"column_start":1,"column_end":96}},{"value":"/ directives that allow NaN patterns (`\"nan:canonical\"`, `\"nan:arithmetic\"`). Parsing an","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\assert_expr.rs","byte_start":12461506,"byte_end":12461596,"line_start":7,"line_end":7,"column_start":1,"column_end":91}},{"value":"/ `AssertExpression` means that:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\assert_expr.rs","byte_start":12461597,"byte_end":12461631,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"/ - only constant values (e.g. `i32.const 4`) are used in the `assert_return` directive","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\assert_expr.rs","byte_start":12461632,"byte_end":12461721,"line_start":9,"line_end":9,"column_start":1,"column_end":90}},{"value":"/ - the NaN patterns are allowed (they are not allowed in regular `Expression`s).","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\assert_expr.rs","byte_start":12461722,"byte_end":12461805,"line_start":10,"line_end":10,"column_start":1,"column_end":84}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\assert_expr.rs","byte_start":12461823,"byte_end":12461845,"line_start":12,"line_end":12,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2138},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\assert_expr.rs","byte_start":12463386,"byte_end":12463398,"line_start":55,"line_end":55,"column_start":5,"column_end":17},"name":"CanonicalNan","qualname":"::ast::assert_expr::NanPattern::CanonicalNan","value":"NanPattern::CanonicalNan","parent":{"krate":0,"index":2136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2140},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\assert_expr.rs","byte_start":12463404,"byte_end":12463417,"line_start":56,"line_end":56,"column_start":5,"column_end":18},"name":"ArithmeticNan","qualname":"::ast::assert_expr::NanPattern::ArithmeticNan","value":"NanPattern::ArithmeticNan","parent":{"krate":0,"index":2136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2142},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\assert_expr.rs","byte_start":12463423,"byte_end":12463428,"line_start":57,"line_end":57,"column_start":5,"column_end":10},"name":"Value","qualname":"::ast::assert_expr::NanPattern::Value","value":"NanPattern::Value(T)","parent":{"krate":0,"index":2136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2136},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\assert_expr.rs","byte_start":12463366,"byte_end":12463376,"line_start":54,"line_end":54,"column_start":10,"column_end":20},"name":"NanPattern","qualname":"::ast::assert_expr::NanPattern","value":"pub enum NanPattern<T> { CanonicalNan, ArithmeticNan, Value(T), }","parent":null,"children":[{"krate":0,"index":2138},{"krate":0,"index":2140},{"krate":0,"index":2142}],"decl_id":null,"docs":" Either a NaN pattern (`nan:canonical`, `nan:arithmetic`) or a value of type `T`.\n","sig":null,"attributes":[{"value":"/ Either a NaN pattern (`nan:canonical`, `nan:arithmetic`) or a value of type `T`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\assert_expr.rs","byte_start":12463221,"byte_end":12463305,"line_start":51,"line_end":51,"column_start":1,"column_end":85}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\assert_expr.rs","byte_start":12463334,"byte_end":12463356,"line_start":53,"line_end":53,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2155},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\assert_expr.rs","byte_start":12464244,"byte_end":12464249,"line_start":85,"line_end":85,"column_start":5,"column_end":10},"name":"I8x16","qualname":"::ast::assert_expr::V128Pattern::I8x16","value":"V128Pattern::I8x16([i8; ])","parent":{"krate":0,"index":2154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2159},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\assert_expr.rs","byte_start":12464265,"byte_end":12464270,"line_start":86,"line_end":86,"column_start":5,"column_end":10},"name":"I16x8","qualname":"::ast::assert_expr::V128Pattern::I16x8","value":"V128Pattern::I16x8([i16; ])","parent":{"krate":0,"index":2154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2163},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\assert_expr.rs","byte_start":12464286,"byte_end":12464291,"line_start":87,"line_end":87,"column_start":5,"column_end":10},"name":"I32x4","qualname":"::ast::assert_expr::V128Pattern::I32x4","value":"V128Pattern::I32x4([i32; ])","parent":{"krate":0,"index":2154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2167},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\assert_expr.rs","byte_start":12464307,"byte_end":12464312,"line_start":88,"line_end":88,"column_start":5,"column_end":10},"name":"I64x2","qualname":"::ast::assert_expr::V128Pattern::I64x2","value":"V128Pattern::I64x2([i64; ])","parent":{"krate":0,"index":2154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2171},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\assert_expr.rs","byte_start":12464328,"byte_end":12464333,"line_start":89,"line_end":89,"column_start":5,"column_end":10},"name":"F32x4","qualname":"::ast::assert_expr::V128Pattern::F32x4","value":"V128Pattern::F32x4([NanPattern<Float32>; ])","parent":{"krate":0,"index":2154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2175},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\assert_expr.rs","byte_start":12464365,"byte_end":12464370,"line_start":90,"line_end":90,"column_start":5,"column_end":10},"name":"F64x2","qualname":"::ast::assert_expr::V128Pattern::F64x2","value":"V128Pattern::F64x2([NanPattern<Float64>; ])","parent":{"krate":0,"index":2154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2154},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\assert_expr.rs","byte_start":12464226,"byte_end":12464237,"line_start":84,"line_end":84,"column_start":10,"column_end":21},"name":"V128Pattern","qualname":"::ast::assert_expr::V128Pattern","value":"pub enum V128Pattern {\n    I8x16([i8; ]),\n    I16x8([i16; ]),\n    I32x4([i32; ]),\n    I64x2([i64; ]),\n    F32x4([NanPattern<Float32>; ]),\n    F64x2([NanPattern<Float64>; ]),\n}","parent":null,"children":[{"krate":0,"index":2155},{"krate":0,"index":2159},{"krate":0,"index":2163},{"krate":0,"index":2167},{"krate":0,"index":2171},{"krate":0,"index":2175}],"decl_id":null,"docs":" A version of `V128Const` that allows `NanPattern`s.","sig":null,"attributes":[{"value":"/ A version of `V128Const` that allows `NanPattern`s.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\assert_expr.rs","byte_start":12463955,"byte_end":12464010,"line_start":78,"line_end":78,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\assert_expr.rs","byte_start":12464011,"byte_end":12464014,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ This implementation is necessary because only float types can include NaN patterns; otherwise","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\assert_expr.rs","byte_start":12464015,"byte_end":12464112,"line_start":80,"line_end":80,"column_start":1,"column_end":98}},{"value":"/ it is largely similar to the implementation of `V128Const`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\assert_expr.rs","byte_start":12464113,"byte_end":12464176,"line_start":81,"line_end":81,"column_start":1,"column_end":64}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\assert_expr.rs","byte_start":12464194,"byte_end":12464216,"line_start":83,"line_end":83,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":2181},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\custom.rs","byte_start":12466652,"byte_end":12466658,"line_start":6,"line_end":6,"column_start":12,"column_end":18},"name":"Custom","qualname":"::ast::custom::Custom","value":"Custom { span, name, place, data }","parent":null,"children":[{"krate":0,"index":2183},{"krate":0,"index":2184},{"krate":0,"index":2185},{"krate":0,"index":2186}],"decl_id":null,"docs":" A wasm custom section within a module.\n","sig":null,"attributes":[{"value":"/ A wasm custom section within a module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\custom.rs","byte_start":12466581,"byte_end":12466623,"line_start":4,"line_end":4,"column_start":1,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":2183},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\custom.rs","byte_start":12466715,"byte_end":12466719,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::custom::Custom::span","value":"ast::token::Span","parent":{"krate":0,"index":2181},"children":[],"decl_id":null,"docs":" Where this `@custom` was defined.\n","sig":null,"attributes":[{"value":"/ Where this `@custom` was defined.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\custom.rs","byte_start":12466669,"byte_end":12466706,"line_start":7,"line_end":7,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":2184},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\custom.rs","byte_start":12466777,"byte_end":12466781,"line_start":11,"line_end":11,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::custom::Custom::name","value":"&'a str","parent":{"krate":0,"index":2181},"children":[],"decl_id":null,"docs":" Name of the custom section.\n","sig":null,"attributes":[{"value":"/ Name of the custom section.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\custom.rs","byte_start":12466737,"byte_end":12466768,"line_start":10,"line_end":10,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":2185},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\custom.rs","byte_start":12466851,"byte_end":12466856,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"place","qualname":"::ast::custom::Custom::place","value":"ast::custom::CustomPlace","parent":{"krate":0,"index":2181},"children":[],"decl_id":null,"docs":" Where the custom section is being placed,\n","sig":null,"attributes":[{"value":"/ Where the custom section is being placed,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\custom.rs","byte_start":12466797,"byte_end":12466842,"line_start":13,"line_end":13,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":2186},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\custom.rs","byte_start":12466920,"byte_end":12466924,"line_start":17,"line_end":17,"column_start":9,"column_end":13},"name":"data","qualname":"::ast::custom::Custom::data","value":"std::vec::Vec<&'a [u8]>","parent":{"krate":0,"index":2181},"children":[],"decl_id":null,"docs":" Payload of this custom section.\n","sig":null,"attributes":[{"value":"/ Payload of this custom section.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\custom.rs","byte_start":12466876,"byte_end":12466911,"line_start":16,"line_end":16,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2191},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\custom.rs","byte_start":12467158,"byte_end":12467169,"line_start":24,"line_end":24,"column_start":5,"column_end":16},"name":"BeforeFirst","qualname":"::ast::custom::CustomPlace::BeforeFirst","value":"CustomPlace::BeforeFirst","parent":{"krate":0,"index":2190},"children":[],"decl_id":null,"docs":" This custom section will appear before the first section in the module.\n","sig":null,"attributes":[{"value":"/ This custom section will appear before the first section in the module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\custom.rs","byte_start":12467078,"byte_end":12467153,"line_start":23,"line_end":23,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2193},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\custom.rs","byte_start":12467247,"byte_end":12467253,"line_start":26,"line_end":26,"column_start":5,"column_end":11},"name":"Before","qualname":"::ast::custom::CustomPlace::Before","value":"CustomPlace::Before(CustomPlaceAnchor)","parent":{"krate":0,"index":2190},"children":[],"decl_id":null,"docs":" This custom section will be placed just before a known section.\n","sig":null,"attributes":[{"value":"/ This custom section will be placed just before a known section.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\custom.rs","byte_start":12467175,"byte_end":12467242,"line_start":25,"line_end":25,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2196},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\custom.rs","byte_start":12467349,"byte_end":12467354,"line_start":28,"line_end":28,"column_start":5,"column_end":10},"name":"After","qualname":"::ast::custom::CustomPlace::After","value":"CustomPlace::After(CustomPlaceAnchor)","parent":{"krate":0,"index":2190},"children":[],"decl_id":null,"docs":" This custom section will be placed just after a known section.\n","sig":null,"attributes":[{"value":"/ This custom section will be placed just after a known section.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\custom.rs","byte_start":12467278,"byte_end":12467344,"line_start":27,"line_end":27,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2199},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\custom.rs","byte_start":12467457,"byte_end":12467466,"line_start":30,"line_end":30,"column_start":5,"column_end":14},"name":"AfterLast","qualname":"::ast::custom::CustomPlace::AfterLast","value":"CustomPlace::AfterLast","parent":{"krate":0,"index":2190},"children":[],"decl_id":null,"docs":" This custom section will appear after the last section in the module.\n","sig":null,"attributes":[{"value":"/ This custom section will appear after the last section in the module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\custom.rs","byte_start":12467379,"byte_end":12467452,"line_start":29,"line_end":29,"column_start":5,"column_end":78}}]},{"kind":"Enum","id":{"krate":0,"index":2190},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\custom.rs","byte_start":12467060,"byte_end":12467071,"line_start":22,"line_end":22,"column_start":10,"column_end":21},"name":"CustomPlace","qualname":"::ast::custom::CustomPlace","value":"pub enum CustomPlace {\n    BeforeFirst,\n    Before(CustomPlaceAnchor),\n    After(CustomPlaceAnchor),\n    AfterLast,\n}","parent":null,"children":[{"krate":0,"index":2191},{"krate":0,"index":2193},{"krate":0,"index":2196},{"krate":0,"index":2199}],"decl_id":null,"docs":" Possible locations to place a custom section within a module.\n","sig":null,"attributes":[{"value":"/ Possible locations to place a custom section within a module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\custom.rs","byte_start":12466944,"byte_end":12467009,"line_start":20,"line_end":20,"column_start":1,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2211},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\custom.rs","byte_start":12467635,"byte_end":12467639,"line_start":37,"line_end":37,"column_start":5,"column_end":9},"name":"Type","qualname":"::ast::custom::CustomPlaceAnchor::Type","value":"CustomPlaceAnchor::Type","parent":{"krate":0,"index":2210},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2213},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\custom.rs","byte_start":12467645,"byte_end":12467651,"line_start":38,"line_end":38,"column_start":5,"column_end":11},"name":"Import","qualname":"::ast::custom::CustomPlaceAnchor::Import","value":"CustomPlaceAnchor::Import","parent":{"krate":0,"index":2210},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2215},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\custom.rs","byte_start":12467657,"byte_end":12467663,"line_start":39,"line_end":39,"column_start":5,"column_end":11},"name":"Module","qualname":"::ast::custom::CustomPlaceAnchor::Module","value":"CustomPlaceAnchor::Module","parent":{"krate":0,"index":2210},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2217},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\custom.rs","byte_start":12467669,"byte_end":12467677,"line_start":40,"line_end":40,"column_start":5,"column_end":13},"name":"Instance","qualname":"::ast::custom::CustomPlaceAnchor::Instance","value":"CustomPlaceAnchor::Instance","parent":{"krate":0,"index":2210},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2219},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\custom.rs","byte_start":12467683,"byte_end":12467688,"line_start":41,"line_end":41,"column_start":5,"column_end":10},"name":"Alias","qualname":"::ast::custom::CustomPlaceAnchor::Alias","value":"CustomPlaceAnchor::Alias","parent":{"krate":0,"index":2210},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2221},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\custom.rs","byte_start":12467694,"byte_end":12467698,"line_start":42,"line_end":42,"column_start":5,"column_end":9},"name":"Func","qualname":"::ast::custom::CustomPlaceAnchor::Func","value":"CustomPlaceAnchor::Func","parent":{"krate":0,"index":2210},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2223},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\custom.rs","byte_start":12467704,"byte_end":12467709,"line_start":43,"line_end":43,"column_start":5,"column_end":10},"name":"Table","qualname":"::ast::custom::CustomPlaceAnchor::Table","value":"CustomPlaceAnchor::Table","parent":{"krate":0,"index":2210},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2225},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\custom.rs","byte_start":12467715,"byte_end":12467721,"line_start":44,"line_end":44,"column_start":5,"column_end":11},"name":"Memory","qualname":"::ast::custom::CustomPlaceAnchor::Memory","value":"CustomPlaceAnchor::Memory","parent":{"krate":0,"index":2210},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2227},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\custom.rs","byte_start":12467727,"byte_end":12467733,"line_start":45,"line_end":45,"column_start":5,"column_end":11},"name":"Global","qualname":"::ast::custom::CustomPlaceAnchor::Global","value":"CustomPlaceAnchor::Global","parent":{"krate":0,"index":2210},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2229},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\custom.rs","byte_start":12467739,"byte_end":12467745,"line_start":46,"line_end":46,"column_start":5,"column_end":11},"name":"Export","qualname":"::ast::custom::CustomPlaceAnchor::Export","value":"CustomPlaceAnchor::Export","parent":{"krate":0,"index":2210},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2231},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\custom.rs","byte_start":12467751,"byte_end":12467756,"line_start":47,"line_end":47,"column_start":5,"column_end":10},"name":"Start","qualname":"::ast::custom::CustomPlaceAnchor::Start","value":"CustomPlaceAnchor::Start","parent":{"krate":0,"index":2210},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2233},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\custom.rs","byte_start":12467762,"byte_end":12467766,"line_start":48,"line_end":48,"column_start":5,"column_end":9},"name":"Elem","qualname":"::ast::custom::CustomPlaceAnchor::Elem","value":"CustomPlaceAnchor::Elem","parent":{"krate":0,"index":2210},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2235},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\custom.rs","byte_start":12467772,"byte_end":12467776,"line_start":49,"line_end":49,"column_start":5,"column_end":9},"name":"Code","qualname":"::ast::custom::CustomPlaceAnchor::Code","value":"CustomPlaceAnchor::Code","parent":{"krate":0,"index":2210},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2237},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\custom.rs","byte_start":12467782,"byte_end":12467786,"line_start":50,"line_end":50,"column_start":5,"column_end":9},"name":"Data","qualname":"::ast::custom::CustomPlaceAnchor::Data","value":"CustomPlaceAnchor::Data","parent":{"krate":0,"index":2210},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2239},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\custom.rs","byte_start":12467792,"byte_end":12467795,"line_start":51,"line_end":51,"column_start":5,"column_end":8},"name":"Tag","qualname":"::ast::custom::CustomPlaceAnchor::Tag","value":"CustomPlaceAnchor::Tag","parent":{"krate":0,"index":2210},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2210},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\custom.rs","byte_start":12467611,"byte_end":12467628,"line_start":36,"line_end":36,"column_start":10,"column_end":27},"name":"CustomPlaceAnchor","qualname":"::ast::custom::CustomPlaceAnchor","value":"pub enum CustomPlaceAnchor {\n    Type,\n    Import,\n    Module,\n    Instance,\n    Alias,\n    Func,\n    Table,\n    Memory,\n    Global,\n    Export,\n    Start,\n    Elem,\n    Code,\n    Data,\n    Tag,\n}","parent":null,"children":[{"krate":0,"index":2211},{"krate":0,"index":2213},{"krate":0,"index":2215},{"krate":0,"index":2217},{"krate":0,"index":2219},{"krate":0,"index":2221},{"krate":0,"index":2223},{"krate":0,"index":2225},{"krate":0,"index":2227},{"krate":0,"index":2229},{"krate":0,"index":2231},{"krate":0,"index":2233},{"krate":0,"index":2235},{"krate":0,"index":2237},{"krate":0,"index":2239}],"decl_id":null,"docs":" Known sections that custom sections can be placed relative to.\n","sig":null,"attributes":[{"value":"/ Known sections that custom sections can be placed relative to.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\custom.rs","byte_start":12467471,"byte_end":12467537,"line_start":33,"line_end":33,"column_start":1,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\custom.rs","byte_start":12467579,"byte_end":12467601,"line_start":35,"line_end":35,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":2249},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\tag.rs","byte_start":12471637,"byte_end":12471640,"line_start":6,"line_end":6,"column_start":12,"column_end":15},"name":"Tag","qualname":"::ast::tag::Tag","value":"Tag { span, id, name, exports, ty, kind }","parent":null,"children":[{"krate":0,"index":2251},{"krate":0,"index":2252},{"krate":0,"index":2253},{"krate":0,"index":2254},{"krate":0,"index":2255},{"krate":0,"index":2256}],"decl_id":null,"docs":" A WebAssembly tag directive, part of the exception handling proposal.\n","sig":null,"attributes":[{"value":"/ A WebAssembly tag directive, part of the exception handling proposal.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\tag.rs","byte_start":12471535,"byte_end":12471608,"line_start":4,"line_end":4,"column_start":1,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":2251},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\tag.rs","byte_start":12471690,"byte_end":12471694,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::tag::Tag::span","value":"ast::token::Span","parent":{"krate":0,"index":2249},"children":[],"decl_id":null,"docs":" Where this tag was defined\n","sig":null,"attributes":[{"value":"/ Where this tag was defined","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\tag.rs","byte_start":12471651,"byte_end":12471681,"line_start":7,"line_end":7,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":2252},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\tag.rs","byte_start":12471790,"byte_end":12471792,"line_start":10,"line_end":10,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::tag::Tag::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":2249},"children":[],"decl_id":null,"docs":" An optional name by which to refer to this tag in name resolution.\n","sig":null,"attributes":[{"value":"/ An optional name by which to refer to this tag in name resolution.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\tag.rs","byte_start":12471711,"byte_end":12471781,"line_start":9,"line_end":9,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":2253},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\tag.rs","byte_start":12471903,"byte_end":12471907,"line_start":12,"line_end":12,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::tag::Tag::name","value":"std::option::Option<ast::token::NameAnnotation<'a>>","parent":{"krate":0,"index":2249},"children":[],"decl_id":null,"docs":" An optional name for this function stored in the custom `name` section.\n","sig":null,"attributes":[{"value":"/ An optional name for this function stored in the custom `name` section.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\tag.rs","byte_start":12471819,"byte_end":12471894,"line_start":11,"line_end":11,"column_start":5,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":2254},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\tag.rs","byte_start":12471999,"byte_end":12472006,"line_start":14,"line_end":14,"column_start":9,"column_end":16},"name":"exports","qualname":"::ast::tag::Tag::exports","value":"ast::export::InlineExport<'a>","parent":{"krate":0,"index":2249},"children":[],"decl_id":null,"docs":" Optional export directives for this tag.\n","sig":null,"attributes":[{"value":"/ Optional export directives for this tag.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\tag.rs","byte_start":12471946,"byte_end":12471990,"line_start":13,"line_end":13,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":2255},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\tag.rs","byte_start":12472080,"byte_end":12472082,"line_start":16,"line_end":16,"column_start":9,"column_end":11},"name":"ty","qualname":"::ast::tag::Tag::ty","value":"ast::tag::TagType<'a>","parent":{"krate":0,"index":2249},"children":[],"decl_id":null,"docs":" The type of tag that is defined.\n","sig":null,"attributes":[{"value":"/ The type of tag that is defined.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\tag.rs","byte_start":12472035,"byte_end":12472071,"line_start":15,"line_end":15,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":2256},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\tag.rs","byte_start":12472150,"byte_end":12472154,"line_start":18,"line_end":18,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::tag::Tag::kind","value":"ast::tag::TagKind<'a>","parent":{"krate":0,"index":2249},"children":[],"decl_id":null,"docs":" What kind of tag this is defined as.\n","sig":null,"attributes":[{"value":"/ What kind of tag this is defined as.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\tag.rs","byte_start":12472101,"byte_end":12472141,"line_start":17,"line_end":17,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2262},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\tag.rs","byte_start":12472414,"byte_end":12472423,"line_start":26,"line_end":26,"column_start":5,"column_end":14},"name":"Exception","qualname":"::ast::tag::TagType::Exception","value":"TagType::Exception(ast::TypeUse)","parent":{"krate":0,"index":2260},"children":[],"decl_id":null,"docs":" An exception tag, where the payload is the type signature of the tag\n (constructor parameters, etc).\n","sig":null,"attributes":[{"value":"/ An exception tag, where the payload is the type signature of the tag","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\tag.rs","byte_start":12472298,"byte_end":12472370,"line_start":24,"line_end":24,"column_start":5,"column_end":77}},{"value":"/ (constructor parameters, etc).","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\tag.rs","byte_start":12472375,"byte_end":12472409,"line_start":25,"line_end":25,"column_start":5,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":2260},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\tag.rs","byte_start":12472280,"byte_end":12472287,"line_start":23,"line_end":23,"column_start":10,"column_end":17},"name":"TagType","qualname":"::ast::tag::TagType","value":"pub enum TagType<'a> { Exception(ast::TypeUse), }","parent":null,"children":[{"krate":0,"index":2262}],"decl_id":null,"docs":" Listing of various types of tags that can be defined in a wasm module.\n","sig":null,"attributes":[{"value":"/ Listing of various types of tags that can be defined in a wasm module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\tag.rs","byte_start":12472172,"byte_end":12472246,"line_start":21,"line_end":21,"column_start":1,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2273},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\tag.rs","byte_start":12472718,"byte_end":12472724,"line_start":37,"line_end":37,"column_start":5,"column_end":11},"name":"Import","qualname":"::ast::tag::TagKind::Import","value":"TagKind::Import(ast::InlineImport)","parent":{"krate":0,"index":2271},"children":[],"decl_id":null,"docs":" An tag which is actually defined as an import, such as:","sig":null,"attributes":[{"value":"/ An tag which is actually defined as an import, such as:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\tag.rs","byte_start":12472574,"byte_end":12472633,"line_start":32,"line_end":32,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\tag.rs","byte_start":12472638,"byte_end":12472641,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\tag.rs","byte_start":12472646,"byte_end":12472657,"line_start":34,"line_end":34,"column_start":5,"column_end":16}},{"value":"/ (tag (type 0) (import \"foo\" \"bar\"))","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\tag.rs","byte_start":12472662,"byte_end":12472701,"line_start":35,"line_end":35,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\tag.rs","byte_start":12472706,"byte_end":12472713,"line_start":36,"line_end":36,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2276},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\tag.rs","byte_start":12472804,"byte_end":12472810,"line_start":40,"line_end":40,"column_start":5,"column_end":11},"name":"Inline","qualname":"::ast::tag::TagKind::Inline","value":"TagKind::Inline()","parent":{"krate":0,"index":2271},"children":[],"decl_id":null,"docs":" A tag defined inline in the module itself\n","sig":null,"attributes":[{"value":"/ A tag defined inline in the module itself","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\tag.rs","byte_start":12472754,"byte_end":12472799,"line_start":39,"line_end":39,"column_start":5,"column_end":50}}]},{"kind":"Enum","id":{"krate":0,"index":2271},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\tag.rs","byte_start":12472556,"byte_end":12472563,"line_start":31,"line_end":31,"column_start":10,"column_end":17},"name":"TagKind","qualname":"::ast::tag::TagKind","value":"pub enum TagKind<'a> { Import(ast::InlineImport), Inline(), }","parent":null,"children":[{"krate":0,"index":2273},{"krate":0,"index":2276}],"decl_id":null,"docs":" Different kinds of tags that can be defined in a module.\n","sig":null,"attributes":[{"value":"/ Different kinds of tags that can be defined in a module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\tag.rs","byte_start":12472469,"byte_end":12472529,"line_start":29,"line_end":29,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":2281},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\export.rs","byte_start":12473714,"byte_end":12473720,"line_start":6,"line_end":6,"column_start":12,"column_end":18},"name":"Export","qualname":"::ast::export::Export","value":"Export { span, name, index }","parent":null,"children":[{"krate":0,"index":2283},{"krate":0,"index":2284},{"krate":0,"index":2285}],"decl_id":null,"docs":" A entry in a WebAssembly module's export section.\n","sig":null,"attributes":[{"value":"/ A entry in a WebAssembly module's export section.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\export.rs","byte_start":12473632,"byte_end":12473685,"line_start":4,"line_end":4,"column_start":1,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2283},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\export.rs","byte_start":12473774,"byte_end":12473778,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::export::Export::span","value":"ast::token::Span","parent":{"krate":0,"index":2281},"children":[],"decl_id":null,"docs":" Where this export was defined.\n","sig":null,"attributes":[{"value":"/ Where this export was defined.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\export.rs","byte_start":12473731,"byte_end":12473765,"line_start":7,"line_end":7,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":2284},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\export.rs","byte_start":12473848,"byte_end":12473852,"line_start":10,"line_end":10,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::export::Export::name","value":"&'a str","parent":{"krate":0,"index":2281},"children":[],"decl_id":null,"docs":" The name of this export from the module.\n","sig":null,"attributes":[{"value":"/ The name of this export from the module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\export.rs","byte_start":12473795,"byte_end":12473839,"line_start":9,"line_end":9,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":2285},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\export.rs","byte_start":12473918,"byte_end":12473923,"line_start":12,"line_end":12,"column_start":9,"column_end":14},"name":"index","qualname":"::ast::export::Export::index","value":"ast::token::ItemRef<'a, ast::export::ExportKind>","parent":{"krate":0,"index":2281},"children":[],"decl_id":null,"docs":" What's being exported from the module.\n","sig":null,"attributes":[{"value":"/ What's being exported from the module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\export.rs","byte_start":12473867,"byte_end":12473909,"line_start":11,"line_end":11,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2290},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\export.rs","byte_start":12474170,"byte_end":12474174,"line_start":20,"line_end":20,"column_start":5,"column_end":9},"name":"Func","qualname":"::ast::export::ExportKind::Func","value":"ExportKind::Func","parent":{"krate":0,"index":2289},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2292},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\export.rs","byte_start":12474180,"byte_end":12474185,"line_start":21,"line_end":21,"column_start":5,"column_end":10},"name":"Table","qualname":"::ast::export::ExportKind::Table","value":"ExportKind::Table","parent":{"krate":0,"index":2289},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2294},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\export.rs","byte_start":12474191,"byte_end":12474197,"line_start":22,"line_end":22,"column_start":5,"column_end":11},"name":"Memory","qualname":"::ast::export::ExportKind::Memory","value":"ExportKind::Memory","parent":{"krate":0,"index":2289},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2296},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\export.rs","byte_start":12474203,"byte_end":12474209,"line_start":23,"line_end":23,"column_start":5,"column_end":11},"name":"Global","qualname":"::ast::export::ExportKind::Global","value":"ExportKind::Global","parent":{"krate":0,"index":2289},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2298},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\export.rs","byte_start":12474215,"byte_end":12474218,"line_start":24,"line_end":24,"column_start":5,"column_end":8},"name":"Tag","qualname":"::ast::export::ExportKind::Tag","value":"ExportKind::Tag","parent":{"krate":0,"index":2289},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2300},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\export.rs","byte_start":12474224,"byte_end":12474230,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"Module","qualname":"::ast::export::ExportKind::Module","value":"ExportKind::Module","parent":{"krate":0,"index":2289},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2302},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\export.rs","byte_start":12474236,"byte_end":12474244,"line_start":26,"line_end":26,"column_start":5,"column_end":13},"name":"Instance","qualname":"::ast::export::ExportKind::Instance","value":"ExportKind::Instance","parent":{"krate":0,"index":2289},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2304},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\export.rs","byte_start":12474250,"byte_end":12474254,"line_start":27,"line_end":27,"column_start":5,"column_end":9},"name":"Type","qualname":"::ast::export::ExportKind::Type","value":"ExportKind::Type","parent":{"krate":0,"index":2289},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2289},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\export.rs","byte_start":12474153,"byte_end":12474163,"line_start":19,"line_end":19,"column_start":10,"column_end":20},"name":"ExportKind","qualname":"::ast::export::ExportKind","value":"pub enum ExportKind {\n    Func,\n    Table,\n    Memory,\n    Global,\n    Tag,\n    Module,\n    Instance,\n    Type,\n}","parent":null,"children":[{"krate":0,"index":2290},{"krate":0,"index":2292},{"krate":0,"index":2294},{"krate":0,"index":2296},{"krate":0,"index":2298},{"krate":0,"index":2300},{"krate":0,"index":2302},{"krate":0,"index":2304}],"decl_id":null,"docs":" Different kinds of elements that can be exported from a WebAssembly module,\n contained in an [`Export`].\n","sig":null,"attributes":[{"value":"/ Different kinds of elements that can be exported from a WebAssembly module,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\export.rs","byte_start":12473958,"byte_end":12474037,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ contained in an [`Export`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\export.rs","byte_start":12474038,"byte_end":12474069,"line_start":16,"line_end":16,"column_start":1,"column_end":32}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\export.rs","byte_start":12474121,"byte_end":12474143,"line_start":18,"line_end":18,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":2352},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\export.rs","byte_start":12476337,"byte_end":12476349,"line_start":103,"line_end":103,"column_start":12,"column_end":24},"name":"InlineExport","qualname":"::ast::export::InlineExport","value":"InlineExport { names }","parent":null,"children":[{"krate":0,"index":2354}],"decl_id":null,"docs":" A listing of inline `(export \"foo\")` statements on a WebAssembly item in\n its textual format.\n","sig":null,"attributes":[{"value":"/ A listing of inline `(export \"foo\")` statements on a WebAssembly item in","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\export.rs","byte_start":12476208,"byte_end":12476284,"line_start":100,"line_end":100,"column_start":1,"column_end":77}},{"value":"/ its textual format.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\export.rs","byte_start":12476285,"byte_end":12476308,"line_start":101,"line_end":101,"column_start":1,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":2354},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\export.rs","byte_start":12476418,"byte_end":12476423,"line_start":105,"line_end":105,"column_start":9,"column_end":14},"name":"names","qualname":"::ast::export::InlineExport::names","value":"std::vec::Vec<&'a str>","parent":{"krate":0,"index":2352},"children":[],"decl_id":null,"docs":" The extra names to export an item as, if any.\n","sig":null,"attributes":[{"value":"/ The extra names to export an item as, if any.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\export.rs","byte_start":12476360,"byte_end":12476409,"line_start":104,"line_end":104,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":2358},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12477846,"byte_end":12477856,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"Expression","qualname":"::ast::expr::Expression","value":"Expression { instrs }","parent":null,"children":[{"krate":0,"index":2360}],"decl_id":null,"docs":" An expression, or a list of instructions, in the WebAssembly text format.","sig":null,"attributes":[{"value":"/ An expression, or a list of instructions, in the WebAssembly text format.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12477482,"byte_end":12477559,"line_start":5,"line_end":5,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12477560,"byte_end":12477563,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This expression type will parse s-expression-folded instructions into a flat","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12477564,"byte_end":12477644,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ list of instructions for emission later on. The implicit `end` instruction","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12477645,"byte_end":12477723,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ at the end of an expression is not included in the `instrs` field.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12477724,"byte_end":12477794,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12477812,"byte_end":12477834,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":2360},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12477871,"byte_end":12477877,"line_start":13,"line_end":13,"column_start":9,"column_end":15},"name":"instrs","qualname":"::ast::expr::Expression::instrs","value":"std::boxed::Box<[ast::expr::Instruction<'a>]>","parent":{"krate":0,"index":2358},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5988},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12531973,"byte_end":12531982,"line_start":1156,"line_end":1156,"column_start":12,"column_end":21},"name":"BlockType","qualname":"::ast::expr::BlockType","value":"BlockType { label, label_name, ty }","parent":null,"children":[{"krate":0,"index":5990},{"krate":0,"index":5991},{"krate":0,"index":5992}],"decl_id":null,"docs":" Extra information associated with block-related instructions.","sig":null,"attributes":[{"value":"/ Extra information associated with block-related instructions.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12531758,"byte_end":12531823,"line_start":1150,"line_end":1150,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12531824,"byte_end":12531827,"line_start":1151,"line_end":1151,"column_start":1,"column_end":4}},{"value":"/ This is used to label blocks and also annotate what types are expected for","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12531828,"byte_end":12531906,"line_start":1152,"line_end":1152,"column_start":1,"column_end":79}},{"value":"/ the block.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12531907,"byte_end":12531921,"line_start":1153,"line_end":1153,"column_start":1,"column_end":15}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12531939,"byte_end":12531961,"line_start":1155,"line_end":1155,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":5990},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12531997,"byte_end":12532002,"line_start":1157,"line_end":1157,"column_start":9,"column_end":14},"name":"label","qualname":"::ast::expr::BlockType::label","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":5988},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5991},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12532033,"byte_end":12532043,"line_start":1158,"line_end":1158,"column_start":9,"column_end":19},"name":"label_name","qualname":"::ast::expr::BlockType::label_name","value":"std::option::Option<ast::token::NameAnnotation<'a>>","parent":{"krate":0,"index":5988},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5992},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12532086,"byte_end":12532088,"line_start":1159,"line_end":1159,"column_start":9,"column_end":11},"name":"ty","qualname":"::ast::expr::BlockType::ty","value":"ast::types::TypeUse<'a, ast::types::FunctionType<'a>>","parent":{"krate":0,"index":5988},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5996},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12532584,"byte_end":12532596,"line_start":1177,"line_end":1177,"column_start":12,"column_end":24},"name":"FuncBindType","qualname":"::ast::expr::FuncBindType","value":"FuncBindType { ty }","parent":null,"children":[{"krate":0,"index":5998}],"decl_id":null,"docs":" Extra information associated with the func.bind instruction.\n","sig":null,"attributes":[{"value":"/ Extra information associated with the func.bind instruction.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12532468,"byte_end":12532532,"line_start":1174,"line_end":1174,"column_start":1,"column_end":65}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12532550,"byte_end":12532572,"line_start":1176,"line_end":1176,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":5998},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12532611,"byte_end":12532613,"line_start":1178,"line_end":1178,"column_start":9,"column_end":11},"name":"ty","qualname":"::ast::expr::FuncBindType::ty","value":"ast::types::TypeUse<'a, ast::types::FunctionType<'a>>","parent":{"krate":0,"index":5996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6002},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12533032,"byte_end":12533039,"line_start":1194,"line_end":1194,"column_start":12,"column_end":19},"name":"LetType","qualname":"::ast::expr::LetType","value":"LetType { block, locals }","parent":null,"children":[{"krate":0,"index":6004},{"krate":0,"index":6005}],"decl_id":null,"docs":" Extra information associated with the let instruction.\n","sig":null,"attributes":[{"value":"/ Extra information associated with the let instruction.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12532922,"byte_end":12532980,"line_start":1191,"line_end":1191,"column_start":1,"column_end":59}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12532998,"byte_end":12533020,"line_start":1193,"line_end":1193,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":6004},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12533054,"byte_end":12533059,"line_start":1195,"line_end":1195,"column_start":9,"column_end":14},"name":"block","qualname":"::ast::expr::LetType::block","value":"ast::expr::BlockType<'a>","parent":{"krate":0,"index":6002},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6005},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12533084,"byte_end":12533090,"line_start":1196,"line_end":1196,"column_start":9,"column_end":15},"name":"locals","qualname":"::ast::expr::LetType::locals","value":"std::vec::Vec<ast::func::Local<'a>>","parent":{"krate":0,"index":6002},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6009},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12533456,"byte_end":12533470,"line_start":1211,"line_end":1211,"column_start":12,"column_end":26},"name":"BrTableIndices","qualname":"::ast::expr::BrTableIndices","value":"BrTableIndices { labels, default }","parent":null,"children":[{"krate":0,"index":6011},{"krate":0,"index":6012}],"decl_id":null,"docs":" Extra information associated with the `br_table` instruction.\n","sig":null,"attributes":[{"value":"/ Extra information associated with the `br_table` instruction.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12533339,"byte_end":12533404,"line_start":1208,"line_end":1208,"column_start":1,"column_end":66}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12533405,"byte_end":12533427,"line_start":1209,"line_end":1209,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":6011},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12533485,"byte_end":12533491,"line_start":1212,"line_end":1212,"column_start":9,"column_end":15},"name":"labels","qualname":"::ast::expr::BrTableIndices::labels","value":"std::vec::Vec<ast::token::Index<'a>>","parent":{"krate":0,"index":6009},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6012},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12533522,"byte_end":12533529,"line_start":1213,"line_end":1213,"column_start":9,"column_end":16},"name":"default","qualname":"::ast::expr::BrTableIndices::default","value":"ast::token::Index<'a>","parent":{"krate":0,"index":6009},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6016},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12534015,"byte_end":12534022,"line_start":1230,"line_end":1230,"column_start":12,"column_end":19},"name":"LaneArg","qualname":"::ast::expr::LaneArg","value":"LaneArg { lane }","parent":null,"children":[{"krate":0,"index":6017}],"decl_id":null,"docs":" Payload for lane-related instructions. Unsigned with no + prefix.\n","sig":null,"attributes":[{"value":"/ Payload for lane-related instructions. Unsigned with no + prefix.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12533917,"byte_end":12533986,"line_start":1228,"line_end":1228,"column_start":1,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":6017},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12534060,"byte_end":12534064,"line_start":1232,"line_end":1232,"column_start":9,"column_end":13},"name":"lane","qualname":"::ast::expr::LaneArg::lane","value":"u8","parent":{"krate":0,"index":6016},"children":[],"decl_id":null,"docs":" The lane argument.\n","sig":null,"attributes":[{"value":"/ The lane argument.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12534029,"byte_end":12534051,"line_start":1231,"line_end":1231,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":6020},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12534860,"byte_end":12534866,"line_start":1258,"line_end":1258,"column_start":12,"column_end":18},"name":"MemArg","qualname":"::ast::expr::MemArg","value":"MemArg { align, offset, memory }","parent":null,"children":[{"krate":0,"index":6022},{"krate":0,"index":6023},{"krate":0,"index":6024}],"decl_id":null,"docs":" Payload for memory-related instructions indicating offset/alignment of\n memory accesses.\n","sig":null,"attributes":[{"value":"/ Payload for memory-related instructions indicating offset/alignment of","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12534736,"byte_end":12534810,"line_start":1255,"line_end":1255,"column_start":1,"column_end":75}},{"value":"/ memory accesses.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12534811,"byte_end":12534831,"line_start":1256,"line_end":1256,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":6022},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12535025,"byte_end":12535030,"line_start":1263,"line_end":1263,"column_start":9,"column_end":14},"name":"align","qualname":"::ast::expr::MemArg::align","value":"u32","parent":{"krate":0,"index":6020},"children":[],"decl_id":null,"docs":" The alignment of this access.","sig":null,"attributes":[{"value":"/ The alignment of this access.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12534877,"byte_end":12534910,"line_start":1259,"line_end":1259,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12534915,"byte_end":12534918,"line_start":1260,"line_end":1260,"column_start":5,"column_end":8}},{"value":"/ This is not stored as a log, this is the actual alignment (e.g. 1, 2, 4,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12534923,"byte_end":12534999,"line_start":1261,"line_end":1261,"column_start":5,"column_end":81}},{"value":"/ 8, etc).","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12535004,"byte_end":12535016,"line_start":1262,"line_end":1262,"column_start":5,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":6023},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12535090,"byte_end":12535096,"line_start":1265,"line_end":1265,"column_start":9,"column_end":15},"name":"offset","qualname":"::ast::expr::MemArg::offset","value":"u64","parent":{"krate":0,"index":6020},"children":[],"decl_id":null,"docs":" The offset, in bytes of this access.\n","sig":null,"attributes":[{"value":"/ The offset, in bytes of this access.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12535041,"byte_end":12535081,"line_start":1264,"line_end":1264,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":6024},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12535152,"byte_end":12535158,"line_start":1267,"line_end":1267,"column_start":9,"column_end":15},"name":"memory","qualname":"::ast::expr::MemArg::memory","value":"ast::token::ItemRef<'a, ast::kw::memory>","parent":{"krate":0,"index":6020},"children":[],"decl_id":null,"docs":" The memory index we're accessing\n","sig":null,"attributes":[{"value":"/ The memory index we're accessing","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12535107,"byte_end":12535143,"line_start":1266,"line_end":1266,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":6028},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12537684,"byte_end":12537699,"line_start":1344,"line_end":1344,"column_start":12,"column_end":27},"name":"LoadOrStoreLane","qualname":"::ast::expr::LoadOrStoreLane","value":"LoadOrStoreLane { memarg, lane }","parent":null,"children":[{"krate":0,"index":6030},{"krate":0,"index":6031}],"decl_id":null,"docs":" Extra data associated with the `loadN_lane` and `storeN_lane` instructions.\n","sig":null,"attributes":[{"value":"/ Extra data associated with the `loadN_lane` and `storeN_lane` instructions.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12537576,"byte_end":12537655,"line_start":1342,"line_end":1342,"column_start":1,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":6030},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12537764,"byte_end":12537770,"line_start":1346,"line_end":1346,"column_start":9,"column_end":15},"name":"memarg","qualname":"::ast::expr::LoadOrStoreLane::memarg","value":"ast::expr::MemArg<'a>","parent":{"krate":0,"index":6028},"children":[],"decl_id":null,"docs":" The memory argument for this instruction.\n","sig":null,"attributes":[{"value":"/ The memory argument for this instruction.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12537710,"byte_end":12537755,"line_start":1345,"line_end":1345,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":6031},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12537840,"byte_end":12537844,"line_start":1348,"line_end":1348,"column_start":9,"column_end":13},"name":"lane","qualname":"::ast::expr::LoadOrStoreLane::lane","value":"ast::expr::LaneArg","parent":{"krate":0,"index":6028},"children":[],"decl_id":null,"docs":" The lane argument for this instruction.\n","sig":null,"attributes":[{"value":"/ The lane argument for this instruction.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12537788,"byte_end":12537831,"line_start":1347,"line_end":1347,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":6035},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12539787,"byte_end":12539799,"line_start":1398,"line_end":1398,"column_start":12,"column_end":24},"name":"CallIndirect","qualname":"::ast::expr::CallIndirect","value":"CallIndirect { table, ty }","parent":null,"children":[{"krate":0,"index":6037},{"krate":0,"index":6038}],"decl_id":null,"docs":" Extra data associated with the `call_indirect` instruction.\n","sig":null,"attributes":[{"value":"/ Extra data associated with the `call_indirect` instruction.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12539695,"byte_end":12539758,"line_start":1396,"line_end":1396,"column_start":1,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":6037},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12539872,"byte_end":12539877,"line_start":1400,"line_end":1400,"column_start":9,"column_end":14},"name":"table","qualname":"::ast::expr::CallIndirect::table","value":"ast::token::ItemRef<'a, ast::kw::table>","parent":{"krate":0,"index":6035},"children":[],"decl_id":null,"docs":" The table that this call is going to be indexing.\n","sig":null,"attributes":[{"value":"/ The table that this call is going to be indexing.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12539810,"byte_end":12539863,"line_start":1399,"line_end":1399,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":6038},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12539992,"byte_end":12539994,"line_start":1402,"line_end":1402,"column_start":9,"column_end":11},"name":"ty","qualname":"::ast::expr::CallIndirect::ty","value":"ast::types::TypeUse<'a, ast::types::FunctionType<'a>>","parent":{"krate":0,"index":6035},"children":[],"decl_id":null,"docs":" Type type signature that this `call_indirect` instruction is using.\n","sig":null,"attributes":[{"value":"/ Type type signature that this `call_indirect` instruction is using.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12539912,"byte_end":12539983,"line_start":1401,"line_end":1401,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":6042},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12540853,"byte_end":12540862,"line_start":1425,"line_end":1425,"column_start":12,"column_end":21},"name":"TableInit","qualname":"::ast::expr::TableInit","value":"TableInit { table, elem }","parent":null,"children":[{"krate":0,"index":6044},{"krate":0,"index":6045}],"decl_id":null,"docs":" Extra data associated with the `table.init` instruction\n","sig":null,"attributes":[{"value":"/ Extra data associated with the `table.init` instruction","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12540765,"byte_end":12540824,"line_start":1423,"line_end":1423,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":6044},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12540928,"byte_end":12540933,"line_start":1427,"line_end":1427,"column_start":9,"column_end":14},"name":"table","qualname":"::ast::expr::TableInit::table","value":"ast::token::ItemRef<'a, ast::kw::table>","parent":{"krate":0,"index":6042},"children":[],"decl_id":null,"docs":" The index of the table we're copying into.\n","sig":null,"attributes":[{"value":"/ The index of the table we're copying into.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12540873,"byte_end":12540919,"line_start":1426,"line_end":1426,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":6045},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12541041,"byte_end":12541045,"line_start":1429,"line_end":1429,"column_start":9,"column_end":13},"name":"elem","qualname":"::ast::expr::TableInit::elem","value":"ast::token::Index<'a>","parent":{"krate":0,"index":6042},"children":[],"decl_id":null,"docs":" The index of the element segment we're copying into a table.\n","sig":null,"attributes":[{"value":"/ The index of the element segment we're copying into a table.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12540968,"byte_end":12541032,"line_start":1428,"line_end":1428,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":6049},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12541666,"byte_end":12541675,"line_start":1448,"line_end":1448,"column_start":12,"column_end":21},"name":"TableCopy","qualname":"::ast::expr::TableCopy","value":"TableCopy { dst, src }","parent":null,"children":[{"krate":0,"index":6051},{"krate":0,"index":6052}],"decl_id":null,"docs":" Extra data associated with the `table.copy` instruction.\n","sig":null,"attributes":[{"value":"/ Extra data associated with the `table.copy` instruction.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12541577,"byte_end":12541637,"line_start":1446,"line_end":1446,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":6051},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12541747,"byte_end":12541750,"line_start":1450,"line_end":1450,"column_start":9,"column_end":12},"name":"dst","qualname":"::ast::expr::TableCopy::dst","value":"ast::token::ItemRef<'a, ast::kw::table>","parent":{"krate":0,"index":6049},"children":[],"decl_id":null,"docs":" The index of the destination table to copy into.\n","sig":null,"attributes":[{"value":"/ The index of the destination table to copy into.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12541686,"byte_end":12541738,"line_start":1449,"line_end":1449,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":6052},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12541841,"byte_end":12541844,"line_start":1452,"line_end":1452,"column_start":9,"column_end":12},"name":"src","qualname":"::ast::expr::TableCopy::src","value":"ast::token::ItemRef<'a, ast::kw::table>","parent":{"krate":0,"index":6049},"children":[],"decl_id":null,"docs":" The index of the source table to copy from.\n","sig":null,"attributes":[{"value":"/ The index of the source table to copy from.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12541785,"byte_end":12541832,"line_start":1451,"line_end":1451,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":6056},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12542413,"byte_end":12542421,"line_start":1470,"line_end":1470,"column_start":12,"column_end":20},"name":"TableArg","qualname":"::ast::expr::TableArg","value":"TableArg { dst }","parent":null,"children":[{"krate":0,"index":6058}],"decl_id":null,"docs":" Extra data associated with unary table instructions.\n","sig":null,"attributes":[{"value":"/ Extra data associated with unary table instructions.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12542328,"byte_end":12542384,"line_start":1468,"line_end":1468,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":6058},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12542477,"byte_end":12542480,"line_start":1472,"line_end":1472,"column_start":9,"column_end":12},"name":"dst","qualname":"::ast::expr::TableArg::dst","value":"ast::token::ItemRef<'a, ast::kw::table>","parent":{"krate":0,"index":6056},"children":[],"decl_id":null,"docs":" The index of the table argument.\n","sig":null,"attributes":[{"value":"/ The index of the table argument.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12542432,"byte_end":12542468,"line_start":1471,"line_end":1471,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":6062},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12542910,"byte_end":12542919,"line_start":1488,"line_end":1488,"column_start":12,"column_end":21},"name":"MemoryArg","qualname":"::ast::expr::MemoryArg","value":"MemoryArg { mem }","parent":null,"children":[{"krate":0,"index":6064}],"decl_id":null,"docs":" Extra data associated with unary memory instructions.\n","sig":null,"attributes":[{"value":"/ Extra data associated with unary memory instructions.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12542824,"byte_end":12542881,"line_start":1486,"line_end":1486,"column_start":1,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":6064},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12542973,"byte_end":12542976,"line_start":1490,"line_end":1490,"column_start":9,"column_end":12},"name":"mem","qualname":"::ast::expr::MemoryArg::mem","value":"ast::token::ItemRef<'a, ast::kw::memory>","parent":{"krate":0,"index":6062},"children":[],"decl_id":null,"docs":" The index of the memory space.\n","sig":null,"attributes":[{"value":"/ The index of the memory space.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12542930,"byte_end":12542964,"line_start":1489,"line_end":1489,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":6068},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12543413,"byte_end":12543423,"line_start":1506,"line_end":1506,"column_start":12,"column_end":22},"name":"MemoryInit","qualname":"::ast::expr::MemoryInit","value":"MemoryInit { data, mem }","parent":null,"children":[{"krate":0,"index":6070},{"krate":0,"index":6071}],"decl_id":null,"docs":" Extra data associated with the `memory.init` instruction\n","sig":null,"attributes":[{"value":"/ Extra data associated with the `memory.init` instruction","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12543324,"byte_end":12543384,"line_start":1504,"line_end":1504,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":6070},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12543503,"byte_end":12543507,"line_start":1508,"line_end":1508,"column_start":9,"column_end":13},"name":"data","qualname":"::ast::expr::MemoryInit::data","value":"ast::token::Index<'a>","parent":{"krate":0,"index":6068},"children":[],"decl_id":null,"docs":" The index of the data segment we're copying into memory.\n","sig":null,"attributes":[{"value":"/ The index of the data segment we're copying into memory.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12543434,"byte_end":12543494,"line_start":1507,"line_end":1507,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":6071},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12543585,"byte_end":12543588,"line_start":1510,"line_end":1510,"column_start":9,"column_end":12},"name":"mem","qualname":"::ast::expr::MemoryInit::mem","value":"ast::token::ItemRef<'a, ast::kw::memory>","parent":{"krate":0,"index":6068},"children":[],"decl_id":null,"docs":" The index of the memory we're copying into,\n","sig":null,"attributes":[{"value":"/ The index of the memory we're copying into,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12543529,"byte_end":12543576,"line_start":1509,"line_end":1509,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":6075},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12544225,"byte_end":12544235,"line_start":1529,"line_end":1529,"column_start":12,"column_end":22},"name":"MemoryCopy","qualname":"::ast::expr::MemoryCopy","value":"MemoryCopy { src, dst }","parent":null,"children":[{"krate":0,"index":6077},{"krate":0,"index":6078}],"decl_id":null,"docs":" Extra data associated with the `memory.copy` instruction\n","sig":null,"attributes":[{"value":"/ Extra data associated with the `memory.copy` instruction","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12544136,"byte_end":12544196,"line_start":1527,"line_end":1527,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":6077},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12544302,"byte_end":12544305,"line_start":1531,"line_end":1531,"column_start":9,"column_end":12},"name":"src","qualname":"::ast::expr::MemoryCopy::src","value":"ast::token::ItemRef<'a, ast::kw::memory>","parent":{"krate":0,"index":6075},"children":[],"decl_id":null,"docs":" The index of the memory we're copying from.\n","sig":null,"attributes":[{"value":"/ The index of the memory we're copying from.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12544246,"byte_end":12544293,"line_start":1530,"line_end":1530,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6078},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12544395,"byte_end":12544398,"line_start":1533,"line_end":1533,"column_start":9,"column_end":12},"name":"dst","qualname":"::ast::expr::MemoryCopy::dst","value":"ast::token::ItemRef<'a, ast::kw::memory>","parent":{"krate":0,"index":6075},"children":[],"decl_id":null,"docs":" The index of the memory we're copying to.\n","sig":null,"attributes":[{"value":"/ The index of the memory we're copying to.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12544341,"byte_end":12544386,"line_start":1532,"line_end":1532,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":6082},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12544980,"byte_end":12544992,"line_start":1551,"line_end":1551,"column_start":12,"column_end":24},"name":"StructAccess","qualname":"::ast::expr::StructAccess","value":"StructAccess { r#struct, field }","parent":null,"children":[{"krate":0,"index":6084},{"krate":0,"index":6085}],"decl_id":null,"docs":" Extra data associated with the `struct.get/set` instructions\n","sig":null,"attributes":[{"value":"/ Extra data associated with the `struct.get/set` instructions","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12544887,"byte_end":12544951,"line_start":1549,"line_end":1549,"column_start":1,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":6084},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12545061,"byte_end":12545069,"line_start":1553,"line_end":1553,"column_start":9,"column_end":17},"name":"r#struct","qualname":"::ast::expr::StructAccess::r#struct","value":"ast::token::Index<'a>","parent":{"krate":0,"index":6082},"children":[],"decl_id":null,"docs":" The index of the struct type we're accessing.\n","sig":null,"attributes":[{"value":"/ The index of the struct type we're accessing.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12545003,"byte_end":12545052,"line_start":1552,"line_end":1552,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":6085},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12545156,"byte_end":12545161,"line_start":1555,"line_end":1555,"column_start":9,"column_end":14},"name":"field","qualname":"::ast::expr::StructAccess::field","value":"ast::token::Index<'a>","parent":{"krate":0,"index":6082},"children":[],"decl_id":null,"docs":" The index of the field of the struct we're accessing\n","sig":null,"attributes":[{"value":"/ The index of the field of the struct we're accessing","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12545091,"byte_end":12545147,"line_start":1554,"line_end":1554,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6092},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12545535,"byte_end":12545540,"line_start":1572,"line_end":1572,"column_start":5,"column_end":10},"name":"I8x16","qualname":"::ast::expr::V128Const::I8x16","value":"V128Const::I8x16([i8; ])","parent":{"krate":0,"index":6091},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6096},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12545556,"byte_end":12545561,"line_start":1573,"line_end":1573,"column_start":5,"column_end":10},"name":"I16x8","qualname":"::ast::expr::V128Const::I16x8","value":"V128Const::I16x8([i16; ])","parent":{"krate":0,"index":6091},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6100},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12545577,"byte_end":12545582,"line_start":1574,"line_end":1574,"column_start":5,"column_end":10},"name":"I32x4","qualname":"::ast::expr::V128Const::I32x4","value":"V128Const::I32x4([i32; ])","parent":{"krate":0,"index":6091},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6104},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12545598,"byte_end":12545603,"line_start":1575,"line_end":1575,"column_start":5,"column_end":10},"name":"I64x2","qualname":"::ast::expr::V128Const::I64x2","value":"V128Const::I64x2([i64; ])","parent":{"krate":0,"index":6091},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6108},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12545619,"byte_end":12545624,"line_start":1576,"line_end":1576,"column_start":5,"column_end":10},"name":"F32x4","qualname":"::ast::expr::V128Const::F32x4","value":"V128Const::F32x4([ast::Float32; ])","parent":{"krate":0,"index":6091},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6112},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12545649,"byte_end":12545654,"line_start":1577,"line_end":1577,"column_start":5,"column_end":10},"name":"F64x2","qualname":"::ast::expr::V128Const::F64x2","value":"V128Const::F64x2([ast::Float64; ])","parent":{"krate":0,"index":6091},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6091},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12545519,"byte_end":12545528,"line_start":1571,"line_end":1571,"column_start":10,"column_end":19},"name":"V128Const","qualname":"::ast::expr::V128Const","value":"pub enum V128Const {\n    I8x16([i8; ]),\n    I16x8([i16; ]),\n    I32x4([i32; ]),\n    I64x2([i64; ]),\n    F32x4([ast::Float32; ]),\n    F64x2([ast::Float64; ]),\n}","parent":null,"children":[{"krate":0,"index":6092},{"krate":0,"index":6096},{"krate":0,"index":6100},{"krate":0,"index":6104},{"krate":0,"index":6108},{"krate":0,"index":6112}],"decl_id":null,"docs":" Different ways to specify a `v128.const` instruction\n","sig":null,"attributes":[{"value":"/ Different ways to specify a `v128.const` instruction","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12545396,"byte_end":12545452,"line_start":1567,"line_end":1567,"column_start":1,"column_end":57}},{"value":"rustfmt::skip","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12545470,"byte_end":12545486,"line_start":1569,"line_end":1569,"column_start":1,"column_end":17}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12545487,"byte_end":12545509,"line_start":1570,"line_end":1570,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":6116},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12545938,"byte_end":12545949,"line_start":1587,"line_end":1587,"column_start":12,"column_end":23},"name":"to_le_bytes","qualname":"<V128Const>::to_le_bytes","value":"pub fn to_le_bytes(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns the raw little-ended byte sequence used to represent this\n `v128` constant`","sig":null,"attributes":[{"value":"/ Returns the raw little-ended byte sequence used to represent this","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12545699,"byte_end":12545768,"line_start":1581,"line_end":1581,"column_start":5,"column_end":74}},{"value":"/ `v128` constant`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12545773,"byte_end":12545793,"line_start":1582,"line_end":1582,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12545798,"byte_end":12545801,"line_start":1583,"line_end":1583,"column_start":5,"column_end":8}},{"value":"/ This is typically suitable for encoding as the payload of the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12545806,"byte_end":12545871,"line_start":1584,"line_end":1584,"column_start":5,"column_end":70}},{"value":"/ `v128.const` instruction.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12545876,"byte_end":12545905,"line_start":1585,"line_end":1585,"column_start":5,"column_end":34}},{"value":"rustfmt::skip","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12545910,"byte_end":12545926,"line_start":1586,"line_end":1586,"column_start":5,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":6118},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12551095,"byte_end":12551107,"line_start":1736,"line_end":1736,"column_start":12,"column_end":24},"name":"I8x16Shuffle","qualname":"::ast::expr::I8x16Shuffle","value":"I8x16Shuffle { lanes }","parent":null,"children":[{"krate":0,"index":6119}],"decl_id":null,"docs":" Lanes being shuffled in the `i8x16.shuffle` instruction\n","sig":null,"attributes":[{"value":"/ Lanes being shuffled in the `i8x16.shuffle` instruction","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12551007,"byte_end":12551066,"line_start":1734,"line_end":1734,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":6119},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12551145,"byte_end":12551150,"line_start":1738,"line_end":1738,"column_start":9,"column_end":14},"name":"lanes","qualname":"::ast::expr::I8x16Shuffle::lanes","value":"[u8; 16]","parent":{"krate":0,"index":6118},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12551114,"byte_end":12551136,"line_start":1737,"line_end":1737,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":6123},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12551933,"byte_end":12551944,"line_start":1768,"line_end":1768,"column_start":12,"column_end":23},"name":"SelectTypes","qualname":"::ast::expr::SelectTypes","value":"SelectTypes { tys }","parent":null,"children":[{"krate":0,"index":6125}],"decl_id":null,"docs":" Payload of the `select` instructions\n","sig":null,"attributes":[{"value":"/ Payload of the `select` instructions","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12551864,"byte_end":12551904,"line_start":1766,"line_end":1766,"column_start":1,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":6125},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12551986,"byte_end":12551989,"line_start":1770,"line_end":1770,"column_start":9,"column_end":12},"name":"tys","qualname":"::ast::expr::SelectTypes::tys","value":"std::option::Option<std::vec::Vec<ast::types::ValType<'a>>>","parent":{"krate":0,"index":6123},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12551955,"byte_end":12551977,"line_start":1769,"line_end":1769,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":6129},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\func.rs","byte_start":12552746,"byte_end":12552750,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Func","qualname":"::ast::func::Func","value":"Func { span, id, name, exports, kind, ty }","parent":null,"children":[{"krate":0,"index":6131},{"krate":0,"index":6132},{"krate":0,"index":6133},{"krate":0,"index":6134},{"krate":0,"index":6135},{"krate":0,"index":6136}],"decl_id":null,"docs":" A WebAssembly function to be inserted into a module.","sig":null,"attributes":[{"value":"/ A WebAssembly function to be inserted into a module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\func.rs","byte_start":12552596,"byte_end":12552652,"line_start":4,"line_end":4,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\func.rs","byte_start":12552653,"byte_end":12552656,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This is a member of both the function and code sections.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\func.rs","byte_start":12552657,"byte_end":12552717,"line_start":6,"line_end":6,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":6131},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\func.rs","byte_start":12552804,"byte_end":12552808,"line_start":10,"line_end":10,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::func::Func::span","value":"ast::token::Span","parent":{"krate":0,"index":6129},"children":[],"decl_id":null,"docs":" Where this `func` was defined.\n","sig":null,"attributes":[{"value":"/ Where this `func` was defined.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\func.rs","byte_start":12552761,"byte_end":12552795,"line_start":9,"line_end":9,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":6132},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\func.rs","byte_start":12552929,"byte_end":12552931,"line_start":13,"line_end":13,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::func::Func::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":6129},"children":[],"decl_id":null,"docs":" An identifier that this function is resolved with (optionally) for name\n resolution.\n","sig":null,"attributes":[{"value":"/ An identifier that this function is resolved with (optionally) for name","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\func.rs","byte_start":12552825,"byte_end":12552900,"line_start":11,"line_end":11,"column_start":5,"column_end":80}},{"value":"/ resolution.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\func.rs","byte_start":12552905,"byte_end":12552920,"line_start":12,"line_end":12,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":6133},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\func.rs","byte_start":12553042,"byte_end":12553046,"line_start":15,"line_end":15,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::func::Func::name","value":"std::option::Option<ast::token::NameAnnotation<'a>>","parent":{"krate":0,"index":6129},"children":[],"decl_id":null,"docs":" An optional name for this function stored in the custom `name` section.\n","sig":null,"attributes":[{"value":"/ An optional name for this function stored in the custom `name` section.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\func.rs","byte_start":12552958,"byte_end":12553033,"line_start":14,"line_end":14,"column_start":5,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":6134},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\func.rs","byte_start":12553206,"byte_end":12553213,"line_start":18,"line_end":18,"column_start":9,"column_end":16},"name":"exports","qualname":"::ast::func::Func::exports","value":"ast::export::InlineExport<'a>","parent":{"krate":0,"index":6129},"children":[],"decl_id":null,"docs":" If present, inline export annotations which indicate names this\n definition should be exported under.\n","sig":null,"attributes":[{"value":"/ If present, inline export annotations which indicate names this","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\func.rs","byte_start":12553085,"byte_end":12553152,"line_start":16,"line_end":16,"column_start":5,"column_end":72}},{"value":"/ definition should be exported under.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\func.rs","byte_start":12553157,"byte_end":12553197,"line_start":17,"line_end":17,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":6135},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\func.rs","byte_start":12553339,"byte_end":12553343,"line_start":21,"line_end":21,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::func::Func::kind","value":"ast::func::FuncKind<'a>","parent":{"krate":0,"index":6129},"children":[],"decl_id":null,"docs":" What kind of function this is, be it an inline-defined or imported\n function.\n","sig":null,"attributes":[{"value":"/ What kind of function this is, be it an inline-defined or imported","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\func.rs","byte_start":12553242,"byte_end":12553312,"line_start":19,"line_end":19,"column_start":5,"column_end":75}},{"value":"/ function.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\func.rs","byte_start":12553317,"byte_end":12553330,"line_start":20,"line_end":20,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":6136},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\func.rs","byte_start":12553414,"byte_end":12553416,"line_start":23,"line_end":23,"column_start":9,"column_end":11},"name":"ty","qualname":"::ast::func::Func::ty","value":"ast::types::TypeUse<'a, ast::types::FunctionType<'a>>","parent":{"krate":0,"index":6129},"children":[],"decl_id":null,"docs":" The type that this function will have.\n","sig":null,"attributes":[{"value":"/ The type that this function will have.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\func.rs","byte_start":12553363,"byte_end":12553405,"line_start":22,"line_end":22,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6142},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\func.rs","byte_start":12553715,"byte_end":12553721,"line_start":34,"line_end":34,"column_start":5,"column_end":11},"name":"Import","qualname":"::ast::func::FuncKind::Import","value":"FuncKind::Import(ast::InlineImport)","parent":{"krate":0,"index":6140},"children":[],"decl_id":null,"docs":" A function which is actually defined as an import, such as:","sig":null,"attributes":[{"value":"/ A function which is actually defined as an import, such as:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\func.rs","byte_start":12553566,"byte_end":12553629,"line_start":29,"line_end":29,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\func.rs","byte_start":12553634,"byte_end":12553637,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\func.rs","byte_start":12553642,"byte_end":12553653,"line_start":31,"line_end":31,"column_start":5,"column_end":16}},{"value":"/ (func (type 3) (import \"foo\" \"bar\"))","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\func.rs","byte_start":12553658,"byte_end":12553698,"line_start":32,"line_end":32,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\func.rs","byte_start":12553703,"byte_end":12553710,"line_start":33,"line_end":33,"column_start":5,"column_end":12}}]},{"kind":"StructVariant","id":{"krate":0,"index":6145},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\func.rs","byte_start":12553820,"byte_end":12553826,"line_start":37,"line_end":37,"column_start":5,"column_end":11},"name":"Inline","qualname":"::ast::func::FuncKind::Inline","value":"FuncKind::Inline { locals, expression }","parent":{"krate":0,"index":6140},"children":[],"decl_id":null,"docs":" Almost all functions, those defined inline in a wasm module.\n","sig":null,"attributes":[{"value":"/ Almost all functions, those defined inline in a wasm module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\func.rs","byte_start":12553751,"byte_end":12553815,"line_start":36,"line_end":36,"column_start":5,"column_end":69}}]},{"kind":"Enum","id":{"krate":0,"index":6140},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\func.rs","byte_start":12553547,"byte_end":12553555,"line_start":28,"line_end":28,"column_start":10,"column_end":18},"name":"FuncKind","qualname":"::ast::func::FuncKind","value":"pub enum FuncKind<'a> {\n    Import(ast::InlineImport),\n    Inline {\n        locals: Vec<Local>,\n        expression: ast::Expression,\n    },\n}","parent":null,"children":[{"krate":0,"index":6142},{"krate":0,"index":6145}],"decl_id":null,"docs":" Possible ways to define a function in the text format.\n","sig":null,"attributes":[{"value":"/ Possible ways to define a function in the text format.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\func.rs","byte_start":12553462,"byte_end":12553520,"line_start":26,"line_end":26,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":6151},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\func.rs","byte_start":12555045,"byte_end":12555050,"line_start":83,"line_end":83,"column_start":12,"column_end":17},"name":"Local","qualname":"::ast::func::Local","value":"Local { id, name, ty }","parent":null,"children":[{"krate":0,"index":6153},{"krate":0,"index":6154},{"krate":0,"index":6155}],"decl_id":null,"docs":" A local for a `func` or `let` instruction.","sig":null,"attributes":[{"value":"/ A local for a `func` or `let` instruction.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\func.rs","byte_start":12554833,"byte_end":12554879,"line_start":78,"line_end":78,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\func.rs","byte_start":12554880,"byte_end":12554883,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ Each local has an optional identifier for name resolution, an optional name","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\func.rs","byte_start":12554884,"byte_end":12554963,"line_start":80,"line_end":80,"column_start":1,"column_end":80}},{"value":"/ for the custom `name` section, and a value type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\func.rs","byte_start":12554964,"byte_end":12555016,"line_start":81,"line_end":81,"column_start":1,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":6153},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\func.rs","byte_start":12555162,"byte_end":12555164,"line_start":86,"line_end":86,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::func::Local::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":6151},"children":[],"decl_id":null,"docs":" An identifier that this local is resolved with (optionally) for name\n resolution.\n","sig":null,"attributes":[{"value":"/ An identifier that this local is resolved with (optionally) for name","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\func.rs","byte_start":12555061,"byte_end":12555133,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"/ resolution.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\func.rs","byte_start":12555138,"byte_end":12555153,"line_start":85,"line_end":85,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":6154},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\func.rs","byte_start":12555272,"byte_end":12555276,"line_start":88,"line_end":88,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::func::Local::name","value":"std::option::Option<ast::token::NameAnnotation<'a>>","parent":{"krate":0,"index":6151},"children":[],"decl_id":null,"docs":" An optional name for this local stored in the custom `name` section.\n","sig":null,"attributes":[{"value":"/ An optional name for this local stored in the custom `name` section.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\func.rs","byte_start":12555191,"byte_end":12555263,"line_start":87,"line_end":87,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":6155},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\func.rs","byte_start":12555357,"byte_end":12555359,"line_start":90,"line_end":90,"column_start":9,"column_end":11},"name":"ty","qualname":"::ast::func::Local::ty","value":"ast::types::ValType<'a>","parent":{"krate":0,"index":6151},"children":[],"decl_id":null,"docs":" The value type of this local.\n","sig":null,"attributes":[{"value":"/ The value type of this local.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\func.rs","byte_start":12555315,"byte_end":12555348,"line_start":89,"line_end":89,"column_start":5,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":6159},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\global.rs","byte_start":12556346,"byte_end":12556352,"line_start":6,"line_end":6,"column_start":12,"column_end":18},"name":"Global","qualname":"::ast::global::Global","value":"Global { span, id, name, exports, ty, kind }","parent":null,"children":[{"krate":0,"index":6161},{"krate":0,"index":6162},{"krate":0,"index":6163},{"krate":0,"index":6164},{"krate":0,"index":6165},{"krate":0,"index":6166}],"decl_id":null,"docs":" A WebAssembly global in a module\n","sig":null,"attributes":[{"value":"/ A WebAssembly global in a module","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\global.rs","byte_start":12556281,"byte_end":12556317,"line_start":4,"line_end":4,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":6161},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\global.rs","byte_start":12556408,"byte_end":12556412,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::global::Global::span","value":"ast::token::Span","parent":{"krate":0,"index":6159},"children":[],"decl_id":null,"docs":" Where this `global` was defined.\n","sig":null,"attributes":[{"value":"/ Where this `global` was defined.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\global.rs","byte_start":12556363,"byte_end":12556399,"line_start":7,"line_end":7,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":6162},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\global.rs","byte_start":12556486,"byte_end":12556488,"line_start":10,"line_end":10,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::global::Global::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":6159},"children":[],"decl_id":null,"docs":" An optional name to reference this global by\n","sig":null,"attributes":[{"value":"/ An optional name to reference this global by","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\global.rs","byte_start":12556429,"byte_end":12556477,"line_start":9,"line_end":9,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":6163},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\global.rs","byte_start":12556599,"byte_end":12556603,"line_start":12,"line_end":12,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::global::Global::name","value":"std::option::Option<ast::token::NameAnnotation<'a>>","parent":{"krate":0,"index":6159},"children":[],"decl_id":null,"docs":" An optional name for this function stored in the custom `name` section.\n","sig":null,"attributes":[{"value":"/ An optional name for this function stored in the custom `name` section.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\global.rs","byte_start":12556515,"byte_end":12556590,"line_start":11,"line_end":11,"column_start":5,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":6164},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\global.rs","byte_start":12556763,"byte_end":12556770,"line_start":15,"line_end":15,"column_start":9,"column_end":16},"name":"exports","qualname":"::ast::global::Global::exports","value":"ast::export::InlineExport<'a>","parent":{"krate":0,"index":6159},"children":[],"decl_id":null,"docs":" If present, inline export annotations which indicate names this\n definition should be exported under.\n","sig":null,"attributes":[{"value":"/ If present, inline export annotations which indicate names this","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\global.rs","byte_start":12556642,"byte_end":12556709,"line_start":13,"line_end":13,"column_start":5,"column_end":72}},{"value":"/ definition should be exported under.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\global.rs","byte_start":12556714,"byte_end":12556754,"line_start":14,"line_end":14,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":6165},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\global.rs","byte_start":12556882,"byte_end":12556884,"line_start":17,"line_end":17,"column_start":9,"column_end":11},"name":"ty","qualname":"::ast::global::Global::ty","value":"ast::types::GlobalType<'a>","parent":{"krate":0,"index":6159},"children":[],"decl_id":null,"docs":" The type of this global, both its value type and whether it's mutable.\n","sig":null,"attributes":[{"value":"/ The type of this global, both its value type and whether it's mutable.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\global.rs","byte_start":12556799,"byte_end":12556873,"line_start":16,"line_end":16,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":6166},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\global.rs","byte_start":12556960,"byte_end":12556964,"line_start":19,"line_end":19,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::global::Global::kind","value":"ast::global::GlobalKind<'a>","parent":{"krate":0,"index":6159},"children":[],"decl_id":null,"docs":" What kind of global this defined as.\n","sig":null,"attributes":[{"value":"/ What kind of global this defined as.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\global.rs","byte_start":12556911,"byte_end":12556951,"line_start":18,"line_end":18,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6172},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\global.rs","byte_start":12557240,"byte_end":12557246,"line_start":30,"line_end":30,"column_start":5,"column_end":11},"name":"Import","qualname":"::ast::global::GlobalKind::Import","value":"GlobalKind::Import(ast::InlineImport)","parent":{"krate":0,"index":6170},"children":[],"decl_id":null,"docs":" A global which is actually defined as an import, such as:","sig":null,"attributes":[{"value":"/ A global which is actually defined as an import, such as:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\global.rs","byte_start":12557096,"byte_end":12557157,"line_start":25,"line_end":25,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\global.rs","byte_start":12557162,"byte_end":12557165,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\global.rs","byte_start":12557170,"byte_end":12557181,"line_start":27,"line_end":27,"column_start":5,"column_end":16}},{"value":"/ (global i32 (import \"foo\" \"bar\"))","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\global.rs","byte_start":12557186,"byte_end":12557223,"line_start":28,"line_end":28,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\global.rs","byte_start":12557228,"byte_end":12557235,"line_start":29,"line_end":29,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6175},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\global.rs","byte_start":12557329,"byte_end":12557335,"line_start":33,"line_end":33,"column_start":5,"column_end":11},"name":"Inline","qualname":"::ast::global::GlobalKind::Inline","value":"GlobalKind::Inline(ast::Expression)","parent":{"krate":0,"index":6170},"children":[],"decl_id":null,"docs":" A global defined inline in the module itself\n","sig":null,"attributes":[{"value":"/ A global defined inline in the module itself","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\global.rs","byte_start":12557276,"byte_end":12557324,"line_start":32,"line_end":32,"column_start":5,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":6170},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\global.rs","byte_start":12557075,"byte_end":12557085,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"name":"GlobalKind","qualname":"::ast::global::GlobalKind","value":"pub enum GlobalKind<'a> {\n    Import(ast::InlineImport),\n    Inline(ast::Expression),\n}","parent":null,"children":[{"krate":0,"index":6172},{"krate":0,"index":6175}],"decl_id":null,"docs":" Different kinds of globals that can be defined in a module.\n","sig":null,"attributes":[{"value":"/ Different kinds of globals that can be defined in a module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\global.rs","byte_start":12556985,"byte_end":12557048,"line_start":22,"line_end":22,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":6181},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\import.rs","byte_start":12558158,"byte_end":12558164,"line_start":6,"line_end":6,"column_start":12,"column_end":18},"name":"Import","qualname":"::ast::import::Import","value":"Import { span, module, field, item }","parent":null,"children":[{"krate":0,"index":6183},{"krate":0,"index":6184},{"krate":0,"index":6185},{"krate":0,"index":6186}],"decl_id":null,"docs":" An `import` statement and entry in a WebAssembly module.\n","sig":null,"attributes":[{"value":"/ An `import` statement and entry in a WebAssembly module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\import.rs","byte_start":12558062,"byte_end":12558122,"line_start":4,"line_end":4,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":6183},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\import.rs","byte_start":12558219,"byte_end":12558223,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::import::Import::span","value":"ast::token::Span","parent":{"krate":0,"index":6181},"children":[],"decl_id":null,"docs":" Where this `import` was defined\n","sig":null,"attributes":[{"value":"/ Where this `import` was defined","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\import.rs","byte_start":12558175,"byte_end":12558210,"line_start":7,"line_end":7,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":6184},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\import.rs","byte_start":12558301,"byte_end":12558307,"line_start":10,"line_end":10,"column_start":9,"column_end":15},"name":"module","qualname":"::ast::import::Import::module","value":"&'a str","parent":{"krate":0,"index":6181},"children":[],"decl_id":null,"docs":" The module that this statement is importing from\n","sig":null,"attributes":[{"value":"/ The module that this statement is importing from","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\import.rs","byte_start":12558240,"byte_end":12558292,"line_start":9,"line_end":9,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":6185},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\import.rs","byte_start":12558399,"byte_end":12558404,"line_start":12,"line_end":12,"column_start":9,"column_end":14},"name":"field","qualname":"::ast::import::Import::field","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":6181},"children":[],"decl_id":null,"docs":" The name of the field in the module this statement imports from.\n","sig":null,"attributes":[{"value":"/ The name of the field in the module this statement imports from.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\import.rs","byte_start":12558322,"byte_end":12558390,"line_start":11,"line_end":11,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":6186},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\import.rs","byte_start":12558471,"byte_end":12558475,"line_start":14,"line_end":14,"column_start":9,"column_end":13},"name":"item","qualname":"::ast::import::Import::item","value":"ast::import::ItemSig<'a>","parent":{"krate":0,"index":6181},"children":[],"decl_id":null,"docs":" The item that's being imported.\n","sig":null,"attributes":[{"value":"/ The item that's being imported.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\import.rs","byte_start":12558427,"byte_end":12558462,"line_start":13,"line_end":13,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":6193},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\import.rs","byte_start":12558930,"byte_end":12558937,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"ItemSig","qualname":"::ast::import::ItemSig","value":"ItemSig { span, id, name, kind }","parent":null,"children":[{"krate":0,"index":6195},{"krate":0,"index":6196},{"krate":0,"index":6197},{"krate":0,"index":6198}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\import.rs","byte_start":12558896,"byte_end":12558918,"line_start":33,"line_end":33,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":6195},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\import.rs","byte_start":12559002,"byte_end":12559006,"line_start":36,"line_end":36,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::import::ItemSig::span","value":"ast::token::Span","parent":{"krate":0,"index":6193},"children":[],"decl_id":null,"docs":" Where this item is defined in the source.\n","sig":null,"attributes":[{"value":"/ Where this item is defined in the source.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\import.rs","byte_start":12558948,"byte_end":12558993,"line_start":35,"line_end":35,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":6196},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\import.rs","byte_start":12559145,"byte_end":12559147,"line_start":39,"line_end":39,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::import::ItemSig::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":6193},"children":[],"decl_id":null,"docs":" An optional identifier used during name resolution to refer to this item\n from the rest of the module.\n","sig":null,"attributes":[{"value":"/ An optional identifier used during name resolution to refer to this item","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\import.rs","byte_start":12559023,"byte_end":12559099,"line_start":37,"line_end":37,"column_start":5,"column_end":81}},{"value":"/ from the rest of the module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\import.rs","byte_start":12559104,"byte_end":12559136,"line_start":38,"line_end":38,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":6197},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\import.rs","byte_start":12559278,"byte_end":12559282,"line_start":42,"line_end":42,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::import::ItemSig::name","value":"std::option::Option<ast::token::NameAnnotation<'a>>","parent":{"krate":0,"index":6193},"children":[],"decl_id":null,"docs":" An optional name which, for functions, will be stored in the\n custom `name` section.\n","sig":null,"attributes":[{"value":"/ An optional name which, for functions, will be stored in the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\import.rs","byte_start":12559174,"byte_end":12559238,"line_start":40,"line_end":40,"column_start":5,"column_end":69}},{"value":"/ custom `name` section.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\import.rs","byte_start":12559243,"byte_end":12559269,"line_start":41,"line_end":41,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":6198},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\import.rs","byte_start":12559360,"byte_end":12559364,"line_start":44,"line_end":44,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::import::ItemSig::kind","value":"ast::import::ItemKind<'a>","parent":{"krate":0,"index":6193},"children":[],"decl_id":null,"docs":" What kind of item this is.\n","sig":null,"attributes":[{"value":"/ What kind of item this is.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\import.rs","byte_start":12559321,"byte_end":12559351,"line_start":43,"line_end":43,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6207},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\import.rs","byte_start":12559458,"byte_end":12559462,"line_start":50,"line_end":50,"column_start":5,"column_end":9},"name":"Func","qualname":"::ast::import::ItemKind::Func","value":"ItemKind::Func(ast::TypeUse)","parent":{"krate":0,"index":6205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6210},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\import.rs","byte_start":12559509,"byte_end":12559514,"line_start":51,"line_end":51,"column_start":5,"column_end":10},"name":"Table","qualname":"::ast::import::ItemKind::Table","value":"ItemKind::Table(ast::TableType)","parent":{"krate":0,"index":6205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6213},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\import.rs","byte_start":12559540,"byte_end":12559546,"line_start":52,"line_end":52,"column_start":5,"column_end":11},"name":"Memory","qualname":"::ast::import::ItemKind::Memory","value":"ItemKind::Memory(ast::MemoryType)","parent":{"krate":0,"index":6205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6216},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\import.rs","byte_start":12559569,"byte_end":12559575,"line_start":53,"line_end":53,"column_start":5,"column_end":11},"name":"Global","qualname":"::ast::import::ItemKind::Global","value":"ItemKind::Global(ast::GlobalType)","parent":{"krate":0,"index":6205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6219},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\import.rs","byte_start":12559602,"byte_end":12559605,"line_start":54,"line_end":54,"column_start":5,"column_end":8},"name":"Tag","qualname":"::ast::import::ItemKind::Tag","value":"ItemKind::Tag(ast::TagType)","parent":{"krate":0,"index":6205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6222},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\import.rs","byte_start":12559629,"byte_end":12559635,"line_start":55,"line_end":55,"column_start":5,"column_end":11},"name":"Module","qualname":"::ast::import::ItemKind::Module","value":"ItemKind::Module(ast::TypeUse)","parent":{"krate":0,"index":6205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6225},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\import.rs","byte_start":12559680,"byte_end":12559688,"line_start":56,"line_end":56,"column_start":5,"column_end":13},"name":"Instance","qualname":"::ast::import::ItemKind::Instance","value":"ItemKind::Instance(ast::TypeUse)","parent":{"krate":0,"index":6205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6205},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\import.rs","byte_start":12559439,"byte_end":12559447,"line_start":49,"line_end":49,"column_start":10,"column_end":18},"name":"ItemKind","qualname":"::ast::import::ItemKind","value":"pub enum ItemKind<'a> {\n    Func(ast::TypeUse),\n    Table(ast::TableType),\n    Memory(ast::MemoryType),\n    Global(ast::GlobalType),\n    Tag(ast::TagType),\n    Module(ast::TypeUse),\n    Instance(ast::TypeUse),\n}","parent":null,"children":[{"krate":0,"index":6207},{"krate":0,"index":6210},{"krate":0,"index":6213},{"krate":0,"index":6216},{"krate":0,"index":6219},{"krate":0,"index":6222},{"krate":0,"index":6225}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\import.rs","byte_start":12559407,"byte_end":12559429,"line_start":48,"line_end":48,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6234},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\import.rs","byte_start":12562288,"byte_end":12562300,"line_start":132,"line_end":132,"column_start":12,"column_end":24},"name":"InlineImport","qualname":"::ast::import::InlineImport","value":"InlineImport { module, field }","parent":null,"children":[{"krate":0,"index":6236},{"krate":0,"index":6237}],"decl_id":null,"docs":" A listing of a inline `(import \"foo\")` statement.","sig":null,"attributes":[{"value":"/ A listing of a inline `(import \"foo\")` statement.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\import.rs","byte_start":12561899,"byte_end":12561952,"line_start":124,"line_end":124,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\import.rs","byte_start":12561953,"byte_end":12561956,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ Note that when parsing this type it is somewhat unconventional that it","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\import.rs","byte_start":12561957,"byte_end":12562031,"line_start":126,"line_end":126,"column_start":1,"column_end":75}},{"value":"/ parses its own surrounding parentheses. This is typically an optional type,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\import.rs","byte_start":12562032,"byte_end":12562111,"line_start":127,"line_end":127,"column_start":1,"column_end":80}},{"value":"/ so it's so far been a bit nicer to have the optionality handled through","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\import.rs","byte_start":12562112,"byte_end":12562187,"line_start":128,"line_end":128,"column_start":1,"column_end":76}},{"value":"/ `Peek` rather than `Option<T>`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\import.rs","byte_start":12562188,"byte_end":12562223,"line_start":129,"line_end":129,"column_start":1,"column_end":36}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\import.rs","byte_start":12562254,"byte_end":12562276,"line_start":131,"line_end":131,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":6236},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\import.rs","byte_start":12562315,"byte_end":12562321,"line_start":133,"line_end":133,"column_start":9,"column_end":15},"name":"module","qualname":"::ast::import::InlineImport::module","value":"&'a str","parent":{"krate":0,"index":6234},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6237},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\import.rs","byte_start":12562340,"byte_end":12562345,"line_start":134,"line_end":134,"column_start":9,"column_end":14},"name":"field","qualname":"::ast::import::InlineImport::field","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":6234},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6246},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\instance.rs","byte_start":12563562,"byte_end":12563570,"line_start":6,"line_end":6,"column_start":12,"column_end":20},"name":"Instance","qualname":"::ast::instance::Instance","value":"Instance { span, id, name, exports, kind }","parent":null,"children":[{"krate":0,"index":6248},{"krate":0,"index":6249},{"krate":0,"index":6250},{"krate":0,"index":6251},{"krate":0,"index":6252}],"decl_id":null,"docs":" A nested WebAssembly instance to be created as part of a module.\n","sig":null,"attributes":[{"value":"/ A nested WebAssembly instance to be created as part of a module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\instance.rs","byte_start":12563465,"byte_end":12563533,"line_start":4,"line_end":4,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":6248},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\instance.rs","byte_start":12563628,"byte_end":12563632,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::instance::Instance::span","value":"ast::token::Span","parent":{"krate":0,"index":6246},"children":[],"decl_id":null,"docs":" Where this `instance` was defined.\n","sig":null,"attributes":[{"value":"/ Where this `instance` was defined.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\instance.rs","byte_start":12563581,"byte_end":12563619,"line_start":7,"line_end":7,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":6249},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\instance.rs","byte_start":12563753,"byte_end":12563755,"line_start":11,"line_end":11,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::instance::Instance::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":6246},"children":[],"decl_id":null,"docs":" An identifier that this instance is resolved with (optionally) for name\n resolution.\n","sig":null,"attributes":[{"value":"/ An identifier that this instance is resolved with (optionally) for name","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\instance.rs","byte_start":12563649,"byte_end":12563724,"line_start":9,"line_end":9,"column_start":5,"column_end":80}},{"value":"/ resolution.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\instance.rs","byte_start":12563729,"byte_end":12563744,"line_start":10,"line_end":10,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":6250},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\instance.rs","byte_start":12563866,"byte_end":12563870,"line_start":13,"line_end":13,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::instance::Instance::name","value":"std::option::Option<ast::token::NameAnnotation<'a>>","parent":{"krate":0,"index":6246},"children":[],"decl_id":null,"docs":" An optional name for this function stored in the custom `name` section.\n","sig":null,"attributes":[{"value":"/ An optional name for this function stored in the custom `name` section.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\instance.rs","byte_start":12563782,"byte_end":12563857,"line_start":12,"line_end":12,"column_start":5,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":6251},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\instance.rs","byte_start":12564030,"byte_end":12564037,"line_start":16,"line_end":16,"column_start":9,"column_end":16},"name":"exports","qualname":"::ast::instance::Instance::exports","value":"ast::export::InlineExport<'a>","parent":{"krate":0,"index":6246},"children":[],"decl_id":null,"docs":" If present, inline export annotations which indicate names this\n definition should be exported under.\n","sig":null,"attributes":[{"value":"/ If present, inline export annotations which indicate names this","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\instance.rs","byte_start":12563909,"byte_end":12563976,"line_start":14,"line_end":14,"column_start":5,"column_end":72}},{"value":"/ definition should be exported under.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\instance.rs","byte_start":12563981,"byte_end":12564021,"line_start":15,"line_end":15,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":6252},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\instance.rs","byte_start":12564150,"byte_end":12564154,"line_start":18,"line_end":18,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::instance::Instance::kind","value":"ast::instance::InstanceKind<'a>","parent":{"krate":0,"index":6246},"children":[],"decl_id":null,"docs":" What kind of instance this is, be it an inline-defined or imported one.\n","sig":null,"attributes":[{"value":"/ What kind of instance this is, be it an inline-defined or imported one.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\instance.rs","byte_start":12564066,"byte_end":12564141,"line_start":17,"line_end":17,"column_start":5,"column_end":80}}]},{"kind":"StructVariant","id":{"krate":0,"index":6258},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\instance.rs","byte_start":12564354,"byte_end":12564360,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"Import","qualname":"::ast::instance::InstanceKind::Import","value":"InstanceKind::Import { import, ty }","parent":{"krate":0,"index":6256},"children":[],"decl_id":null,"docs":" An instance which is actually defined as an import, such as:\n","sig":null,"attributes":[{"value":"/ An instance which is actually defined as an import, such as:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\instance.rs","byte_start":12564285,"byte_end":12564349,"line_start":24,"line_end":24,"column_start":5,"column_end":69}}]},{"kind":"StructVariant","id":{"krate":0,"index":6261},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\instance.rs","byte_start":12564614,"byte_end":12564620,"line_start":33,"line_end":33,"column_start":5,"column_end":11},"name":"Inline","qualname":"::ast::instance::InstanceKind::Inline","value":"InstanceKind::Inline { module, args }","parent":{"krate":0,"index":6256},"children":[],"decl_id":null,"docs":" Instances whose instantiation is defined inline.\n","sig":null,"attributes":[{"value":"/ Instances whose instantiation is defined inline.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\instance.rs","byte_start":12564557,"byte_end":12564609,"line_start":32,"line_end":32,"column_start":5,"column_end":57}}]},{"kind":"Enum","id":{"krate":0,"index":6256},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\instance.rs","byte_start":12564262,"byte_end":12564274,"line_start":23,"line_end":23,"column_start":10,"column_end":22},"name":"InstanceKind","qualname":"::ast::instance::InstanceKind","value":"pub enum InstanceKind<'a> {\n    Import {\n        import: ast::InlineImport,\n        ty: ast::TypeUse,\n    },\n    Inline {\n        module: ast::ItemRef,\n        args: Vec<InstanceArg>,\n    },\n}","parent":null,"children":[{"krate":0,"index":6258},{"krate":0,"index":6261}],"decl_id":null,"docs":" Possible ways to define a instance in the text format.\n","sig":null,"attributes":[{"value":"/ Possible ways to define a instance in the text format.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\instance.rs","byte_start":12564177,"byte_end":12564235,"line_start":21,"line_end":21,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":6267},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\instance.rs","byte_start":12564912,"byte_end":12564923,"line_start":44,"line_end":44,"column_start":12,"column_end":23},"name":"InstanceArg","qualname":"::ast::instance::InstanceArg","value":"InstanceArg { name, index }","parent":null,"children":[{"krate":0,"index":6269},{"krate":0,"index":6270}],"decl_id":null,"docs":" Arguments to the `instantiate` instruction\n","sig":null,"attributes":[{"value":"/ Arguments to the `instantiate` instruction","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\instance.rs","byte_start":12564814,"byte_end":12564860,"line_start":41,"line_end":41,"column_start":1,"column_end":47}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\instance.rs","byte_start":12564878,"byte_end":12564900,"line_start":43,"line_end":43,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":6269},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\instance.rs","byte_start":12564938,"byte_end":12564942,"line_start":45,"line_end":45,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::instance::InstanceArg::name","value":"&'a str","parent":{"krate":0,"index":6267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6270},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\instance.rs","byte_start":12564961,"byte_end":12564966,"line_start":46,"line_end":46,"column_start":9,"column_end":14},"name":"index","qualname":"::ast::instance::InstanceArg::index","value":"ast::token::ItemRef<'a, ast::export::ExportKind>","parent":{"krate":0,"index":6267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6274},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12566392,"byte_end":12566398,"line_start":6,"line_end":6,"column_start":12,"column_end":18},"name":"Memory","qualname":"::ast::memory::Memory","value":"Memory { span, id, name, exports, kind }","parent":null,"children":[{"krate":0,"index":6276},{"krate":0,"index":6277},{"krate":0,"index":6278},{"krate":0,"index":6279},{"krate":0,"index":6280}],"decl_id":null,"docs":" A defined WebAssembly memory instance inside of a module.\n","sig":null,"attributes":[{"value":"/ A defined WebAssembly memory instance inside of a module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12566302,"byte_end":12566363,"line_start":4,"line_end":4,"column_start":1,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":6276},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12566453,"byte_end":12566457,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::memory::Memory::span","value":"ast::token::Span","parent":{"krate":0,"index":6274},"children":[],"decl_id":null,"docs":" Where this `memory` was defined\n","sig":null,"attributes":[{"value":"/ Where this `memory` was defined","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12566409,"byte_end":12566444,"line_start":7,"line_end":7,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":6277},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12566531,"byte_end":12566533,"line_start":10,"line_end":10,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::memory::Memory::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":6274},"children":[],"decl_id":null,"docs":" An optional name to refer to this memory by.\n","sig":null,"attributes":[{"value":"/ An optional name to refer to this memory by.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12566474,"byte_end":12566522,"line_start":9,"line_end":9,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":6278},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12566644,"byte_end":12566648,"line_start":12,"line_end":12,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::memory::Memory::name","value":"std::option::Option<ast::token::NameAnnotation<'a>>","parent":{"krate":0,"index":6274},"children":[],"decl_id":null,"docs":" An optional name for this function stored in the custom `name` section.\n","sig":null,"attributes":[{"value":"/ An optional name for this function stored in the custom `name` section.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12566560,"byte_end":12566635,"line_start":11,"line_end":11,"column_start":5,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":6279},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12566808,"byte_end":12566815,"line_start":15,"line_end":15,"column_start":9,"column_end":16},"name":"exports","qualname":"::ast::memory::Memory::exports","value":"ast::export::InlineExport<'a>","parent":{"krate":0,"index":6274},"children":[],"decl_id":null,"docs":" If present, inline export annotations which indicate names this\n definition should be exported under.\n","sig":null,"attributes":[{"value":"/ If present, inline export annotations which indicate names this","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12566687,"byte_end":12566754,"line_start":13,"line_end":13,"column_start":5,"column_end":72}},{"value":"/ definition should be exported under.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12566759,"byte_end":12566799,"line_start":14,"line_end":14,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":6280},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12566898,"byte_end":12566902,"line_start":17,"line_end":17,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::memory::Memory::kind","value":"ast::memory::MemoryKind<'a>","parent":{"krate":0,"index":6274},"children":[],"decl_id":null,"docs":" How this memory is defined in the module.\n","sig":null,"attributes":[{"value":"/ How this memory is defined in the module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12566844,"byte_end":12566889,"line_start":16,"line_end":16,"column_start":5,"column_end":50}}]},{"kind":"StructVariant","id":{"krate":0,"index":6286},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12567127,"byte_end":12567133,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"Import","qualname":"::ast::memory::MemoryKind::Import","value":"MemoryKind::Import { import, ty }","parent":{"krate":0,"index":6284},"children":[],"decl_id":null,"docs":" This memory is actually an inlined import definition.\n","sig":null,"attributes":[{"value":"/ This memory is actually an inlined import definition.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12567038,"byte_end":12567095,"line_start":23,"line_end":23,"column_start":5,"column_end":62}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12567100,"byte_end":12567122,"line_start":24,"line_end":24,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6289},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12567295,"byte_end":12567301,"line_start":31,"line_end":31,"column_start":5,"column_end":11},"name":"Normal","qualname":"::ast::memory::MemoryKind::Normal","value":"MemoryKind::Normal(ast::MemoryType)","parent":{"krate":0,"index":6284},"children":[],"decl_id":null,"docs":" A typical memory definition which simply says the limits of the memory\n","sig":null,"attributes":[{"value":"/ A typical memory definition which simply says the limits of the memory","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12567216,"byte_end":12567290,"line_start":30,"line_end":30,"column_start":5,"column_end":79}}]},{"kind":"StructVariant","id":{"krate":0,"index":6292},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12567393,"byte_end":12567399,"line_start":34,"line_end":34,"column_start":5,"column_end":11},"name":"Inline","qualname":"::ast::memory::MemoryKind::Inline","value":"MemoryKind::Inline { is_32, data }","parent":{"krate":0,"index":6284},"children":[],"decl_id":null,"docs":" The data of this memory, starting from 0, explicitly listed\n","sig":null,"attributes":[{"value":"/ The data of this memory, starting from 0, explicitly listed","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12567325,"byte_end":12567388,"line_start":33,"line_end":33,"column_start":5,"column_end":68}}]},{"kind":"Enum","id":{"krate":0,"index":6284},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12567017,"byte_end":12567027,"line_start":22,"line_end":22,"column_start":10,"column_end":20},"name":"MemoryKind","qualname":"::ast::memory::MemoryKind","value":"pub enum MemoryKind<'a> {\n    Import {\n        import: ast::InlineImport,\n        ty: ast::MemoryType,\n    },\n    Normal(ast::MemoryType),\n    Inline {\n        is_32: bool,\n        data: Vec<DataVal>,\n    },\n}","parent":null,"children":[{"krate":0,"index":6286},{"krate":0,"index":6289},{"krate":0,"index":6292}],"decl_id":null,"docs":" Different syntactical ways a memory can be defined in a module.\n","sig":null,"attributes":[{"value":"/ Different syntactical ways a memory can be defined in a module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12566923,"byte_end":12566990,"line_start":20,"line_end":20,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6298},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12569264,"byte_end":12569268,"line_start":94,"line_end":94,"column_start":12,"column_end":16},"name":"Data","qualname":"::ast::memory::Data","value":"Data { span, id, name, kind, data }","parent":null,"children":[{"krate":0,"index":6300},{"krate":0,"index":6301},{"krate":0,"index":6302},{"krate":0,"index":6303},{"krate":0,"index":6304}],"decl_id":null,"docs":" A `data` directive in a WebAssembly module.\n","sig":null,"attributes":[{"value":"/ A `data` directive in a WebAssembly module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12569188,"byte_end":12569235,"line_start":92,"line_end":92,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":6300},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12569321,"byte_end":12569325,"line_start":96,"line_end":96,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::memory::Data::span","value":"ast::token::Span","parent":{"krate":0,"index":6298},"children":[],"decl_id":null,"docs":" Where this `data` was defined\n","sig":null,"attributes":[{"value":"/ Where this `data` was defined","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12569279,"byte_end":12569312,"line_start":95,"line_end":95,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":6301},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12569394,"byte_end":12569396,"line_start":99,"line_end":99,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::memory::Data::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":6298},"children":[],"decl_id":null,"docs":" The optional name of this data segment\n","sig":null,"attributes":[{"value":"/ The optional name of this data segment","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12569343,"byte_end":12569385,"line_start":98,"line_end":98,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":6302},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12569504,"byte_end":12569508,"line_start":102,"line_end":102,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::memory::Data::name","value":"std::option::Option<ast::token::NameAnnotation<'a>>","parent":{"krate":0,"index":6298},"children":[],"decl_id":null,"docs":" An optional name for this data stored in the custom `name` section.\n","sig":null,"attributes":[{"value":"/ An optional name for this data stored in the custom `name` section.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12569424,"byte_end":12569495,"line_start":101,"line_end":101,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":6303},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12569607,"byte_end":12569611,"line_start":105,"line_end":105,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::memory::Data::kind","value":"ast::memory::DataKind<'a>","parent":{"krate":0,"index":6298},"children":[],"decl_id":null,"docs":" Whether this data segment is passive or active\n","sig":null,"attributes":[{"value":"/ Whether this data segment is passive or active","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12569548,"byte_end":12569598,"line_start":104,"line_end":104,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":6304},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12569740,"byte_end":12569744,"line_start":109,"line_end":109,"column_start":9,"column_end":13},"name":"data","qualname":"::ast::memory::Data::data","value":"std::vec::Vec<ast::memory::DataVal<'a>>","parent":{"krate":0,"index":6298},"children":[],"decl_id":null,"docs":" Bytes for this `Data` segment, viewed as the concatenation of all the\n contained slices.\n","sig":null,"attributes":[{"value":"/ Bytes for this `Data` segment, viewed as the concatenation of all the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12569632,"byte_end":12569705,"line_start":107,"line_end":107,"column_start":5,"column_end":78}},{"value":"/ contained slices.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12569710,"byte_end":12569731,"line_start":108,"line_end":108,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6310},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12569997,"byte_end":12570004,"line_start":117,"line_end":117,"column_start":5,"column_end":12},"name":"Passive","qualname":"::ast::memory::DataKind::Passive","value":"DataKind::Passive","parent":{"krate":0,"index":6308},"children":[],"decl_id":null,"docs":" A passive data segment which isn't associated with a memory and is\n referenced from various instructions.\n","sig":null,"attributes":[{"value":"/ A passive data segment which isn't associated with a memory and is","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12569876,"byte_end":12569946,"line_start":115,"line_end":115,"column_start":5,"column_end":75}},{"value":"/ referenced from various instructions.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12569951,"byte_end":12569992,"line_start":116,"line_end":116,"column_start":5,"column_end":46}}]},{"kind":"StructVariant","id":{"krate":0,"index":6312},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12570131,"byte_end":12570137,"line_start":121,"line_end":121,"column_start":5,"column_end":11},"name":"Active","qualname":"::ast::memory::DataKind::Active","value":"DataKind::Active { memory, offset }","parent":{"krate":0,"index":6308},"children":[],"decl_id":null,"docs":" An active data segment which is associated and loaded into a particular\n memory on module instantiation.\n","sig":null,"attributes":[{"value":"/ An active data segment which is associated and loaded into a particular","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12570011,"byte_end":12570086,"line_start":119,"line_end":119,"column_start":5,"column_end":80}},{"value":"/ memory on module instantiation.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12570091,"byte_end":12570126,"line_start":120,"line_end":120,"column_start":5,"column_end":40}}]},{"kind":"Enum","id":{"krate":0,"index":6308},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12569857,"byte_end":12569865,"line_start":114,"line_end":114,"column_start":10,"column_end":18},"name":"DataKind","qualname":"::ast::memory::DataKind","value":"pub enum DataKind<'a> {\n    Passive,\n    Active {\n        memory: ast::ItemRef,\n        offset: ast::Expression,\n    },\n}","parent":null,"children":[{"krate":0,"index":6310},{"krate":0,"index":6312}],"decl_id":null,"docs":" Different kinds of data segments, either passive or active.\n","sig":null,"attributes":[{"value":"/ Different kinds of data segments, either passive or active.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12569767,"byte_end":12569830,"line_start":112,"line_end":112,"column_start":1,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6320},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12573490,"byte_end":12573496,"line_start":215,"line_end":215,"column_start":5,"column_end":11},"name":"String","qualname":"::ast::memory::DataVal::String","value":"DataVal::String(&'a [u8])","parent":{"krate":0,"index":6318},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6323},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12573512,"byte_end":12573520,"line_start":216,"line_end":216,"column_start":5,"column_end":13},"name":"Integral","qualname":"::ast::memory::DataVal::Integral","value":"DataVal::Integral(Vec<u8>)","parent":{"krate":0,"index":6318},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6318},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12573472,"byte_end":12573479,"line_start":214,"line_end":214,"column_start":10,"column_end":17},"name":"DataVal","qualname":"::ast::memory::DataVal","value":"pub enum DataVal<'a> { String(&'a [u8]), Integral(Vec<u8>), }","parent":null,"children":[{"krate":0,"index":6320},{"krate":0,"index":6323}],"decl_id":null,"docs":" Differnet ways the value of a data segment can be defined.\n","sig":null,"attributes":[{"value":"/ Differnet ways the value of a data segment can be defined.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12573360,"byte_end":12573422,"line_start":211,"line_end":211,"column_start":1,"column_end":63}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12573440,"byte_end":12573462,"line_start":213,"line_end":213,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1730},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12573659,"byte_end":12573662,"line_start":222,"line_end":222,"column_start":12,"column_end":15},"name":"len","qualname":"<DataVal>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the length, in bytes, of the memory used to represent this data\n value.\n","sig":null,"attributes":[{"value":"/ Returns the length, in bytes, of the memory used to represent this data","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12573557,"byte_end":12573632,"line_start":220,"line_end":220,"column_start":5,"column_end":80}},{"value":"/ value.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12573637,"byte_end":12573647,"line_start":221,"line_end":221,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1731},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12573895,"byte_end":12573904,"line_start":230,"line_end":230,"column_start":12,"column_end":21},"name":"push_onto","qualname":"<DataVal>::push_onto","value":"pub fn push_onto(&Self, &mut Vec<u8>)","parent":null,"children":[],"decl_id":null,"docs":" Pushes the value of this data value onto the provided list of bytes.\n","sig":null,"attributes":[{"value":"/ Pushes the value of this data value onto the provided list of bytes.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12573811,"byte_end":12573883,"line_start":229,"line_end":229,"column_start":5,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":6329},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12576408,"byte_end":12576411,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"Wat","qualname":"::ast::module::Wat","value":"Wat { module }","parent":null,"children":[{"krate":0,"index":6331}],"decl_id":null,"docs":" A `*.wat` file parser, or a parser for one parenthesized module.","sig":null,"attributes":[{"value":"/ A `*.wat` file parser, or a parser for one parenthesized module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12576102,"byte_end":12576170,"line_start":6,"line_end":6,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12576171,"byte_end":12576174,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is the top-level type which you'll frequently parse when working with","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12576175,"byte_end":12576253,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ this crate. A `*.wat` file is either one `module` s-expression or a sequence","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12576254,"byte_end":12576334,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ of s-expressions that are module fields.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12576335,"byte_end":12576379,"line_start":10,"line_end":10,"column_start":1,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":6331},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12576453,"byte_end":12576459,"line_start":14,"line_end":14,"column_start":9,"column_end":15},"name":"module","qualname":"::ast::module::Wat::module","value":"ast::module::Module<'a>","parent":{"krate":0,"index":6329},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12576422,"byte_end":12576444,"line_start":13,"line_end":13,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":6335},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12577261,"byte_end":12577267,"line_start":41,"line_end":41,"column_start":12,"column_end":18},"name":"Module","qualname":"::ast::module::Module","value":"Module { span, id, name, kind }","parent":null,"children":[{"krate":0,"index":6337},{"krate":0,"index":6338},{"krate":0,"index":6339},{"krate":0,"index":6340}],"decl_id":null,"docs":" A parsed WebAssembly module.\n","sig":null,"attributes":[{"value":"/ A parsed WebAssembly module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12577200,"byte_end":12577232,"line_start":39,"line_end":39,"column_start":1,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":6337},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12577322,"byte_end":12577326,"line_start":43,"line_end":43,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::module::Module::span","value":"ast::token::Span","parent":{"krate":0,"index":6335},"children":[],"decl_id":null,"docs":" Where this `module` was defined\n","sig":null,"attributes":[{"value":"/ Where this `module` was defined","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12577278,"byte_end":12577313,"line_start":42,"line_end":42,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":6338},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12577402,"byte_end":12577404,"line_start":45,"line_end":45,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::module::Module::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":6335},"children":[],"decl_id":null,"docs":" An optional identifier this module is known by\n","sig":null,"attributes":[{"value":"/ An optional identifier this module is known by","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12577343,"byte_end":12577393,"line_start":44,"line_end":44,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":6339},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12577490,"byte_end":12577494,"line_start":47,"line_end":47,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::module::Module::name","value":"std::option::Option<ast::token::NameAnnotation<'a>>","parent":{"krate":0,"index":6335},"children":[],"decl_id":null,"docs":" An optional `@name` annotation for this module\n","sig":null,"attributes":[{"value":"/ An optional `@name` annotation for this module","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12577431,"byte_end":12577481,"line_start":46,"line_end":46,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":6340},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12577585,"byte_end":12577589,"line_start":49,"line_end":49,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::module::Module::kind","value":"ast::module::ModuleKind<'a>","parent":{"krate":0,"index":6335},"children":[],"decl_id":null,"docs":" What kind of module this was parsed as.\n","sig":null,"attributes":[{"value":"/ What kind of module this was parsed as.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12577533,"byte_end":12577576,"line_start":48,"line_end":48,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6346},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12577770,"byte_end":12577774,"line_start":56,"line_end":56,"column_start":5,"column_end":9},"name":"Text","qualname":"::ast::module::ModuleKind::Text","value":"ModuleKind::Text(Vec<ModuleField>)","parent":{"krate":0,"index":6344},"children":[],"decl_id":null,"docs":" A module defined in the textual s-expression format.\n","sig":null,"attributes":[{"value":"/ A module defined in the textual s-expression format.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12577709,"byte_end":12577765,"line_start":55,"line_end":55,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6349},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12577893,"byte_end":12577899,"line_start":59,"line_end":59,"column_start":5,"column_end":11},"name":"Binary","qualname":"::ast::module::ModuleKind::Binary","value":"ModuleKind::Binary(Vec<&'a [u8]>)","parent":{"krate":0,"index":6344},"children":[],"decl_id":null,"docs":" A module that had its raw binary bytes defined via the `binary`\n directive.\n","sig":null,"attributes":[{"value":"/ A module that had its raw binary bytes defined via the `binary`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12577802,"byte_end":12577869,"line_start":57,"line_end":57,"column_start":5,"column_end":72}},{"value":"/ directive.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12577874,"byte_end":12577888,"line_start":58,"line_end":58,"column_start":5,"column_end":19}}]},{"kind":"Enum","id":{"krate":0,"index":6344},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12577688,"byte_end":12577698,"line_start":54,"line_end":54,"column_start":10,"column_end":20},"name":"ModuleKind","qualname":"::ast::module::ModuleKind","value":"pub enum ModuleKind<'a> { Text(Vec<ModuleField>), Binary(Vec<&'a [u8]>), }","parent":null,"children":[{"krate":0,"index":6346},{"krate":0,"index":6349}],"decl_id":null,"docs":" The different kinds of ways to define a module.\n","sig":null,"attributes":[{"value":"/ The different kinds of ways to define a module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12577610,"byte_end":12577661,"line_start":52,"line_end":52,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1779},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12579192,"byte_end":12579199,"line_start":86,"line_end":86,"column_start":12,"column_end":19},"name":"resolve","qualname":"<Module>::resolve","value":"pub fn resolve(&mut Self) -> std::result::Result<Names, crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Performs a name resolution pass on this [`Module`], resolving all\n symbolic names to indices.","sig":null,"attributes":[{"value":"/ Performs a name resolution pass on this [`Module`], resolving all","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12577945,"byte_end":12578014,"line_start":63,"line_end":63,"column_start":5,"column_end":74}},{"value":"/ symbolic names to indices.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12578019,"byte_end":12578049,"line_start":64,"line_end":64,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12578054,"byte_end":12578057,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ The WAT format contains a number of shorthands to make it easier to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12578062,"byte_end":12578133,"line_start":66,"line_end":66,"column_start":5,"column_end":76}},{"value":"/ write, such as inline exports, inline imports, inline type definitions,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12578138,"byte_end":12578213,"line_start":67,"line_end":67,"column_start":5,"column_end":80}},{"value":"/ etc. Additionally it allows using symbolic names such as `$foo` instead","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12578218,"byte_end":12578293,"line_start":68,"line_end":68,"column_start":5,"column_end":80}},{"value":"/ of using indices. This module will postprocess an AST to remove all of","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12578298,"byte_end":12578372,"line_start":69,"line_end":69,"column_start":5,"column_end":79}},{"value":"/ this syntactic sugar, preparing the AST for binary emission.  This is","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12578377,"byte_end":12578450,"line_start":70,"line_end":70,"column_start":5,"column_end":78}},{"value":"/ where expansion and name resolution happens.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12578455,"byte_end":12578503,"line_start":71,"line_end":71,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12578508,"byte_end":12578511,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ This function will mutate the AST of this [`Module`] and replace all","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12578516,"byte_end":12578588,"line_start":73,"line_end":73,"column_start":5,"column_end":77}},{"value":"/ [`super::Index`] arguments with `Index::Num`. This will also expand inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12578593,"byte_end":12578671,"line_start":74,"line_end":74,"column_start":5,"column_end":83}},{"value":"/ exports/imports listed on fields and handle various other shorthands of","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12578676,"byte_end":12578751,"line_start":75,"line_end":75,"column_start":5,"column_end":80}},{"value":"/ the text format.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12578756,"byte_end":12578776,"line_start":76,"line_end":76,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12578781,"byte_end":12578784,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ If successful the AST was modified to be ready for binary encoding. A","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12578789,"byte_end":12578862,"line_start":78,"line_end":78,"column_start":5,"column_end":78}},{"value":"/ [`Names`] structure is also returned so if you'd like to do your own","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12578867,"byte_end":12578939,"line_start":79,"line_end":79,"column_start":5,"column_end":77}},{"value":"/ name lookups on the result you can do so as well.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12578944,"byte_end":12578997,"line_start":80,"line_end":80,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12579002,"byte_end":12579005,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12579010,"byte_end":12579022,"line_start":82,"line_end":82,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12579027,"byte_end":12579030,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ If an error happens during resolution, such a name resolution error or","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12579035,"byte_end":12579109,"line_start":84,"line_end":84,"column_start":5,"column_end":79}},{"value":"/ items are found in the wrong order, then an error is returned.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12579114,"byte_end":12579180,"line_start":85,"line_end":85,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1780},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12580380,"byte_end":12580386,"line_start":114,"line_end":114,"column_start":12,"column_end":18},"name":"encode","qualname":"<Module>::encode","value":"pub fn encode(&mut Self) -> std::result::Result<Vec<u8>, crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Encodes this [`Module`] to its binary form.","sig":null,"attributes":[{"value":"/ Encodes this [`Module`] to its binary form.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12579310,"byte_end":12579357,"line_start":90,"line_end":90,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12579362,"byte_end":12579365,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ This function will take the textual representation in [`Module`] and","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12579370,"byte_end":12579442,"line_start":92,"line_end":92,"column_start":5,"column_end":77}},{"value":"/ perform all steps necessary to convert it to a binary WebAssembly","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12579447,"byte_end":12579516,"line_start":93,"line_end":93,"column_start":5,"column_end":74}},{"value":"/ module, suitable for writing to a `*.wasm` file. This function may","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12579521,"byte_end":12579591,"line_start":94,"line_end":94,"column_start":5,"column_end":75}},{"value":"/ internally modify the [`Module`], for example:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12579596,"byte_end":12579646,"line_start":95,"line_end":95,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12579651,"byte_end":12579654,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ * Name resolution is performed to ensure that `Index::Id` isn't present","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12579659,"byte_end":12579734,"line_start":97,"line_end":97,"column_start":5,"column_end":80}},{"value":"/   anywhere in the AST.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12579739,"byte_end":12579765,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12579770,"byte_end":12579773,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ * Inline shorthands such as imports/exports/types are all expanded to be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12579778,"byte_end":12579854,"line_start":100,"line_end":100,"column_start":5,"column_end":81}},{"value":"/   dedicated fields of the module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12579859,"byte_end":12579896,"line_start":101,"line_end":101,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12579901,"byte_end":12579904,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ * Module fields may be shuffled around to preserve index ordering from","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12579909,"byte_end":12579983,"line_start":103,"line_end":103,"column_start":5,"column_end":79}},{"value":"/   expansions.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12579988,"byte_end":12580005,"line_start":104,"line_end":104,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12580010,"byte_end":12580013,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ After all of this expansion has happened the module will be converted to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12580018,"byte_end":12580094,"line_start":106,"line_end":106,"column_start":5,"column_end":81}},{"value":"/ its binary form and returned as a `Vec<u8>`. This is then suitable to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12580099,"byte_end":12580172,"line_start":107,"line_end":107,"column_start":5,"column_end":78}},{"value":"/ hand off to other wasm runtimes and such.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12580177,"byte_end":12580222,"line_start":108,"line_end":108,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12580227,"byte_end":12580230,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12580235,"byte_end":12580247,"line_start":110,"line_end":110,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12580252,"byte_end":12580255,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ This function can return an error for name resolution errors and other","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12580260,"byte_end":12580334,"line_start":112,"line_end":112,"column_start":5,"column_end":79}},{"value":"/ expansion-related errors.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12580339,"byte_end":12580368,"line_start":113,"line_end":113,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6357},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12581844,"byte_end":12581848,"line_start":165,"line_end":165,"column_start":5,"column_end":9},"name":"Type","qualname":"::ast::module::ModuleField::Type","value":"ModuleField::Type(ast::Type)","parent":{"krate":0,"index":6355},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6360},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12581869,"byte_end":12581875,"line_start":166,"line_end":166,"column_start":5,"column_end":11},"name":"Import","qualname":"::ast::module::ModuleField::Import","value":"ModuleField::Import(ast::Import)","parent":{"krate":0,"index":6355},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6363},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12581898,"byte_end":12581902,"line_start":167,"line_end":167,"column_start":5,"column_end":9},"name":"Func","qualname":"::ast::module::ModuleField::Func","value":"ModuleField::Func(ast::Func)","parent":{"krate":0,"index":6355},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6366},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12581923,"byte_end":12581928,"line_start":168,"line_end":168,"column_start":5,"column_end":10},"name":"Table","qualname":"::ast::module::ModuleField::Table","value":"ModuleField::Table(ast::Table)","parent":{"krate":0,"index":6355},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6369},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12581950,"byte_end":12581956,"line_start":169,"line_end":169,"column_start":5,"column_end":11},"name":"Memory","qualname":"::ast::module::ModuleField::Memory","value":"ModuleField::Memory(ast::Memory)","parent":{"krate":0,"index":6355},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6372},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12581979,"byte_end":12581985,"line_start":170,"line_end":170,"column_start":5,"column_end":11},"name":"Global","qualname":"::ast::module::ModuleField::Global","value":"ModuleField::Global(ast::Global)","parent":{"krate":0,"index":6355},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6375},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12582008,"byte_end":12582014,"line_start":171,"line_end":171,"column_start":5,"column_end":11},"name":"Export","qualname":"::ast::module::ModuleField::Export","value":"ModuleField::Export(ast::Export)","parent":{"krate":0,"index":6355},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6378},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12582037,"byte_end":12582042,"line_start":172,"line_end":172,"column_start":5,"column_end":10},"name":"Start","qualname":"::ast::module::ModuleField::Start","value":"ModuleField::Start(ast::ItemRef)","parent":{"krate":0,"index":6355},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6381},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12582076,"byte_end":12582080,"line_start":173,"line_end":173,"column_start":5,"column_end":9},"name":"Elem","qualname":"::ast::module::ModuleField::Elem","value":"ModuleField::Elem(ast::Elem)","parent":{"krate":0,"index":6355},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6384},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12582101,"byte_end":12582105,"line_start":174,"line_end":174,"column_start":5,"column_end":9},"name":"Data","qualname":"::ast::module::ModuleField::Data","value":"ModuleField::Data(ast::Data)","parent":{"krate":0,"index":6355},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6387},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12582126,"byte_end":12582129,"line_start":175,"line_end":175,"column_start":5,"column_end":8},"name":"Tag","qualname":"::ast::module::ModuleField::Tag","value":"ModuleField::Tag(ast::Tag)","parent":{"krate":0,"index":6355},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6390},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12582149,"byte_end":12582155,"line_start":176,"line_end":176,"column_start":5,"column_end":11},"name":"Custom","qualname":"::ast::module::ModuleField::Custom","value":"ModuleField::Custom(ast::Custom)","parent":{"krate":0,"index":6355},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6393},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12582178,"byte_end":12582186,"line_start":177,"line_end":177,"column_start":5,"column_end":13},"name":"Instance","qualname":"::ast::module::ModuleField::Instance","value":"ModuleField::Instance(ast::Instance)","parent":{"krate":0,"index":6355},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6396},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12582211,"byte_end":12582223,"line_start":178,"line_end":178,"column_start":5,"column_end":17},"name":"NestedModule","qualname":"::ast::module::ModuleField::NestedModule","value":"ModuleField::NestedModule(ast::NestedModule)","parent":{"krate":0,"index":6355},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6399},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12582252,"byte_end":12582257,"line_start":179,"line_end":179,"column_start":5,"column_end":10},"name":"Alias","qualname":"::ast::module::ModuleField::Alias","value":"ModuleField::Alias(ast::Alias)","parent":{"krate":0,"index":6355},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6355},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12581822,"byte_end":12581833,"line_start":164,"line_end":164,"column_start":10,"column_end":21},"name":"ModuleField","qualname":"::ast::module::ModuleField","value":"pub enum ModuleField<'a> {\n    Type(ast::Type),\n    Import(ast::Import),\n    Func(ast::Func),\n    Table(ast::Table),\n    Memory(ast::Memory),\n    Global(ast::Global),\n    Export(ast::Export),\n    Start(ast::ItemRef),\n    Elem(ast::Elem),\n    Data(ast::Data),\n    Tag(ast::Tag),\n    Custom(ast::Custom),\n    Instance(ast::Instance),\n    NestedModule(ast::NestedModule),\n    Alias(ast::Alias),\n}","parent":null,"children":[{"krate":0,"index":6357},{"krate":0,"index":6360},{"krate":0,"index":6363},{"krate":0,"index":6366},{"krate":0,"index":6369},{"krate":0,"index":6372},{"krate":0,"index":6375},{"krate":0,"index":6378},{"krate":0,"index":6381},{"krate":0,"index":6384},{"krate":0,"index":6387},{"krate":0,"index":6390},{"krate":0,"index":6393},{"krate":0,"index":6396},{"krate":0,"index":6399}],"decl_id":null,"docs":" A listing of all possible fields that can make up a WebAssembly module.\n","sig":null,"attributes":[{"value":"/ A listing of all possible fields that can make up a WebAssembly module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12581697,"byte_end":12581772,"line_start":161,"line_end":161,"column_start":1,"column_end":76}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12581773,"byte_end":12581795,"line_start":162,"line_end":162,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6405},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\nested_module.rs","byte_start":12584634,"byte_end":12584646,"line_start":6,"line_end":6,"column_start":12,"column_end":24},"name":"NestedModule","qualname":"::ast::nested_module::NestedModule","value":"NestedModule { span, id, name, exports, kind }","parent":null,"children":[{"krate":0,"index":6407},{"krate":0,"index":6408},{"krate":0,"index":6409},{"krate":0,"index":6410},{"krate":0,"index":6411}],"decl_id":null,"docs":" A nested WebAssembly nested module to be created as part of a module.\n","sig":null,"attributes":[{"value":"/ A nested WebAssembly nested module to be created as part of a module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\nested_module.rs","byte_start":12584532,"byte_end":12584605,"line_start":4,"line_end":4,"column_start":1,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":6407},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\nested_module.rs","byte_start":12584709,"byte_end":12584713,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::nested_module::NestedModule::span","value":"ast::token::Span","parent":{"krate":0,"index":6405},"children":[],"decl_id":null,"docs":" Where this `nested module` was defined.\n","sig":null,"attributes":[{"value":"/ Where this `nested module` was defined.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\nested_module.rs","byte_start":12584657,"byte_end":12584700,"line_start":7,"line_end":7,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":6408},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\nested_module.rs","byte_start":12584839,"byte_end":12584841,"line_start":11,"line_end":11,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::nested_module::NestedModule::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":6405},"children":[],"decl_id":null,"docs":" An identifier that this nested module is resolved with (optionally) for name\n resolution.\n","sig":null,"attributes":[{"value":"/ An identifier that this nested module is resolved with (optionally) for name","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\nested_module.rs","byte_start":12584730,"byte_end":12584810,"line_start":9,"line_end":9,"column_start":5,"column_end":85}},{"value":"/ resolution.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\nested_module.rs","byte_start":12584815,"byte_end":12584830,"line_start":10,"line_end":10,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":6409},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\nested_module.rs","byte_start":12584950,"byte_end":12584954,"line_start":13,"line_end":13,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::nested_module::NestedModule::name","value":"std::option::Option<ast::token::NameAnnotation<'a>>","parent":{"krate":0,"index":6405},"children":[],"decl_id":null,"docs":" An optional name for this module stored in the custom `name` section.\n","sig":null,"attributes":[{"value":"/ An optional name for this module stored in the custom `name` section.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\nested_module.rs","byte_start":12584868,"byte_end":12584941,"line_start":12,"line_end":12,"column_start":5,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":6410},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\nested_module.rs","byte_start":12585114,"byte_end":12585121,"line_start":16,"line_end":16,"column_start":9,"column_end":16},"name":"exports","qualname":"::ast::nested_module::NestedModule::exports","value":"ast::export::InlineExport<'a>","parent":{"krate":0,"index":6405},"children":[],"decl_id":null,"docs":" If present, inline export annotations which indicate names this\n definition should be exported under.\n","sig":null,"attributes":[{"value":"/ If present, inline export annotations which indicate names this","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\nested_module.rs","byte_start":12584993,"byte_end":12585060,"line_start":14,"line_end":14,"column_start":5,"column_end":72}},{"value":"/ definition should be exported under.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\nested_module.rs","byte_start":12585065,"byte_end":12585105,"line_start":15,"line_end":15,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":6411},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\nested_module.rs","byte_start":12585239,"byte_end":12585243,"line_start":18,"line_end":18,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::nested_module::NestedModule::kind","value":"ast::nested_module::NestedModuleKind<'a>","parent":{"krate":0,"index":6405},"children":[],"decl_id":null,"docs":" What kind of nested module this is, be it an inline-defined or imported one.\n","sig":null,"attributes":[{"value":"/ What kind of nested module this is, be it an inline-defined or imported one.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\nested_module.rs","byte_start":12585150,"byte_end":12585230,"line_start":17,"line_end":17,"column_start":5,"column_end":85}}]},{"kind":"StructVariant","id":{"krate":0,"index":6417},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\nested_module.rs","byte_start":12585461,"byte_end":12585467,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"Import","qualname":"::ast::nested_module::NestedModuleKind::Import","value":"NestedModuleKind::Import { import, ty }","parent":{"krate":0,"index":6415},"children":[],"decl_id":null,"docs":" An nested module which is actually defined as an import, such as:\n","sig":null,"attributes":[{"value":"/ An nested module which is actually defined as an import, such as:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\nested_module.rs","byte_start":12585387,"byte_end":12585456,"line_start":24,"line_end":24,"column_start":5,"column_end":74}}]},{"kind":"StructVariant","id":{"krate":0,"index":6420},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\nested_module.rs","byte_start":12585744,"byte_end":12585750,"line_start":33,"line_end":33,"column_start":5,"column_end":11},"name":"Inline","qualname":"::ast::nested_module::NestedModuleKind::Inline","value":"NestedModuleKind::Inline { fields }","parent":{"krate":0,"index":6415},"children":[],"decl_id":null,"docs":" Nested modules whose instantiation is defined inline.\n","sig":null,"attributes":[{"value":"/ Nested modules whose instantiation is defined inline.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\nested_module.rs","byte_start":12585682,"byte_end":12585739,"line_start":32,"line_end":32,"column_start":5,"column_end":62}}]},{"kind":"Enum","id":{"krate":0,"index":6415},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\nested_module.rs","byte_start":12585360,"byte_end":12585376,"line_start":23,"line_end":23,"column_start":10,"column_end":26},"name":"NestedModuleKind","qualname":"::ast::nested_module::NestedModuleKind","value":"pub enum NestedModuleKind<'a> {\n    Import {\n        import: ast::InlineImport,\n        ty: ast::TypeUse,\n    },\n    Inline {\n        fields: Vec<ast::ModuleField>,\n    },\n}","parent":null,"children":[{"krate":0,"index":6417},{"krate":0,"index":6420}],"decl_id":null,"docs":" Possible ways to define a nested module in the text format.\n","sig":null,"attributes":[{"value":"/ Possible ways to define a nested module in the text format.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\nested_module.rs","byte_start":12585270,"byte_end":12585333,"line_start":21,"line_end":21,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":6425},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12588638,"byte_end":12588643,"line_start":6,"line_end":6,"column_start":12,"column_end":17},"name":"Table","qualname":"::ast::table::Table","value":"Table { span, id, name, exports, kind }","parent":null,"children":[{"krate":0,"index":6427},{"krate":0,"index":6428},{"krate":0,"index":6429},{"krate":0,"index":6430},{"krate":0,"index":6431}],"decl_id":null,"docs":" A WebAssembly `table` directive in a module.\n","sig":null,"attributes":[{"value":"/ A WebAssembly `table` directive in a module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12588561,"byte_end":12588609,"line_start":4,"line_end":4,"column_start":1,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":6427},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12588696,"byte_end":12588700,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::table::Table::span","value":"ast::token::Span","parent":{"krate":0,"index":6425},"children":[],"decl_id":null,"docs":" Where this table was defined.\n","sig":null,"attributes":[{"value":"/ Where this table was defined.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12588654,"byte_end":12588687,"line_start":7,"line_end":7,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":6428},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12588773,"byte_end":12588775,"line_start":10,"line_end":10,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::table::Table::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":6425},"children":[],"decl_id":null,"docs":" An optional name to refer to this table by.\n","sig":null,"attributes":[{"value":"/ An optional name to refer to this table by.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12588717,"byte_end":12588764,"line_start":9,"line_end":9,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6429},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12588886,"byte_end":12588890,"line_start":12,"line_end":12,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::table::Table::name","value":"std::option::Option<ast::token::NameAnnotation<'a>>","parent":{"krate":0,"index":6425},"children":[],"decl_id":null,"docs":" An optional name for this function stored in the custom `name` section.\n","sig":null,"attributes":[{"value":"/ An optional name for this function stored in the custom `name` section.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12588802,"byte_end":12588877,"line_start":11,"line_end":11,"column_start":5,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":6430},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12589050,"byte_end":12589057,"line_start":15,"line_end":15,"column_start":9,"column_end":16},"name":"exports","qualname":"::ast::table::Table::exports","value":"ast::export::InlineExport<'a>","parent":{"krate":0,"index":6425},"children":[],"decl_id":null,"docs":" If present, inline export annotations which indicate names this\n definition should be exported under.\n","sig":null,"attributes":[{"value":"/ If present, inline export annotations which indicate names this","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12588929,"byte_end":12588996,"line_start":13,"line_end":13,"column_start":5,"column_end":72}},{"value":"/ definition should be exported under.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12589001,"byte_end":12589041,"line_start":14,"line_end":14,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":6431},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12589149,"byte_end":12589153,"line_start":17,"line_end":17,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::table::Table::kind","value":"ast::table::TableKind<'a>","parent":{"krate":0,"index":6425},"children":[],"decl_id":null,"docs":" How this table is textually defined in the module.\n","sig":null,"attributes":[{"value":"/ How this table is textually defined in the module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12589086,"byte_end":12589140,"line_start":16,"line_end":16,"column_start":5,"column_end":59}}]},{"kind":"StructVariant","id":{"krate":0,"index":6437},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12589355,"byte_end":12589361,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"Import","qualname":"::ast::table::TableKind::Import","value":"TableKind::Import { import, ty }","parent":{"krate":0,"index":6435},"children":[],"decl_id":null,"docs":" This table is actually an inlined import definition.\n","sig":null,"attributes":[{"value":"/ This table is actually an inlined import definition.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12589267,"byte_end":12589323,"line_start":23,"line_end":23,"column_start":5,"column_end":61}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12589328,"byte_end":12589350,"line_start":24,"line_end":24,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6440},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12589525,"byte_end":12589531,"line_start":31,"line_end":31,"column_start":5,"column_end":11},"name":"Normal","qualname":"::ast::table::TableKind::Normal","value":"TableKind::Normal(ast::TableType)","parent":{"krate":0,"index":6435},"children":[],"decl_id":null,"docs":" A typical memory definition which simply says the limits of the table\n","sig":null,"attributes":[{"value":"/ A typical memory definition which simply says the limits of the table","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12589447,"byte_end":12589520,"line_start":30,"line_end":30,"column_start":5,"column_end":78}}]},{"kind":"StructVariant","id":{"krate":0,"index":6443},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12589634,"byte_end":12589640,"line_start":34,"line_end":34,"column_start":5,"column_end":11},"name":"Inline","qualname":"::ast::table::TableKind::Inline","value":"TableKind::Inline { elem, payload }","parent":{"krate":0,"index":6435},"children":[],"decl_id":null,"docs":" The elem segments of this table, starting from 0, explicitly listed\n","sig":null,"attributes":[{"value":"/ The elem segments of this table, starting from 0, explicitly listed","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12589558,"byte_end":12589629,"line_start":33,"line_end":33,"column_start":5,"column_end":76}}]},{"kind":"Enum","id":{"krate":0,"index":6435},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12589247,"byte_end":12589256,"line_start":22,"line_end":22,"column_start":10,"column_end":19},"name":"TableKind","qualname":"::ast::table::TableKind","value":"pub enum TableKind<'a> {\n    Import {\n        import: ast::InlineImport,\n        ty: ast::TableType,\n    },\n    Normal(ast::TableType),\n    Inline {\n        elem: ast::RefType,\n        payload: ElemPayload,\n    },\n}","parent":null,"children":[{"krate":0,"index":6437},{"krate":0,"index":6440},{"krate":0,"index":6443}],"decl_id":null,"docs":" Different ways to textually define a table.\n","sig":null,"attributes":[{"value":"/ Different ways to textually define a table.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12589173,"byte_end":12589220,"line_start":20,"line_end":20,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":6449},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12591316,"byte_end":12591320,"line_start":90,"line_end":90,"column_start":12,"column_end":16},"name":"Elem","qualname":"::ast::table::Elem","value":"Elem { span, id, name, kind, payload }","parent":null,"children":[{"krate":0,"index":6451},{"krate":0,"index":6452},{"krate":0,"index":6453},{"krate":0,"index":6454},{"krate":0,"index":6455}],"decl_id":null,"docs":" An `elem` segment in a WebAssembly module.\n","sig":null,"attributes":[{"value":"/ An `elem` segment in a WebAssembly module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12591241,"byte_end":12591287,"line_start":88,"line_end":88,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":6451},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12591374,"byte_end":12591378,"line_start":92,"line_end":92,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::table::Elem::span","value":"ast::token::Span","parent":{"krate":0,"index":6449},"children":[],"decl_id":null,"docs":" Where this `elem` was defined.\n","sig":null,"attributes":[{"value":"/ Where this `elem` was defined.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12591331,"byte_end":12591365,"line_start":91,"line_end":91,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":6452},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12591459,"byte_end":12591461,"line_start":94,"line_end":94,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::table::Elem::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":6449},"children":[],"decl_id":null,"docs":" An optional name by which to refer to this segment.\n","sig":null,"attributes":[{"value":"/ An optional name by which to refer to this segment.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12591395,"byte_end":12591450,"line_start":93,"line_end":93,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":6453},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12591571,"byte_end":12591575,"line_start":96,"line_end":96,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::table::Elem::name","value":"std::option::Option<ast::token::NameAnnotation<'a>>","parent":{"krate":0,"index":6449},"children":[],"decl_id":null,"docs":" An optional name for this element stored in the custom `name` section.\n","sig":null,"attributes":[{"value":"/ An optional name for this element stored in the custom `name` section.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12591488,"byte_end":12591562,"line_start":95,"line_end":95,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":6454},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12591674,"byte_end":12591678,"line_start":98,"line_end":98,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::table::Elem::kind","value":"ast::table::ElemKind<'a>","parent":{"krate":0,"index":6449},"children":[],"decl_id":null,"docs":" The way this segment was defined in the module.\n","sig":null,"attributes":[{"value":"/ The way this segment was defined in the module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12591614,"byte_end":12591665,"line_start":97,"line_end":97,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":6455},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12591778,"byte_end":12591785,"line_start":100,"line_end":100,"column_start":9,"column_end":16},"name":"payload","qualname":"::ast::table::Elem::payload","value":"ast::table::ElemPayload<'a>","parent":{"krate":0,"index":6449},"children":[],"decl_id":null,"docs":" The payload of this element segment, typically a list of functions.\n","sig":null,"attributes":[{"value":"/ The payload of this element segment, typically a list of functions.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12591698,"byte_end":12591769,"line_start":99,"line_end":99,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6461},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12592036,"byte_end":12592043,"line_start":108,"line_end":108,"column_start":5,"column_end":12},"name":"Passive","qualname":"::ast::table::ElemKind::Passive","value":"ElemKind::Passive","parent":{"krate":0,"index":6459},"children":[],"decl_id":null,"docs":" A passive segment that isn't associated with a table and can be used in\n various bulk-memory instructions.\n","sig":null,"attributes":[{"value":"/ A passive segment that isn't associated with a table and can be used in","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12591914,"byte_end":12591989,"line_start":106,"line_end":106,"column_start":5,"column_end":80}},{"value":"/ various bulk-memory instructions.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12591994,"byte_end":12592031,"line_start":107,"line_end":107,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6463},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12592145,"byte_end":12592153,"line_start":112,"line_end":112,"column_start":5,"column_end":13},"name":"Declared","qualname":"::ast::table::ElemKind::Declared","value":"ElemKind::Declared","parent":{"krate":0,"index":6459},"children":[],"decl_id":null,"docs":" A declared element segment that is purely used to declare function\n references.\n","sig":null,"attributes":[{"value":"/ A declared element segment that is purely used to declare function","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12592050,"byte_end":12592120,"line_start":110,"line_end":110,"column_start":5,"column_end":75}},{"value":"/ references.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12592125,"byte_end":12592140,"line_start":111,"line_end":111,"column_start":5,"column_end":20}}]},{"kind":"StructVariant","id":{"krate":0,"index":6465},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12592211,"byte_end":12592217,"line_start":115,"line_end":115,"column_start":5,"column_end":11},"name":"Active","qualname":"::ast::table::ElemKind::Active","value":"ElemKind::Active { table, offset }","parent":{"krate":0,"index":6459},"children":[],"decl_id":null,"docs":" An active segment associated with a table.\n","sig":null,"attributes":[{"value":"/ An active segment associated with a table.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12592160,"byte_end":12592206,"line_start":114,"line_end":114,"column_start":5,"column_end":51}}]},{"kind":"Enum","id":{"krate":0,"index":6459},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12591895,"byte_end":12591903,"line_start":105,"line_end":105,"column_start":10,"column_end":18},"name":"ElemKind","qualname":"::ast::table::ElemKind","value":"pub enum ElemKind<'a> {\n    Passive,\n    Declared,\n    Active {\n        table: ast::ItemRef,\n        offset: ast::Expression,\n    },\n}","parent":null,"children":[{"krate":0,"index":6461},{"krate":0,"index":6463},{"krate":0,"index":6465}],"decl_id":null,"docs":" Different ways to define an element segment in an mdoule.\n","sig":null,"attributes":[{"value":"/ Different ways to define an element segment in an mdoule.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12591807,"byte_end":12591868,"line_start":103,"line_end":103,"column_start":1,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6473},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12592615,"byte_end":12592622,"line_start":127,"line_end":127,"column_start":5,"column_end":12},"name":"Indices","qualname":"::ast::table::ElemPayload::Indices","value":"ElemPayload::Indices(Vec<ast::ItemRef>)","parent":{"krate":0,"index":6471},"children":[],"decl_id":null,"docs":" This element segment has a contiguous list of function indices\n","sig":null,"attributes":[{"value":"/ This element segment has a contiguous list of function indices","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12592544,"byte_end":12592610,"line_start":126,"line_end":126,"column_start":5,"column_end":71}}]},{"kind":"StructVariant","id":{"krate":0,"index":6476},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12592800,"byte_end":12592805,"line_start":131,"line_end":131,"column_start":5,"column_end":10},"name":"Exprs","qualname":"::ast::table::ElemPayload::Exprs","value":"ElemPayload::Exprs { ty, exprs }","parent":{"krate":0,"index":6471},"children":[],"decl_id":null,"docs":" This element segment has a list of optional function indices,\n represented as expressions using `ref.func` and `ref.null`.\n","sig":null,"attributes":[{"value":"/ This element segment has a list of optional function indices,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12592662,"byte_end":12592727,"line_start":129,"line_end":129,"column_start":5,"column_end":70}},{"value":"/ represented as expressions using `ref.func` and `ref.null`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12592732,"byte_end":12592795,"line_start":130,"line_end":130,"column_start":5,"column_end":68}}]},{"kind":"Enum","id":{"krate":0,"index":6471},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12592522,"byte_end":12592533,"line_start":125,"line_end":125,"column_start":10,"column_end":21},"name":"ElemPayload","qualname":"::ast::table::ElemPayload","value":"pub enum ElemPayload<'a> {\n    Indices(Vec<ast::ItemRef>),\n    Exprs {\n        ty: ast::RefType,\n        exprs: Vec<ast::Expression>,\n    },\n}","parent":null,"children":[{"krate":0,"index":6473},{"krate":0,"index":6476}],"decl_id":null,"docs":" Different ways to define the element segment payload in a module.\n","sig":null,"attributes":[{"value":"/ Different ways to define the element segment payload in a module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12592426,"byte_end":12592495,"line_start":123,"line_end":123,"column_start":1,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6484},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12596188,"byte_end":12596191,"line_start":9,"line_end":9,"column_start":5,"column_end":8},"name":"I32","qualname":"::ast::types::ValType::I32","value":"ValType::I32","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6486},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12596197,"byte_end":12596200,"line_start":10,"line_end":10,"column_start":5,"column_end":8},"name":"I64","qualname":"::ast::types::ValType::I64","value":"ValType::I64","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6488},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12596206,"byte_end":12596209,"line_start":11,"line_end":11,"column_start":5,"column_end":8},"name":"F32","qualname":"::ast::types::ValType::F32","value":"ValType::F32","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6490},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12596215,"byte_end":12596218,"line_start":12,"line_end":12,"column_start":5,"column_end":8},"name":"F64","qualname":"::ast::types::ValType::F64","value":"ValType::F64","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6492},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12596224,"byte_end":12596228,"line_start":13,"line_end":13,"column_start":5,"column_end":9},"name":"V128","qualname":"::ast::types::ValType::V128","value":"ValType::V128","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6494},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12596234,"byte_end":12596237,"line_start":14,"line_end":14,"column_start":5,"column_end":8},"name":"Ref","qualname":"::ast::types::ValType::Ref","value":"ValType::Ref(RefType)","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6497},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12596256,"byte_end":12596259,"line_start":15,"line_end":15,"column_start":5,"column_end":8},"name":"Rtt","qualname":"::ast::types::ValType::Rtt","value":"ValType::Rtt(Option<u32>, ast::Index)","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6482},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12596170,"byte_end":12596177,"line_start":8,"line_end":8,"column_start":10,"column_end":17},"name":"ValType","qualname":"::ast::types::ValType","value":"pub enum ValType<'a> {\n    I32,\n    I64,\n    F32,\n    F64,\n    V128,\n    Ref(RefType),\n    Rtt(Option<u32>, ast::Index),\n}","parent":null,"children":[{"krate":0,"index":6484},{"krate":0,"index":6486},{"krate":0,"index":6488},{"krate":0,"index":6490},{"krate":0,"index":6492},{"krate":0,"index":6494},{"krate":0,"index":6497}],"decl_id":null,"docs":" The value types for a wasm module.\n","sig":null,"attributes":[{"value":"/ The value types for a wasm module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12596048,"byte_end":12596086,"line_start":5,"line_end":5,"column_start":1,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12596087,"byte_end":12596109,"line_start":6,"line_end":6,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6526},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12598138,"byte_end":12598142,"line_start":75,"line_end":75,"column_start":5,"column_end":9},"name":"Func","qualname":"::ast::types::HeapType::Func","value":"HeapType::Func","parent":{"krate":0,"index":6524},"children":[],"decl_id":null,"docs":" An untyped function reference: funcref. This is part of the reference\n types proposal.\n","sig":null,"attributes":[{"value":"/ An untyped function reference: funcref. This is part of the reference","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12598036,"byte_end":12598109,"line_start":73,"line_end":73,"column_start":5,"column_end":78}},{"value":"/ types proposal.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12598114,"byte_end":12598133,"line_start":74,"line_end":74,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6528},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12598252,"byte_end":12598258,"line_start":78,"line_end":78,"column_start":5,"column_end":11},"name":"Extern","qualname":"::ast::types::HeapType::Extern","value":"HeapType::Extern","parent":{"krate":0,"index":6524},"children":[],"decl_id":null,"docs":" A reference to any host value: externref. This is part of the reference\n types proposal.\n","sig":null,"attributes":[{"value":"/ A reference to any host value: externref. This is part of the reference","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12598148,"byte_end":12598223,"line_start":76,"line_end":76,"column_start":5,"column_end":80}},{"value":"/ types proposal.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12598228,"byte_end":12598247,"line_start":77,"line_end":77,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6530},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12598357,"byte_end":12598360,"line_start":81,"line_end":81,"column_start":5,"column_end":8},"name":"Any","qualname":"::ast::types::HeapType::Any","value":"HeapType::Any","parent":{"krate":0,"index":6524},"children":[],"decl_id":null,"docs":" A reference to any reference value: anyref. This is part of the GC\n proposal.\n","sig":null,"attributes":[{"value":"/ A reference to any reference value: anyref. This is part of the GC","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12598264,"byte_end":12598334,"line_start":79,"line_end":79,"column_start":5,"column_end":75}},{"value":"/ proposal.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12598339,"byte_end":12598352,"line_start":80,"line_end":80,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6532},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12598477,"byte_end":12598479,"line_start":84,"line_end":84,"column_start":5,"column_end":7},"name":"Eq","qualname":"::ast::types::HeapType::Eq","value":"HeapType::Eq","parent":{"krate":0,"index":6524},"children":[],"decl_id":null,"docs":" A reference that has an identity that can be compared: eqref. This is\n part of the GC proposal.\n","sig":null,"attributes":[{"value":"/ A reference that has an identity that can be compared: eqref. This is","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12598366,"byte_end":12598439,"line_start":82,"line_end":82,"column_start":5,"column_end":78}},{"value":"/ part of the GC proposal.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12598444,"byte_end":12598472,"line_start":83,"line_end":83,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6534},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12598554,"byte_end":12598558,"line_start":86,"line_end":86,"column_start":5,"column_end":9},"name":"Data","qualname":"::ast::types::HeapType::Data","value":"HeapType::Data","parent":{"krate":0,"index":6524},"children":[],"decl_id":null,"docs":" A reference to a GC object. This is part of the GC proposal.\n","sig":null,"attributes":[{"value":"/ A reference to a GC object. This is part of the GC proposal.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12598485,"byte_end":12598549,"line_start":85,"line_end":85,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6536},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12598719,"byte_end":12598722,"line_start":89,"line_end":89,"column_start":5,"column_end":8},"name":"I31","qualname":"::ast::types::HeapType::I31","value":"HeapType::I31","parent":{"krate":0,"index":6524},"children":[],"decl_id":null,"docs":" An unboxed 31-bit integer: i31ref. This may be going away if there is no common\n supertype of all reference types. Part of the GC proposal.\n","sig":null,"attributes":[{"value":"/ An unboxed 31-bit integer: i31ref. This may be going away if there is no common","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12598564,"byte_end":12598647,"line_start":87,"line_end":87,"column_start":5,"column_end":88}},{"value":"/ supertype of all reference types. Part of the GC proposal.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12598652,"byte_end":12598714,"line_start":88,"line_end":88,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6538},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12598829,"byte_end":12598834,"line_start":92,"line_end":92,"column_start":5,"column_end":10},"name":"Index","qualname":"::ast::types::HeapType::Index","value":"HeapType::Index(ast::Index)","parent":{"krate":0,"index":6524},"children":[],"decl_id":null,"docs":" A reference to a function, struct, or array: ref T. This is part of the\n GC proposal.\n","sig":null,"attributes":[{"value":"/ A reference to a function, struct, or array: ref T. This is part of the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12598728,"byte_end":12598803,"line_start":90,"line_end":90,"column_start":5,"column_end":80}},{"value":"/ GC proposal.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12598808,"byte_end":12598824,"line_start":91,"line_end":91,"column_start":5,"column_end":21}}]},{"kind":"Enum","id":{"krate":0,"index":6524},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12598017,"byte_end":12598025,"line_start":72,"line_end":72,"column_start":10,"column_end":18},"name":"HeapType","qualname":"::ast::types::HeapType","value":"pub enum HeapType<'a> { Func, Extern, Any, Eq, Data, I31, Index(ast::Index), }","parent":null,"children":[{"krate":0,"index":6526},{"krate":0,"index":6528},{"krate":0,"index":6530},{"krate":0,"index":6532},{"krate":0,"index":6534},{"krate":0,"index":6536},{"krate":0,"index":6538}],"decl_id":null,"docs":" A heap type for a reference type\n","sig":null,"attributes":[{"value":"/ A heap type for a reference type","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12597897,"byte_end":12597933,"line_start":69,"line_end":69,"column_start":1,"column_end":37}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12597934,"byte_end":12597956,"line_start":70,"line_end":70,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6564},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12600374,"byte_end":12600381,"line_start":142,"line_end":142,"column_start":12,"column_end":19},"name":"RefType","qualname":"::ast::types::RefType","value":"RefType { nullable, heap }","parent":null,"children":[{"krate":0,"index":6566},{"krate":0,"index":6567}],"decl_id":null,"docs":" A reference type in a wasm module.\n","sig":null,"attributes":[{"value":"/ A reference type in a wasm module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12600250,"byte_end":12600288,"line_start":139,"line_end":139,"column_start":1,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12600289,"byte_end":12600311,"line_start":140,"line_end":140,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":6566},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12600396,"byte_end":12600404,"line_start":143,"line_end":143,"column_start":9,"column_end":17},"name":"nullable","qualname":"::ast::types::RefType::nullable","value":"bool","parent":{"krate":0,"index":6564},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6567},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12600420,"byte_end":12600424,"line_start":144,"line_end":144,"column_start":9,"column_end":13},"name":"heap","qualname":"::ast::types::RefType::heap","value":"ast::types::HeapType<'a>","parent":{"krate":0,"index":6564},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1904},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12600539,"byte_end":12600543,"line_start":149,"line_end":149,"column_start":12,"column_end":16},"name":"func","qualname":"<RefType>::func","value":"pub fn func() -> Self","parent":null,"children":[],"decl_id":null,"docs":" A `funcref` as an abbreviation for `(ref null func)`.\n","sig":null,"attributes":[{"value":"/ A `funcref` as an abbreviation for `(ref null func)`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12600470,"byte_end":12600527,"line_start":148,"line_end":148,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1905},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12600731,"byte_end":12600739,"line_start":157,"line_end":157,"column_start":12,"column_end":20},"name":"extern","qualname":"<RefType>::extern","value":"pub fn r#extern() -> Self","parent":null,"children":[],"decl_id":null,"docs":" An `externref` as an abbreviation for `(ref null extern)`.\n","sig":null,"attributes":[{"value":"/ An `externref` as an abbreviation for `(ref null extern)`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12600657,"byte_end":12600719,"line_start":156,"line_end":156,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1906},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12600923,"byte_end":12600926,"line_start":165,"line_end":165,"column_start":12,"column_end":15},"name":"any","qualname":"<RefType>::any","value":"pub fn any() -> Self","parent":null,"children":[],"decl_id":null,"docs":" An `anyref` as an abbreviation for `(ref null any)`.\n","sig":null,"attributes":[{"value":"/ An `anyref` as an abbreviation for `(ref null any)`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12600855,"byte_end":12600911,"line_start":164,"line_end":164,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1907},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12601105,"byte_end":12601107,"line_start":173,"line_end":173,"column_start":12,"column_end":14},"name":"eq","qualname":"<RefType>::eq","value":"pub fn eq() -> Self","parent":null,"children":[],"decl_id":null,"docs":" An `eqref` as an abbreviation for `(ref null eq)`.\n","sig":null,"attributes":[{"value":"/ An `eqref` as an abbreviation for `(ref null eq)`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12601039,"byte_end":12601093,"line_start":172,"line_end":172,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1908},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12601289,"byte_end":12601293,"line_start":181,"line_end":181,"column_start":12,"column_end":16},"name":"data","qualname":"<RefType>::data","value":"pub fn data() -> Self","parent":null,"children":[],"decl_id":null,"docs":" An `dataref` as an abbreviation for `(ref null data)`.\n","sig":null,"attributes":[{"value":"/ An `dataref` as an abbreviation for `(ref null data)`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12601219,"byte_end":12601277,"line_start":180,"line_end":180,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1909},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12601475,"byte_end":12601478,"line_start":189,"line_end":189,"column_start":12,"column_end":15},"name":"i31","qualname":"<RefType>::i31","value":"pub fn i31() -> Self","parent":null,"children":[],"decl_id":null,"docs":" An `i31ref` as an abbreviation for `(ref null i31)`.\n","sig":null,"attributes":[{"value":"/ An `i31ref` as an abbreviation for `(ref null i31)`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12601407,"byte_end":12601463,"line_start":188,"line_end":188,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6593},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12603940,"byte_end":12603942,"line_start":267,"line_end":267,"column_start":5,"column_end":7},"name":"I8","qualname":"::ast::types::StorageType::I8","value":"StorageType::I8","parent":{"krate":0,"index":6591},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6595},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12603948,"byte_end":12603951,"line_start":268,"line_end":268,"column_start":5,"column_end":8},"name":"I16","qualname":"::ast::types::StorageType::I16","value":"StorageType::I16","parent":{"krate":0,"index":6591},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6597},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12603957,"byte_end":12603960,"line_start":269,"line_end":269,"column_start":5,"column_end":8},"name":"Val","qualname":"::ast::types::StorageType::Val","value":"StorageType::Val(ValType)","parent":{"krate":0,"index":6591},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6591},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12603918,"byte_end":12603929,"line_start":266,"line_end":266,"column_start":10,"column_end":21},"name":"StorageType","qualname":"::ast::types::StorageType","value":"pub enum StorageType<'a> { I8, I16, Val(ValType), }","parent":null,"children":[{"krate":0,"index":6593},{"krate":0,"index":6595},{"krate":0,"index":6597}],"decl_id":null,"docs":" The types of values that may be used in a struct or array.\n","sig":null,"attributes":[{"value":"/ The types of values that may be used in a struct or array.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12603772,"byte_end":12603834,"line_start":263,"line_end":263,"column_start":1,"column_end":63}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12603835,"byte_end":12603857,"line_start":264,"line_end":264,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6623},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12604583,"byte_end":12604593,"line_start":291,"line_end":291,"column_start":12,"column_end":22},"name":"GlobalType","qualname":"::ast::types::GlobalType","value":"GlobalType { ty, mutable }","parent":null,"children":[{"krate":0,"index":6625},{"krate":0,"index":6626}],"decl_id":null,"docs":" Type for a `global` in a wasm module\n","sig":null,"attributes":[{"value":"/ Type for a `global` in a wasm module","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12604480,"byte_end":12604520,"line_start":289,"line_end":289,"column_start":1,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":6625},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12604650,"byte_end":12604652,"line_start":293,"line_end":293,"column_start":9,"column_end":11},"name":"ty","qualname":"::ast::types::GlobalType::ty","value":"ast::types::ValType<'a>","parent":{"krate":0,"index":6623},"children":[],"decl_id":null,"docs":" The element type of this `global`\n","sig":null,"attributes":[{"value":"/ The element type of this `global`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12604604,"byte_end":12604641,"line_start":292,"line_end":292,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":6626},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12604728,"byte_end":12604735,"line_start":295,"line_end":295,"column_start":9,"column_end":16},"name":"mutable","qualname":"::ast::types::GlobalType::mutable","value":"bool","parent":{"krate":0,"index":6623},"children":[],"decl_id":null,"docs":" Whether or not the global is mutable or not.\n","sig":null,"attributes":[{"value":"/ Whether or not the global is mutable or not.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12604671,"byte_end":12604719,"line_start":294,"line_end":294,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":6650},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12605348,"byte_end":12605354,"line_start":319,"line_end":319,"column_start":12,"column_end":18},"name":"Limits","qualname":"::ast::types::Limits","value":"Limits { min, max }","parent":null,"children":[{"krate":0,"index":6651},{"krate":0,"index":6652}],"decl_id":null,"docs":" Min/max limits used for tables/memories.\n","sig":null,"attributes":[{"value":"/ Min/max limits used for tables/memories.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12605241,"byte_end":12605285,"line_start":317,"line_end":317,"column_start":1,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":6651},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12605416,"byte_end":12605419,"line_start":321,"line_end":321,"column_start":9,"column_end":12},"name":"min","qualname":"::ast::types::Limits::min","value":"u32","parent":{"krate":0,"index":6650},"children":[],"decl_id":null,"docs":" The minimum number of units for this type.\n","sig":null,"attributes":[{"value":"/ The minimum number of units for this type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12605361,"byte_end":12605407,"line_start":320,"line_end":320,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":6652},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12605493,"byte_end":12605496,"line_start":323,"line_end":323,"column_start":9,"column_end":12},"name":"max","qualname":"::ast::types::Limits::max","value":"std::option::Option<u32>","parent":{"krate":0,"index":6650},"children":[],"decl_id":null,"docs":" An optional maximum number of units for this type.\n","sig":null,"attributes":[{"value":"/ An optional maximum number of units for this type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12605430,"byte_end":12605484,"line_start":322,"line_end":322,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":6668},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12605902,"byte_end":12605910,"line_start":340,"line_end":340,"column_start":12,"column_end":20},"name":"Limits64","qualname":"::ast::types::Limits64","value":"Limits64 { min, max }","parent":null,"children":[{"krate":0,"index":6669},{"krate":0,"index":6670}],"decl_id":null,"docs":" Min/max limits used for 64-bit memories\n","sig":null,"attributes":[{"value":"/ Min/max limits used for 64-bit memories","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12605796,"byte_end":12605839,"line_start":338,"line_end":338,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":6669},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12605972,"byte_end":12605975,"line_start":342,"line_end":342,"column_start":9,"column_end":12},"name":"min","qualname":"::ast::types::Limits64::min","value":"u64","parent":{"krate":0,"index":6668},"children":[],"decl_id":null,"docs":" The minimum number of units for this type.\n","sig":null,"attributes":[{"value":"/ The minimum number of units for this type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12605917,"byte_end":12605963,"line_start":341,"line_end":341,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":6670},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12606049,"byte_end":12606052,"line_start":344,"line_end":344,"column_start":9,"column_end":12},"name":"max","qualname":"::ast::types::Limits64::max","value":"std::option::Option<u64>","parent":{"krate":0,"index":6668},"children":[],"decl_id":null,"docs":" An optional maximum number of units for this type.\n","sig":null,"attributes":[{"value":"/ An optional maximum number of units for this type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12605986,"byte_end":12606040,"line_start":343,"line_end":343,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":6686},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12606465,"byte_end":12606474,"line_start":361,"line_end":361,"column_start":12,"column_end":21},"name":"TableType","qualname":"::ast::types::TableType","value":"TableType { limits, elem }","parent":null,"children":[{"krate":0,"index":6688},{"krate":0,"index":6689}],"decl_id":null,"docs":" Configuration for a table of a wasm mdoule\n","sig":null,"attributes":[{"value":"/ Configuration for a table of a wasm mdoule","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12606356,"byte_end":12606402,"line_start":359,"line_end":359,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":6688},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12606539,"byte_end":12606545,"line_start":363,"line_end":363,"column_start":9,"column_end":15},"name":"limits","qualname":"::ast::types::TableType::limits","value":"ast::types::Limits","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" Limits on the element sizes of this table\n","sig":null,"attributes":[{"value":"/ Limits on the element sizes of this table","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12606485,"byte_end":12606530,"line_start":362,"line_end":362,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":6689},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12606612,"byte_end":12606616,"line_start":365,"line_end":365,"column_start":9,"column_end":13},"name":"elem","qualname":"::ast::types::TableType::elem","value":"ast::types::RefType<'a>","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" The type of element stored in this table\n","sig":null,"attributes":[{"value":"/ The type of element stored in this table","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12606559,"byte_end":12606603,"line_start":364,"line_end":364,"column_start":5,"column_end":49}}]},{"kind":"StructVariant","id":{"krate":0,"index":6714},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12606988,"byte_end":12606991,"line_start":381,"line_end":381,"column_start":5,"column_end":8},"name":"B32","qualname":"::ast::types::MemoryType::B32","value":"MemoryType::B32 { limits, shared }","parent":{"krate":0,"index":6713},"children":[],"decl_id":null,"docs":" A 32-bit memory\n","sig":null,"attributes":[{"value":"/ A 32-bit memory","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12606964,"byte_end":12606983,"line_start":380,"line_end":380,"column_start":5,"column_end":24}}]},{"kind":"StructVariant","id":{"krate":0,"index":6717},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12607192,"byte_end":12607195,"line_start":388,"line_end":388,"column_start":5,"column_end":8},"name":"B64","qualname":"::ast::types::MemoryType::B64","value":"MemoryType::B64 { limits, shared }","parent":{"krate":0,"index":6713},"children":[],"decl_id":null,"docs":" A 64-bit memory\n","sig":null,"attributes":[{"value":"/ A 64-bit memory","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12607168,"byte_end":12607187,"line_start":387,"line_end":387,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":6713},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12606947,"byte_end":12606957,"line_start":379,"line_end":379,"column_start":10,"column_end":20},"name":"MemoryType","qualname":"::ast::types::MemoryType","value":"pub enum MemoryType {\n    B32 {\n        limits: Limits,\n        shared: bool,\n    },\n    B64 {\n        limits: Limits64,\n        shared: bool,\n    },\n}","parent":null,"children":[{"krate":0,"index":6714},{"krate":0,"index":6717}],"decl_id":null,"docs":" Configuration for a memory of a wasm module\n","sig":null,"attributes":[{"value":"/ Configuration for a memory of a wasm module","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12606839,"byte_end":12606886,"line_start":377,"line_end":377,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":6735},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12608049,"byte_end":12608061,"line_start":414,"line_end":414,"column_start":12,"column_end":24},"name":"FunctionType","qualname":"::ast::types::FunctionType","value":"FunctionType { params, results }","parent":null,"children":[{"krate":0,"index":6737},{"krate":0,"index":6738}],"decl_id":null,"docs":" A function type with parameters and results.\n","sig":null,"attributes":[{"value":"/ A function type with parameters and results.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12607956,"byte_end":12608004,"line_start":412,"line_end":412,"column_start":1,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":6737},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12608221,"byte_end":12608227,"line_start":417,"line_end":417,"column_start":9,"column_end":15},"name":"params","qualname":"::ast::types::FunctionType::params","value":"std::boxed::Box<[(std::option::Option<ast::token::Id<'a>>, std::option::Option<ast::token::NameAnnotation<'a>>, ast::types::ValType<'a>)]>","parent":{"krate":0,"index":6735},"children":[],"decl_id":null,"docs":" The parameters of a function, optionally each having an identifier for\n name resolution and a name for the custom `name` section.\n","sig":null,"attributes":[{"value":"/ The parameters of a function, optionally each having an identifier for","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12608072,"byte_end":12608146,"line_start":415,"line_end":415,"column_start":5,"column_end":79}},{"value":"/ name resolution and a name for the custom `name` section.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12608151,"byte_end":12608212,"line_start":416,"line_end":416,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":6738},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12608416,"byte_end":12608423,"line_start":425,"line_end":425,"column_start":9,"column_end":16},"name":"results","qualname":"::ast::types::FunctionType::results","value":"std::boxed::Box<[ast::types::ValType<'a>]>","parent":{"krate":0,"index":6735},"children":[],"decl_id":null,"docs":" The results types of a function.\n","sig":null,"attributes":[{"value":"/ The results types of a function.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12608371,"byte_end":12608407,"line_start":424,"line_end":424,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":6748},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12611017,"byte_end":12611036,"line_start":504,"line_end":504,"column_start":12,"column_end":31},"name":"FunctionTypeNoNames","qualname":"::ast::types::FunctionTypeNoNames","value":"","parent":null,"children":[],"decl_id":null,"docs":" A function type with parameters and results.\n","sig":null,"attributes":[{"value":"/ A function type with parameters and results.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12610924,"byte_end":12610972,"line_start":502,"line_end":502,"column_start":1,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":6751},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12611041,"byte_end":12611061,"line_start":504,"line_end":504,"column_start":36,"column_end":56},"name":"0","qualname":"::ast::types::FunctionTypeNoNames::0","value":"ast::types::FunctionType<'a>","parent":{"krate":0,"index":6748},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6761},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12611787,"byte_end":12611797,"line_start":535,"line_end":535,"column_start":12,"column_end":22},"name":"StructType","qualname":"::ast::types::StructType","value":"StructType { fields }","parent":null,"children":[{"krate":0,"index":6763}],"decl_id":null,"docs":" A struct type with fields.\n","sig":null,"attributes":[{"value":"/ A struct type with fields.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12611721,"byte_end":12611751,"line_start":533,"line_end":533,"column_start":1,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":6763},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12611845,"byte_end":12611851,"line_start":537,"line_end":537,"column_start":9,"column_end":15},"name":"fields","qualname":"::ast::types::StructType::fields","value":"std::vec::Vec<ast::types::StructField<'a>>","parent":{"krate":0,"index":6761},"children":[],"decl_id":null,"docs":" The fields of the struct\n","sig":null,"attributes":[{"value":"/ The fields of the struct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12611808,"byte_end":12611836,"line_start":536,"line_end":536,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":6770},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12612504,"byte_end":12612515,"line_start":560,"line_end":560,"column_start":12,"column_end":23},"name":"StructField","qualname":"::ast::types::StructField","value":"StructField { id, mutable, ty }","parent":null,"children":[{"krate":0,"index":6772},{"krate":0,"index":6773},{"krate":0,"index":6774}],"decl_id":null,"docs":" A field of a struct type.\n","sig":null,"attributes":[{"value":"/ A field of a struct type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12612439,"byte_end":12612468,"line_start":558,"line_end":558,"column_start":1,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":6772},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12612582,"byte_end":12612584,"line_start":562,"line_end":562,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::types::StructField::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":6770},"children":[],"decl_id":null,"docs":" An optional identifier for name resolution.\n","sig":null,"attributes":[{"value":"/ An optional identifier for name resolution.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12612526,"byte_end":12612573,"line_start":561,"line_end":561,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6773},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12612665,"byte_end":12612672,"line_start":564,"line_end":564,"column_start":9,"column_end":16},"name":"mutable","qualname":"::ast::types::StructField::mutable","value":"bool","parent":{"krate":0,"index":6770},"children":[],"decl_id":null,"docs":" Whether this field may be mutated or not.\n","sig":null,"attributes":[{"value":"/ Whether this field may be mutated or not.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12612611,"byte_end":12612656,"line_start":563,"line_end":563,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":6774},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12612735,"byte_end":12612737,"line_start":566,"line_end":566,"column_start":9,"column_end":11},"name":"ty","qualname":"::ast::types::StructField::ty","value":"ast::types::StorageType<'a>","parent":{"krate":0,"index":6770},"children":[],"decl_id":null,"docs":" The storage type stored in this field.\n","sig":null,"attributes":[{"value":"/ The storage type stored in this field.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12612684,"byte_end":12612726,"line_start":565,"line_end":565,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":6781},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12613342,"byte_end":12613351,"line_start":587,"line_end":587,"column_start":12,"column_end":21},"name":"ArrayType","qualname":"::ast::types::ArrayType","value":"ArrayType { mutable, ty }","parent":null,"children":[{"krate":0,"index":6783},{"krate":0,"index":6784}],"decl_id":null,"docs":" An array type with fields.\n","sig":null,"attributes":[{"value":"/ An array type with fields.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12613276,"byte_end":12613306,"line_start":585,"line_end":585,"column_start":1,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":6783},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12613416,"byte_end":12613423,"line_start":589,"line_end":589,"column_start":9,"column_end":16},"name":"mutable","qualname":"::ast::types::ArrayType::mutable","value":"bool","parent":{"krate":0,"index":6781},"children":[],"decl_id":null,"docs":" Whether this field may be mutated or not.\n","sig":null,"attributes":[{"value":"/ Whether this field may be mutated or not.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12613362,"byte_end":12613407,"line_start":588,"line_end":588,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":6784},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12613486,"byte_end":12613488,"line_start":591,"line_end":591,"column_start":9,"column_end":11},"name":"ty","qualname":"::ast::types::ArrayType::ty","value":"ast::types::StorageType<'a>","parent":{"krate":0,"index":6781},"children":[],"decl_id":null,"docs":" The storage type stored in this field.\n","sig":null,"attributes":[{"value":"/ The storage type stored in this field.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12613435,"byte_end":12613477,"line_start":590,"line_end":590,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":6791},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12614030,"byte_end":12614040,"line_start":611,"line_end":611,"column_start":12,"column_end":22},"name":"ModuleType","qualname":"::ast::types::ModuleType","value":"ModuleType { imports, exports }","parent":null,"children":[{"krate":0,"index":6793},{"krate":0,"index":6794}],"decl_id":null,"docs":" A type for a nested module\n","sig":null,"attributes":[{"value":"/ A type for a nested module","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12613955,"byte_end":12613985,"line_start":609,"line_end":609,"column_start":1,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":6793},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12614115,"byte_end":12614122,"line_start":613,"line_end":613,"column_start":9,"column_end":16},"name":"imports","qualname":"::ast::types::ModuleType::imports","value":"std::vec::Vec<ast::import::Import<'a>>","parent":{"krate":0,"index":6791},"children":[],"decl_id":null,"docs":" The imports that are expected for this module type.\n","sig":null,"attributes":[{"value":"/ The imports that are expected for this module type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12614051,"byte_end":12614106,"line_start":612,"line_end":612,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":6794},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12614217,"byte_end":12614224,"line_start":615,"line_end":615,"column_start":9,"column_end":16},"name":"exports","qualname":"::ast::types::ModuleType::exports","value":"std::vec::Vec<ast::types::ExportType<'a>>","parent":{"krate":0,"index":6791},"children":[],"decl_id":null,"docs":" The exports that this module type is expected to have.\n","sig":null,"attributes":[{"value":"/ The exports that this module type is expected to have.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12614150,"byte_end":12614208,"line_start":614,"line_end":614,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":6804},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12615393,"byte_end":12615405,"line_start":659,"line_end":659,"column_start":12,"column_end":24},"name":"InstanceType","qualname":"::ast::types::InstanceType","value":"InstanceType { exports }","parent":null,"children":[{"krate":0,"index":6806}],"decl_id":null,"docs":" A type for a nested instance\n","sig":null,"attributes":[{"value":"/ A type for a nested instance","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12615316,"byte_end":12615348,"line_start":657,"line_end":657,"column_start":1,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":6806},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12615466,"byte_end":12615473,"line_start":661,"line_end":661,"column_start":9,"column_end":16},"name":"exports","qualname":"::ast::types::InstanceType::exports","value":"std::vec::Vec<ast::types::ExportType<'a>>","parent":{"krate":0,"index":6804},"children":[],"decl_id":null,"docs":" The exported types from this instance\n","sig":null,"attributes":[{"value":"/ The exported types from this instance","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12615416,"byte_end":12615457,"line_start":660,"line_end":660,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":6816},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12616422,"byte_end":12616432,"line_start":698,"line_end":698,"column_start":12,"column_end":22},"name":"ExportType","qualname":"::ast::types::ExportType","value":"ExportType { span, name, item }","parent":null,"children":[{"krate":0,"index":6818},{"krate":0,"index":6819},{"krate":0,"index":6820}],"decl_id":null,"docs":" The type of an exported item from a module or instance.\n","sig":null,"attributes":[{"value":"/ The type of an exported item from a module or instance.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12616327,"byte_end":12616386,"line_start":696,"line_end":696,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":6818},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12616486,"byte_end":12616490,"line_start":700,"line_end":700,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::types::ExportType::span","value":"ast::token::Span","parent":{"krate":0,"index":6816},"children":[],"decl_id":null,"docs":" Where this export was defined.\n","sig":null,"attributes":[{"value":"/ Where this export was defined.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12616443,"byte_end":12616477,"line_start":699,"line_end":699,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":6819},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12616544,"byte_end":12616548,"line_start":702,"line_end":702,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::types::ExportType::name","value":"&'a str","parent":{"krate":0,"index":6816},"children":[],"decl_id":null,"docs":" The name of this export.\n","sig":null,"attributes":[{"value":"/ The name of this export.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12616507,"byte_end":12616535,"line_start":701,"line_end":701,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":6820},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12616618,"byte_end":12616622,"line_start":704,"line_end":704,"column_start":9,"column_end":13},"name":"item","qualname":"::ast::types::ExportType::item","value":"ast::import::ItemSig<'a>","parent":{"krate":0,"index":6816},"children":[],"decl_id":null,"docs":" The signature of the item that's exported.\n","sig":null,"attributes":[{"value":"/ The signature of the item that's exported.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12616563,"byte_end":12616609,"line_start":703,"line_end":703,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6829},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12617035,"byte_end":12617039,"line_start":720,"line_end":720,"column_start":5,"column_end":9},"name":"Func","qualname":"::ast::types::TypeDef::Func","value":"TypeDef::Func(FunctionType)","parent":{"krate":0,"index":6827},"children":[],"decl_id":null,"docs":" A function type definition.\n","sig":null,"attributes":[{"value":"/ A function type definition.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12616999,"byte_end":12617030,"line_start":719,"line_end":719,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6832},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12617097,"byte_end":12617103,"line_start":722,"line_end":722,"column_start":5,"column_end":11},"name":"Struct","qualname":"::ast::types::TypeDef::Struct","value":"TypeDef::Struct(StructType)","parent":{"krate":0,"index":6827},"children":[],"decl_id":null,"docs":" A struct type definition.\n","sig":null,"attributes":[{"value":"/ A struct type definition.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12617063,"byte_end":12617092,"line_start":721,"line_end":721,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6835},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12617159,"byte_end":12617164,"line_start":724,"line_end":724,"column_start":5,"column_end":10},"name":"Array","qualname":"::ast::types::TypeDef::Array","value":"TypeDef::Array(ArrayType)","parent":{"krate":0,"index":6827},"children":[],"decl_id":null,"docs":" An array type definition.\n","sig":null,"attributes":[{"value":"/ An array type definition.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12617125,"byte_end":12617154,"line_start":723,"line_end":723,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6838},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12617219,"byte_end":12617225,"line_start":726,"line_end":726,"column_start":5,"column_end":11},"name":"Module","qualname":"::ast::types::TypeDef::Module","value":"TypeDef::Module(ModuleType)","parent":{"krate":0,"index":6827},"children":[],"decl_id":null,"docs":" A module type definition.\n","sig":null,"attributes":[{"value":"/ A module type definition.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12617185,"byte_end":12617214,"line_start":725,"line_end":725,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6841},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12617284,"byte_end":12617292,"line_start":728,"line_end":728,"column_start":5,"column_end":13},"name":"Instance","qualname":"::ast::types::TypeDef::Instance","value":"TypeDef::Instance(InstanceType)","parent":{"krate":0,"index":6827},"children":[],"decl_id":null,"docs":" An instance type definition.\n","sig":null,"attributes":[{"value":"/ An instance type definition.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12617247,"byte_end":12617279,"line_start":727,"line_end":727,"column_start":5,"column_end":37}}]},{"kind":"Enum","id":{"krate":0,"index":6827},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12616981,"byte_end":12616988,"line_start":718,"line_end":718,"column_start":10,"column_end":17},"name":"TypeDef","qualname":"::ast::types::TypeDef","value":"pub enum TypeDef<'a> {\n    Func(FunctionType),\n    Struct(StructType),\n    Array(ArrayType),\n    Module(ModuleType),\n    Instance(InstanceType),\n}","parent":null,"children":[{"krate":0,"index":6829},{"krate":0,"index":6832},{"krate":0,"index":6835},{"krate":0,"index":6838},{"krate":0,"index":6841}],"decl_id":null,"docs":" A definition of a type.\n","sig":null,"attributes":[{"value":"/ A definition of a type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12616927,"byte_end":12616954,"line_start":716,"line_end":716,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":6847},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12617378,"byte_end":12617382,"line_start":733,"line_end":733,"column_start":12,"column_end":16},"name":"Type","qualname":"::ast::types::Type","value":"Type { span, id, name, def }","parent":null,"children":[{"krate":0,"index":6849},{"krate":0,"index":6850},{"krate":0,"index":6851},{"krate":0,"index":6852}],"decl_id":null,"docs":" A type declaration in a module\n","sig":null,"attributes":[{"value":"/ A type declaration in a module","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12617315,"byte_end":12617349,"line_start":731,"line_end":731,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":6849},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12617434,"byte_end":12617438,"line_start":735,"line_end":735,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::types::Type::span","value":"ast::token::Span","parent":{"krate":0,"index":6847},"children":[],"decl_id":null,"docs":" Where this type was defined.\n","sig":null,"attributes":[{"value":"/ Where this type was defined.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12617393,"byte_end":12617425,"line_start":734,"line_end":734,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":6850},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12617552,"byte_end":12617554,"line_start":738,"line_end":738,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::types::Type::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":6847},"children":[],"decl_id":null,"docs":" An optional identifer to refer to this `type` by as part of name\n resolution.\n","sig":null,"attributes":[{"value":"/ An optional identifer to refer to this `type` by as part of name","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12617455,"byte_end":12617523,"line_start":736,"line_end":736,"column_start":5,"column_end":73}},{"value":"/ resolution.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12617528,"byte_end":12617543,"line_start":737,"line_end":737,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":6851},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12617665,"byte_end":12617669,"line_start":740,"line_end":740,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::types::Type::name","value":"std::option::Option<ast::token::NameAnnotation<'a>>","parent":{"krate":0,"index":6847},"children":[],"decl_id":null,"docs":" An optional name for this function stored in the custom `name` section.\n","sig":null,"attributes":[{"value":"/ An optional name for this function stored in the custom `name` section.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12617581,"byte_end":12617656,"line_start":739,"line_end":739,"column_start":5,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":6852},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12617751,"byte_end":12617754,"line_start":742,"line_end":742,"column_start":9,"column_end":12},"name":"def","qualname":"::ast::types::Type::def","value":"ast::types::TypeDef<'a>","parent":{"krate":0,"index":6847},"children":[],"decl_id":null,"docs":" The type that we're declaring.\n","sig":null,"attributes":[{"value":"/ The type that we're declaring.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12617708,"byte_end":12617742,"line_start":741,"line_end":741,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":6856},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12619067,"byte_end":12619074,"line_start":782,"line_end":782,"column_start":12,"column_end":19},"name":"TypeUse","qualname":"::ast::types::TypeUse","value":"TypeUse { index, inline }","parent":null,"children":[{"krate":0,"index":6859},{"krate":0,"index":6860}],"decl_id":null,"docs":" A reference to a type defined in this module.\n","sig":null,"attributes":[{"value":"/ A reference to a type defined in this module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12618982,"byte_end":12619031,"line_start":780,"line_end":780,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":6859},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12619152,"byte_end":12619157,"line_start":784,"line_end":784,"column_start":9,"column_end":14},"name":"index","qualname":"::ast::types::TypeUse::index","value":"std::option::Option<ast::token::ItemRef<'a, ast::kw::r#type>>","parent":{"krate":0,"index":6856},"children":[],"decl_id":null,"docs":" The type that we're referencing, if it was present.\n","sig":null,"attributes":[{"value":"/ The type that we're referencing, if it was present.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12619088,"byte_end":12619143,"line_start":783,"line_end":783,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":6860},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12619242,"byte_end":12619248,"line_start":786,"line_end":786,"column_start":9,"column_end":15},"name":"inline","qualname":"::ast::types::TypeUse::inline","value":"std::option::Option<T>","parent":{"krate":0,"index":6856},"children":[],"decl_id":null,"docs":" The inline type, if present.\n","sig":null,"attributes":[{"value":"/ The inline type, if present.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12619201,"byte_end":12619233,"line_start":785,"line_end":785,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1998},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12619417,"byte_end":12619431,"line_start":792,"line_end":792,"column_start":12,"column_end":26},"name":"new_with_index","qualname":"<TypeUse>::new_with_index","value":"pub fn new_with_index(ast::Index) -> TypeUse","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new instance of `TypeUse` without an inline definition but\n with an index specified.\n","sig":null,"attributes":[{"value":"/ Constructs a new instance of `TypeUse` without an inline definition but","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12619297,"byte_end":12619372,"line_start":790,"line_end":790,"column_start":5,"column_end":80}},{"value":"/ with an index specified.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12619377,"byte_end":12619405,"line_start":791,"line_end":791,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":6869},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12620846,"byte_end":12620850,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"Wast","qualname":"::ast::wast::Wast","value":"Wast { directives }","parent":null,"children":[{"krate":0,"index":6871}],"decl_id":null,"docs":" A parsed representation of a `*.wast` file.","sig":null,"attributes":[{"value":"/ A parsed representation of a `*.wast` file.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12620546,"byte_end":12620593,"line_start":5,"line_end":5,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12620594,"byte_end":12620597,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ WAST files are not officially specified but are used in the official test","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12620598,"byte_end":12620675,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"/ suite to write official spec tests for wasm. This type represents a parsed","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12620676,"byte_end":12620754,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ `*.wast` file which parses a list of directives in a file.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12620755,"byte_end":12620817,"line_start":9,"line_end":9,"column_start":1,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":6871},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12620892,"byte_end":12620902,"line_start":13,"line_end":13,"column_start":9,"column_end":19},"name":"directives","qualname":"::ast::wast::Wast::directives","value":"std::vec::Vec<ast::wast::WastDirective<'a>>","parent":{"krate":0,"index":6869},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12620861,"byte_end":12620883,"line_start":12,"line_end":12,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6877},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12622230,"byte_end":12622236,"line_start":57,"line_end":57,"column_start":5,"column_end":11},"name":"Module","qualname":"::ast::wast::WastDirective::Module","value":"WastDirective::Module(ast::Module)","parent":{"krate":0,"index":6875},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6880},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12622259,"byte_end":12622270,"line_start":58,"line_end":58,"column_start":5,"column_end":16},"name":"QuoteModule","qualname":"::ast::wast::WastDirective::QuoteModule","value":"WastDirective::QuoteModule { span, source }","parent":{"krate":0,"index":6875},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6883},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12622340,"byte_end":12622355,"line_start":62,"line_end":62,"column_start":5,"column_end":20},"name":"AssertMalformed","qualname":"::ast::wast::WastDirective::AssertMalformed","value":"WastDirective::AssertMalformed { span, module, message }","parent":{"krate":0,"index":6875},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6887},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12622453,"byte_end":12622466,"line_start":67,"line_end":67,"column_start":5,"column_end":18},"name":"AssertInvalid","qualname":"::ast::wast::WastDirective::AssertInvalid","value":"WastDirective::AssertInvalid { span, module, message }","parent":{"krate":0,"index":6875},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6891},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12622564,"byte_end":12622572,"line_start":72,"line_end":72,"column_start":5,"column_end":13},"name":"Register","qualname":"::ast::wast::WastDirective::Register","value":"WastDirective::Register { span, name, module }","parent":{"krate":0,"index":6875},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6895},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12622671,"byte_end":12622677,"line_start":77,"line_end":77,"column_start":5,"column_end":11},"name":"Invoke","qualname":"::ast::wast::WastDirective::Invoke","value":"WastDirective::Invoke(WastInvoke)","parent":{"krate":0,"index":6875},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6898},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12622699,"byte_end":12622709,"line_start":78,"line_end":78,"column_start":5,"column_end":15},"name":"AssertTrap","qualname":"::ast::wast::WastDirective::AssertTrap","value":"WastDirective::AssertTrap { span, exec, message }","parent":{"krate":0,"index":6875},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6902},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12622805,"byte_end":12622817,"line_start":83,"line_end":83,"column_start":5,"column_end":17},"name":"AssertReturn","qualname":"::ast::wast::WastDirective::AssertReturn","value":"WastDirective::AssertReturn { span, exec, results }","parent":{"krate":0,"index":6875},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6906},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12622936,"byte_end":12622952,"line_start":88,"line_end":88,"column_start":5,"column_end":21},"name":"AssertExhaustion","qualname":"::ast::wast::WastDirective::AssertExhaustion","value":"WastDirective::AssertExhaustion { span, call, message }","parent":{"krate":0,"index":6875},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6910},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12623047,"byte_end":12623063,"line_start":93,"line_end":93,"column_start":5,"column_end":21},"name":"AssertUnlinkable","qualname":"::ast::wast::WastDirective::AssertUnlinkable","value":"WastDirective::AssertUnlinkable { span, module, message }","parent":{"krate":0,"index":6875},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6914},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12623161,"byte_end":12623176,"line_start":98,"line_end":98,"column_start":5,"column_end":20},"name":"AssertException","qualname":"::ast::wast::WastDirective::AssertException","value":"WastDirective::AssertException { span, exec }","parent":{"krate":0,"index":6875},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6875},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12622206,"byte_end":12622219,"line_start":56,"line_end":56,"column_start":10,"column_end":23},"name":"WastDirective","qualname":"::ast::wast::WastDirective","value":"pub enum WastDirective<'a> {\n    Module(ast::Module),\n    QuoteModule {\n        span: ast::Span,\n        source: Vec<&'a [u8]>,\n    },\n    AssertMalformed {\n        span: ast::Span,\n        module: QuoteModule,\n        message: &'a str,\n    },\n    AssertInvalid {\n        span: ast::Span,\n        module: QuoteModule,\n        message: &'a str,\n    },\n    Register {\n        span: ast::Span,\n        name: &'a str,\n        module: Option<ast::Id>,\n    },\n    Invoke(WastInvoke),\n    AssertTrap {\n        span: ast::Span,\n        exec: WastExecute,\n        message: &'a str,\n    },\n    AssertReturn {\n        span: ast::Span,\n        exec: WastExecute,\n        results: Vec<ast::AssertExpression>,\n    },\n    AssertExhaustion {\n        span: ast::Span,\n        call: WastInvoke,\n        message: &'a str,\n    },\n    AssertUnlinkable {\n        span: ast::Span,\n        module: ast::Module,\n        message: &'a str,\n    },\n    AssertException {\n        span: ast::Span,\n        exec: WastExecute,\n    },\n}","parent":null,"children":[{"krate":0,"index":6877},{"krate":0,"index":6880},{"krate":0,"index":6883},{"krate":0,"index":6887},{"krate":0,"index":6891},{"krate":0,"index":6895},{"krate":0,"index":6898},{"krate":0,"index":6902},{"krate":0,"index":6906},{"krate":0,"index":6910},{"krate":0,"index":6914}],"decl_id":null,"docs":" The different kinds of directives found in a `*.wast` file.","sig":null,"attributes":[{"value":"/ The different kinds of directives found in a `*.wast` file.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12621959,"byte_end":12622022,"line_start":50,"line_end":50,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12622023,"byte_end":12622026,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ It's not entirely clear to me what all of these are per se, but they're only","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12622027,"byte_end":12622107,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ really interesting to test harnesses mostly.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12622108,"byte_end":12622156,"line_start":53,"line_end":53,"column_start":1,"column_end":49}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12622157,"byte_end":12622179,"line_start":54,"line_end":54,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":2052},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12623359,"byte_end":12623363,"line_start":106,"line_end":106,"column_start":12,"column_end":16},"name":"span","qualname":"<WastDirective>::span","value":"pub fn span(&Self) -> ast::Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the location in the source that this directive was defined at\n","sig":null,"attributes":[{"value":"/ Returns the location in the source that this directive was defined at","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12623274,"byte_end":12623347,"line_start":105,"line_end":105,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6922},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12630420,"byte_end":12630426,"line_start":272,"line_end":272,"column_start":5,"column_end":11},"name":"Invoke","qualname":"::ast::wast::WastExecute::Invoke","value":"WastExecute::Invoke(WastInvoke)","parent":{"krate":0,"index":6920},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6925},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12630448,"byte_end":12630454,"line_start":273,"line_end":273,"column_start":5,"column_end":11},"name":"Module","qualname":"::ast::wast::WastExecute::Module","value":"WastExecute::Module(ast::Module)","parent":{"krate":0,"index":6920},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6928},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12630477,"byte_end":12630480,"line_start":274,"line_end":274,"column_start":5,"column_end":8},"name":"Get","qualname":"::ast::wast::WastExecute::Get","value":"WastExecute::Get { module, global }","parent":{"krate":0,"index":6920},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6920},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12630398,"byte_end":12630409,"line_start":271,"line_end":271,"column_start":10,"column_end":21},"name":"WastExecute","qualname":"::ast::wast::WastExecute","value":"pub enum WastExecute<'a> {\n    Invoke(WastInvoke),\n    Module(ast::Module),\n    Get {\n        module: Option<ast::Id>,\n        global: &'a str,\n    },\n}","parent":null,"children":[{"krate":0,"index":6922},{"krate":0,"index":6925},{"krate":0,"index":6928}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12630349,"byte_end":12630371,"line_start":269,"line_end":269,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6934},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12631198,"byte_end":12631208,"line_start":301,"line_end":301,"column_start":12,"column_end":22},"name":"WastInvoke","qualname":"::ast::wast::WastInvoke","value":"WastInvoke { span, module, name, args }","parent":null,"children":[{"krate":0,"index":6936},{"krate":0,"index":6937},{"krate":0,"index":6938},{"krate":0,"index":6939}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12631147,"byte_end":12631169,"line_start":299,"line_end":299,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":6936},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12631223,"byte_end":12631227,"line_start":302,"line_end":302,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::wast::WastInvoke::span","value":"ast::token::Span","parent":{"krate":0,"index":6934},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6937},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12631248,"byte_end":12631254,"line_start":303,"line_end":303,"column_start":9,"column_end":15},"name":"module","qualname":"::ast::wast::WastInvoke::module","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":6934},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6938},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12631285,"byte_end":12631289,"line_start":304,"line_end":304,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::wast::WastInvoke::name","value":"&'a str","parent":{"krate":0,"index":6934},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6939},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12631308,"byte_end":12631312,"line_start":305,"line_end":305,"column_start":9,"column_end":13},"name":"args","qualname":"::ast::wast::WastInvoke::args","value":"std::vec::Vec<ast::expr::Expression<'a>>","parent":{"krate":0,"index":6934},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6945},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12631883,"byte_end":12631889,"line_start":329,"line_end":329,"column_start":5,"column_end":11},"name":"Module","qualname":"::ast::wast::QuoteModule::Module","value":"QuoteModule::Module(ast::Module)","parent":{"krate":0,"index":6943},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6948},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12631912,"byte_end":12631917,"line_start":330,"line_end":330,"column_start":5,"column_end":10},"name":"Quote","qualname":"::ast::wast::QuoteModule::Quote","value":"QuoteModule::Quote(Vec<&'a [u8]>)","parent":{"krate":0,"index":6943},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6943},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12631861,"byte_end":12631872,"line_start":328,"line_end":328,"column_start":10,"column_end":21},"name":"QuoteModule","qualname":"::ast::wast::QuoteModule","value":"pub enum QuoteModule<'a> { Module(ast::Module), Quote(Vec<&'a [u8]>), }","parent":null,"children":[{"krate":0,"index":6945},{"krate":0,"index":6948}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12631812,"byte_end":12631834,"line_start":326,"line_end":326,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":516},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":138053,"byte_end":138055,"line_start":325,"line_end":325,"column_start":9,"column_end":11},"name":"kw","qualname":"::ast::kw","value":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","parent":null,"children":[{"krate":0,"index":6961},{"krate":0,"index":6964},{"krate":0,"index":6966},{"krate":0,"index":6967},{"krate":0,"index":6954},{"krate":0,"index":6958},{"krate":0,"index":6976},{"krate":0,"index":6979},{"krate":0,"index":6981},{"krate":0,"index":6982},{"krate":0,"index":6969},{"krate":0,"index":6973},{"krate":0,"index":6991},{"krate":0,"index":6994},{"krate":0,"index":6996},{"krate":0,"index":6997},{"krate":0,"index":6984},{"krate":0,"index":6988},{"krate":0,"index":7006},{"krate":0,"index":7009},{"krate":0,"index":7011},{"krate":0,"index":7012},{"krate":0,"index":6999},{"krate":0,"index":7003},{"krate":0,"index":7021},{"krate":0,"index":7024},{"krate":0,"index":7026},{"krate":0,"index":7027},{"krate":0,"index":7014},{"krate":0,"index":7018},{"krate":0,"index":7036},{"krate":0,"index":7039},{"krate":0,"index":7041},{"krate":0,"index":7042},{"krate":0,"index":7029},{"krate":0,"index":7033},{"krate":0,"index":7051},{"krate":0,"index":7054},{"krate":0,"index":7056},{"krate":0,"index":7057},{"krate":0,"index":7044},{"krate":0,"index":7048},{"krate":0,"index":7066},{"krate":0,"index":7069},{"krate":0,"index":7071},{"krate":0,"index":7072},{"krate":0,"index":7059},{"krate":0,"index":7063},{"krate":0,"index":7081},{"krate":0,"index":7084},{"krate":0,"index":7086},{"krate":0,"index":7087},{"krate":0,"index":7074},{"krate":0,"index":7078},{"krate":0,"index":7096},{"krate":0,"index":7099},{"krate":0,"index":7101},{"krate":0,"index":7102},{"krate":0,"index":7089},{"krate":0,"index":7093},{"krate":0,"index":7111},{"krate":0,"index":7114},{"krate":0,"index":7116},{"krate":0,"index":7117},{"krate":0,"index":7104},{"krate":0,"index":7108},{"krate":0,"index":7126},{"krate":0,"index":7129},{"krate":0,"index":7131},{"krate":0,"index":7132},{"krate":0,"index":7119},{"krate":0,"index":7123},{"krate":0,"index":7141},{"krate":0,"index":7144},{"krate":0,"index":7146},{"krate":0,"index":7147},{"krate":0,"index":7134},{"krate":0,"index":7138},{"krate":0,"index":7156},{"krate":0,"index":7159},{"krate":0,"index":7161},{"krate":0,"index":7162},{"krate":0,"index":7149},{"krate":0,"index":7153},{"krate":0,"index":7171},{"krate":0,"index":7174},{"krate":0,"index":7176},{"krate":0,"index":7177},{"krate":0,"index":7164},{"krate":0,"index":7168},{"krate":0,"index":7186},{"krate":0,"index":7189},{"krate":0,"index":7191},{"krate":0,"index":7192},{"krate":0,"index":7179},{"krate":0,"index":7183},{"krate":0,"index":7201},{"krate":0,"index":7204},{"krate":0,"index":7206},{"krate":0,"index":7207},{"krate":0,"index":7194},{"krate":0,"index":7198},{"krate":0,"index":7216},{"krate":0,"index":7219},{"krate":0,"index":7221},{"krate":0,"index":7222},{"krate":0,"index":7209},{"krate":0,"index":7213},{"krate":0,"index":7231},{"krate":0,"index":7234},{"krate":0,"index":7236},{"krate":0,"index":7237},{"krate":0,"index":7224},{"krate":0,"index":7228},{"krate":0,"index":7246},{"krate":0,"index":7249},{"krate":0,"index":7251},{"krate":0,"index":7252},{"krate":0,"index":7239},{"krate":0,"index":7243},{"krate":0,"index":7261},{"krate":0,"index":7264},{"krate":0,"index":7266},{"krate":0,"index":7267},{"krate":0,"index":7254},{"krate":0,"index":7258},{"krate":0,"index":7276},{"krate":0,"index":7279},{"krate":0,"index":7281},{"krate":0,"index":7282},{"krate":0,"index":7269},{"krate":0,"index":7273},{"krate":0,"index":7291},{"krate":0,"index":7294},{"krate":0,"index":7296},{"krate":0,"index":7297},{"krate":0,"index":7284},{"krate":0,"index":7288},{"krate":0,"index":7306},{"krate":0,"index":7309},{"krate":0,"index":7311},{"krate":0,"index":7312},{"krate":0,"index":7299},{"krate":0,"index":7303},{"krate":0,"index":7321},{"krate":0,"index":7324},{"krate":0,"index":7326},{"krate":0,"index":7327},{"krate":0,"index":7314},{"krate":0,"index":7318},{"krate":0,"index":7336},{"krate":0,"index":7339},{"krate":0,"index":7341},{"krate":0,"index":7342},{"krate":0,"index":7329},{"krate":0,"index":7333},{"krate":0,"index":7351},{"krate":0,"index":7354},{"krate":0,"index":7356},{"krate":0,"index":7357},{"krate":0,"index":7344},{"krate":0,"index":7348},{"krate":0,"index":7366},{"krate":0,"index":7369},{"krate":0,"index":7371},{"krate":0,"index":7372},{"krate":0,"index":7359},{"krate":0,"index":7363},{"krate":0,"index":7381},{"krate":0,"index":7384},{"krate":0,"index":7386},{"krate":0,"index":7387},{"krate":0,"index":7374},{"krate":0,"index":7378},{"krate":0,"index":7396},{"krate":0,"index":7399},{"krate":0,"index":7401},{"krate":0,"index":7402},{"krate":0,"index":7389},{"krate":0,"index":7393},{"krate":0,"index":7411},{"krate":0,"index":7414},{"krate":0,"index":7416},{"krate":0,"index":7417},{"krate":0,"index":7404},{"krate":0,"index":7408},{"krate":0,"index":7426},{"krate":0,"index":7429},{"krate":0,"index":7431},{"krate":0,"index":7432},{"krate":0,"index":7419},{"krate":0,"index":7423},{"krate":0,"index":7441},{"krate":0,"index":7444},{"krate":0,"index":7446},{"krate":0,"index":7447},{"krate":0,"index":7434},{"krate":0,"index":7438},{"krate":0,"index":7456},{"krate":0,"index":7459},{"krate":0,"index":7461},{"krate":0,"index":7462},{"krate":0,"index":7449},{"krate":0,"index":7453},{"krate":0,"index":7471},{"krate":0,"index":7474},{"krate":0,"index":7476},{"krate":0,"index":7477},{"krate":0,"index":7464},{"krate":0,"index":7468},{"krate":0,"index":7486},{"krate":0,"index":7489},{"krate":0,"index":7491},{"krate":0,"index":7492},{"krate":0,"index":7479},{"krate":0,"index":7483},{"krate":0,"index":7501},{"krate":0,"index":7504},{"krate":0,"index":7506},{"krate":0,"index":7507},{"krate":0,"index":7494},{"krate":0,"index":7498},{"krate":0,"index":7516},{"krate":0,"index":7519},{"krate":0,"index":7521},{"krate":0,"index":7522},{"krate":0,"index":7509},{"krate":0,"index":7513},{"krate":0,"index":7531},{"krate":0,"index":7534},{"krate":0,"index":7536},{"krate":0,"index":7537},{"krate":0,"index":7524},{"krate":0,"index":7528},{"krate":0,"index":7546},{"krate":0,"index":7549},{"krate":0,"index":7551},{"krate":0,"index":7552},{"krate":0,"index":7539},{"krate":0,"index":7543},{"krate":0,"index":7561},{"krate":0,"index":7564},{"krate":0,"index":7566},{"krate":0,"index":7567},{"krate":0,"index":7554},{"krate":0,"index":7558},{"krate":0,"index":7576},{"krate":0,"index":7579},{"krate":0,"index":7581},{"krate":0,"index":7582},{"krate":0,"index":7569},{"krate":0,"index":7573},{"krate":0,"index":7591},{"krate":0,"index":7594},{"krate":0,"index":7596},{"krate":0,"index":7597},{"krate":0,"index":7584},{"krate":0,"index":7588},{"krate":0,"index":7606},{"krate":0,"index":7609},{"krate":0,"index":7611},{"krate":0,"index":7612},{"krate":0,"index":7599},{"krate":0,"index":7603},{"krate":0,"index":7621},{"krate":0,"index":7624},{"krate":0,"index":7626},{"krate":0,"index":7627},{"krate":0,"index":7614},{"krate":0,"index":7618},{"krate":0,"index":7636},{"krate":0,"index":7639},{"krate":0,"index":7641},{"krate":0,"index":7642},{"krate":0,"index":7629},{"krate":0,"index":7633},{"krate":0,"index":7651},{"krate":0,"index":7654},{"krate":0,"index":7656},{"krate":0,"index":7657},{"krate":0,"index":7644},{"krate":0,"index":7648},{"krate":0,"index":7666},{"krate":0,"index":7669},{"krate":0,"index":7671},{"krate":0,"index":7672},{"krate":0,"index":7659},{"krate":0,"index":7663},{"krate":0,"index":7681},{"krate":0,"index":7684},{"krate":0,"index":7686},{"krate":0,"index":7687},{"krate":0,"index":7674},{"krate":0,"index":7678},{"krate":0,"index":7696},{"krate":0,"index":7699},{"krate":0,"index":7701},{"krate":0,"index":7702},{"krate":0,"index":7689},{"krate":0,"index":7693},{"krate":0,"index":7711},{"krate":0,"index":7714},{"krate":0,"index":7716},{"krate":0,"index":7717},{"krate":0,"index":7704},{"krate":0,"index":7708},{"krate":0,"index":7726},{"krate":0,"index":7729},{"krate":0,"index":7731},{"krate":0,"index":7732},{"krate":0,"index":7719},{"krate":0,"index":7723},{"krate":0,"index":7741},{"krate":0,"index":7744},{"krate":0,"index":7746},{"krate":0,"index":7747},{"krate":0,"index":7734},{"krate":0,"index":7738},{"krate":0,"index":7756},{"krate":0,"index":7759},{"krate":0,"index":7761},{"krate":0,"index":7762},{"krate":0,"index":7749},{"krate":0,"index":7753},{"krate":0,"index":7771},{"krate":0,"index":7774},{"krate":0,"index":7776},{"krate":0,"index":7777},{"krate":0,"index":7764},{"krate":0,"index":7768},{"krate":0,"index":7786},{"krate":0,"index":7789},{"krate":0,"index":7791},{"krate":0,"index":7792},{"krate":0,"index":7779},{"krate":0,"index":7783},{"krate":0,"index":7801},{"krate":0,"index":7804},{"krate":0,"index":7806},{"krate":0,"index":7807},{"krate":0,"index":7794},{"krate":0,"index":7798},{"krate":0,"index":7816},{"krate":0,"index":7819},{"krate":0,"index":7821},{"krate":0,"index":7822},{"krate":0,"index":7809},{"krate":0,"index":7813},{"krate":0,"index":7831},{"krate":0,"index":7834},{"krate":0,"index":7836},{"krate":0,"index":7837},{"krate":0,"index":7824},{"krate":0,"index":7828},{"krate":0,"index":7846},{"krate":0,"index":7849},{"krate":0,"index":7851},{"krate":0,"index":7852},{"krate":0,"index":7839},{"krate":0,"index":7843},{"krate":0,"index":7861},{"krate":0,"index":7864},{"krate":0,"index":7866},{"krate":0,"index":7867},{"krate":0,"index":7854},{"krate":0,"index":7858},{"krate":0,"index":7876},{"krate":0,"index":7879},{"krate":0,"index":7881},{"krate":0,"index":7882},{"krate":0,"index":7869},{"krate":0,"index":7873},{"krate":0,"index":7891},{"krate":0,"index":7894},{"krate":0,"index":7896},{"krate":0,"index":7897},{"krate":0,"index":7884},{"krate":0,"index":7888},{"krate":0,"index":7906},{"krate":0,"index":7909},{"krate":0,"index":7911},{"krate":0,"index":7912},{"krate":0,"index":7899},{"krate":0,"index":7903},{"krate":0,"index":7921},{"krate":0,"index":7924},{"krate":0,"index":7926},{"krate":0,"index":7927},{"krate":0,"index":7914},{"krate":0,"index":7918},{"krate":0,"index":7936},{"krate":0,"index":7939},{"krate":0,"index":7941},{"krate":0,"index":7942},{"krate":0,"index":7929},{"krate":0,"index":7933},{"krate":0,"index":7951},{"krate":0,"index":7954},{"krate":0,"index":7956},{"krate":0,"index":7957},{"krate":0,"index":7944},{"krate":0,"index":7948},{"krate":0,"index":7966},{"krate":0,"index":7969},{"krate":0,"index":7971},{"krate":0,"index":7972},{"krate":0,"index":7959},{"krate":0,"index":7963},{"krate":0,"index":7981},{"krate":0,"index":7984},{"krate":0,"index":7986},{"krate":0,"index":7987},{"krate":0,"index":7974},{"krate":0,"index":7978},{"krate":0,"index":7996},{"krate":0,"index":7999},{"krate":0,"index":8001},{"krate":0,"index":8002},{"krate":0,"index":7989},{"krate":0,"index":7993},{"krate":0,"index":8011},{"krate":0,"index":8014},{"krate":0,"index":8016},{"krate":0,"index":8017},{"krate":0,"index":8004},{"krate":0,"index":8008},{"krate":0,"index":8026},{"krate":0,"index":8029},{"krate":0,"index":8031},{"krate":0,"index":8032},{"krate":0,"index":8019},{"krate":0,"index":8023},{"krate":0,"index":8041},{"krate":0,"index":8044},{"krate":0,"index":8046},{"krate":0,"index":8047},{"krate":0,"index":8034},{"krate":0,"index":8038},{"krate":0,"index":8056},{"krate":0,"index":8059},{"krate":0,"index":8061},{"krate":0,"index":8062},{"krate":0,"index":8049},{"krate":0,"index":8053},{"krate":0,"index":8071},{"krate":0,"index":8074},{"krate":0,"index":8076},{"krate":0,"index":8077},{"krate":0,"index":8064},{"krate":0,"index":8068},{"krate":0,"index":8086},{"krate":0,"index":8089},{"krate":0,"index":8091},{"krate":0,"index":8092},{"krate":0,"index":8079},{"krate":0,"index":8083},{"krate":0,"index":8101},{"krate":0,"index":8104},{"krate":0,"index":8106},{"krate":0,"index":8107},{"krate":0,"index":8094},{"krate":0,"index":8098},{"krate":0,"index":8116},{"krate":0,"index":8119},{"krate":0,"index":8121},{"krate":0,"index":8122},{"krate":0,"index":8109},{"krate":0,"index":8113},{"krate":0,"index":8131},{"krate":0,"index":8134},{"krate":0,"index":8136},{"krate":0,"index":8137},{"krate":0,"index":8124},{"krate":0,"index":8128},{"krate":0,"index":8146},{"krate":0,"index":8149},{"krate":0,"index":8151},{"krate":0,"index":8152},{"krate":0,"index":8139},{"krate":0,"index":8143},{"krate":0,"index":8161},{"krate":0,"index":8164},{"krate":0,"index":8166},{"krate":0,"index":8167},{"krate":0,"index":8154},{"krate":0,"index":8158},{"krate":0,"index":8176},{"krate":0,"index":8179},{"krate":0,"index":8181},{"krate":0,"index":8182},{"krate":0,"index":8169},{"krate":0,"index":8173},{"krate":0,"index":8191},{"krate":0,"index":8194},{"krate":0,"index":8196},{"krate":0,"index":8197},{"krate":0,"index":8184},{"krate":0,"index":8188},{"krate":0,"index":8206},{"krate":0,"index":8209},{"krate":0,"index":8211},{"krate":0,"index":8212},{"krate":0,"index":8199},{"krate":0,"index":8203},{"krate":0,"index":8221},{"krate":0,"index":8224},{"krate":0,"index":8226},{"krate":0,"index":8227},{"krate":0,"index":8214},{"krate":0,"index":8218},{"krate":0,"index":8236},{"krate":0,"index":8239},{"krate":0,"index":8241},{"krate":0,"index":8242},{"krate":0,"index":8229},{"krate":0,"index":8233},{"krate":0,"index":8251},{"krate":0,"index":8254},{"krate":0,"index":8256},{"krate":0,"index":8257},{"krate":0,"index":8244},{"krate":0,"index":8248},{"krate":0,"index":8266},{"krate":0,"index":8269},{"krate":0,"index":8271},{"krate":0,"index":8272},{"krate":0,"index":8259},{"krate":0,"index":8263},{"krate":0,"index":8281},{"krate":0,"index":8284},{"krate":0,"index":8286},{"krate":0,"index":8287},{"krate":0,"index":8274},{"krate":0,"index":8278},{"krate":0,"index":8296},{"krate":0,"index":8299},{"krate":0,"index":8301},{"krate":0,"index":8302},{"krate":0,"index":8289},{"krate":0,"index":8293},{"krate":0,"index":8311},{"krate":0,"index":8314},{"krate":0,"index":8316},{"krate":0,"index":8317},{"krate":0,"index":8304},{"krate":0,"index":8308},{"krate":0,"index":8326},{"krate":0,"index":8329},{"krate":0,"index":8331},{"krate":0,"index":8332},{"krate":0,"index":8319},{"krate":0,"index":8323},{"krate":0,"index":8341},{"krate":0,"index":8344},{"krate":0,"index":8346},{"krate":0,"index":8347},{"krate":0,"index":8334},{"krate":0,"index":8338},{"krate":0,"index":8356},{"krate":0,"index":8359},{"krate":0,"index":8361},{"krate":0,"index":8362},{"krate":0,"index":8349},{"krate":0,"index":8353},{"krate":0,"index":8371},{"krate":0,"index":8374},{"krate":0,"index":8376},{"krate":0,"index":8377},{"krate":0,"index":8364},{"krate":0,"index":8368},{"krate":0,"index":8386},{"krate":0,"index":8389},{"krate":0,"index":8391},{"krate":0,"index":8392},{"krate":0,"index":8379},{"krate":0,"index":8383},{"krate":0,"index":8401},{"krate":0,"index":8404},{"krate":0,"index":8406},{"krate":0,"index":8407},{"krate":0,"index":8394},{"krate":0,"index":8398},{"krate":0,"index":8416},{"krate":0,"index":8419},{"krate":0,"index":8421},{"krate":0,"index":8422},{"krate":0,"index":8409},{"krate":0,"index":8413}],"decl_id":null,"docs":" Common keyword used to parse WebAssembly text files.\n","sig":null,"attributes":[{"value":"/ Common keyword used to parse WebAssembly text files.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":137988,"byte_end":138044,"line_start":324,"line_end":324,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":6961},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":138078,"byte_end":138083,"line_start":326,"line_end":326,"column_start":21,"column_end":26},"name":"after","qualname":"::ast::kw::after","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6976},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":138106,"byte_end":138111,"line_start":327,"line_end":327,"column_start":21,"column_end":26},"name":"alias","qualname":"::ast::kw::alias","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6991},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":138134,"byte_end":138137,"line_start":328,"line_end":328,"column_start":21,"column_end":24},"name":"any","qualname":"::ast::kw::any","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7006},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":138160,"byte_end":138167,"line_start":329,"line_end":329,"column_start":21,"column_end":28},"name":"anyfunc","qualname":"::ast::kw::anyfunc","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7021},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":138190,"byte_end":138196,"line_start":330,"line_end":330,"column_start":21,"column_end":27},"name":"anyref","qualname":"::ast::kw::anyref","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7036},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":138219,"byte_end":138222,"line_start":331,"line_end":331,"column_start":21,"column_end":24},"name":"arg","qualname":"::ast::kw::arg","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7051},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":138245,"byte_end":138250,"line_start":332,"line_end":332,"column_start":21,"column_end":26},"name":"array","qualname":"::ast::kw::array","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7066},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":138273,"byte_end":138289,"line_start":333,"line_end":333,"column_start":21,"column_end":37},"name":"assert_exception","qualname":"::ast::kw::assert_exception","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7081},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":138312,"byte_end":138329,"line_start":334,"line_end":334,"column_start":21,"column_end":38},"name":"assert_exhaustion","qualname":"::ast::kw::assert_exhaustion","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7096},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":138352,"byte_end":138366,"line_start":335,"line_end":335,"column_start":21,"column_end":35},"name":"assert_invalid","qualname":"::ast::kw::assert_invalid","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7111},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":138389,"byte_end":138405,"line_start":336,"line_end":336,"column_start":21,"column_end":37},"name":"assert_malformed","qualname":"::ast::kw::assert_malformed","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7126},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":138428,"byte_end":138441,"line_start":337,"line_end":337,"column_start":21,"column_end":34},"name":"assert_return","qualname":"::ast::kw::assert_return","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7141},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":138464,"byte_end":138492,"line_start":338,"line_end":338,"column_start":21,"column_end":49},"name":"assert_return_arithmetic_nan","qualname":"::ast::kw::assert_return_arithmetic_nan","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7156},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":138515,"byte_end":138549,"line_start":339,"line_end":339,"column_start":21,"column_end":55},"name":"assert_return_arithmetic_nan_f32x4","qualname":"::ast::kw::assert_return_arithmetic_nan_f32x4","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7171},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":138572,"byte_end":138606,"line_start":340,"line_end":340,"column_start":21,"column_end":55},"name":"assert_return_arithmetic_nan_f64x2","qualname":"::ast::kw::assert_return_arithmetic_nan_f64x2","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7186},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":138629,"byte_end":138656,"line_start":341,"line_end":341,"column_start":21,"column_end":48},"name":"assert_return_canonical_nan","qualname":"::ast::kw::assert_return_canonical_nan","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7201},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":138679,"byte_end":138712,"line_start":342,"line_end":342,"column_start":21,"column_end":54},"name":"assert_return_canonical_nan_f32x4","qualname":"::ast::kw::assert_return_canonical_nan_f32x4","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7216},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":138735,"byte_end":138768,"line_start":343,"line_end":343,"column_start":21,"column_end":54},"name":"assert_return_canonical_nan_f64x2","qualname":"::ast::kw::assert_return_canonical_nan_f64x2","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7231},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":138791,"byte_end":138809,"line_start":344,"line_end":344,"column_start":21,"column_end":39},"name":"assert_return_func","qualname":"::ast::kw::assert_return_func","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7246},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":138832,"byte_end":138843,"line_start":345,"line_end":345,"column_start":21,"column_end":32},"name":"assert_trap","qualname":"::ast::kw::assert_trap","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7261},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":138866,"byte_end":138883,"line_start":346,"line_end":346,"column_start":21,"column_end":38},"name":"assert_unlinkable","qualname":"::ast::kw::assert_unlinkable","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7276},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":138906,"byte_end":138912,"line_start":347,"line_end":347,"column_start":21,"column_end":27},"name":"before","qualname":"::ast::kw::before","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7291},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":138935,"byte_end":138941,"line_start":348,"line_end":348,"column_start":21,"column_end":27},"name":"binary","qualname":"::ast::kw::binary","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7306},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":138964,"byte_end":138969,"line_start":349,"line_end":349,"column_start":21,"column_end":26},"name":"block","qualname":"::ast::kw::block","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7321},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":138992,"byte_end":138997,"line_start":350,"line_end":350,"column_start":21,"column_end":26},"name":"catch","qualname":"::ast::kw::catch","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7336},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":139020,"byte_end":139029,"line_start":351,"line_end":351,"column_start":21,"column_end":30},"name":"catch_all","qualname":"::ast::kw::catch_all","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7351},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":139052,"byte_end":139056,"line_start":352,"line_end":352,"column_start":21,"column_end":25},"name":"code","qualname":"::ast::kw::code","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7366},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":139079,"byte_end":139083,"line_start":353,"line_end":353,"column_start":21,"column_end":25},"name":"data","qualname":"::ast::kw::data","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7381},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":139106,"byte_end":139113,"line_start":354,"line_end":354,"column_start":21,"column_end":28},"name":"dataref","qualname":"::ast::kw::dataref","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7396},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":139136,"byte_end":139143,"line_start":355,"line_end":355,"column_start":21,"column_end":28},"name":"declare","qualname":"::ast::kw::declare","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7411},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":139166,"byte_end":139174,"line_start":356,"line_end":356,"column_start":21,"column_end":29},"name":"delegate","qualname":"::ast::kw::delegate","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7426},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":139197,"byte_end":139201,"line_start":357,"line_end":357,"column_start":21,"column_end":25},"name":"r#do","qualname":"::ast::kw::r#do","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7441},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":139231,"byte_end":139235,"line_start":358,"line_end":358,"column_start":21,"column_end":25},"name":"elem","qualname":"::ast::kw::elem","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7456},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":139258,"byte_end":139261,"line_start":359,"line_end":359,"column_start":21,"column_end":24},"name":"end","qualname":"::ast::kw::end","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7471},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":139284,"byte_end":139287,"line_start":360,"line_end":360,"column_start":21,"column_end":24},"name":"tag","qualname":"::ast::kw::tag","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7486},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":139310,"byte_end":139316,"line_start":361,"line_end":361,"column_start":21,"column_end":27},"name":"export","qualname":"::ast::kw::export","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7501},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":139339,"byte_end":139347,"line_start":362,"line_end":362,"column_start":21,"column_end":29},"name":"r#extern","qualname":"::ast::kw::r#extern","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7516},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":139381,"byte_end":139390,"line_start":363,"line_end":363,"column_start":21,"column_end":30},"name":"externref","qualname":"::ast::kw::externref","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7531},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":139413,"byte_end":139415,"line_start":364,"line_end":364,"column_start":21,"column_end":23},"name":"eq","qualname":"::ast::kw::eq","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7546},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":139438,"byte_end":139443,"line_start":365,"line_end":365,"column_start":21,"column_end":26},"name":"eqref","qualname":"::ast::kw::eqref","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7561},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":139466,"byte_end":139469,"line_start":366,"line_end":366,"column_start":21,"column_end":24},"name":"f32","qualname":"::ast::kw::f32","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7576},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":139492,"byte_end":139497,"line_start":367,"line_end":367,"column_start":21,"column_end":26},"name":"f32x4","qualname":"::ast::kw::f32x4","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7591},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":139520,"byte_end":139523,"line_start":368,"line_end":368,"column_start":21,"column_end":24},"name":"f64","qualname":"::ast::kw::f64","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7606},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":139546,"byte_end":139551,"line_start":369,"line_end":369,"column_start":21,"column_end":26},"name":"f64x2","qualname":"::ast::kw::f64x2","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7621},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":139574,"byte_end":139579,"line_start":370,"line_end":370,"column_start":21,"column_end":26},"name":"field","qualname":"::ast::kw::field","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7636},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":139602,"byte_end":139607,"line_start":371,"line_end":371,"column_start":21,"column_end":26},"name":"first","qualname":"::ast::kw::first","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7651},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":139630,"byte_end":139634,"line_start":372,"line_end":372,"column_start":21,"column_end":25},"name":"func","qualname":"::ast::kw::func","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7666},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":139657,"byte_end":139664,"line_start":373,"line_end":373,"column_start":21,"column_end":28},"name":"funcref","qualname":"::ast::kw::funcref","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7681},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":139687,"byte_end":139690,"line_start":374,"line_end":374,"column_start":21,"column_end":24},"name":"get","qualname":"::ast::kw::get","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7696},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":139713,"byte_end":139719,"line_start":375,"line_end":375,"column_start":21,"column_end":27},"name":"global","qualname":"::ast::kw::global","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7711},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":139742,"byte_end":139745,"line_start":376,"line_end":376,"column_start":21,"column_end":24},"name":"i16","qualname":"::ast::kw::i16","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7726},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":139768,"byte_end":139773,"line_start":377,"line_end":377,"column_start":21,"column_end":26},"name":"i16x8","qualname":"::ast::kw::i16x8","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7741},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":139796,"byte_end":139799,"line_start":378,"line_end":378,"column_start":21,"column_end":24},"name":"i31","qualname":"::ast::kw::i31","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7756},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":139822,"byte_end":139828,"line_start":379,"line_end":379,"column_start":21,"column_end":27},"name":"i31ref","qualname":"::ast::kw::i31ref","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7771},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":139851,"byte_end":139854,"line_start":380,"line_end":380,"column_start":21,"column_end":24},"name":"i32","qualname":"::ast::kw::i32","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7786},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":139877,"byte_end":139882,"line_start":381,"line_end":381,"column_start":21,"column_end":26},"name":"i32x4","qualname":"::ast::kw::i32x4","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7801},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":139905,"byte_end":139908,"line_start":382,"line_end":382,"column_start":21,"column_end":24},"name":"i64","qualname":"::ast::kw::i64","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7816},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":139931,"byte_end":139936,"line_start":383,"line_end":383,"column_start":21,"column_end":26},"name":"i64x2","qualname":"::ast::kw::i64x2","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7831},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":139959,"byte_end":139961,"line_start":384,"line_end":384,"column_start":21,"column_end":23},"name":"i8","qualname":"::ast::kw::i8","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7846},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":139984,"byte_end":139989,"line_start":385,"line_end":385,"column_start":21,"column_end":26},"name":"i8x16","qualname":"::ast::kw::i8x16","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7861},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":140012,"byte_end":140018,"line_start":386,"line_end":386,"column_start":21,"column_end":27},"name":"import","qualname":"::ast::kw::import","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7876},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":140041,"byte_end":140049,"line_start":387,"line_end":387,"column_start":21,"column_end":29},"name":"instance","qualname":"::ast::kw::instance","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7891},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":140072,"byte_end":140083,"line_start":388,"line_end":388,"column_start":21,"column_end":32},"name":"instantiate","qualname":"::ast::kw::instantiate","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7906},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":140106,"byte_end":140112,"line_start":389,"line_end":389,"column_start":21,"column_end":27},"name":"invoke","qualname":"::ast::kw::invoke","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7921},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":140135,"byte_end":140139,"line_start":390,"line_end":390,"column_start":21,"column_end":25},"name":"item","qualname":"::ast::kw::item","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7936},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":140162,"byte_end":140166,"line_start":391,"line_end":391,"column_start":21,"column_end":25},"name":"last","qualname":"::ast::kw::last","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7951},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":140189,"byte_end":140194,"line_start":392,"line_end":392,"column_start":21,"column_end":26},"name":"local","qualname":"::ast::kw::local","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7966},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":140217,"byte_end":140223,"line_start":393,"line_end":393,"column_start":21,"column_end":27},"name":"memory","qualname":"::ast::kw::memory","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7981},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":140246,"byte_end":140252,"line_start":394,"line_end":394,"column_start":21,"column_end":27},"name":"module","qualname":"::ast::kw::module","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7996},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":140275,"byte_end":140285,"line_start":395,"line_end":395,"column_start":21,"column_end":31},"name":"modulecode","qualname":"::ast::kw::modulecode","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8011},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":140308,"byte_end":140322,"line_start":396,"line_end":396,"column_start":21,"column_end":35},"name":"nan_arithmetic","qualname":"::ast::kw::nan_arithmetic","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8026},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":140364,"byte_end":140377,"line_start":397,"line_end":397,"column_start":21,"column_end":34},"name":"nan_canonical","qualname":"::ast::kw::nan_canonical","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8041},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":140418,"byte_end":140422,"line_start":398,"line_end":398,"column_start":21,"column_end":25},"name":"null","qualname":"::ast::kw::null","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8056},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":140445,"byte_end":140452,"line_start":399,"line_end":399,"column_start":21,"column_end":28},"name":"nullref","qualname":"::ast::kw::nullref","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8071},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":140475,"byte_end":140481,"line_start":400,"line_end":400,"column_start":21,"column_end":27},"name":"offset","qualname":"::ast::kw::offset","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8086},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":140504,"byte_end":140509,"line_start":401,"line_end":401,"column_start":21,"column_end":26},"name":"outer","qualname":"::ast::kw::outer","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8101},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":140532,"byte_end":140537,"line_start":402,"line_end":402,"column_start":21,"column_end":26},"name":"param","qualname":"::ast::kw::param","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8116},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":140560,"byte_end":140566,"line_start":403,"line_end":403,"column_start":21,"column_end":27},"name":"parent","qualname":"::ast::kw::parent","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8131},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":140589,"byte_end":140596,"line_start":404,"line_end":404,"column_start":21,"column_end":28},"name":"passive","qualname":"::ast::kw::passive","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8146},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":140619,"byte_end":140624,"line_start":405,"line_end":405,"column_start":21,"column_end":26},"name":"quote","qualname":"::ast::kw::quote","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8161},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":140647,"byte_end":140653,"line_start":406,"line_end":406,"column_start":21,"column_end":27},"name":"r#else","qualname":"::ast::kw::r#else","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8176},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":140685,"byte_end":140689,"line_start":407,"line_end":407,"column_start":21,"column_end":25},"name":"r#if","qualname":"::ast::kw::r#if","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8191},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":140719,"byte_end":140725,"line_start":408,"line_end":408,"column_start":21,"column_end":27},"name":"r#loop","qualname":"::ast::kw::r#loop","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8206},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":140757,"byte_end":140762,"line_start":409,"line_end":409,"column_start":21,"column_end":26},"name":"r#mut","qualname":"::ast::kw::r#mut","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8221},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":140793,"byte_end":140799,"line_start":410,"line_end":410,"column_start":21,"column_end":27},"name":"r#type","qualname":"::ast::kw::r#type","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8236},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":140831,"byte_end":140836,"line_start":411,"line_end":411,"column_start":21,"column_end":26},"name":"r#ref","qualname":"::ast::kw::r#ref","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8251},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":140867,"byte_end":140875,"line_start":412,"line_end":412,"column_start":21,"column_end":29},"name":"ref_func","qualname":"::ast::kw::ref_func","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8266},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":140911,"byte_end":140919,"line_start":413,"line_end":413,"column_start":21,"column_end":29},"name":"ref_null","qualname":"::ast::kw::ref_null","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8281},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":140955,"byte_end":140963,"line_start":414,"line_end":414,"column_start":21,"column_end":29},"name":"register","qualname":"::ast::kw::register","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8296},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":140986,"byte_end":140992,"line_start":415,"line_end":415,"column_start":21,"column_end":27},"name":"result","qualname":"::ast::kw::result","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8311},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":141015,"byte_end":141018,"line_start":416,"line_end":416,"column_start":21,"column_end":24},"name":"rtt","qualname":"::ast::kw::rtt","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8326},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":141041,"byte_end":141047,"line_start":417,"line_end":417,"column_start":21,"column_end":27},"name":"shared","qualname":"::ast::kw::shared","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8341},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":141070,"byte_end":141075,"line_start":418,"line_end":418,"column_start":21,"column_end":26},"name":"start","qualname":"::ast::kw::start","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8356},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":141098,"byte_end":141106,"line_start":419,"line_end":419,"column_start":21,"column_end":29},"name":"r#struct","qualname":"::ast::kw::r#struct","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8371},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":141140,"byte_end":141145,"line_start":420,"line_end":420,"column_start":21,"column_end":26},"name":"table","qualname":"::ast::kw::table","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8386},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":141168,"byte_end":141172,"line_start":421,"line_end":421,"column_start":21,"column_end":25},"name":"then","qualname":"::ast::kw::then","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8401},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":141195,"byte_end":141200,"line_start":422,"line_end":422,"column_start":21,"column_end":26},"name":"r#try","qualname":"::ast::kw::r#try","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8416},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":141231,"byte_end":141235,"line_start":423,"line_end":423,"column_start":21,"column_end":25},"name":"v128","qualname":"::ast::kw::v128","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129273,"byte_end":129303,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":129312,"byte_end":129334,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":517},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":141310,"byte_end":141320,"line_start":427,"line_end":427,"column_start":9,"column_end":19},"name":"annotation","qualname":"::ast::annotation","value":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","parent":null,"children":[{"krate":0,"index":8431},{"krate":0,"index":8434},{"krate":0,"index":8424},{"krate":0,"index":8428},{"krate":0,"index":8443},{"krate":0,"index":8446},{"krate":0,"index":8436},{"krate":0,"index":8440}],"decl_id":null,"docs":" Common annotations used to parse WebAssembly text files.\n","sig":null,"attributes":[{"value":"/ Common annotations used to parse WebAssembly text files.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":141241,"byte_end":141301,"line_start":426,"line_end":426,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":8431},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":141339,"byte_end":141345,"line_start":428,"line_end":428,"column_start":17,"column_end":23},"name":"custom","qualname":"::ast::annotation::custom","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":136466,"byte_end":136496,"line_start":262,"line_end":262,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":136505,"byte_end":136527,"line_start":263,"line_end":263,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8443},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":141364,"byte_end":141368,"line_start":429,"line_end":429,"column_start":17,"column_end":21},"name":"name","qualname":"::ast::annotation::name","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":136466,"byte_end":136496,"line_start":262,"line_end":262,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\mod.rs","byte_start":136505,"byte_end":136527,"line_start":263,"line_end":263,"column_start":9,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":519},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"lexer","qualname":"::lexer","value":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","parent":null,"children":[{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":524},{"krate":0,"index":527},{"krate":0,"index":530},{"krate":0,"index":533},{"krate":0,"index":536},{"krate":0,"index":8448},{"krate":0,"index":8453},{"krate":0,"index":8456},{"krate":0,"index":8491},{"krate":0,"index":8494},{"krate":0,"index":8496},{"krate":0,"index":8500},{"krate":0,"index":8535},{"krate":0,"index":8537},{"krate":0,"index":8539},{"krate":0,"index":8540},{"krate":0,"index":8543},{"krate":0,"index":8548},{"krate":0,"index":8550},{"krate":0,"index":8551},{"krate":0,"index":8553},{"krate":0,"index":8554},{"krate":0,"index":8556},{"krate":0,"index":8560},{"krate":0,"index":8563},{"krate":0,"index":8565},{"krate":0,"index":8569},{"krate":0,"index":8575},{"krate":0,"index":8578},{"krate":0,"index":8580},{"krate":0,"index":8584},{"krate":0,"index":8588},{"krate":0,"index":8591},{"krate":0,"index":8593},{"krate":0,"index":8597},{"krate":0,"index":8601},{"krate":0,"index":8604},{"krate":0,"index":8606},{"krate":0,"index":8610},{"krate":0,"index":8614},{"krate":0,"index":8617},{"krate":0,"index":8619},{"krate":0,"index":8623},{"krate":0,"index":8627},{"krate":0,"index":8630},{"krate":0,"index":8632},{"krate":0,"index":8636},{"krate":0,"index":8648},{"krate":0,"index":8651},{"krate":0,"index":8653},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":583},{"krate":0,"index":587},{"krate":0,"index":590},{"krate":0,"index":595},{"krate":0,"index":599},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":607},{"krate":0,"index":608}],"decl_id":null,"docs":" Definition of a lexer for the WebAssembly text format.","sig":null,"attributes":[{"value":"/ Definition of a lexer for the WebAssembly text format.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":141374,"byte_end":141432,"line_start":1,"line_end":1,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":141433,"byte_end":141436,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides a [`Lexer`][] type which is an iterate over the raw","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":141437,"byte_end":141513,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"/ tokens of a WebAssembly text file. A [`Lexer`][] accounts for every single","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":141514,"byte_end":141592,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ byte in a WebAssembly text field, returning tokens even for comments and","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":141593,"byte_end":141669,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/ whitespace. Typically you'll ignore comments and whitespace, however.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":141670,"byte_end":141743,"line_start":6,"line_end":6,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":141744,"byte_end":141747,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ If you'd like to iterate over the tokens in a file you can do so via:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":141748,"byte_end":141821,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":141822,"byte_end":141825,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":141826,"byte_end":141833,"line_start":10,"line_end":10,"column_start":1,"column_end":8}},{"value":"/ # fn foo() -> Result<(), wast::Error> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":141834,"byte_end":141877,"line_start":11,"line_end":11,"column_start":1,"column_end":44}},{"value":"/ use wast::lexer::Lexer;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":141878,"byte_end":141905,"line_start":12,"line_end":12,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":141906,"byte_end":141909,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ let wat = \"(module (func $foo))\";","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":141910,"byte_end":141947,"line_start":14,"line_end":14,"column_start":1,"column_end":38}},{"value":"/ for token in Lexer::new(wat) {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":141948,"byte_end":141982,"line_start":15,"line_end":15,"column_start":1,"column_end":35}},{"value":"/     println!(\"{:?}\", token?);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":141983,"byte_end":142016,"line_start":16,"line_end":16,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":142017,"byte_end":142022,"line_start":17,"line_end":17,"column_start":1,"column_end":6}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":142023,"byte_end":142035,"line_start":18,"line_end":18,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":142036,"byte_end":142043,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":142044,"byte_end":142051,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":142052,"byte_end":142055,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Note that you'll typically not use this module but will rather use","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":142056,"byte_end":142126,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ [`ParseBuffer`](crate::parser::ParseBuffer) instead.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":142127,"byte_end":142183,"line_start":23,"line_end":23,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":142184,"byte_end":142187,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`Lexer`]: crate::lexer::Lexer","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":142188,"byte_end":142222,"line_start":25,"line_end":25,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":8448},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":142611,"byte_end":142616,"line_start":39,"line_end":39,"column_start":12,"column_end":17},"name":"Lexer","qualname":"::lexer::Lexer","value":"Lexer {  }","parent":null,"children":[{"krate":0,"index":8450},{"krate":0,"index":8451},{"krate":0,"index":8452}],"decl_id":null,"docs":" A structure used to lex the s-expression syntax of WAT files.","sig":null,"attributes":[{"value":"/ A structure used to lex the s-expression syntax of WAT files.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":142316,"byte_end":142381,"line_start":33,"line_end":33,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":142382,"byte_end":142385,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ This structure is used to generate [`Source`] items, which should account for","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":142386,"byte_end":142467,"line_start":35,"line_end":35,"column_start":1,"column_end":82}},{"value":"/ every single byte of the input as we iterate over it. A [`LexError`] is","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":142468,"byte_end":142543,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/ returned for any non-lexable text.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":142544,"byte_end":142582,"line_start":37,"line_end":37,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8458},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":143026,"byte_end":143037,"line_start":53,"line_end":53,"column_start":5,"column_end":16},"name":"LineComment","qualname":"::lexer::Token::LineComment","value":"Token::LineComment(&'a str)","parent":{"krate":0,"index":8456},"children":[],"decl_id":null,"docs":" A line comment, preceded with `;;`\n","sig":null,"attributes":[{"value":"/ A line comment, preceded with `;;`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":142983,"byte_end":143021,"line_start":52,"line_end":52,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8461},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":143146,"byte_end":143158,"line_start":57,"line_end":57,"column_start":5,"column_end":17},"name":"BlockComment","qualname":"::lexer::Token::BlockComment","value":"Token::BlockComment(&'a str)","parent":{"krate":0,"index":8456},"children":[],"decl_id":null,"docs":" A block comment, surrounded by `(;` and `;)`. Note that these can be\n nested.\n","sig":null,"attributes":[{"value":"/ A block comment, surrounded by `(;` and `;)`. Note that these can be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":143053,"byte_end":143125,"line_start":55,"line_end":55,"column_start":5,"column_end":77}},{"value":"/ nested.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":143130,"byte_end":143141,"line_start":56,"line_end":56,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8464},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":143231,"byte_end":143241,"line_start":60,"line_end":60,"column_start":5,"column_end":15},"name":"Whitespace","qualname":"::lexer::Token::Whitespace","value":"Token::Whitespace(&'a str)","parent":{"krate":0,"index":8456},"children":[],"decl_id":null,"docs":" A fragment of source that represents whitespace.\n","sig":null,"attributes":[{"value":"/ A fragment of source that represents whitespace.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":143174,"byte_end":143226,"line_start":59,"line_end":59,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8467},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":143336,"byte_end":143342,"line_start":63,"line_end":63,"column_start":5,"column_end":11},"name":"LParen","qualname":"::lexer::Token::LParen","value":"Token::LParen(&'a str)","parent":{"krate":0,"index":8456},"children":[],"decl_id":null,"docs":" A left-parenthesis, including the source text for where it comes from.\n","sig":null,"attributes":[{"value":"/ A left-parenthesis, including the source text for where it comes from.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":143257,"byte_end":143331,"line_start":62,"line_end":62,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8470},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":143437,"byte_end":143443,"line_start":65,"line_end":65,"column_start":5,"column_end":11},"name":"RParen","qualname":"::lexer::Token::RParen","value":"Token::RParen(&'a str)","parent":{"krate":0,"index":8456},"children":[],"decl_id":null,"docs":" A right-parenthesis, including the source text for where it comes from.\n","sig":null,"attributes":[{"value":"/ A right-parenthesis, including the source text for where it comes from.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":143357,"byte_end":143432,"line_start":64,"line_end":64,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8473},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":143520,"byte_end":143526,"line_start":68,"line_end":68,"column_start":5,"column_end":11},"name":"String","qualname":"::lexer::Token::String","value":"Token::String(WasmString)","parent":{"krate":0,"index":8456},"children":[],"decl_id":null,"docs":" A string literal, which is actually a list of bytes.\n","sig":null,"attributes":[{"value":"/ A string literal, which is actually a list of bytes.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":143459,"byte_end":143515,"line_start":67,"line_end":67,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8476},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":143691,"byte_end":143693,"line_start":74,"line_end":74,"column_start":5,"column_end":7},"name":"Id","qualname":"::lexer::Token::Id","value":"Token::Id(&'a str)","parent":{"krate":0,"index":8456},"children":[],"decl_id":null,"docs":" An identifier (like `$foo`).","sig":null,"attributes":[{"value":"/ An identifier (like `$foo`).","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":143549,"byte_end":143581,"line_start":70,"line_end":70,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":143586,"byte_end":143589,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ All identifiers start with `$` and the payload here is the original","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":143594,"byte_end":143665,"line_start":72,"line_end":72,"column_start":5,"column_end":76}},{"value":"/ source text.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":143670,"byte_end":143686,"line_start":73,"line_end":73,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8479},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":143845,"byte_end":143852,"line_start":79,"line_end":79,"column_start":5,"column_end":12},"name":"Keyword","qualname":"::lexer::Token::Keyword","value":"Token::Keyword(&'a str)","parent":{"krate":0,"index":8456},"children":[],"decl_id":null,"docs":" A keyword, or something that starts with an alphabetic character.","sig":null,"attributes":[{"value":"/ A keyword, or something that starts with an alphabetic character.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":143709,"byte_end":143778,"line_start":76,"line_end":76,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":143783,"byte_end":143786,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ The payload here is the original source text.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":143791,"byte_end":143840,"line_start":78,"line_end":78,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8482},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":144027,"byte_end":144035,"line_start":83,"line_end":83,"column_start":5,"column_end":13},"name":"Reserved","qualname":"::lexer::Token::Reserved","value":"Token::Reserved(&'a str)","parent":{"krate":0,"index":8456},"children":[],"decl_id":null,"docs":" A reserved series of `idchar` symbols. Unknown what this is meant to be\n used for, you'll probably generate an error about an unexpected token.\n","sig":null,"attributes":[{"value":"/ A reserved series of `idchar` symbols. Unknown what this is meant to be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":143868,"byte_end":143943,"line_start":81,"line_end":81,"column_start":5,"column_end":80}},{"value":"/ used for, you'll probably generate an error about an unexpected token.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":143948,"byte_end":144022,"line_start":82,"line_end":82,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8485},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":144071,"byte_end":144078,"line_start":86,"line_end":86,"column_start":5,"column_end":12},"name":"Integer","qualname":"::lexer::Token::Integer","value":"Token::Integer(Integer)","parent":{"krate":0,"index":8456},"children":[],"decl_id":null,"docs":" An integer.\n","sig":null,"attributes":[{"value":"/ An integer.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":144051,"byte_end":144066,"line_start":85,"line_end":85,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8488},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":144115,"byte_end":144120,"line_start":89,"line_end":89,"column_start":5,"column_end":10},"name":"Float","qualname":"::lexer::Token::Float","value":"Token::Float(Float)","parent":{"krate":0,"index":8456},"children":[],"decl_id":null,"docs":" A float.\n","sig":null,"attributes":[{"value":"/ A float.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":144098,"byte_end":144110,"line_start":88,"line_end":88,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":8456},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":142967,"byte_end":142972,"line_start":51,"line_end":51,"column_start":10,"column_end":15},"name":"Token","qualname":"::lexer::Token","value":"pub enum Token<'a> {\n    LineComment(&'a str),\n    BlockComment(&'a str),\n    Whitespace(&'a str),\n    LParen(&'a str),\n    RParen(&'a str),\n    String(WasmString),\n    Id(&'a str),\n    Keyword(&'a str),\n    Reserved(&'a str),\n    Integer(Integer),\n    Float(Float),\n}","parent":null,"children":[{"krate":0,"index":8458},{"krate":0,"index":8461},{"krate":0,"index":8464},{"krate":0,"index":8467},{"krate":0,"index":8470},{"krate":0,"index":8473},{"krate":0,"index":8476},{"krate":0,"index":8479},{"krate":0,"index":8482},{"krate":0,"index":8485},{"krate":0,"index":8488}],"decl_id":null,"docs":" A fragment of source lex'd from an input string.","sig":null,"attributes":[{"value":"/ A fragment of source lex'd from an input string.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":142705,"byte_end":142757,"line_start":45,"line_end":45,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":142758,"byte_end":142761,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ This enumeration contains all kinds of fragments, including comments and","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":142762,"byte_end":142838,"line_start":47,"line_end":47,"column_start":1,"column_end":77}},{"value":"/ whitespace. For most cases you'll probably ignore these and simply look at","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":142839,"byte_end":142917,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/ tokens.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":142918,"byte_end":142929,"line_start":49,"line_end":49,"column_start":1,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8501},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":144501,"byte_end":144521,"line_start":100,"line_end":100,"column_start":5,"column_end":25},"name":"DanglingBlockComment","qualname":"::lexer::LexError::DanglingBlockComment","value":"LexError::DanglingBlockComment","parent":{"krate":0,"index":8500},"children":[],"decl_id":null,"docs":" A dangling block comment was found with an unbalanced `(;` which was\n never terminated in the file.\n","sig":null,"attributes":[{"value":"/ A dangling block comment was found with an unbalanced `(;` which was","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":144386,"byte_end":144458,"line_start":98,"line_end":98,"column_start":5,"column_end":77}},{"value":"/ never terminated in the file.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":144463,"byte_end":144496,"line_start":99,"line_end":99,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8503},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":144639,"byte_end":144649,"line_start":104,"line_end":104,"column_start":5,"column_end":15},"name":"Unexpected","qualname":"::lexer::LexError::Unexpected","value":"LexError::Unexpected(char)","parent":{"krate":0,"index":8500},"children":[],"decl_id":null,"docs":" An unexpected character was encountered when generally parsing and\n looking for something else.\n","sig":null,"attributes":[{"value":"/ An unexpected character was encountered when generally parsing and","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":144528,"byte_end":144598,"line_start":102,"line_end":102,"column_start":5,"column_end":75}},{"value":"/ looking for something else.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":144603,"byte_end":144634,"line_start":103,"line_end":103,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8506},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":144719,"byte_end":144739,"line_start":107,"line_end":107,"column_start":5,"column_end":25},"name":"InvalidStringElement","qualname":"::lexer::LexError::InvalidStringElement","value":"LexError::InvalidStringElement(char)","parent":{"krate":0,"index":8500},"children":[],"decl_id":null,"docs":" An invalid `char` in a string literal was found.\n","sig":null,"attributes":[{"value":"/ An invalid `char` in a string literal was found.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":144662,"byte_end":144714,"line_start":106,"line_end":106,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8509},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":144855,"byte_end":144874,"line_start":111,"line_end":111,"column_start":5,"column_end":24},"name":"InvalidStringEscape","qualname":"::lexer::LexError::InvalidStringEscape","value":"LexError::InvalidStringEscape(char)","parent":{"krate":0,"index":8500},"children":[],"decl_id":null,"docs":" An invalid string escape letter was found (the thing after the `\\` in\n string literals)\n","sig":null,"attributes":[{"value":"/ An invalid string escape letter was found (the thing after the `\\` in","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":144752,"byte_end":144825,"line_start":109,"line_end":109,"column_start":5,"column_end":78}},{"value":"/ string literals)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":144830,"byte_end":144850,"line_start":110,"line_end":110,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8512},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":144935,"byte_end":144950,"line_start":114,"line_end":114,"column_start":5,"column_end":20},"name":"InvalidHexDigit","qualname":"::lexer::LexError::InvalidHexDigit","value":"LexError::InvalidHexDigit(char)","parent":{"krate":0,"index":8500},"children":[],"decl_id":null,"docs":" An invalid hexadecimal digit was found.\n","sig":null,"attributes":[{"value":"/ An invalid hexadecimal digit was found.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":144887,"byte_end":144930,"line_start":113,"line_end":113,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8515},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":145007,"byte_end":145019,"line_start":117,"line_end":117,"column_start":5,"column_end":17},"name":"InvalidDigit","qualname":"::lexer::LexError::InvalidDigit","value":"LexError::InvalidDigit(char)","parent":{"krate":0,"index":8500},"children":[],"decl_id":null,"docs":" An invalid base-10 digit was found.\n","sig":null,"attributes":[{"value":"/ An invalid base-10 digit was found.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":144963,"byte_end":145002,"line_start":116,"line_end":116,"column_start":5,"column_end":44}}]},{"kind":"StructVariant","id":{"krate":0,"index":8518},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":145153,"byte_end":145161,"line_start":121,"line_end":121,"column_start":5,"column_end":13},"name":"Expected","qualname":"::lexer::LexError::Expected","value":"LexError::Expected { wanted, found }","parent":{"krate":0,"index":8500},"children":[],"decl_id":null,"docs":" Parsing expected `wanted` but ended up finding `found` instead where the\n two characters aren't the same.\n","sig":null,"attributes":[{"value":"/ Parsing expected `wanted` but ended up finding `found` instead where the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":145032,"byte_end":145108,"line_start":119,"line_end":119,"column_start":5,"column_end":81}},{"value":"/ two characters aren't the same.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":145113,"byte_end":145148,"line_start":120,"line_end":120,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8521},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":145405,"byte_end":145418,"line_start":129,"line_end":129,"column_start":5,"column_end":18},"name":"UnexpectedEof","qualname":"::lexer::LexError::UnexpectedEof","value":"LexError::UnexpectedEof","parent":{"krate":0,"index":8500},"children":[],"decl_id":null,"docs":" We needed to parse more but EOF (or end of the string) was encountered.\n","sig":null,"attributes":[{"value":"/ We needed to parse more but EOF (or end of the string) was encountered.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":145325,"byte_end":145400,"line_start":128,"line_end":128,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8523},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":145520,"byte_end":145532,"line_start":133,"line_end":133,"column_start":5,"column_end":17},"name":"NumberTooBig","qualname":"::lexer::LexError::NumberTooBig","value":"LexError::NumberTooBig","parent":{"krate":0,"index":8500},"children":[],"decl_id":null,"docs":" A number failed to parse because it was too big to fit within the target\n type.\n","sig":null,"attributes":[{"value":"/ A number failed to parse because it was too big to fit within the target","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":145425,"byte_end":145501,"line_start":131,"line_end":131,"column_start":5,"column_end":81}},{"value":"/ type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":145506,"byte_end":145515,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8525},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":145677,"byte_end":145696,"line_start":137,"line_end":137,"column_start":5,"column_end":24},"name":"InvalidUnicodeValue","qualname":"::lexer::LexError::InvalidUnicodeValue","value":"LexError::InvalidUnicodeValue(u32)","parent":{"krate":0,"index":8500},"children":[],"decl_id":null,"docs":" An invalid unicode value was found in a `\\u{...}` escape in a string,\n only valid unicode scalars can be escaped that way.\n","sig":null,"attributes":[{"value":"/ An invalid unicode value was found in a `\\u{...}` escape in a string,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":145539,"byte_end":145612,"line_start":135,"line_end":135,"column_start":5,"column_end":78}},{"value":"/ only valid unicode scalars can be escaped that way.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":145617,"byte_end":145672,"line_start":136,"line_end":136,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8528},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":145860,"byte_end":145874,"line_start":141,"line_end":141,"column_start":5,"column_end":19},"name":"LoneUnderscore","qualname":"::lexer::LexError::LoneUnderscore","value":"LexError::LoneUnderscore","parent":{"krate":0,"index":8500},"children":[],"decl_id":null,"docs":" A lone underscore was found when parsing a number, since underscores\n should always be preceded and succeeded with a digit of some form.\n","sig":null,"attributes":[{"value":"/ A lone underscore was found when parsing a number, since underscores","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":145708,"byte_end":145780,"line_start":139,"line_end":139,"column_start":5,"column_end":77}},{"value":"/ should always be preceded and succeeded with a digit of some form.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":145785,"byte_end":145855,"line_start":140,"line_end":140,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8530},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":146220,"byte_end":146236,"line_start":148,"line_end":148,"column_start":5,"column_end":21},"name":"ConfusingUnicode","qualname":"::lexer::LexError::ConfusingUnicode","value":"LexError::ConfusingUnicode(char)","parent":{"krate":0,"index":8500},"children":[],"decl_id":null,"docs":" A \"confusing\" unicode character is present in a comment or a string\n literal, such as a character that changes the direction text is\n typically displayed in editors. This could cause the human-read\n version to behave differently than the compiler-visible version, so\n these are simply rejected for now.\n","sig":null,"attributes":[{"value":"/ A \"confusing\" unicode character is present in a comment or a string","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":145881,"byte_end":145952,"line_start":143,"line_end":143,"column_start":5,"column_end":76}},{"value":"/ literal, such as a character that changes the direction text is","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":145957,"byte_end":146024,"line_start":144,"line_end":144,"column_start":5,"column_end":72}},{"value":"/ typically displayed in editors. This could cause the human-read","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":146029,"byte_end":146096,"line_start":145,"line_end":145,"column_start":5,"column_end":72}},{"value":"/ version to behave differently than the compiler-visible version, so","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":146101,"byte_end":146172,"line_start":146,"line_end":146,"column_start":5,"column_end":76}},{"value":"/ these are simply rejected for now.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":146177,"byte_end":146215,"line_start":147,"line_end":147,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8533},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":146268,"byte_end":146283,"line_start":151,"line_end":151,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::lexer::LexError::__Nonexhaustive","value":"LexError::__Nonexhaustive","parent":{"krate":0,"index":8500},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8500},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":144371,"byte_end":144379,"line_start":97,"line_end":97,"column_start":10,"column_end":18},"name":"LexError","qualname":"::lexer::LexError","value":"pub enum LexError {\n    DanglingBlockComment,\n    Unexpected(char),\n    InvalidStringElement(char),\n    InvalidStringEscape(char),\n    InvalidHexDigit(char),\n    InvalidDigit(char),\n    Expected {\n        wanted: char,\n        found: char,\n    },\n    UnexpectedEof,\n    NumberTooBig,\n    InvalidUnicodeValue(u32),\n    LoneUnderscore,\n    ConfusingUnicode(char),\n    __Nonexhaustive,\n}","parent":null,"children":[{"krate":0,"index":8501},{"krate":0,"index":8503},{"krate":0,"index":8506},{"krate":0,"index":8509},{"krate":0,"index":8512},{"krate":0,"index":8515},{"krate":0,"index":8518},{"krate":0,"index":8521},{"krate":0,"index":8523},{"krate":0,"index":8525},{"krate":0,"index":8528},{"krate":0,"index":8530},{"krate":0,"index":8533}],"decl_id":null,"docs":" Errors that can be generated while lexing.","sig":null,"attributes":[{"value":"/ Errors that can be generated while lexing.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":144136,"byte_end":144182,"line_start":92,"line_end":92,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":144183,"byte_end":144186,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ All lexing errors have line/colum/position information as well as a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":144187,"byte_end":144258,"line_start":94,"line_end":94,"column_start":1,"column_end":72}},{"value":"/ `LexError` indicating what kind of error happened while lexing.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":144259,"byte_end":144326,"line_start":95,"line_end":95,"column_start":1,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8544},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":146411,"byte_end":146415,"line_start":158,"line_end":158,"column_start":5,"column_end":9},"name":"Plus","qualname":"::lexer::SignToken::Plus","value":"SignToken::Plus","parent":{"krate":0,"index":8543},"children":[],"decl_id":null,"docs":" Plus sign: \"+\",\n","sig":null,"attributes":[{"value":"/ Plus sign: \"+\",","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":146387,"byte_end":146406,"line_start":157,"line_end":157,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8546},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":146446,"byte_end":146451,"line_start":160,"line_end":160,"column_start":5,"column_end":10},"name":"Minus","qualname":"::lexer::SignToken::Minus","value":"SignToken::Minus","parent":{"krate":0,"index":8543},"children":[],"decl_id":null,"docs":" Minus sign: \"-\",\n","sig":null,"attributes":[{"value":"/ Minus sign: \"-\",","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":146421,"byte_end":146441,"line_start":159,"line_end":159,"column_start":5,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":8543},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":146371,"byte_end":146380,"line_start":156,"line_end":156,"column_start":10,"column_end":19},"name":"SignToken","qualname":"::lexer::SignToken","value":"pub enum SignToken { Plus, Minus, }","parent":null,"children":[{"krate":0,"index":8544},{"krate":0,"index":8546}],"decl_id":null,"docs":" A sign token for an integer.\n","sig":null,"attributes":[{"value":"/ A sign token for an integer.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":146288,"byte_end":146320,"line_start":154,"line_end":154,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":8556},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":146600,"byte_end":146607,"line_start":167,"line_end":167,"column_start":12,"column_end":19},"name":"Integer","qualname":"::lexer::Integer","value":"","parent":null,"children":[],"decl_id":null,"docs":" A parsed integer, signed or unsigned.","sig":null,"attributes":[{"value":"/ A parsed integer, signed or unsigned.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":146456,"byte_end":146497,"line_start":163,"line_end":163,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":146498,"byte_end":146501,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ Methods can be use to access the value of the integer.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":146502,"byte_end":146560,"line_start":165,"line_end":165,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":8584},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":146899,"byte_end":146904,"line_start":181,"line_end":181,"column_start":12,"column_end":17},"name":"Float","qualname":"::lexer::Float","value":"","parent":null,"children":[],"decl_id":null,"docs":" A parsed float.","sig":null,"attributes":[{"value":"/ A parsed float.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":146779,"byte_end":146798,"line_start":177,"line_end":177,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":146799,"byte_end":146802,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ Methods can be use to access the value of the float.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":146803,"byte_end":146859,"line_start":179,"line_end":179,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":8610},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":147088,"byte_end":147098,"line_start":191,"line_end":191,"column_start":12,"column_end":22},"name":"WasmString","qualname":"::lexer::WasmString","value":"","parent":null,"children":[],"decl_id":null,"docs":" A parsed string.\n","sig":null,"attributes":[{"value":"/ A parsed string.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":147028,"byte_end":147048,"line_start":189,"line_end":189,"column_start":1,"column_end":21}}]},{"kind":"StructVariant","id":{"krate":0,"index":8638},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":147359,"byte_end":147362,"line_start":203,"line_end":203,"column_start":5,"column_end":8},"name":"Nan","qualname":"::lexer::FloatVal::Nan","value":"FloatVal::Nan { val, negative }","parent":{"krate":0,"index":8636},"children":[],"decl_id":null,"docs":" A float `NaN` representation\n","sig":null,"attributes":[{"value":"/ A float `NaN` representation","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":147322,"byte_end":147354,"line_start":202,"line_end":202,"column_start":5,"column_end":37}}]},{"kind":"StructVariant","id":{"krate":0,"index":8641},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":147595,"byte_end":147598,"line_start":210,"line_end":210,"column_start":5,"column_end":8},"name":"Inf","qualname":"::lexer::FloatVal::Inf","value":"FloatVal::Inf { negative }","parent":{"krate":0,"index":8636},"children":[],"decl_id":null,"docs":" An float infinite representation,\n","sig":null,"attributes":[{"value":"/ An float infinite representation,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":147553,"byte_end":147590,"line_start":209,"line_end":209,"column_start":5,"column_end":42}}]},{"kind":"StructVariant","id":{"krate":0,"index":8643},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":147719,"byte_end":147722,"line_start":215,"line_end":215,"column_start":5,"column_end":8},"name":"Val","qualname":"::lexer::FloatVal::Val","value":"FloatVal::Val { hex, integral, decimal, exponent }","parent":{"krate":0,"index":8636},"children":[],"decl_id":null,"docs":" A parsed and separated floating point value\n","sig":null,"attributes":[{"value":"/ A parsed and separated floating point value","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":147667,"byte_end":147714,"line_start":214,"line_end":214,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":8636},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":147303,"byte_end":147311,"line_start":201,"line_end":201,"column_start":10,"column_end":18},"name":"FloatVal","qualname":"::lexer::FloatVal","value":"pub enum FloatVal<'a> {\n    Nan {\n        val: Option<u64>,\n        negative: bool,\n    },\n    Inf {\n        negative: bool,\n    },\n    Val {\n        hex: bool,\n        integral: Cow,\n        decimal: Option<Cow>,\n        exponent: Option<Cow>,\n    },\n}","parent":null,"children":[{"krate":0,"index":8638},{"krate":0,"index":8641},{"krate":0,"index":8643}],"decl_id":null,"docs":" Possible parsed float values\n","sig":null,"attributes":[{"value":"/ Possible parsed float values","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":147233,"byte_end":147265,"line_start":199,"line_end":199,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":148837,"byte_end":148840,"line_start":263,"line_end":263,"column_start":12,"column_end":15},"name":"new","qualname":"<Lexer>::new","value":"pub fn new(&str) -> Lexer","parent":null,"children":[],"decl_id":null,"docs":" Creates a new lexer which will lex the `input` source string.\n","sig":null,"attributes":[{"value":"/ Creates a new lexer which will lex the `input` source string.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":148760,"byte_end":148825,"line_start":262,"line_end":262,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":543},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":149067,"byte_end":149072,"line_start":272,"line_end":272,"column_start":12,"column_end":17},"name":"input","qualname":"<Lexer>::input","value":"pub fn input(&Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Returns the original source input that we're lexing.\n","sig":null,"attributes":[{"value":"/ Returns the original source input that we're lexing.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":148999,"byte_end":149055,"line_start":271,"line_end":271,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":149747,"byte_end":149770,"line_start":287,"line_end":287,"column_start":12,"column_end":35},"name":"allow_confusing_unicode","qualname":"<Lexer>::allow_confusing_unicode","value":"pub fn allow_confusing_unicode(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Configures whether \"confusing\" unicode characters are allowed while\n lexing.","sig":null,"attributes":[{"value":"/ Configures whether \"confusing\" unicode characters are allowed while","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":149123,"byte_end":149194,"line_start":276,"line_end":276,"column_start":5,"column_end":76}},{"value":"/ lexing.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":149199,"byte_end":149210,"line_start":277,"line_end":277,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":149215,"byte_end":149218,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ If allowed then no error will happen if these characters are found, but","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":149223,"byte_end":149298,"line_start":279,"line_end":279,"column_start":5,"column_end":80}},{"value":"/ otherwise if disallowed a lex error will be produced when these","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":149303,"byte_end":149370,"line_start":280,"line_end":280,"column_start":5,"column_end":72}},{"value":"/ characters are found. Confusing characters are denied by default.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":149375,"byte_end":149444,"line_start":281,"line_end":281,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":149449,"byte_end":149452,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ For now \"confusing characters\" are primarily related to the \"trojan","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":149457,"byte_end":149528,"line_start":283,"line_end":283,"column_start":5,"column_end":76}},{"value":"/ source\" problem where it refers to characters which cause humans to read","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":149533,"byte_end":149609,"line_start":284,"line_end":284,"column_start":5,"column_end":81}},{"value":"/ text differently than this lexer, such as characters that alter the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":149614,"byte_end":149685,"line_start":285,"line_end":285,"column_start":5,"column_end":76}},{"value":"/ left-to-right display of the source code.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":149690,"byte_end":149735,"line_start":286,"line_end":286,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":545},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":150093,"byte_end":150098,"line_start":299,"line_end":299,"column_start":12,"column_end":17},"name":"parse","qualname":"<Lexer>::parse","value":"pub fn parse(&mut Self) -> Result<Option<Token>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Lexes the next token in the input.","sig":null,"attributes":[{"value":"/ Lexes the next token in the input.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":149880,"byte_end":149918,"line_start":292,"line_end":292,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":149923,"byte_end":149926,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ Returns `Some` if a token is found or `None` if we're at EOF.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":149931,"byte_end":149996,"line_start":294,"line_end":294,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":150001,"byte_end":150004,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":150009,"byte_end":150021,"line_start":296,"line_end":296,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":150026,"byte_end":150029,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the input is malformed.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":150034,"byte_end":150081,"line_start":298,"line_end":298,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":172029,"byte_end":172032,"line_start":855,"line_end":855,"column_start":12,"column_end":15},"name":"src","qualname":"<Token>::src","value":"pub fn src(&Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Returns the original source text for this token.\n","sig":null,"attributes":[{"value":"/ Returns the original source text for this token.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":171965,"byte_end":172017,"line_start":854,"line_end":854,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":172593,"byte_end":172597,"line_start":874,"line_end":874,"column_start":12,"column_end":16},"name":"sign","qualname":"<Integer>::sign","value":"pub fn sign(&Self) -> Option<SignToken>","parent":null,"children":[],"decl_id":null,"docs":" Returns the sign token for this integer.\n","sig":null,"attributes":[{"value":"/ Returns the sign token for this integer.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":172537,"byte_end":172581,"line_start":873,"line_end":873,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":593},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":172725,"byte_end":172728,"line_start":879,"line_end":879,"column_start":12,"column_end":15},"name":"src","qualname":"<Integer>::src","value":"pub fn src(&Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Returns the original source text for this integer.\n","sig":null,"attributes":[{"value":"/ Returns the original source text for this integer.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":172659,"byte_end":172713,"line_start":878,"line_end":878,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":172912,"byte_end":172915,"line_start":885,"line_end":885,"column_start":12,"column_end":15},"name":"val","qualname":"<Integer>::val","value":"pub fn val(&Self) -> (&str, u32)","parent":null,"children":[],"decl_id":null,"docs":" Returns the value string that can be parsed for this integer, as well as\n the base that it should be parsed in\n","sig":null,"attributes":[{"value":"/ Returns the value string that can be parsed for this integer, as well as","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":172779,"byte_end":172855,"line_start":883,"line_end":883,"column_start":5,"column_end":81}},{"value":"/ the base that it should be parsed in","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":172860,"byte_end":172900,"line_start":884,"line_end":884,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":173096,"byte_end":173099,"line_start":892,"line_end":892,"column_start":12,"column_end":15},"name":"src","qualname":"<Float>::src","value":"pub fn src(&Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Returns the original source text for this integer.\n","sig":null,"attributes":[{"value":"/ Returns the original source text for this integer.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":173030,"byte_end":173084,"line_start":891,"line_end":891,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":173262,"byte_end":173265,"line_start":898,"line_end":898,"column_start":12,"column_end":15},"name":"val","qualname":"<Float>::val","value":"pub fn val(&Self) -> &FloatVal","parent":null,"children":[],"decl_id":null,"docs":" Returns a parsed value of this float with all of the components still\n listed as strings.\n","sig":null,"attributes":[{"value":"/ Returns a parsed value of this float with all of the components still","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":173150,"byte_end":173223,"line_start":896,"line_end":896,"column_start":5,"column_end":78}},{"value":"/ listed as strings.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":173228,"byte_end":173250,"line_start":897,"line_end":897,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":173416,"byte_end":173419,"line_start":905,"line_end":905,"column_start":12,"column_end":15},"name":"src","qualname":"<WasmString>::src","value":"pub fn src(&Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Returns the original source text for this string.\n","sig":null,"attributes":[{"value":"/ Returns the original source text for this string.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":173351,"byte_end":173404,"line_start":904,"line_end":904,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":173546,"byte_end":173549,"line_start":910,"line_end":910,"column_start":12,"column_end":15},"name":"val","qualname":"<WasmString>::val","value":"pub fn val(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a parsed value, as a list of bytes, for this string.\n","sig":null,"attributes":[{"value":"/ Returns a parsed value, as a list of bytes, for this string.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":173470,"byte_end":173534,"line_start":909,"line_end":909,"column_start":5,"column_end":69}}]},{"kind":"Mod","id":{"krate":0,"index":609},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"parser","qualname":"::parser","value":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","parent":null,"children":[{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":614},{"krate":0,"index":617},{"krate":0,"index":620},{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":627},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":634},{"krate":0,"index":637},{"krate":0,"index":640},{"krate":0,"index":643},{"krate":0,"index":646},{"krate":0,"index":649},{"krate":0,"index":652},{"krate":0,"index":656},{"krate":0,"index":658},{"krate":0,"index":8659},{"krate":0,"index":8667},{"krate":0,"index":8668},{"krate":0,"index":8670},{"krate":0,"index":8672},{"krate":0,"index":8675},{"krate":0,"index":8677},{"krate":0,"index":665},{"krate":0,"index":8680},{"krate":0,"index":8684},{"krate":0,"index":8686},{"krate":0,"index":669},{"krate":0,"index":684},{"krate":0,"index":720},{"krate":0,"index":742},{"krate":0,"index":746}],"decl_id":null,"docs":" Traits for parsing the WebAssembly Text format","sig":null,"attributes":[{"value":"/ Traits for parsing the WebAssembly Text format","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":185052,"byte_end":185102,"line_start":1,"line_end":1,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":185103,"byte_end":185106,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains the traits, abstractions, and utilities needed to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":185107,"byte_end":185181,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/ define custom parsers for WebAssembly text format items. This module exposes","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":185182,"byte_end":185262,"line_start":4,"line_end":4,"column_start":1,"column_end":81}},{"value":"/ a recursive descent parsing strategy and centers around the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":185263,"byte_end":185326,"line_start":5,"line_end":5,"column_start":1,"column_end":64}},{"value":"/ [`Parse`](crate::parser::Parse) trait for defining new fragments of","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":185327,"byte_end":185398,"line_start":6,"line_end":6,"column_start":1,"column_end":72}},{"value":"/ WebAssembly text syntax.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":185399,"byte_end":185427,"line_start":7,"line_end":7,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":185428,"byte_end":185431,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The top-level [`parse`](crate::parser::parse) function can be used to fully parse AST fragments:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":185432,"byte_end":185532,"line_start":9,"line_end":9,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":185533,"byte_end":185536,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":185537,"byte_end":185544,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ use wast::Wat;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":185545,"byte_end":185563,"line_start":12,"line_end":12,"column_start":1,"column_end":19}},{"value":"/ use wast::parser::{self, ParseBuffer};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":185564,"byte_end":185606,"line_start":13,"line_end":13,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":185607,"byte_end":185610,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # fn foo() -> Result<(), wast::Error> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":185611,"byte_end":185654,"line_start":15,"line_end":15,"column_start":1,"column_end":44}},{"value":"/ let wat = \"(module (func))\";","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":185655,"byte_end":185687,"line_start":16,"line_end":16,"column_start":1,"column_end":33}},{"value":"/ let buf = ParseBuffer::new(wat)?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":185688,"byte_end":185725,"line_start":17,"line_end":17,"column_start":1,"column_end":38}},{"value":"/ let module = parser::parse::<Wat>(&buf)?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":185726,"byte_end":185771,"line_start":18,"line_end":18,"column_start":1,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":185772,"byte_end":185784,"line_start":19,"line_end":19,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":185785,"byte_end":185792,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":185793,"byte_end":185800,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":185801,"byte_end":185804,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ and you can also define your own new syntax with the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":185805,"byte_end":185861,"line_start":23,"line_end":23,"column_start":1,"column_end":57}},{"value":"/ [`Parse`](crate::parser::Parse) trait:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":185862,"byte_end":185904,"line_start":24,"line_end":24,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":185905,"byte_end":185908,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":185909,"byte_end":185916,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ use wast::{kw, Import, Func};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":185917,"byte_end":185950,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/ use wast::parser::{Parser, Parse, Result};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":185951,"byte_end":185997,"line_start":28,"line_end":28,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":185998,"byte_end":186001,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ // Fields of a WebAssembly which only allow imports and functions, and all","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":186002,"byte_end":186080,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ // imports must come before all the functions","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":186081,"byte_end":186130,"line_start":31,"line_end":31,"column_start":1,"column_end":50}},{"value":"/ struct OnlyImportsAndFunctions<'a> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":186131,"byte_end":186171,"line_start":32,"line_end":32,"column_start":1,"column_end":41}},{"value":"/     imports: Vec<Import<'a>>,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":186172,"byte_end":186205,"line_start":33,"line_end":33,"column_start":1,"column_end":34}},{"value":"/     functions: Vec<Func<'a>>,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":186206,"byte_end":186239,"line_start":34,"line_end":34,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":186240,"byte_end":186245,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":186246,"byte_end":186249,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ impl<'a> Parse<'a> for OnlyImportsAndFunctions<'a> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":186250,"byte_end":186306,"line_start":37,"line_end":37,"column_start":1,"column_end":57}},{"value":"/     fn parse(parser: Parser<'a>) -> Result<Self> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":186307,"byte_end":186361,"line_start":38,"line_end":38,"column_start":1,"column_end":55}},{"value":"/         // While the second token is `import` (the first is `(`, so we care","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":186362,"byte_end":186441,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/         // about the second) we parse an `ast::ModuleImport` inside of","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":186442,"byte_end":186516,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/         // parentheses. The `parens` function here ensures that what we","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":186517,"byte_end":186592,"line_start":41,"line_end":41,"column_start":1,"column_end":76}},{"value":"/         // parse inside of it is surrounded by `(` and `)`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":186593,"byte_end":186656,"line_start":42,"line_end":42,"column_start":1,"column_end":64}},{"value":"/         let mut imports = Vec::new();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":186657,"byte_end":186698,"line_start":43,"line_end":43,"column_start":1,"column_end":42}},{"value":"/         while parser.peek2::<kw::import>() {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":186699,"byte_end":186747,"line_start":44,"line_end":44,"column_start":1,"column_end":49}},{"value":"/             let import = parser.parens(|p| p.parse())?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":186748,"byte_end":186807,"line_start":45,"line_end":45,"column_start":1,"column_end":60}},{"value":"/             imports.push(import);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":186808,"byte_end":186845,"line_start":46,"line_end":46,"column_start":1,"column_end":38}},{"value":"/         }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":186846,"byte_end":186859,"line_start":47,"line_end":47,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":186860,"byte_end":186863,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/         // Afterwards we assume everything else is a function. Note that","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":186864,"byte_end":186940,"line_start":49,"line_end":49,"column_start":1,"column_end":77}},{"value":"/         // `parse` here is a generic function and type inference figures out","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":186941,"byte_end":187021,"line_start":50,"line_end":50,"column_start":1,"column_end":81}},{"value":"/         // that we're parsing functions here and imports above.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":187022,"byte_end":187089,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/         let mut functions = Vec::new();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":187090,"byte_end":187133,"line_start":52,"line_end":52,"column_start":1,"column_end":44}},{"value":"/         while !parser.is_empty() {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":187134,"byte_end":187172,"line_start":53,"line_end":53,"column_start":1,"column_end":39}},{"value":"/             let func = parser.parens(|p| p.parse())?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":187173,"byte_end":187230,"line_start":54,"line_end":54,"column_start":1,"column_end":58}},{"value":"/             functions.push(func);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":187231,"byte_end":187268,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/         }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":187269,"byte_end":187282,"line_start":56,"line_end":56,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":187283,"byte_end":187286,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/         Ok(OnlyImportsAndFunctions { imports, functions })","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":187287,"byte_end":187349,"line_start":58,"line_end":58,"column_start":1,"column_end":63}},{"value":"/     }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":187350,"byte_end":187359,"line_start":59,"line_end":59,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":187360,"byte_end":187365,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":187366,"byte_end":187373,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":187374,"byte_end":187377,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ This module is heavily inspired by [`syn`](https://docs.rs/syn) so you can","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":187378,"byte_end":187456,"line_start":63,"line_end":63,"column_start":1,"column_end":79}},{"value":"/ likely also draw inspiration from the excellent examples in the `syn` crate.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":187457,"byte_end":187537,"line_start":64,"line_end":64,"column_start":1,"column_end":81}}]},{"kind":"Function","id":{"krate":0,"index":646},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":188585,"byte_end":188590,"line_start":106,"line_end":106,"column_start":8,"column_end":13},"name":"parse","qualname":"::parser::parse","value":"pub fn parse<'a, T: Parse>(&'a ParseBuffer) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" A top-level convenience parseing function that parss a `T` from `buf` and\n requires that all tokens in `buf` are consume.","sig":null,"attributes":[{"value":"/ A top-level convenience parseing function that parss a `T` from `buf` and","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":187709,"byte_end":187786,"line_start":73,"line_end":73,"column_start":1,"column_end":78}},{"value":"/ requires that all tokens in `buf` are consume.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":187787,"byte_end":187837,"line_start":74,"line_end":74,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":187838,"byte_end":187841,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ This generic parsing function can be used to parse any `T` implementing the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":187842,"byte_end":187921,"line_start":76,"line_end":76,"column_start":1,"column_end":80}},{"value":"/ [`Parse`] trait. It is not used from [`Parse`] trait implementations.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":187922,"byte_end":187995,"line_start":77,"line_end":77,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":187996,"byte_end":187999,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":188000,"byte_end":188014,"line_start":79,"line_end":79,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":188015,"byte_end":188018,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":188019,"byte_end":188026,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ use wast::Wat;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":188027,"byte_end":188045,"line_start":82,"line_end":82,"column_start":1,"column_end":19}},{"value":"/ use wast::parser::{self, ParseBuffer};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":188046,"byte_end":188088,"line_start":83,"line_end":83,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":188089,"byte_end":188092,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ # fn foo() -> Result<(), wast::Error> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":188093,"byte_end":188136,"line_start":85,"line_end":85,"column_start":1,"column_end":44}},{"value":"/ let wat = \"(module (func))\";","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":188137,"byte_end":188169,"line_start":86,"line_end":86,"column_start":1,"column_end":33}},{"value":"/ let buf = ParseBuffer::new(wat)?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":188170,"byte_end":188207,"line_start":87,"line_end":87,"column_start":1,"column_end":38}},{"value":"/ let module = parser::parse::<Wat>(&buf)?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":188208,"byte_end":188253,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":188254,"byte_end":188266,"line_start":89,"line_end":89,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":188267,"byte_end":188274,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":188275,"byte_end":188282,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":188283,"byte_end":188286,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ or parsing simply a fragment","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":188287,"byte_end":188319,"line_start":93,"line_end":93,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":188320,"byte_end":188323,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":188324,"byte_end":188331,"line_start":95,"line_end":95,"column_start":1,"column_end":8}},{"value":"/ use wast::parser::{self, ParseBuffer};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":188332,"byte_end":188374,"line_start":96,"line_end":96,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":188375,"byte_end":188378,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # fn foo() -> Result<(), wast::Error> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":188379,"byte_end":188422,"line_start":98,"line_end":98,"column_start":1,"column_end":44}},{"value":"/ let wat = \"12\";","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":188423,"byte_end":188442,"line_start":99,"line_end":99,"column_start":1,"column_end":20}},{"value":"/ let buf = ParseBuffer::new(wat)?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":188443,"byte_end":188480,"line_start":100,"line_end":100,"column_start":1,"column_end":38}},{"value":"/ let val = parser::parse::<u32>(&buf)?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":188481,"byte_end":188523,"line_start":101,"line_end":101,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(val, 12);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":188524,"byte_end":188548,"line_start":102,"line_end":102,"column_start":1,"column_end":25}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":188549,"byte_end":188561,"line_start":103,"line_end":103,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":188562,"byte_end":188569,"line_start":104,"line_end":104,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":188570,"byte_end":188577,"line_start":105,"line_end":105,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":649},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":192591,"byte_end":192596,"line_start":208,"line_end":208,"column_start":11,"column_end":16},"name":"Parse","qualname":"::parser::Parse","value":"Parse<'a>: Sized","parent":null,"children":[{"krate":0,"index":651}],"decl_id":null,"docs":" A trait for parsing a fragment of syntax in a recursive descent fashion.","sig":null,"attributes":[{"value":"/ A trait for parsing a fragment of syntax in a recursive descent fashion.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":188871,"byte_end":188947,"line_start":116,"line_end":116,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":188948,"byte_end":188951,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ The [`Parse`] trait is main abstraction you'll be working with when defining","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":188952,"byte_end":189032,"line_start":118,"line_end":118,"column_start":1,"column_end":81}},{"value":"/ custom parser or custom syntax for your WebAssembly text format (or when","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":189033,"byte_end":189109,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"/ using the official format items). Almost all items in the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":189110,"byte_end":189171,"line_start":120,"line_end":120,"column_start":1,"column_end":62}},{"value":"/ [`ast`](crate::ast) module implement the [`Parse`] trait, and you'll","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":189172,"byte_end":189244,"line_start":121,"line_end":121,"column_start":1,"column_end":73}},{"value":"/ commonly use this with:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":189245,"byte_end":189272,"line_start":122,"line_end":122,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":189273,"byte_end":189276,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ * The top-level [`parse`] function to parse an entire input.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":189277,"byte_end":189341,"line_start":124,"line_end":124,"column_start":1,"column_end":65}},{"value":"/ * The intermediate [`Parser::parse`] function to parse an item out of an","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":189342,"byte_end":189418,"line_start":125,"line_end":125,"column_start":1,"column_end":77}},{"value":"/   input stream and then parse remaining items.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":189419,"byte_end":189469,"line_start":126,"line_end":126,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":189470,"byte_end":189473,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ Implementation of [`Parse`] take a [`Parser`] as input and will mutate the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":189474,"byte_end":189552,"line_start":128,"line_end":128,"column_start":1,"column_end":79}},{"value":"/ parser as they parse syntax. Once a token is consume it cannot be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":189553,"byte_end":189622,"line_start":129,"line_end":129,"column_start":1,"column_end":70}},{"value":"/ \"un-consumed\". Utilities such as [`Parser::peek`] and [`Parser::lookahead1`]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":189623,"byte_end":189703,"line_start":130,"line_end":130,"column_start":1,"column_end":81}},{"value":"/ can be used to determine what to parse next.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":189704,"byte_end":189752,"line_start":131,"line_end":131,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":189753,"byte_end":189756,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ ## When to parse `(` and `)`?","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":189757,"byte_end":189790,"line_start":133,"line_end":133,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":189791,"byte_end":189794,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ Conventionally types are not responsible for parsing their own `(` and `)`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":189795,"byte_end":189873,"line_start":135,"line_end":135,"column_start":1,"column_end":79}},{"value":"/ tokens which surround the type. For example WebAssembly imports look like:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":189874,"byte_end":189952,"line_start":136,"line_end":136,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":189953,"byte_end":189956,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":189957,"byte_end":189968,"line_start":138,"line_end":138,"column_start":1,"column_end":12}},{"value":"/ (import \"foo\" \"bar\" (func (type 0)))","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":189969,"byte_end":190009,"line_start":139,"line_end":139,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":190010,"byte_end":190017,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":190018,"byte_end":190021,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ but the [`Import`](crate::ast::Import) type parser looks like:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":190022,"byte_end":190088,"line_start":142,"line_end":142,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":190089,"byte_end":190092,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":190093,"byte_end":190100,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/ # use wast::kw;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":190101,"byte_end":190120,"line_start":145,"line_end":145,"column_start":1,"column_end":20}},{"value":"/ # use wast::parser::{Parser, Parse, Result};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":190121,"byte_end":190169,"line_start":146,"line_end":146,"column_start":1,"column_end":49}},{"value":"/ # struct Import<'a>(&'a str);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":190170,"byte_end":190203,"line_start":147,"line_end":147,"column_start":1,"column_end":34}},{"value":"/ impl<'a> Parse<'a> for Import<'a> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":190204,"byte_end":190243,"line_start":148,"line_end":148,"column_start":1,"column_end":40}},{"value":"/     fn parse(parser: Parser<'a>) -> Result<Self> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":190244,"byte_end":190298,"line_start":149,"line_end":149,"column_start":1,"column_end":55}},{"value":"/         parser.parse::<kw::import>()?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":190299,"byte_end":190341,"line_start":150,"line_end":150,"column_start":1,"column_end":43}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":190342,"byte_end":190360,"line_start":151,"line_end":151,"column_start":1,"column_end":19}},{"value":"/ # panic!()","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":190361,"byte_end":190375,"line_start":152,"line_end":152,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":190376,"byte_end":190385,"line_start":153,"line_end":153,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":190386,"byte_end":190391,"line_start":154,"line_end":154,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":190392,"byte_end":190399,"line_start":155,"line_end":155,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":190400,"byte_end":190403,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ It is assumed here that the `(` and `)` tokens which surround an `import`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":190404,"byte_end":190481,"line_start":157,"line_end":157,"column_start":1,"column_end":78}},{"value":"/ statement in the WebAssembly text format are parsed by the parent item","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":190482,"byte_end":190556,"line_start":158,"line_end":158,"column_start":1,"column_end":75}},{"value":"/ parsing `Import`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":190557,"byte_end":190578,"line_start":159,"line_end":159,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":190579,"byte_end":190582,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ Note that this is just a convention, so it's not necessarily required for","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":190583,"byte_end":190660,"line_start":161,"line_end":161,"column_start":1,"column_end":78}},{"value":"/ all types. It's recommended that your types stick to this convention where","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":190661,"byte_end":190739,"line_start":162,"line_end":162,"column_start":1,"column_end":79}},{"value":"/ possible to avoid nested calls to [`Parser::parens`] or accidentally trying","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":190740,"byte_end":190819,"line_start":163,"line_end":163,"column_start":1,"column_end":80}},{"value":"/ to parse too many parenthesis.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":190820,"byte_end":190854,"line_start":164,"line_end":164,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":190855,"byte_end":190858,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":190859,"byte_end":190873,"line_start":166,"line_end":166,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":190874,"byte_end":190877,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ Let's say you want to define your own WebAssembly text format which only","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":190878,"byte_end":190954,"line_start":168,"line_end":168,"column_start":1,"column_end":77}},{"value":"/ contains imports and functions. You also require all imports to be listed","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":190955,"byte_end":191032,"line_start":169,"line_end":169,"column_start":1,"column_end":78}},{"value":"/ before all functions. An example [`Parse`] implementation might look like:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":191033,"byte_end":191111,"line_start":170,"line_end":170,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":191112,"byte_end":191115,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":191116,"byte_end":191123,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/ use wast::{Import, Func, kw};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":191124,"byte_end":191157,"line_start":173,"line_end":173,"column_start":1,"column_end":34}},{"value":"/ use wast::parser::{Parser, Parse, Result};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":191158,"byte_end":191204,"line_start":174,"line_end":174,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":191205,"byte_end":191208,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ // Fields of a WebAssembly which only allow imports and functions, and all","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":191209,"byte_end":191287,"line_start":176,"line_end":176,"column_start":1,"column_end":79}},{"value":"/ // imports must come before all the functions","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":191288,"byte_end":191337,"line_start":177,"line_end":177,"column_start":1,"column_end":50}},{"value":"/ struct OnlyImportsAndFunctions<'a> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":191338,"byte_end":191378,"line_start":178,"line_end":178,"column_start":1,"column_end":41}},{"value":"/     imports: Vec<Import<'a>>,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":191379,"byte_end":191412,"line_start":179,"line_end":179,"column_start":1,"column_end":34}},{"value":"/     functions: Vec<Func<'a>>,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":191413,"byte_end":191446,"line_start":180,"line_end":180,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":191447,"byte_end":191452,"line_start":181,"line_end":181,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":191453,"byte_end":191456,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ impl<'a> Parse<'a> for OnlyImportsAndFunctions<'a> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":191457,"byte_end":191513,"line_start":183,"line_end":183,"column_start":1,"column_end":57}},{"value":"/     fn parse(parser: Parser<'a>) -> Result<Self> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":191514,"byte_end":191568,"line_start":184,"line_end":184,"column_start":1,"column_end":55}},{"value":"/         // While the second token is `import` (the first is `(`, so we care","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":191569,"byte_end":191648,"line_start":185,"line_end":185,"column_start":1,"column_end":80}},{"value":"/         // about the second) we parse an `ast::ModuleImport` inside of","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":191649,"byte_end":191723,"line_start":186,"line_end":186,"column_start":1,"column_end":75}},{"value":"/         // parentheses. The `parens` function here ensures that what we","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":191724,"byte_end":191799,"line_start":187,"line_end":187,"column_start":1,"column_end":76}},{"value":"/         // parse inside of it is surrounded by `(` and `)`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":191800,"byte_end":191863,"line_start":188,"line_end":188,"column_start":1,"column_end":64}},{"value":"/         let mut imports = Vec::new();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":191864,"byte_end":191905,"line_start":189,"line_end":189,"column_start":1,"column_end":42}},{"value":"/         while parser.peek2::<kw::import>() {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":191906,"byte_end":191954,"line_start":190,"line_end":190,"column_start":1,"column_end":49}},{"value":"/             let import = parser.parens(|p| p.parse())?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":191955,"byte_end":192014,"line_start":191,"line_end":191,"column_start":1,"column_end":60}},{"value":"/             imports.push(import);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":192015,"byte_end":192052,"line_start":192,"line_end":192,"column_start":1,"column_end":38}},{"value":"/         }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":192053,"byte_end":192066,"line_start":193,"line_end":193,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":192067,"byte_end":192070,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/         // Afterwards we assume everything else is a function. Note that","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":192071,"byte_end":192147,"line_start":195,"line_end":195,"column_start":1,"column_end":77}},{"value":"/         // `parse` here is a generic function and type inference figures out","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":192148,"byte_end":192228,"line_start":196,"line_end":196,"column_start":1,"column_end":81}},{"value":"/         // that we're parsing functions here and imports above.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":192229,"byte_end":192296,"line_start":197,"line_end":197,"column_start":1,"column_end":68}},{"value":"/         let mut functions = Vec::new();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":192297,"byte_end":192340,"line_start":198,"line_end":198,"column_start":1,"column_end":44}},{"value":"/         while !parser.is_empty() {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":192341,"byte_end":192379,"line_start":199,"line_end":199,"column_start":1,"column_end":39}},{"value":"/             let func = parser.parens(|p| p.parse())?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":192380,"byte_end":192437,"line_start":200,"line_end":200,"column_start":1,"column_end":58}},{"value":"/             functions.push(func);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":192438,"byte_end":192475,"line_start":201,"line_end":201,"column_start":1,"column_end":38}},{"value":"/         }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":192476,"byte_end":192489,"line_start":202,"line_end":202,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":192490,"byte_end":192493,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/         Ok(OnlyImportsAndFunctions { imports, functions })","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":192494,"byte_end":192556,"line_start":204,"line_end":204,"column_start":1,"column_end":63}},{"value":"/     }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":192557,"byte_end":192566,"line_start":205,"line_end":205,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":192567,"byte_end":192572,"line_start":206,"line_end":206,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":192573,"byte_end":192580,"line_start":207,"line_end":207,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":193564,"byte_end":193569,"line_start":228,"line_end":228,"column_start":8,"column_end":13},"name":"parse","qualname":"::parser::Parse::parse","value":"pub fn parse(Parser) -> Result<Self>","parent":{"krate":0,"index":649},"children":[],"decl_id":null,"docs":" Attempts to parse `Self` from `parser`, returning an error if it could\n not be parsed.","sig":null,"attributes":[{"value":"/ Attempts to parse `Self` from `parser`, returning an error if it could","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":192614,"byte_end":192688,"line_start":209,"line_end":209,"column_start":5,"column_end":79}},{"value":"/ not be parsed.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":192693,"byte_end":192711,"line_start":210,"line_end":210,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":192716,"byte_end":192719,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ This method will mutate the state of `parser` after attempting to parse","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":192724,"byte_end":192799,"line_start":212,"line_end":212,"column_start":5,"column_end":80}},{"value":"/ an instance of `Self`. If an error happens then it is likely fatal and","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":192804,"byte_end":192878,"line_start":213,"line_end":213,"column_start":5,"column_end":79}},{"value":"/ there is no guarantee of how many tokens have been consumed from","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":192883,"byte_end":192951,"line_start":214,"line_end":214,"column_start":5,"column_end":73}},{"value":"/ `parser`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":192956,"byte_end":192969,"line_start":215,"line_end":215,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":192974,"byte_end":192977,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ As recommended in the documentation of [`Parse`], implementations of","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":192982,"byte_end":193054,"line_start":217,"line_end":217,"column_start":5,"column_end":77}},{"value":"/ this function should not start out by parsing `(` and `)` tokens, but","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":193059,"byte_end":193132,"line_start":218,"line_end":218,"column_start":5,"column_end":78}},{"value":"/ rather parents calling recursive parsers should parse the `(` and `)`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":193137,"byte_end":193210,"line_start":219,"line_end":219,"column_start":5,"column_end":78}},{"value":"/ tokens for their child item that's being parsed.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":193215,"byte_end":193267,"line_start":220,"line_end":220,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":193272,"byte_end":193275,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":193280,"byte_end":193292,"line_start":222,"line_end":222,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":193297,"byte_end":193300,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if `Self` could not be parsed. Note","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":193305,"byte_end":193379,"line_start":224,"line_end":224,"column_start":5,"column_end":79}},{"value":"/ that creating an [`Error`] is not exactly a cheap operation, so","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":193384,"byte_end":193451,"line_start":225,"line_end":225,"column_start":5,"column_end":72}},{"value":"/ [`Error`] is typically fatal and propagated all the way back to the top","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":193456,"byte_end":193531,"line_start":226,"line_end":226,"column_start":5,"column_end":80}},{"value":"/ parse call site.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":193536,"byte_end":193556,"line_start":227,"line_end":227,"column_start":5,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":652},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":194327,"byte_end":194331,"line_start":245,"line_end":245,"column_start":11,"column_end":15},"name":"Peek","qualname":"::parser::Peek","value":"Peek","parent":null,"children":[{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655}],"decl_id":null,"docs":" A trait for types which be used to \"peek\" to see if they're the next token\n in an input stream of [`Parser`].","sig":null,"attributes":[{"value":"/ A trait for types which be used to \"peek\" to see if they're the next token","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":193610,"byte_end":193688,"line_start":231,"line_end":231,"column_start":1,"column_end":79}},{"value":"/ in an input stream of [`Parser`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":193689,"byte_end":193726,"line_start":232,"line_end":232,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":193727,"byte_end":193730,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ Often when implementing [`Parse`] you'll need to query what the next token","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":193731,"byte_end":193809,"line_start":234,"line_end":234,"column_start":1,"column_end":79}},{"value":"/ in the stream is to figure out what to parse next. This [`Peek`] trait","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":193810,"byte_end":193884,"line_start":235,"line_end":235,"column_start":1,"column_end":75}},{"value":"/ defines the set of types that can be tested whether they're the next token","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":193885,"byte_end":193963,"line_start":236,"line_end":236,"column_start":1,"column_end":79}},{"value":"/ in the input stream.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":193964,"byte_end":193988,"line_start":237,"line_end":237,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":193989,"byte_end":193992,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ Implementations of [`Peek`] should only be present on types that consume","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":193993,"byte_end":194069,"line_start":239,"line_end":239,"column_start":1,"column_end":77}},{"value":"/ exactly one token (not zero, not more, exactly one). Types implementing","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":194070,"byte_end":194145,"line_start":240,"line_end":240,"column_start":1,"column_end":76}},{"value":"/ [`Peek`] should also typically implement [`Parse`] should also typically","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":194146,"byte_end":194222,"line_start":241,"line_end":241,"column_start":1,"column_end":77}},{"value":"/ implement [`Parse`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":194223,"byte_end":194247,"line_start":242,"line_end":242,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":194248,"byte_end":194251,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ See the documentation of [`Parser::peek`] for example usage.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":194252,"byte_end":194316,"line_start":244,"line_end":244,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":653},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":194628,"byte_end":194632,"line_start":252,"line_end":252,"column_start":8,"column_end":12},"name":"peek","qualname":"::parser::Peek::peek","value":"pub fn peek(Cursor) -> bool","parent":{"krate":0,"index":652},"children":[],"decl_id":null,"docs":" Tests to see whether this token is the first token within the [`Cursor`]\n specified.","sig":null,"attributes":[{"value":"/ Tests to see whether this token is the first token within the [`Cursor`]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":194338,"byte_end":194414,"line_start":246,"line_end":246,"column_start":5,"column_end":81}},{"value":"/ specified.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":194419,"byte_end":194433,"line_start":247,"line_end":247,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":194438,"byte_end":194441,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if [`Parse`] for this type is highly likely to succeed","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":194446,"byte_end":194519,"line_start":249,"line_end":249,"column_start":5,"column_end":78}},{"value":"/ failing no other error conditions happening (like an integer literal","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":194524,"byte_end":194596,"line_start":250,"line_end":250,"column_start":5,"column_end":77}},{"value":"/ being too big).","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":194601,"byte_end":194620,"line_start":251,"line_end":251,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":194774,"byte_end":194779,"line_start":256,"line_end":256,"column_start":8,"column_end":13},"name":"peek2","qualname":"::parser::Peek::peek2","value":"pub fn peek2(Cursor) -> bool","parent":{"krate":0,"index":652},"children":[],"decl_id":null,"docs":" The same as `peek`, except it checks the token immediately following\n the current token.\n","sig":null,"attributes":[{"value":"/ The same as `peek`, except it checks the token immediately following","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":194667,"byte_end":194739,"line_start":254,"line_end":254,"column_start":5,"column_end":77}},{"value":"/ the current token.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":194744,"byte_end":194766,"line_start":255,"line_end":255,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":195070,"byte_end":195077,"line_start":266,"line_end":266,"column_start":8,"column_end":15},"name":"display","qualname":"::parser::Peek::display","value":"pub fn display() -> &'static str","parent":{"krate":0,"index":652},"children":[],"decl_id":null,"docs":" Returns a human-readable name of this token to display when generating\n errors about this token missing.\n","sig":null,"attributes":[{"value":"/ Returns a human-readable name of this token to display when generating","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":194947,"byte_end":195021,"line_start":264,"line_end":264,"column_start":5,"column_end":79}},{"value":"/ errors about this token missing.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":195026,"byte_end":195062,"line_start":265,"line_end":265,"column_start":5,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":656},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":195203,"byte_end":195209,"line_start":271,"line_end":271,"column_start":10,"column_end":16},"name":"Result","qualname":"::parser::Result","value":"std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" A convenience type definition for `Result` where the error is hardwired to\n [`Error`].\n","sig":null,"attributes":[{"value":"/ A convenience type definition for `Result` where the error is hardwired to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":195100,"byte_end":195178,"line_start":269,"line_end":269,"column_start":1,"column_end":79}},{"value":"/ [`Error`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":195179,"byte_end":195193,"line_start":270,"line_end":270,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":658},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":195510,"byte_end":195521,"line_start":278,"line_end":278,"column_start":12,"column_end":23},"name":"ParseBuffer","qualname":"::parser::ParseBuffer","value":"ParseBuffer {  }","parent":null,"children":[{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":664}],"decl_id":null,"docs":" A low-level buffer of tokens which represents a completely lexed file.","sig":null,"attributes":[{"value":"/ A low-level buffer of tokens which represents a completely lexed file.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":195247,"byte_end":195321,"line_start":273,"line_end":273,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":195322,"byte_end":195325,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"/ A `ParseBuffer` will immediately lex an entire file and then store all","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":195326,"byte_end":195400,"line_start":275,"line_end":275,"column_start":1,"column_end":75}},{"value":"/ tokens internally. A `ParseBuffer` only used to pass to the top-level","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":195401,"byte_end":195474,"line_start":276,"line_end":276,"column_start":1,"column_end":74}},{"value":"/ [`parse`] function.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":195475,"byte_end":195498,"line_start":277,"line_end":277,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":8672},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":196571,"byte_end":196577,"line_start":308,"line_end":308,"column_start":12,"column_end":18},"name":"Parser","qualname":"::parser::Parser","value":"Parser {  }","parent":null,"children":[{"krate":0,"index":8674}],"decl_id":null,"docs":" An in-progress parser for the tokens of a WebAssembly text file.","sig":null,"attributes":[{"value":"/ An in-progress parser for the tokens of a WebAssembly text file.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":196134,"byte_end":196202,"line_start":299,"line_end":299,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":196203,"byte_end":196206,"line_start":300,"line_end":300,"column_start":1,"column_end":4}},{"value":"/ A `Parser` is argument to the [`Parse`] trait and is now the input stream is","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":196207,"byte_end":196287,"line_start":301,"line_end":301,"column_start":1,"column_end":81}},{"value":"/ interacted with to parse new items. Cloning [`Parser`] or copying a parser","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":196288,"byte_end":196366,"line_start":302,"line_end":302,"column_start":1,"column_end":79}},{"value":"/ refers to the same stream of tokens to parse, you cannot clone a [`Parser`]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":196367,"byte_end":196446,"line_start":303,"line_end":303,"column_start":1,"column_end":80}},{"value":"/ and clone two items.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":196447,"byte_end":196471,"line_start":304,"line_end":304,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":196472,"byte_end":196475,"line_start":305,"line_end":305,"column_start":1,"column_end":4}},{"value":"/ For more information about a [`Parser`] see its methods.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":196476,"byte_end":196536,"line_start":306,"line_end":306,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":665},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":196788,"byte_end":196798,"line_start":316,"line_end":316,"column_start":12,"column_end":22},"name":"Lookahead1","qualname":"::parser::Lookahead1","value":"Lookahead1 {  }","parent":null,"children":[{"krate":0,"index":667},{"krate":0,"index":668}],"decl_id":null,"docs":" A helpful structure to perform a lookahead of one token to determine what to\n parse.","sig":null,"attributes":[{"value":"/ A helpful structure to perform a lookahead of one token to determine what to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":196617,"byte_end":196697,"line_start":312,"line_end":312,"column_start":1,"column_end":81}},{"value":"/ parse.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":196698,"byte_end":196708,"line_start":313,"line_end":313,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":196709,"byte_end":196712,"line_start":314,"line_end":314,"column_start":1,"column_end":4}},{"value":"/ For more information see the [`Parser::lookahead1`] method.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":196713,"byte_end":196776,"line_start":315,"line_end":315,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":8680},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":197181,"byte_end":197187,"line_start":327,"line_end":327,"column_start":12,"column_end":18},"name":"Cursor","qualname":"::parser::Cursor","value":"Cursor {  }","parent":null,"children":[{"krate":0,"index":8682},{"krate":0,"index":8683}],"decl_id":null,"docs":" An immutable cursor into a list of tokens.","sig":null,"attributes":[{"value":"/ An immutable cursor into a list of tokens.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":196865,"byte_end":196911,"line_start":321,"line_end":321,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":196912,"byte_end":196915,"line_start":322,"line_end":322,"column_start":1,"column_end":4}},{"value":"/ This cursor cannot be mutated but can be used to parse more tokens in a list","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":196916,"byte_end":196996,"line_start":323,"line_end":323,"column_start":1,"column_end":81}},{"value":"/ of tokens. Cursors are created from the [`Parser::step`] method. This is a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":196997,"byte_end":197075,"line_start":324,"line_end":324,"column_start":1,"column_end":79}},{"value":"/ very low-level parsing structure and you likely won't use it much.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":197076,"byte_end":197146,"line_start":325,"line_end":325,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":197432,"byte_end":197435,"line_start":338,"line_end":338,"column_start":12,"column_end":15},"name":"new","qualname":"<ParseBuffer>::new","value":"pub fn new(&str) -> Result<ParseBuffer>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`ParseBuffer`] by lexing the given `input` completely.","sig":null,"attributes":[{"value":"/ Creates a new [`ParseBuffer`] by lexing the given `input` completely.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":197264,"byte_end":197337,"line_start":333,"line_end":333,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":197342,"byte_end":197345,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":197350,"byte_end":197362,"line_start":335,"line_end":335,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":197367,"byte_end":197370,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ Returns an error if `input` fails to lex.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":197375,"byte_end":197420,"line_start":337,"line_end":337,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":671},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":197712,"byte_end":197726,"line_start":347,"line_end":347,"column_start":12,"column_end":26},"name":"new_with_lexer","qualname":"<ParseBuffer>::new_with_lexer","value":"pub fn new_with_lexer(Lexer) -> Result<ParseBuffer>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`ParseBuffer`] by lexing the given `input` completely.","sig":null,"attributes":[{"value":"/ Creates a new [`ParseBuffer`] by lexing the given `input` completely.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":197544,"byte_end":197617,"line_start":342,"line_end":342,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":197622,"byte_end":197625,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":197630,"byte_end":197642,"line_start":344,"line_end":344,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":197647,"byte_end":197650,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ Returns an error if `input` fails to lex.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":197655,"byte_end":197700,"line_start":346,"line_end":346,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":201183,"byte_end":201191,"line_start":435,"line_end":435,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Parser>::is_empty","value":"pub fn is_empty(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether there are no more `Token` tokens to parse from this\n [`Parser`].","sig":null,"attributes":[{"value":"/ Returns whether there are no more `Token` tokens to parse from this","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":200729,"byte_end":200800,"line_start":426,"line_end":426,"column_start":5,"column_end":76}},{"value":"/ [`Parser`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":200805,"byte_end":200820,"line_start":427,"line_end":427,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":200825,"byte_end":200828,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ This indicates that either we've reached the end of the input, or we're","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":200833,"byte_end":200908,"line_start":429,"line_end":429,"column_start":5,"column_end":80}},{"value":"/ a sub-[`Parser`] inside of a parenthesized expression and we've hit the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":200913,"byte_end":200988,"line_start":430,"line_end":430,"column_start":5,"column_end":80}},{"value":"/ `)` token.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":200993,"byte_end":201007,"line_start":431,"line_end":431,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":201012,"byte_end":201015,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ Note that if `false` is returned there *may* be more comments. Comments","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":201020,"byte_end":201095,"line_start":433,"line_end":433,"column_start":5,"column_end":80}},{"value":"/ and whitespace are not considered for whether this parser is empty.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":201100,"byte_end":201171,"line_start":434,"line_end":434,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":203393,"byte_end":203398,"line_start":499,"line_end":499,"column_start":12,"column_end":17},"name":"parse","qualname":"<Parser>::parse","value":"pub fn parse<T: Parse>(Self) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Parses a `T` from this [`Parser`].","sig":null,"attributes":[{"value":"/ Parses a `T` from this [`Parser`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":201683,"byte_end":201721,"line_start":451,"line_end":451,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":201726,"byte_end":201729,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ This method has a trivial definition (it simply calls","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":201734,"byte_end":201791,"line_start":453,"line_end":453,"column_start":5,"column_end":62}},{"value":"/ [`T::parse`](Parse::parse)) but is here for syntactic purposes. This is","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":201796,"byte_end":201871,"line_start":454,"line_end":454,"column_start":5,"column_end":80}},{"value":"/ what you'll call 99% of the time in a [`Parse`] implementation in order","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":201876,"byte_end":201951,"line_start":455,"line_end":455,"column_start":5,"column_end":80}},{"value":"/ to parse sub-items.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":201956,"byte_end":201979,"line_start":456,"line_end":456,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":201984,"byte_end":201987,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ Typically you always want to use `?` with the result of this method, you","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":201992,"byte_end":202068,"line_start":458,"line_end":458,"column_start":5,"column_end":81}},{"value":"/ should not handle errors and decide what else to parse. To handle","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":202073,"byte_end":202142,"line_start":459,"line_end":459,"column_start":5,"column_end":74}},{"value":"/ branches in parsing, use [`Parser::peek`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":202147,"byte_end":202193,"line_start":460,"line_end":460,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":202198,"byte_end":202201,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":202206,"byte_end":202220,"line_start":462,"line_end":462,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":202225,"byte_end":202228,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ A good example of using `parse` is to see how the [`TableType`] type is","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":202233,"byte_end":202308,"line_start":464,"line_end":464,"column_start":5,"column_end":80}},{"value":"/ parsed in this crate. A [`TableType`] is defined in the official","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":202313,"byte_end":202381,"line_start":465,"line_end":465,"column_start":5,"column_end":73}},{"value":"/ specification as [`tabletype`][spec] and is defined as:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":202386,"byte_end":202445,"line_start":466,"line_end":466,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":202450,"byte_end":202453,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ [spec]: https://webassembly.github.io/spec/core/text/types.html#table-types","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":202458,"byte_end":202537,"line_start":468,"line_end":468,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":202542,"byte_end":202545,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":202550,"byte_end":202561,"line_start":470,"line_end":470,"column_start":5,"column_end":16}},{"value":"/ tabletype ::= lim:limits et:reftype","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":202566,"byte_end":202605,"line_start":471,"line_end":471,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":202610,"byte_end":202617,"line_start":472,"line_end":472,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":202622,"byte_end":202625,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ so to parse a [`TableType`] we recursively need to parse a [`Limits`]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":202630,"byte_end":202703,"line_start":474,"line_end":474,"column_start":5,"column_end":78}},{"value":"/ and a [`RefType`]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":202708,"byte_end":202729,"line_start":475,"line_end":475,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":202734,"byte_end":202737,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":202742,"byte_end":202749,"line_start":477,"line_end":477,"column_start":5,"column_end":12}},{"value":"/ # use wast::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":202754,"byte_end":202772,"line_start":478,"line_end":478,"column_start":5,"column_end":23}},{"value":"/ # use wast::parser::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":202777,"byte_end":202803,"line_start":479,"line_end":479,"column_start":5,"column_end":31}},{"value":"/ struct TableType<'a> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":202808,"byte_end":202834,"line_start":480,"line_end":480,"column_start":5,"column_end":31}},{"value":"/     limits: Limits,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":202839,"byte_end":202862,"line_start":481,"line_end":481,"column_start":5,"column_end":28}},{"value":"/     elem: RefType<'a>,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":202867,"byte_end":202893,"line_start":482,"line_end":482,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":202898,"byte_end":202903,"line_start":483,"line_end":483,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":202908,"byte_end":202911,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ impl<'a> Parse<'a> for TableType<'a> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":202916,"byte_end":202958,"line_start":485,"line_end":485,"column_start":5,"column_end":47}},{"value":"/     fn parse(parser: Parser<'a>) -> Result<Self> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":202963,"byte_end":203017,"line_start":486,"line_end":486,"column_start":5,"column_end":59}},{"value":"/         // parse the `lim` then `et` in sequence","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":203022,"byte_end":203074,"line_start":487,"line_end":487,"column_start":5,"column_end":57}},{"value":"/         Ok(TableType {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":203079,"byte_end":203105,"line_start":488,"line_end":488,"column_start":5,"column_end":31}},{"value":"/             limits: parser.parse()?,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":203110,"byte_end":203150,"line_start":489,"line_end":489,"column_start":5,"column_end":45}},{"value":"/             elem: parser.parse()?,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":203155,"byte_end":203193,"line_start":490,"line_end":490,"column_start":5,"column_end":43}},{"value":"/         })","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":203198,"byte_end":203212,"line_start":491,"line_end":491,"column_start":5,"column_end":19}},{"value":"/     }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":203217,"byte_end":203226,"line_start":492,"line_end":492,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":203231,"byte_end":203236,"line_start":493,"line_end":493,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":203241,"byte_end":203248,"line_start":494,"line_end":494,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":203253,"byte_end":203256,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ [`Limits`]: crate::ast::Limits","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":203261,"byte_end":203295,"line_start":496,"line_end":496,"column_start":5,"column_end":39}},{"value":"/ [`TableType`]: crate::ast::TableType","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":203300,"byte_end":203340,"line_start":497,"line_end":497,"column_start":5,"column_end":45}},{"value":"/ [`RefType`]: crate::ast::RefType","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":203345,"byte_end":203381,"line_start":498,"line_end":498,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":205336,"byte_end":205340,"line_start":556,"line_end":556,"column_start":12,"column_end":16},"name":"peek","qualname":"<Parser>::peek","value":"pub fn peek<T: Peek>(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Performs a cheap test to see whether the current token in this stream is\n `T`.","sig":null,"attributes":[{"value":"/ Performs a cheap test to see whether the current token in this stream is","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":203468,"byte_end":203544,"line_start":503,"line_end":503,"column_start":5,"column_end":81}},{"value":"/ `T`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":203549,"byte_end":203557,"line_start":504,"line_end":504,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":203562,"byte_end":203565,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ This method can be used to efficiently determine what next to parse. The","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":203570,"byte_end":203646,"line_start":506,"line_end":506,"column_start":5,"column_end":81}},{"value":"/ [`Peek`] trait is defined for types which can be used to test if they're","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":203651,"byte_end":203727,"line_start":507,"line_end":507,"column_start":5,"column_end":81}},{"value":"/ the next item in the input stream.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":203732,"byte_end":203770,"line_start":508,"line_end":508,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":203775,"byte_end":203778,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ Nothing is actually parsed in this method, nor does this mutate the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":203783,"byte_end":203854,"line_start":510,"line_end":510,"column_start":5,"column_end":76}},{"value":"/ state of this [`Parser`]. Instead, this simply performs a check.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":203859,"byte_end":203927,"line_start":511,"line_end":511,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":203932,"byte_end":203935,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ This method is frequently combined with the [`Parser::lookahead1`]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":203940,"byte_end":204010,"line_start":513,"line_end":513,"column_start":5,"column_end":75}},{"value":"/ method to automatically produce nice error messages if some tokens","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":204015,"byte_end":204085,"line_start":514,"line_end":514,"column_start":5,"column_end":75}},{"value":"/ aren't found.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":204090,"byte_end":204107,"line_start":515,"line_end":515,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":204112,"byte_end":204115,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":204120,"byte_end":204134,"line_start":517,"line_end":517,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":204139,"byte_end":204142,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ For an example of using the `peek` method let's take a look at parsing","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":204147,"byte_end":204221,"line_start":519,"line_end":519,"column_start":5,"column_end":79}},{"value":"/ the [`Limits`] type. This is [defined in the official spec][spec] as:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":204226,"byte_end":204299,"line_start":520,"line_end":520,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":204304,"byte_end":204307,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":204312,"byte_end":204323,"line_start":522,"line_end":522,"column_start":5,"column_end":16}},{"value":"/ limits ::= n:u32","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":204328,"byte_end":204348,"line_start":523,"line_end":523,"column_start":5,"column_end":25}},{"value":"/          | n:u32 m:u32","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":204353,"byte_end":204379,"line_start":524,"line_end":524,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":204384,"byte_end":204391,"line_start":525,"line_end":525,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":204396,"byte_end":204399,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ which means that it's either one `u32` token or two, so we need to know","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":204404,"byte_end":204479,"line_start":527,"line_end":527,"column_start":5,"column_end":80}},{"value":"/ whether to consume two tokens or one:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":204484,"byte_end":204525,"line_start":528,"line_end":528,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":204530,"byte_end":204533,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":204538,"byte_end":204545,"line_start":530,"line_end":530,"column_start":5,"column_end":12}},{"value":"/ # use wast::parser::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":204550,"byte_end":204576,"line_start":531,"line_end":531,"column_start":5,"column_end":31}},{"value":"/ struct Limits {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":204581,"byte_end":204600,"line_start":532,"line_end":532,"column_start":5,"column_end":24}},{"value":"/     min: u32,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":204605,"byte_end":204622,"line_start":533,"line_end":533,"column_start":5,"column_end":22}},{"value":"/     max: Option<u32>,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":204627,"byte_end":204652,"line_start":534,"line_end":534,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":204657,"byte_end":204662,"line_start":535,"line_end":535,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":204667,"byte_end":204670,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ impl<'a> Parse<'a> for Limits {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":204675,"byte_end":204710,"line_start":537,"line_end":537,"column_start":5,"column_end":40}},{"value":"/     fn parse(parser: Parser<'a>) -> Result<Self> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":204715,"byte_end":204769,"line_start":538,"line_end":538,"column_start":5,"column_end":59}},{"value":"/         // Always parse the first number...","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":204774,"byte_end":204821,"line_start":539,"line_end":539,"column_start":5,"column_end":52}},{"value":"/         let min = parser.parse()?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":204826,"byte_end":204864,"line_start":540,"line_end":540,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":204869,"byte_end":204872,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/         // ... and then test if there's a second number before parsing","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":204877,"byte_end":204951,"line_start":542,"line_end":542,"column_start":5,"column_end":79}},{"value":"/         let max = if parser.peek::<u32>() {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":204956,"byte_end":205003,"line_start":543,"line_end":543,"column_start":5,"column_end":52}},{"value":"/             Some(parser.parse()?)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":205008,"byte_end":205045,"line_start":544,"line_end":544,"column_start":5,"column_end":42}},{"value":"/         } else {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":205050,"byte_end":205070,"line_start":545,"line_end":545,"column_start":5,"column_end":25}},{"value":"/             None","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":205075,"byte_end":205095,"line_start":546,"line_end":546,"column_start":5,"column_end":25}},{"value":"/         };","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":205100,"byte_end":205114,"line_start":547,"line_end":547,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":205119,"byte_end":205122,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/         Ok(Limits { min, max })","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":205127,"byte_end":205162,"line_start":549,"line_end":549,"column_start":5,"column_end":40}},{"value":"/     }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":205167,"byte_end":205176,"line_start":550,"line_end":550,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":205181,"byte_end":205186,"line_start":551,"line_end":551,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":205191,"byte_end":205198,"line_start":552,"line_end":552,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":205203,"byte_end":205206,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ [spec]: https://webassembly.github.io/spec/core/text/types.html#limits","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":205211,"byte_end":205285,"line_start":554,"line_end":554,"column_start":5,"column_end":79}},{"value":"/ [`Limits`]: crate::ast::Limits","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":205290,"byte_end":205324,"line_start":555,"line_end":555,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":205521,"byte_end":205526,"line_start":562,"line_end":562,"column_start":12,"column_end":17},"name":"peek2","qualname":"<Parser>::peek2","value":"pub fn peek2<T: Peek>(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Same as the [`Parser::peek`] method, except checks the next token, not\n the current token.\n","sig":null,"attributes":[{"value":"/ Same as the [`Parser::peek`] method, except checks the next token, not","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":205408,"byte_end":205482,"line_start":560,"line_end":560,"column_start":5,"column_end":79}},{"value":"/ the current token.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":205487,"byte_end":205509,"line_start":561,"line_end":561,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":207518,"byte_end":207528,"line_start":620,"line_end":620,"column_start":12,"column_end":22},"name":"lookahead1","qualname":"<Parser>::lookahead1","value":"pub fn lookahead1(Self) -> Lookahead1","parent":null,"children":[],"decl_id":null,"docs":" A helper structure to perform a sequence of `peek` operations and if\n they all fail produce a nice error message.","sig":null,"attributes":[{"value":"/ A helper structure to perform a sequence of `peek` operations and if","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":205722,"byte_end":205794,"line_start":571,"line_end":571,"column_start":5,"column_end":77}},{"value":"/ they all fail produce a nice error message.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":205799,"byte_end":205846,"line_start":572,"line_end":572,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":205851,"byte_end":205854,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ This method purely exists for conveniently producing error messages and","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":205859,"byte_end":205934,"line_start":574,"line_end":574,"column_start":5,"column_end":80}},{"value":"/ provides no functionality that [`Parser::peek`] doesn't already give.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":205939,"byte_end":206012,"line_start":575,"line_end":575,"column_start":5,"column_end":78}},{"value":"/ The [`Lookahead1`] structure has one main method [`Lookahead1::peek`],","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":206017,"byte_end":206091,"line_start":576,"line_end":576,"column_start":5,"column_end":79}},{"value":"/ which is the same method as [`Parser::peek`]. The difference is that the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":206096,"byte_end":206172,"line_start":577,"line_end":577,"column_start":5,"column_end":81}},{"value":"/ [`Lookahead1::error`] method needs no arguments.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":206177,"byte_end":206229,"line_start":578,"line_end":578,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":206234,"byte_end":206237,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":206242,"byte_end":206256,"line_start":580,"line_end":580,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":206261,"byte_end":206264,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ Let's look at the parsing of [`Index`]. This type is either a `u32` or","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":206269,"byte_end":206343,"line_start":582,"line_end":582,"column_start":5,"column_end":79}},{"value":"/ an [`Id`] and is used in name resolution primarily. The [official","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":206348,"byte_end":206417,"line_start":583,"line_end":583,"column_start":5,"column_end":74}},{"value":"/ grammar for an index][spec] is:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":206422,"byte_end":206457,"line_start":584,"line_end":584,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":206462,"byte_end":206465,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":206470,"byte_end":206481,"line_start":586,"line_end":586,"column_start":5,"column_end":16}},{"value":"/ idx ::= x:u32","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":206486,"byte_end":206503,"line_start":587,"line_end":587,"column_start":5,"column_end":22}},{"value":"/       | v:id","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":206508,"byte_end":206524,"line_start":588,"line_end":588,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":206529,"byte_end":206536,"line_start":589,"line_end":589,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":206541,"byte_end":206544,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ Which is to say that an index is either a `u32` or an [`Id`]. When","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":206549,"byte_end":206619,"line_start":591,"line_end":591,"column_start":5,"column_end":75}},{"value":"/ parsing an [`Index`] we can do:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":206624,"byte_end":206659,"line_start":592,"line_end":592,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":206664,"byte_end":206667,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":206672,"byte_end":206679,"line_start":594,"line_end":594,"column_start":5,"column_end":12}},{"value":"/ # use wast::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":206684,"byte_end":206702,"line_start":595,"line_end":595,"column_start":5,"column_end":23}},{"value":"/ # use wast::parser::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":206707,"byte_end":206733,"line_start":596,"line_end":596,"column_start":5,"column_end":31}},{"value":"/ enum Index<'a> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":206738,"byte_end":206758,"line_start":597,"line_end":597,"column_start":5,"column_end":25}},{"value":"/     Num(u32),","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":206763,"byte_end":206780,"line_start":598,"line_end":598,"column_start":5,"column_end":22}},{"value":"/     Id(Id<'a>),","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":206785,"byte_end":206804,"line_start":599,"line_end":599,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":206809,"byte_end":206814,"line_start":600,"line_end":600,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":206819,"byte_end":206822,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ impl<'a> Parse<'a> for Index<'a> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":206827,"byte_end":206865,"line_start":602,"line_end":602,"column_start":5,"column_end":43}},{"value":"/     fn parse(parser: Parser<'a>) -> Result<Self> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":206870,"byte_end":206924,"line_start":603,"line_end":603,"column_start":5,"column_end":59}},{"value":"/         let mut l = parser.lookahead1();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":206929,"byte_end":206973,"line_start":604,"line_end":604,"column_start":5,"column_end":49}},{"value":"/         if l.peek::<Id>() {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":206978,"byte_end":207009,"line_start":605,"line_end":605,"column_start":5,"column_end":36}},{"value":"/             Ok(Index::Id(parser.parse()?))","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":207014,"byte_end":207060,"line_start":606,"line_end":606,"column_start":5,"column_end":51}},{"value":"/         } else if l.peek::<u32>() {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":207065,"byte_end":207104,"line_start":607,"line_end":607,"column_start":5,"column_end":44}},{"value":"/             Ok(Index::Num(parser.parse()?))","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":207109,"byte_end":207156,"line_start":608,"line_end":608,"column_start":5,"column_end":52}},{"value":"/         } else {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":207161,"byte_end":207181,"line_start":609,"line_end":609,"column_start":5,"column_end":25}},{"value":"/             // produces error message of `expected identifier or u32`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":207186,"byte_end":207259,"line_start":610,"line_end":610,"column_start":5,"column_end":78}},{"value":"/             Err(l.error())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":207264,"byte_end":207294,"line_start":611,"line_end":611,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":207299,"byte_end":207312,"line_start":612,"line_end":612,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":207317,"byte_end":207326,"line_start":613,"line_end":613,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":207331,"byte_end":207336,"line_start":614,"line_end":614,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":207341,"byte_end":207348,"line_start":615,"line_end":615,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":207353,"byte_end":207356,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ [spec]: https://webassembly.github.io/spec/core/text/modules.html#indices","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":207361,"byte_end":207438,"line_start":617,"line_end":617,"column_start":5,"column_end":82}},{"value":"/ [`Index`]: crate::ast::Index","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":207443,"byte_end":207475,"line_start":618,"line_end":618,"column_start":5,"column_end":37}},{"value":"/ [`Id`]: crate::ast::Id","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":207480,"byte_end":207506,"line_start":619,"line_end":619,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":696},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":209487,"byte_end":209493,"line_start":670,"line_end":670,"column_start":12,"column_end":18},"name":"parens","qualname":"<Parser>::parens","value":"pub fn parens<T, impl FnOnce(Parser<'a>) -> Result<T>: FnOnce(Parser) ->\n              Result<T>>(Self, impl FnOnce(Parser<'a>) -> Result<T>)\n-> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Parse an item surrounded by parentheses.","sig":null,"attributes":[{"value":"/ Parse an item surrounded by parentheses.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":207657,"byte_end":207701,"line_start":627,"line_end":627,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":207706,"byte_end":207709,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ WebAssembly's text format is all based on s-expressions, so naturally","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":207714,"byte_end":207787,"line_start":629,"line_end":629,"column_start":5,"column_end":78}},{"value":"/ you're going to want to parse a lot of parenthesized things! As noted in","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":207792,"byte_end":207868,"line_start":630,"line_end":630,"column_start":5,"column_end":81}},{"value":"/ the documentation of [`Parse`] you typically don't parse your own","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":207873,"byte_end":207942,"line_start":631,"line_end":631,"column_start":5,"column_end":74}},{"value":"/ surrounding `(` and `)` tokens, but the parser above you parsed them for","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":207947,"byte_end":208023,"line_start":632,"line_end":632,"column_start":5,"column_end":81}},{"value":"/ you. This is method method the parser above you uses.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":208028,"byte_end":208085,"line_start":633,"line_end":633,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":208090,"byte_end":208093,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ This method will parse a `(` token, and then call `f` on a sub-parser","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":208098,"byte_end":208171,"line_start":635,"line_end":635,"column_start":5,"column_end":78}},{"value":"/ which when finished asserts that a `)` token is the next token. This","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":208176,"byte_end":208248,"line_start":636,"line_end":636,"column_start":5,"column_end":77}},{"value":"/ requires that `f` consumes all tokens leading up to the paired `)`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":208253,"byte_end":208324,"line_start":637,"line_end":637,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":208329,"byte_end":208332,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ Usage will often simply be `parser.parens(|p| p.parse())?` to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":208337,"byte_end":208402,"line_start":639,"line_end":639,"column_start":5,"column_end":70}},{"value":"/ automatically parse a type within parentheses, but you can, as always,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":208407,"byte_end":208481,"line_start":640,"line_end":640,"column_start":5,"column_end":79}},{"value":"/ go crazy and do whatever you'd like too.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":208486,"byte_end":208530,"line_start":641,"line_end":641,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":208535,"byte_end":208538,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":208543,"byte_end":208557,"line_start":643,"line_end":643,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":208562,"byte_end":208565,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ A good example of this is to see how a `Module` is parsed. This isn't","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":208570,"byte_end":208643,"line_start":645,"line_end":645,"column_start":5,"column_end":78}},{"value":"/ the exact definition, but it's close enough!","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":208648,"byte_end":208696,"line_start":646,"line_end":646,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":208701,"byte_end":208704,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":208709,"byte_end":208716,"line_start":648,"line_end":648,"column_start":5,"column_end":12}},{"value":"/ # use wast::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":208721,"byte_end":208739,"line_start":649,"line_end":649,"column_start":5,"column_end":23}},{"value":"/ # use wast::parser::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":208744,"byte_end":208770,"line_start":650,"line_end":650,"column_start":5,"column_end":31}},{"value":"/ struct Module<'a> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":208775,"byte_end":208798,"line_start":651,"line_end":651,"column_start":5,"column_end":28}},{"value":"/     fields: Vec<ModuleField<'a>>,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":208803,"byte_end":208840,"line_start":652,"line_end":652,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":208845,"byte_end":208850,"line_start":653,"line_end":653,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":208855,"byte_end":208858,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ impl<'a> Parse<'a> for Module<'a> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":208863,"byte_end":208902,"line_start":655,"line_end":655,"column_start":5,"column_end":44}},{"value":"/     fn parse(parser: Parser<'a>) -> Result<Self> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":208907,"byte_end":208961,"line_start":656,"line_end":656,"column_start":5,"column_end":59}},{"value":"/         // Modules start out with a `module` keyword","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":208966,"byte_end":209022,"line_start":657,"line_end":657,"column_start":5,"column_end":61}},{"value":"/         parser.parse::<kw::module>()?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":209027,"byte_end":209069,"line_start":658,"line_end":658,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":209074,"byte_end":209077,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/         // And then everything else is `(field ...)`, so while we've got","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":209082,"byte_end":209158,"line_start":660,"line_end":660,"column_start":5,"column_end":81}},{"value":"/         // items left we continuously parse parenthesized items.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":209163,"byte_end":209231,"line_start":661,"line_end":661,"column_start":5,"column_end":73}},{"value":"/         let mut fields = Vec::new();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":209236,"byte_end":209276,"line_start":662,"line_end":662,"column_start":5,"column_end":45}},{"value":"/         while !parser.is_empty() {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":209281,"byte_end":209319,"line_start":663,"line_end":663,"column_start":5,"column_end":43}},{"value":"/             fields.push(parser.parens(|p| p.parse())?);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":209324,"byte_end":209383,"line_start":664,"line_end":664,"column_start":5,"column_end":64}},{"value":"/         }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":209388,"byte_end":209401,"line_start":665,"line_end":665,"column_start":5,"column_end":18}},{"value":"/         Ok(Module { fields })","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":209406,"byte_end":209439,"line_start":666,"line_end":666,"column_start":5,"column_end":38}},{"value":"/     }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":209444,"byte_end":209453,"line_start":667,"line_end":667,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":209458,"byte_end":209463,"line_start":668,"line_end":668,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":209468,"byte_end":209475,"line_start":669,"line_end":669,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":700},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":210536,"byte_end":210548,"line_start":697,"line_end":697,"column_start":12,"column_end":24},"name":"parens_depth","qualname":"<Parser>::parens_depth","value":"pub fn parens_depth(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the depth of nested parens we've parsed so far.","sig":null,"attributes":[{"value":"/ Return the depth of nested parens we've parsed so far.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":210342,"byte_end":210400,"line_start":693,"line_end":693,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":210405,"byte_end":210408,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ This is a low-level method that is only useful for implementing","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":210413,"byte_end":210480,"line_start":695,"line_end":695,"column_start":5,"column_end":72}},{"value":"/ recursion limits in custom parsers.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":210485,"byte_end":210524,"line_start":696,"line_end":696,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":211061,"byte_end":211065,"line_start":714,"line_end":714,"column_start":12,"column_end":16},"name":"step","qualname":"<Parser>::step","value":"pub fn step<F, T>(Self, F) -> Result<T> where F: FnOnce(Cursor) ->\nResult<(T, Cursor)>","parent":null,"children":[],"decl_id":null,"docs":" A low-level parsing method you probably won't use.","sig":null,"attributes":[{"value":"/ A low-level parsing method you probably won't use.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":210740,"byte_end":210794,"line_start":708,"line_end":708,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":210799,"byte_end":210802,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ This is used to implement parsing of the most primitive types in the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":210807,"byte_end":210879,"line_start":710,"line_end":710,"column_start":5,"column_end":77}},{"value":"/ [`ast`](crate::ast) module. You probably don't want to use this, but","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":210884,"byte_end":210956,"line_start":711,"line_end":711,"column_start":5,"column_end":77}},{"value":"/ probably want to use something like [`Parser::parse`] or","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":210961,"byte_end":211021,"line_start":712,"line_end":712,"column_start":5,"column_end":65}},{"value":"/ [`Parser::parens`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":211026,"byte_end":211049,"line_start":713,"line_end":713,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":211639,"byte_end":211644,"line_start":729,"line_end":729,"column_start":12,"column_end":17},"name":"error","qualname":"<Parser>::error","value":"pub fn error<impl fmt::Display: fmt::Display>(Self, impl fmt::Display)\n-> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error whose line/column information is pointing at the\n current token.","sig":null,"attributes":[{"value":"/ Creates an error whose line/column information is pointing at the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":211289,"byte_end":211358,"line_start":723,"line_end":723,"column_start":5,"column_end":74}},{"value":"/ current token.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":211363,"byte_end":211381,"line_start":724,"line_end":724,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":211386,"byte_end":211389,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ This is used to produce human-readable error messages which point to the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":211394,"byte_end":211470,"line_start":726,"line_end":726,"column_start":5,"column_end":81}},{"value":"/ right location in the input stream, and the `msg` here is arbitrary text","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":211475,"byte_end":211551,"line_start":727,"line_end":727,"column_start":5,"column_end":81}},{"value":"/ used to associate with the error and indicate why it was generated.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":211556,"byte_end":211627,"line_start":728,"line_end":728,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":211940,"byte_end":211948,"line_start":738,"line_end":738,"column_start":12,"column_end":20},"name":"cur_span","qualname":"<Parser>::cur_span","value":"pub fn cur_span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the span of the current token\n","sig":null,"attributes":[{"value":"/ Returns the span of the current token","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":211887,"byte_end":211928,"line_start":737,"line_end":737,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":212064,"byte_end":212073,"line_start":743,"line_end":743,"column_start":12,"column_end":21},"name":"prev_span","qualname":"<Parser>::prev_span","value":"pub fn prev_span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the span of the previous token\n","sig":null,"attributes":[{"value":"/ Returns the span of the previous token","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":212010,"byte_end":212052,"line_start":742,"line_end":742,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":217800,"byte_end":217819,"line_start":875,"line_end":875,"column_start":12,"column_end":31},"name":"register_annotation","qualname":"<Parser>::register_annotation","value":"pub fn register_annotation<'b>(Self, &'b str) -> /*impl Trait*/ where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":" Registers a new known annotation with this parser to allow parsing\n annotations with this name.","sig":null,"attributes":[{"value":"/ Registers a new known annotation with this parser to allow parsing","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":212168,"byte_end":212238,"line_start":747,"line_end":747,"column_start":5,"column_end":75}},{"value":"/ annotations with this name.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":212243,"byte_end":212274,"line_start":748,"line_end":748,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":212279,"byte_end":212282,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ [WebAssembly annotations][annotation] are a proposal for the text format","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":212287,"byte_end":212363,"line_start":750,"line_end":750,"column_start":5,"column_end":81}},{"value":"/ which allows decorating the text format with custom structured","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":212368,"byte_end":212434,"line_start":751,"line_end":751,"column_start":5,"column_end":71}},{"value":"/ information. By default all annotations are ignored when parsing, but","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":212439,"byte_end":212512,"line_start":752,"line_end":752,"column_start":5,"column_end":78}},{"value":"/ the whole purpose of them is to sometimes parse them!","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":212517,"byte_end":212574,"line_start":753,"line_end":753,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":212579,"byte_end":212582,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ To support parsing text annotations this method is used to allow","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":212587,"byte_end":212655,"line_start":755,"line_end":755,"column_start":5,"column_end":73}},{"value":"/ annotations and their tokens to *not* be skipped. Once an annotation is","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":212660,"byte_end":212735,"line_start":756,"line_end":756,"column_start":5,"column_end":80}},{"value":"/ registered with this method, then while the return value has not been","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":212740,"byte_end":212813,"line_start":757,"line_end":757,"column_start":5,"column_end":78}},{"value":"/ dropped (e.g. the scope of where this function is called) annotations","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":212818,"byte_end":212891,"line_start":758,"line_end":758,"column_start":5,"column_end":78}},{"value":"/ with the name `annotation` will be parse of the token stream and not","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":212896,"byte_end":212968,"line_start":759,"line_end":759,"column_start":5,"column_end":77}},{"value":"/ implicitly skipped.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":212973,"byte_end":212996,"line_start":760,"line_end":760,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":213001,"byte_end":213004,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ # Skipping annotations","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":213009,"byte_end":213035,"line_start":762,"line_end":762,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":213040,"byte_end":213043,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ The behavior of skipping unknown/unregistered annotations can be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":213048,"byte_end":213116,"line_start":764,"line_end":764,"column_start":5,"column_end":73}},{"value":"/ somewhat subtle and surprising, so if you're interested in parsing","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":213121,"byte_end":213191,"line_start":765,"line_end":765,"column_start":5,"column_end":75}},{"value":"/ annotations it's important to point out the importance of this method","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":213196,"byte_end":213269,"line_start":766,"line_end":766,"column_start":5,"column_end":78}},{"value":"/ and where to call it.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":213274,"byte_end":213299,"line_start":767,"line_end":767,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":213304,"byte_end":213307,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ Generally when parsing tokens you'll be bottoming out in various","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":213312,"byte_end":213380,"line_start":769,"line_end":769,"column_start":5,"column_end":73}},{"value":"/ `Cursor` methods. These are all documented as advancing the stream as","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":213385,"byte_end":213458,"line_start":770,"line_end":770,"column_start":5,"column_end":78}},{"value":"/ much as possible to the next token, skipping \"irrelevant stuff\" like","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":213463,"byte_end":213535,"line_start":771,"line_end":771,"column_start":5,"column_end":77}},{"value":"/ comments, whitespace, etc. The `Cursor` methods will also skip unknown","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":213540,"byte_end":213614,"line_start":772,"line_end":772,"column_start":5,"column_end":79}},{"value":"/ annotations. This means that if you parse *any* token, it will skip over","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":213619,"byte_end":213695,"line_start":773,"line_end":773,"column_start":5,"column_end":81}},{"value":"/ any number of annotations that are unknown at all times.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":213700,"byte_end":213760,"line_start":774,"line_end":774,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":213765,"byte_end":213768,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ To parse an annotation you must, before parsing any token of the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":213773,"byte_end":213841,"line_start":776,"line_end":776,"column_start":5,"column_end":73}},{"value":"/ annotation, register the annotation via this method. This includes the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":213846,"byte_end":213920,"line_start":777,"line_end":777,"column_start":5,"column_end":79}},{"value":"/ beginning `(` token, which is otherwise skipped if the annotation isn't","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":213925,"byte_end":214000,"line_start":778,"line_end":778,"column_start":5,"column_end":80}},{"value":"/ marked as registered. Typically parser parse the *contents* of an","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":214005,"byte_end":214074,"line_start":779,"line_end":779,"column_start":5,"column_end":74}},{"value":"/ s-expression, so this means that the outer parser of an s-expression","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":214079,"byte_end":214151,"line_start":780,"line_end":780,"column_start":5,"column_end":77}},{"value":"/ must register the custom annotation name, rather than the inner parser.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":214156,"byte_end":214231,"line_start":781,"line_end":781,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":214236,"byte_end":214239,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":214244,"byte_end":214256,"line_start":783,"line_end":783,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":214261,"byte_end":214264,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/ This function returns an RAII guard which, when dropped, will unregister","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":214269,"byte_end":214345,"line_start":785,"line_end":785,"column_start":5,"column_end":81}},{"value":"/ the `annotation` given. Parsing `annotation` is only supported while the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":214350,"byte_end":214426,"line_start":786,"line_end":786,"column_start":5,"column_end":81}},{"value":"/ returned value is still alive, and once dropped the parser will go back","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":214431,"byte_end":214506,"line_start":787,"line_end":787,"column_start":5,"column_end":80}},{"value":"/ to skipping annotations with the name `annotation`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":214511,"byte_end":214566,"line_start":788,"line_end":788,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":214571,"byte_end":214574,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":214579,"byte_end":214592,"line_start":790,"line_end":790,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":214597,"byte_end":214600,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ Let's see an example of how the `@name` annotation is parsed for modules","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":214605,"byte_end":214681,"line_start":792,"line_end":792,"column_start":5,"column_end":81}},{"value":"/ to get an idea of how this works:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":214686,"byte_end":214723,"line_start":793,"line_end":793,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":214728,"byte_end":214731,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":214736,"byte_end":214743,"line_start":795,"line_end":795,"column_start":5,"column_end":12}},{"value":"/ # use wast::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":214748,"byte_end":214766,"line_start":796,"line_end":796,"column_start":5,"column_end":23}},{"value":"/ # use wast::parser::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":214771,"byte_end":214797,"line_start":797,"line_end":797,"column_start":5,"column_end":31}},{"value":"/ struct Module<'a> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":214802,"byte_end":214825,"line_start":798,"line_end":798,"column_start":5,"column_end":28}},{"value":"/     name: Option<NameAnnotation<'a>>,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":214830,"byte_end":214871,"line_start":799,"line_end":799,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":214876,"byte_end":214881,"line_start":800,"line_end":800,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":214886,"byte_end":214889,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ impl<'a> Parse<'a> for Module<'a> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":214894,"byte_end":214933,"line_start":802,"line_end":802,"column_start":5,"column_end":44}},{"value":"/     fn parse(parser: Parser<'a>) -> Result<Self> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":214938,"byte_end":214992,"line_start":803,"line_end":803,"column_start":5,"column_end":59}},{"value":"/         // Modules start out with a `module` keyword","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":214997,"byte_end":215053,"line_start":804,"line_end":804,"column_start":5,"column_end":61}},{"value":"/         parser.parse::<kw::module>()?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":215058,"byte_end":215100,"line_start":805,"line_end":805,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":215105,"byte_end":215108,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/         // Next may be `(@name \"foo\")`. Typically this annotation would","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":215113,"byte_end":215188,"line_start":807,"line_end":807,"column_start":5,"column_end":80}},{"value":"/         // skipped, but we don't want it skipped, so we register it.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":215193,"byte_end":215265,"line_start":808,"line_end":808,"column_start":5,"column_end":77}},{"value":"/         // Note that the parse implementation of","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":215270,"byte_end":215322,"line_start":809,"line_end":809,"column_start":5,"column_end":57}},{"value":"/         // `Option<NameAnnotation>` is the one that consumes the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":215327,"byte_end":215395,"line_start":810,"line_end":810,"column_start":5,"column_end":73}},{"value":"/         // parentheses here.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":215400,"byte_end":215432,"line_start":811,"line_end":811,"column_start":5,"column_end":37}},{"value":"/         let _r = parser.register_annotation(\"name\");","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":215437,"byte_end":215493,"line_start":812,"line_end":812,"column_start":5,"column_end":61}},{"value":"/         let name = parser.parse()?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":215498,"byte_end":215537,"line_start":813,"line_end":813,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":215542,"byte_end":215545,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/         // ... and normally you'd otherwise parse module fields here ...","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":215550,"byte_end":215626,"line_start":815,"line_end":815,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":215631,"byte_end":215634,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/         Ok(Module { name })","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":215639,"byte_end":215670,"line_start":817,"line_end":817,"column_start":5,"column_end":36}},{"value":"/     }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":215675,"byte_end":215684,"line_start":818,"line_end":818,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":215689,"byte_end":215694,"line_start":819,"line_end":819,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":215699,"byte_end":215706,"line_start":820,"line_end":820,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":215711,"byte_end":215714,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ Another example is how we parse the `@custom` annotation. Note that this","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":215719,"byte_end":215795,"line_start":822,"line_end":822,"column_start":5,"column_end":81}},{"value":"/ is parsed as part of `ModuleField`, so note how the annotation is","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":215800,"byte_end":215869,"line_start":823,"line_end":823,"column_start":5,"column_end":74}},{"value":"/ registered *before* we parse the parentheses of the annotation.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":215874,"byte_end":215941,"line_start":824,"line_end":824,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":215946,"byte_end":215949,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":215954,"byte_end":215961,"line_start":826,"line_end":826,"column_start":5,"column_end":12}},{"value":"/ # use wast::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":215966,"byte_end":215984,"line_start":827,"line_end":827,"column_start":5,"column_end":23}},{"value":"/ # use wast::parser::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":215989,"byte_end":216015,"line_start":828,"line_end":828,"column_start":5,"column_end":31}},{"value":"/ struct Module<'a> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":216020,"byte_end":216043,"line_start":829,"line_end":829,"column_start":5,"column_end":28}},{"value":"/     fields: Vec<ModuleField<'a>>,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":216048,"byte_end":216085,"line_start":830,"line_end":830,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":216090,"byte_end":216095,"line_start":831,"line_end":831,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":216100,"byte_end":216103,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ impl<'a> Parse<'a> for Module<'a> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":216108,"byte_end":216147,"line_start":833,"line_end":833,"column_start":5,"column_end":44}},{"value":"/     fn parse(parser: Parser<'a>) -> Result<Self> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":216152,"byte_end":216206,"line_start":834,"line_end":834,"column_start":5,"column_end":59}},{"value":"/         // Modules start out with a `module` keyword","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":216211,"byte_end":216267,"line_start":835,"line_end":835,"column_start":5,"column_end":61}},{"value":"/         parser.parse::<kw::module>()?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":216272,"byte_end":216314,"line_start":836,"line_end":836,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":216319,"byte_end":216322,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/         // register the `@custom` annotation *first* before we start","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":216327,"byte_end":216399,"line_start":838,"line_end":838,"column_start":5,"column_end":77}},{"value":"/         // parsing fields, because each field is contained in","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":216404,"byte_end":216469,"line_start":839,"line_end":839,"column_start":5,"column_end":70}},{"value":"/         // parentheses and to parse the parentheses of an annotation we","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":216474,"byte_end":216549,"line_start":840,"line_end":840,"column_start":5,"column_end":80}},{"value":"/         // have to known to not skip it.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":216554,"byte_end":216598,"line_start":841,"line_end":841,"column_start":5,"column_end":49}},{"value":"/         let _r = parser.register_annotation(\"custom\");","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":216603,"byte_end":216661,"line_start":842,"line_end":842,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":216666,"byte_end":216669,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/         let mut fields = Vec::new();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":216674,"byte_end":216714,"line_start":844,"line_end":844,"column_start":5,"column_end":45}},{"value":"/         while !parser.is_empty() {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":216719,"byte_end":216757,"line_start":845,"line_end":845,"column_start":5,"column_end":43}},{"value":"/             fields.push(parser.parens(|p| p.parse())?);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":216762,"byte_end":216821,"line_start":846,"line_end":846,"column_start":5,"column_end":64}},{"value":"/         }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":216826,"byte_end":216839,"line_start":847,"line_end":847,"column_start":5,"column_end":18}},{"value":"/         Ok(Module { fields })","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":216844,"byte_end":216877,"line_start":848,"line_end":848,"column_start":5,"column_end":38}},{"value":"/     }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":216882,"byte_end":216891,"line_start":849,"line_end":849,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":216896,"byte_end":216901,"line_start":850,"line_end":850,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":216906,"byte_end":216909,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ enum ModuleField<'a> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":216914,"byte_end":216940,"line_start":852,"line_end":852,"column_start":5,"column_end":31}},{"value":"/     Custom(Custom<'a>),","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":216945,"byte_end":216972,"line_start":853,"line_end":853,"column_start":5,"column_end":32}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":216977,"byte_end":216991,"line_start":854,"line_end":854,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":216996,"byte_end":217001,"line_start":855,"line_end":855,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":217006,"byte_end":217009,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ impl<'a> Parse<'a> for ModuleField<'a> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":217014,"byte_end":217058,"line_start":857,"line_end":857,"column_start":5,"column_end":49}},{"value":"/     fn parse(parser: Parser<'a>) -> Result<Self> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":217063,"byte_end":217117,"line_start":858,"line_end":858,"column_start":5,"column_end":59}},{"value":"/         // Note that because we have previously registered the `@custom`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":217122,"byte_end":217198,"line_start":859,"line_end":859,"column_start":5,"column_end":81}},{"value":"/         // annotation with the parser we known that `peek` methods like","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":217203,"byte_end":217278,"line_start":860,"line_end":860,"column_start":5,"column_end":80}},{"value":"/         // this, working on the annotation token, are enabled to ever","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":217283,"byte_end":217356,"line_start":861,"line_end":861,"column_start":5,"column_end":78}},{"value":"/         // return `true`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":217361,"byte_end":217390,"line_start":862,"line_end":862,"column_start":5,"column_end":34}},{"value":"/         if parser.peek::<annotation::custom>() {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":217395,"byte_end":217447,"line_start":863,"line_end":863,"column_start":5,"column_end":57}},{"value":"/             return Ok(ModuleField::Custom(parser.parse()?));","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":217452,"byte_end":217516,"line_start":864,"line_end":864,"column_start":5,"column_end":69}},{"value":"/         }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":217521,"byte_end":217534,"line_start":865,"line_end":865,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":217539,"byte_end":217542,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/         // .. typically we'd parse other module fields here...","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":217547,"byte_end":217613,"line_start":867,"line_end":867,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":217618,"byte_end":217621,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/         Err(parser.error(\"unknown module field\"))","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":217626,"byte_end":217679,"line_start":869,"line_end":869,"column_start":5,"column_end":58}},{"value":"/     }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":217684,"byte_end":217693,"line_start":870,"line_end":870,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":217698,"byte_end":217703,"line_start":871,"line_end":871,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":217708,"byte_end":217715,"line_start":872,"line_end":872,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":217720,"byte_end":217723,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ [annotation]: https://github.com/WebAssembly/annotations","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":217728,"byte_end":217788,"line_start":874,"line_end":874,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":218685,"byte_end":218693,"line_start":903,"line_end":903,"column_start":12,"column_end":20},"name":"cur_span","qualname":"<Cursor>::cur_span","value":"pub fn cur_span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the span of the next `Token` token.","sig":null,"attributes":[{"value":"/ Returns the span of the next `Token` token.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":218559,"byte_end":218606,"line_start":900,"line_end":900,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":218611,"byte_end":218614,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ Does not take into account whitespace or comments.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":218619,"byte_end":218673,"line_start":902,"line_end":902,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":219388,"byte_end":219393,"line_start":923,"line_end":923,"column_start":12,"column_end":17},"name":"error","qualname":"<Cursor>::error","value":"pub fn error<impl fmt::Display: fmt::Display>(&Self, impl fmt::Display)\n-> Error","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Parser::error`], but works with the current token in this\n [`Cursor`] instead.\n","sig":null,"attributes":[{"value":"/ Same as [`Parser::error`], but works with the current token in this","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":219277,"byte_end":219348,"line_start":921,"line_end":921,"column_start":5,"column_end":76}},{"value":"/ [`Cursor`] instead.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":219353,"byte_end":219376,"line_start":922,"line_end":922,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":726},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":219848,"byte_end":219854,"line_start":934,"line_end":934,"column_start":12,"column_end":18},"name":"lparen","qualname":"<Cursor>::lparen","value":"pub fn lparen(Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to advance this cursor if the current token is a `(`.","sig":null,"attributes":[{"value":"/ Attempts to advance this cursor if the current token is a `(`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":219499,"byte_end":219565,"line_start":927,"line_end":927,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":219570,"byte_end":219573,"line_start":928,"line_end":928,"column_start":5,"column_end":8}},{"value":"/ If the current token is `(`, returns a new [`Cursor`] pointing at the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":219578,"byte_end":219651,"line_start":929,"line_end":929,"column_start":5,"column_end":78}},{"value":"/ rest of the tokens in the stream. Otherwise returns `None`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":219656,"byte_end":219719,"line_start":930,"line_end":930,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":219724,"byte_end":219727,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ This function will automatically skip over any comments, whitespace, or","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":219732,"byte_end":219807,"line_start":932,"line_end":932,"column_start":5,"column_end":80}},{"value":"/ unknown annotations.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":219812,"byte_end":219836,"line_start":933,"line_end":933,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":220358,"byte_end":220364,"line_start":948,"line_end":948,"column_start":12,"column_end":18},"name":"rparen","qualname":"<Cursor>::rparen","value":"pub fn rparen(Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to advance this cursor if the current token is a `)`.","sig":null,"attributes":[{"value":"/ Attempts to advance this cursor if the current token is a `)`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":220009,"byte_end":220075,"line_start":941,"line_end":941,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":220080,"byte_end":220083,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ If the current token is `)`, returns a new [`Cursor`] pointing at the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":220088,"byte_end":220161,"line_start":943,"line_end":943,"column_start":5,"column_end":78}},{"value":"/ rest of the tokens in the stream. Otherwise returns `None`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":220166,"byte_end":220229,"line_start":944,"line_end":944,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":220234,"byte_end":220237,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/ This function will automatically skip over any comments, whitespace, or","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":220242,"byte_end":220317,"line_start":946,"line_end":946,"column_start":5,"column_end":80}},{"value":"/ unknown annotations.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":220322,"byte_end":220346,"line_start":947,"line_end":947,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":220973,"byte_end":220975,"line_start":964,"line_end":964,"column_start":12,"column_end":14},"name":"id","qualname":"<Cursor>::id","value":"pub fn id(Self) -> Option<(&'a str, Self)>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to advance this cursor if the current token is a\n [`Token::Id`](crate::lexer::Token)","sig":null,"attributes":[{"value":"/ Attempts to advance this cursor if the current token is a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":220519,"byte_end":220580,"line_start":955,"line_end":955,"column_start":5,"column_end":66}},{"value":"/ [`Token::Id`](crate::lexer::Token)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":220585,"byte_end":220623,"line_start":956,"line_end":956,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":220628,"byte_end":220631,"line_start":957,"line_end":957,"column_start":5,"column_end":8}},{"value":"/ If the current token is `Id`, returns the identifier minus the leading","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":220636,"byte_end":220710,"line_start":958,"line_end":958,"column_start":5,"column_end":79}},{"value":"/ `$` character as well as a new [`Cursor`] pointing at the rest of the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":220715,"byte_end":220788,"line_start":959,"line_end":959,"column_start":5,"column_end":78}},{"value":"/ tokens in the stream. Otherwise returns `None`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":220793,"byte_end":220844,"line_start":960,"line_end":960,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":220849,"byte_end":220852,"line_start":961,"line_end":961,"column_start":5,"column_end":8}},{"value":"/ This function will automatically skip over any comments, whitespace, or","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":220857,"byte_end":220932,"line_start":962,"line_end":962,"column_start":5,"column_end":80}},{"value":"/ unknown annotations.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":220937,"byte_end":220961,"line_start":963,"line_end":963,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":729},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":221579,"byte_end":221586,"line_start":980,"line_end":980,"column_start":12,"column_end":19},"name":"keyword","qualname":"<Cursor>::keyword","value":"pub fn keyword(Self) -> Option<(&'a str, Self)>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to advance this cursor if the current token is a\n [`Token::Keyword`](crate::lexer::Token)","sig":null,"attributes":[{"value":"/ Attempts to advance this cursor if the current token is a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":221150,"byte_end":221211,"line_start":971,"line_end":971,"column_start":5,"column_end":66}},{"value":"/ [`Token::Keyword`](crate::lexer::Token)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":221216,"byte_end":221259,"line_start":972,"line_end":972,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":221264,"byte_end":221267,"line_start":973,"line_end":973,"column_start":5,"column_end":8}},{"value":"/ If the current token is `Keyword`, returns the keyword as well as a new","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":221272,"byte_end":221347,"line_start":974,"line_end":974,"column_start":5,"column_end":80}},{"value":"/ [`Cursor`] pointing at the rest of the tokens in the stream. Otherwise","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":221352,"byte_end":221426,"line_start":975,"line_end":975,"column_start":5,"column_end":79}},{"value":"/ returns `None`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":221431,"byte_end":221450,"line_start":976,"line_end":976,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":221455,"byte_end":221458,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ This function will automatically skip over any comments, whitespace, or","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":221463,"byte_end":221538,"line_start":978,"line_end":978,"column_start":5,"column_end":80}},{"value":"/ unknown annotations.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":221543,"byte_end":221567,"line_start":979,"line_end":979,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":222198,"byte_end":222206,"line_start":996,"line_end":996,"column_start":12,"column_end":20},"name":"reserved","qualname":"<Cursor>::reserved","value":"pub fn reserved(Self) -> Option<(&'a str, Self)>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to advance this cursor if the current token is a\n [`Token::Reserved`](crate::lexer::Token)","sig":null,"attributes":[{"value":"/ Attempts to advance this cursor if the current token is a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":221760,"byte_end":221821,"line_start":987,"line_end":987,"column_start":5,"column_end":66}},{"value":"/ [`Token::Reserved`](crate::lexer::Token)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":221826,"byte_end":221870,"line_start":988,"line_end":988,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":221875,"byte_end":221878,"line_start":989,"line_end":989,"column_start":5,"column_end":8}},{"value":"/ If the current token is `Reserved`, returns the reserved token as well","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":221883,"byte_end":221957,"line_start":990,"line_end":990,"column_start":5,"column_end":79}},{"value":"/ as a new [`Cursor`] pointing at the rest of the tokens in the stream.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":221962,"byte_end":222035,"line_start":991,"line_end":991,"column_start":5,"column_end":78}},{"value":"/ Otherwise returns `None`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":222040,"byte_end":222069,"line_start":992,"line_end":992,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":222074,"byte_end":222077,"line_start":993,"line_end":993,"column_start":5,"column_end":8}},{"value":"/ This function will automatically skip over any comments, whitespace, or","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":222082,"byte_end":222157,"line_start":994,"line_end":994,"column_start":5,"column_end":80}},{"value":"/ unknown annotations.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":222162,"byte_end":222186,"line_start":995,"line_end":995,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":731},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":222810,"byte_end":222817,"line_start":1012,"line_end":1012,"column_start":12,"column_end":19},"name":"integer","qualname":"<Cursor>::integer","value":"pub fn integer(Self) -> Option<(&'a Integer, Self)>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to advance this cursor if the current token is a\n [`Token::Integer`](crate::lexer::Token)","sig":null,"attributes":[{"value":"/ Attempts to advance this cursor if the current token is a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":222381,"byte_end":222442,"line_start":1003,"line_end":1003,"column_start":5,"column_end":66}},{"value":"/ [`Token::Integer`](crate::lexer::Token)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":222447,"byte_end":222490,"line_start":1004,"line_end":1004,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":222495,"byte_end":222498,"line_start":1005,"line_end":1005,"column_start":5,"column_end":8}},{"value":"/ If the current token is `Integer`, returns the integer as well as a new","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":222503,"byte_end":222578,"line_start":1006,"line_end":1006,"column_start":5,"column_end":80}},{"value":"/ [`Cursor`] pointing at the rest of the tokens in the stream. Otherwise","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":222583,"byte_end":222657,"line_start":1007,"line_end":1007,"column_start":5,"column_end":79}},{"value":"/ returns `None`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":222662,"byte_end":222681,"line_start":1008,"line_end":1008,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":222686,"byte_end":222689,"line_start":1009,"line_end":1009,"column_start":5,"column_end":8}},{"value":"/ This function will automatically skip over any comments, whitespace, or","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":222694,"byte_end":222769,"line_start":1010,"line_end":1010,"column_start":5,"column_end":80}},{"value":"/ unknown annotations.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":222774,"byte_end":222798,"line_start":1011,"line_end":1011,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":732},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":223420,"byte_end":223425,"line_start":1028,"line_end":1028,"column_start":12,"column_end":17},"name":"float","qualname":"<Cursor>::float","value":"pub fn float(Self) -> Option<(&'a Float, Self)>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to advance this cursor if the current token is a\n [`Token::Float`](crate::lexer::Token)","sig":null,"attributes":[{"value":"/ Attempts to advance this cursor if the current token is a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":222997,"byte_end":223058,"line_start":1019,"line_end":1019,"column_start":5,"column_end":66}},{"value":"/ [`Token::Float`](crate::lexer::Token)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":223063,"byte_end":223104,"line_start":1020,"line_end":1020,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":223109,"byte_end":223112,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ If the current token is `Float`, returns the float as well as a new","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":223117,"byte_end":223188,"line_start":1022,"line_end":1022,"column_start":5,"column_end":76}},{"value":"/ [`Cursor`] pointing at the rest of the tokens in the stream. Otherwise","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":223193,"byte_end":223267,"line_start":1023,"line_end":1023,"column_start":5,"column_end":79}},{"value":"/ returns `None`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":223272,"byte_end":223291,"line_start":1024,"line_end":1024,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":223296,"byte_end":223299,"line_start":1025,"line_end":1025,"column_start":5,"column_end":8}},{"value":"/ This function will automatically skip over any comments, whitespace, or","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":223304,"byte_end":223379,"line_start":1026,"line_end":1026,"column_start":5,"column_end":80}},{"value":"/ unknown annotations.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":223384,"byte_end":223408,"line_start":1027,"line_end":1027,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":733},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":224045,"byte_end":224051,"line_start":1044,"line_end":1044,"column_start":12,"column_end":18},"name":"string","qualname":"<Cursor>::string","value":"pub fn string(Self) -> Option<(&'a [u8], Self)>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to advance this cursor if the current token is a\n [`Token::String`](crate::lexer::Token)","sig":null,"attributes":[{"value":"/ Attempts to advance this cursor if the current token is a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":223601,"byte_end":223662,"line_start":1035,"line_end":1035,"column_start":5,"column_end":66}},{"value":"/ [`Token::String`](crate::lexer::Token)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":223667,"byte_end":223709,"line_start":1036,"line_end":1036,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":223714,"byte_end":223717,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ If the current token is `String`, returns the byte value of the string","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":223722,"byte_end":223796,"line_start":1038,"line_end":1038,"column_start":5,"column_end":79}},{"value":"/ as well as a new [`Cursor`] pointing at the rest of the tokens in the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":223801,"byte_end":223874,"line_start":1039,"line_end":1039,"column_start":5,"column_end":78}},{"value":"/ stream. Otherwise returns `None`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":223879,"byte_end":223916,"line_start":1040,"line_end":1040,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":223921,"byte_end":223924,"line_start":1041,"line_end":1041,"column_start":5,"column_end":8}},{"value":"/ This function will automatically skip over any comments, whitespace, or","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":223929,"byte_end":224004,"line_start":1042,"line_end":1042,"column_start":5,"column_end":80}},{"value":"/ unknown annotations.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":224009,"byte_end":224033,"line_start":1043,"line_end":1043,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":225232,"byte_end":225242,"line_start":1071,"line_end":1071,"column_start":12,"column_end":22},"name":"annotation","qualname":"<Cursor>::annotation","value":"pub fn annotation(Self) -> Option<(&'a str, Self)>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to advance this cursor if the current token is a\n [`Token::Reserved`](crate::lexer::Token) and looks like the start of an\n annotation.","sig":null,"attributes":[{"value":"/ Attempts to advance this cursor if the current token is a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":224229,"byte_end":224290,"line_start":1051,"line_end":1051,"column_start":5,"column_end":66}},{"value":"/ [`Token::Reserved`](crate::lexer::Token) and looks like the start of an","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":224295,"byte_end":224370,"line_start":1052,"line_end":1052,"column_start":5,"column_end":80}},{"value":"/ annotation.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":224375,"byte_end":224390,"line_start":1053,"line_end":1053,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":224395,"byte_end":224398,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ [Annotations][annotation] are a WebAssembly proposal for the text format","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":224403,"byte_end":224479,"line_start":1055,"line_end":1055,"column_start":5,"column_end":81}},{"value":"/ which allows placing structured text inside of a text file, for example","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":224484,"byte_end":224559,"line_start":1056,"line_end":1056,"column_start":5,"column_end":80}},{"value":"/ to specify the name section or other custom sections.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":224564,"byte_end":224621,"line_start":1057,"line_end":1057,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":224626,"byte_end":224629,"line_start":1058,"line_end":1058,"column_start":5,"column_end":8}},{"value":"/ This function will attempt to see if the current token is the `@foo`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":224634,"byte_end":224706,"line_start":1059,"line_end":1059,"column_start":5,"column_end":77}},{"value":"/ part of the annotation. This requires the previous token to be `(` and","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":224711,"byte_end":224785,"line_start":1060,"line_end":1060,"column_start":5,"column_end":79}},{"value":"/ the current token is `Reserved` which starts with `@` and has a nonzero","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":224790,"byte_end":224865,"line_start":1061,"line_end":1061,"column_start":5,"column_end":80}},{"value":"/ length for the following name.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":224870,"byte_end":224904,"line_start":1062,"line_end":1062,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":224909,"byte_end":224912,"line_start":1063,"line_end":1063,"column_start":5,"column_end":8}},{"value":"/ Note that this will skip *unknown* annoations. Only pre-registered","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":224917,"byte_end":224987,"line_start":1064,"line_end":1064,"column_start":5,"column_end":75}},{"value":"/ annotations will be returned here.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":224992,"byte_end":225030,"line_start":1065,"line_end":1065,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":225035,"byte_end":225038,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/ This function will automatically skip over any comments, whitespace, or","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":225043,"byte_end":225118,"line_start":1067,"line_end":1067,"column_start":5,"column_end":80}},{"value":"/ unknown annotations.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":225123,"byte_end":225147,"line_start":1068,"line_end":1068,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":225152,"byte_end":225155,"line_start":1069,"line_end":1069,"column_start":5,"column_end":8}},{"value":"/ [annotation]: https://github.com/WebAssembly/annotations","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":225160,"byte_end":225220,"line_start":1070,"line_end":1070,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":225853,"byte_end":225860,"line_start":1087,"line_end":1087,"column_start":12,"column_end":19},"name":"comment","qualname":"<Cursor>::comment","value":"pub fn comment(Self) -> Option<(&'a str, Self)>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to advance this cursor if the current token is a\n [`Token::LineComment`](crate::lexer::Token) or a\n [`Token::BlockComment`](crate::lexer::Token)","sig":null,"attributes":[{"value":"/ Attempts to advance this cursor if the current token is a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":225596,"byte_end":225657,"line_start":1082,"line_end":1082,"column_start":5,"column_end":66}},{"value":"/ [`Token::LineComment`](crate::lexer::Token) or a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":225662,"byte_end":225714,"line_start":1083,"line_end":1083,"column_start":5,"column_end":57}},{"value":"/ [`Token::BlockComment`](crate::lexer::Token)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":225719,"byte_end":225767,"line_start":1084,"line_end":1084,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":225772,"byte_end":225775,"line_start":1085,"line_end":1085,"column_start":5,"column_end":8}},{"value":"/ This function will only skip whitespace, no other tokens.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":225780,"byte_end":225841,"line_start":1086,"line_end":1086,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":743},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":231201,"byte_end":231205,"line_start":1222,"line_end":1222,"column_start":12,"column_end":16},"name":"peek","qualname":"<Lookahead1>::peek","value":"pub fn peek<T: Peek>(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Attempts to see if `T` is the next token in the [`Parser`] this\n [`Lookahead1`] references.","sig":null,"attributes":[{"value":"/ Attempts to see if `T` is the next token in the [`Parser`] this","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":231002,"byte_end":231069,"line_start":1218,"line_end":1218,"column_start":5,"column_end":72}},{"value":"/ [`Lookahead1`] references.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":231074,"byte_end":231104,"line_start":1219,"line_end":1219,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":231109,"byte_end":231112,"line_start":1220,"line_end":1220,"column_start":5,"column_end":8}},{"value":"/ For more information see [`Parser::lookahead1`] and [`Parser::peek`]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":231117,"byte_end":231189,"line_start":1221,"line_end":1221,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":231657,"byte_end":231662,"line_start":1236,"line_end":1236,"column_start":12,"column_end":17},"name":"error","qualname":"<Lookahead1>::error","value":"pub fn error(Self) -> Error","parent":null,"children":[],"decl_id":null,"docs":" Generates an error message saying that one of the tokens passed to\n [`Lookahead1::peek`] method was expected.","sig":null,"attributes":[{"value":"/ Generates an error message saying that one of the tokens passed to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":231392,"byte_end":231462,"line_start":1231,"line_end":1231,"column_start":5,"column_end":75}},{"value":"/ [`Lookahead1::peek`] method was expected.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":231467,"byte_end":231512,"line_start":1232,"line_end":1232,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":231517,"byte_end":231520,"line_start":1233,"line_end":1233,"column_start":5,"column_end":8}},{"value":"/ Before calling this method you should call [`Lookahead1::peek`] for all","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":231525,"byte_end":231600,"line_start":1234,"line_end":1234,"column_start":5,"column_end":80}},{"value":"/ possible tokens you'd like to parse.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":231605,"byte_end":231645,"line_start":1235,"line_end":1235,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":8689},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":3041,"byte_end":3046,"line_start":76,"line_end":76,"column_start":12,"column_end":17},"name":"Error","qualname":"::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":8690}],"decl_id":null,"docs":" A convenience error type to tie together all the detailed errors produced by\n this crate.","sig":null,"attributes":[{"value":"/ A convenience error type to tie together all the detailed errors produced by","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":2571,"byte_end":2651,"line_start":65,"line_end":65,"column_start":1,"column_end":81}},{"value":"/ this crate.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":2652,"byte_end":2667,"line_start":66,"line_end":66,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":2668,"byte_end":2671,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ This type can be created from a [`lexer::LexError`] or [`parser::Error`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":2672,"byte_end":2749,"line_start":68,"line_end":68,"column_start":1,"column_end":78}},{"value":"/ This also contains storage for file/text information so a nice error can be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":2750,"byte_end":2829,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"/ rendered along the same lines of rustc's own error messages (minus the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":2830,"byte_end":2904,"line_start":70,"line_end":70,"column_start":1,"column_end":75}},{"value":"/ color).","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":2905,"byte_end":2916,"line_start":71,"line_end":71,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":2917,"byte_end":2920,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ This type is typically suitable for use in public APIs for consumers of this","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":2921,"byte_end":3001,"line_start":73,"line_end":73,"column_start":1,"column_end":81}},{"value":"/ crate.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":3002,"byte_end":3012,"line_start":74,"line_end":74,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":4370,"byte_end":4373,"line_start":133,"line_end":133,"column_start":12,"column_end":15},"name":"new","qualname":"<Error>::new","value":"pub fn new(Span, String) -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates a new error with the given `message` which is targeted at the\n given `span`","sig":null,"attributes":[{"value":"/ Creates a new error with the given `message` which is targeted at the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":4098,"byte_end":4171,"line_start":128,"line_end":128,"column_start":5,"column_end":78}},{"value":"/ given `span`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":4176,"byte_end":4192,"line_start":129,"line_end":129,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":4197,"byte_end":4200,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Note that you'll want to ensure that `set_text` or `set_path` is called","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":4205,"byte_end":4280,"line_start":131,"line_end":131,"column_start":5,"column_end":80}},{"value":"/ on the resulting error to improve the rendering of the error message.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":4285,"byte_end":4358,"line_start":132,"line_end":132,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":4685,"byte_end":4689,"line_start":145,"line_end":145,"column_start":12,"column_end":16},"name":"span","qualname":"<Error>::span","value":"pub fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Return the `Span` for this error.\n","sig":null,"attributes":[{"value":"/ Return the `Span` for this error.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":4636,"byte_end":4673,"line_start":144,"line_end":144,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":755},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":5112,"byte_end":5120,"line_start":155,"line_end":155,"column_start":12,"column_end":20},"name":"set_text","qualname":"<Error>::set_text","value":"pub fn set_text(&mut Self, &str)","parent":null,"children":[],"decl_id":null,"docs":" To provide a more useful error this function can be used to extract\n relevant textual information about this error into the error itself.","sig":null,"attributes":[{"value":"/ To provide a more useful error this function can be used to extract","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":4742,"byte_end":4813,"line_start":149,"line_end":149,"column_start":5,"column_end":76}},{"value":"/ relevant textual information about this error into the error itself.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":4818,"byte_end":4890,"line_start":150,"line_end":150,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":4895,"byte_end":4898,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ The `contents` here should be the full text of the original file being","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":4903,"byte_end":4977,"line_start":152,"line_end":152,"column_start":5,"column_end":79}},{"value":"/ parsed, and this will extract a sub-slice as necessary to render in the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":4982,"byte_end":5057,"line_start":153,"line_end":153,"column_start":5,"column_end":80}},{"value":"/ `Display` implementation later on.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":5062,"byte_end":5100,"line_start":154,"line_end":154,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":756},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":5558,"byte_end":5566,"line_start":167,"line_end":167,"column_start":12,"column_end":20},"name":"set_path","qualname":"<Error>::set_path","value":"pub fn set_path(&mut Self, &Path)","parent":null,"children":[],"decl_id":null,"docs":" To provide a more useful error this function can be used to set\n the file name that this error is associated with.","sig":null,"attributes":[{"value":"/ To provide a more useful error this function can be used to set","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":5300,"byte_end":5367,"line_start":162,"line_end":162,"column_start":5,"column_end":72}},{"value":"/ the file name that this error is associated with.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":5372,"byte_end":5425,"line_start":163,"line_end":163,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":5430,"byte_end":5433,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ The `path` here will be stored in this error and later rendered in the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":5438,"byte_end":5512,"line_start":165,"line_end":165,"column_start":5,"column_end":79}},{"value":"/ `Display` implementation.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":5517,"byte_end":5546,"line_start":166,"line_end":166,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":757},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":5810,"byte_end":5819,"line_start":175,"line_end":175,"column_start":12,"column_end":21},"name":"lex_error","qualname":"<Error>::lex_error","value":"pub fn lex_error(&Self) -> Option<&lexer::LexError>","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying `LexError`, if any, that describes this error.\n","sig":null,"attributes":[{"value":"/ Returns the underlying `LexError`, if any, that describes this error.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":5725,"byte_end":5798,"line_start":174,"line_end":174,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":758},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":6058,"byte_end":6065,"line_start":183,"line_end":183,"column_start":12,"column_end":19},"name":"message","qualname":"<Error>::message","value":"pub fn message(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying message, if any, that describes this error.\n","sig":null,"attributes":[{"value":"/ Returns the underlying message, if any, that describes this error.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":5976,"byte_end":6046,"line_start":182,"line_end":182,"column_start":5,"column_end":75}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":13333,"byte_end":13340,"line_start":153,"line_end":153,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":14457,"byte_end":14460,"line_start":197,"line_end":197,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":15476,"byte_end":15488,"line_start":247,"line_end":247,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":15712,"byte_end":15722,"line_start":257,"line_end":257,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":15961,"byte_end":15970,"line_start":267,"line_end":267,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":16110,"byte_end":16120,"line_start":274,"line_end":274,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":16256,"byte_end":16268,"line_start":281,"line_end":281,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":16372,"byte_end":16382,"line_start":287,"line_end":287,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":16512,"byte_end":16516,"line_start":294,"line_end":294,"column_start":17,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":17215,"byte_end":17221,"line_start":321,"line_end":321,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":17529,"byte_end":17536,"line_start":334,"line_end":334,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":18212,"byte_end":18220,"line_start":358,"line_end":358,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":18676,"byte_end":18683,"line_start":374,"line_end":374,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":20094,"byte_end":20105,"line_start":423,"line_end":423,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":20381,"byte_end":20387,"line_start":435,"line_end":435,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":20688,"byte_end":20695,"line_start":449,"line_end":449,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":21573,"byte_end":21580,"line_start":484,"line_end":484,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":21784,"byte_end":21789,"line_start":493,"line_end":493,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":22017,"byte_end":22027,"line_start":502,"line_end":502,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":22131,"byte_end":22138,"line_start":508,"line_end":508,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":22680,"byte_end":22689,"line_start":528,"line_end":528,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":22821,"byte_end":22827,"line_start":535,"line_end":535,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":23170,"byte_end":23180,"line_start":551,"line_end":551,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":24096,"byte_end":24106,"line_start":578,"line_end":578,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":24310,"byte_end":24315,"line_start":589,"line_end":589,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":24592,"byte_end":24598,"line_start":599,"line_end":599,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":24877,"byte_end":24883,"line_start":609,"line_end":609,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":25195,"byte_end":25201,"line_start":620,"line_end":620,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":25428,"byte_end":25438,"line_start":630,"line_end":630,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":25915,"byte_end":25919,"line_start":645,"line_end":645,"column_start":17,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":28200,"byte_end":28211,"line_start":717,"line_end":717,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":28562,"byte_end":28566,"line_start":731,"line_end":731,"column_start":17,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":29268,"byte_end":29272,"line_start":756,"line_end":756,"column_start":17,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":29766,"byte_end":29769,"line_start":773,"line_end":773,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":30242,"byte_end":30252,"line_start":789,"line_end":789,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":30427,"byte_end":30436,"line_start":798,"line_end":798,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":31170,"byte_end":31182,"line_start":823,"line_end":823,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":31281,"byte_end":31288,"line_start":829,"line_end":829,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":31421,"byte_end":31428,"line_start":836,"line_end":836,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":31525,"byte_end":31531,"line_start":842,"line_end":842,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":32024,"byte_end":32039,"line_start":861,"line_end":861,"column_start":17,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":32171,"byte_end":32183,"line_start":868,"line_end":868,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":32312,"byte_end":32321,"line_start":875,"line_end":875,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":32452,"byte_end":32461,"line_start":882,"line_end":882,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":32589,"byte_end":32597,"line_start":889,"line_end":889,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":32697,"byte_end":32706,"line_start":895,"line_end":895,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":32806,"byte_end":32816,"line_start":901,"line_end":901,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":32945,"byte_end":32955,"line_start":908,"line_end":908,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":33083,"byte_end":33097,"line_start":915,"line_end":915,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":33232,"byte_end":33239,"line_start":922,"line_end":922,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":33362,"byte_end":33369,"line_start":928,"line_end":928,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":40018,"byte_end":40023,"line_start":1111,"line_end":1111,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":40567,"byte_end":40572,"line_start":1128,"line_end":1128,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":42027,"byte_end":42029,"line_start":1181,"line_end":1181,"column_start":17,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":42172,"byte_end":42181,"line_start":1188,"line_end":1188,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":42303,"byte_end":42315,"line_start":1194,"line_end":1194,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":42433,"byte_end":42444,"line_start":1200,"line_end":1200,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":42698,"byte_end":42704,"line_start":1212,"line_end":1212,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":42864,"byte_end":42867,"line_start":1220,"line_end":1220,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":43108,"byte_end":43115,"line_start":1230,"line_end":1230,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":43332,"byte_end":43344,"line_start":1241,"line_end":1241,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":43479,"byte_end":43491,"line_start":1248,"line_end":1248,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":43813,"byte_end":43821,"line_start":1259,"line_end":1259,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":44215,"byte_end":44226,"line_start":1272,"line_end":1272,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":44453,"byte_end":44458,"line_start":1282,"line_end":1282,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\aliases.rs","byte_start":51903,"byte_end":51911,"line_start":65,"line_end":65,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\aliases.rs","byte_start":60882,"byte_end":60894,"line_start":314,"line_end":314,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\aliases.rs","byte_start":60980,"byte_end":60990,"line_start":318,"line_end":318,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\aliases.rs","byte_start":61276,"byte_end":61288,"line_start":329,"line_end":329,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\names.rs","byte_start":74962,"byte_end":74970,"line_start":44,"line_end":44,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\names.rs","byte_start":91477,"byte_end":91486,"line_start":475,"line_end":475,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\names.rs","byte_start":94907,"byte_end":94919,"line_start":568,"line_end":568,"column_start":14,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\names.rs","byte_start":106014,"byte_end":106021,"line_start":881,"line_end":881,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":387},{"krate":0,"index":389}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\names.rs","byte_start":107739,"byte_end":107746,"line_start":938,"line_end":938,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\names.rs","byte_start":108534,"byte_end":108546,"line_start":970,"line_end":970,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\names.rs","byte_start":110592,"byte_end":110604,"line_start":1027,"line_end":1027,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":414},{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\names.rs","byte_start":111098,"byte_end":111108,"line_start":1044,"line_end":1044,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\types.rs","byte_start":112585,"byte_end":112593,"line_start":28,"line_end":28,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":432},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":441}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\types.rs","byte_start":122374,"byte_end":122386,"line_start":294,"line_end":294,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\types.rs","byte_start":122676,"byte_end":122683,"line_start":306,"line_end":306,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\types.rs","byte_start":123312,"byte_end":123324,"line_start":326,"line_end":326,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\types.rs","byte_start":123726,"byte_end":123737,"line_start":343,"line_end":343,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\types.rs","byte_start":124586,"byte_end":124596,"line_start":372,"line_end":372,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":489}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\types.rs","byte_start":125333,"byte_end":125342,"line_start":399,"line_end":399,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\types.rs","byte_start":126601,"byte_end":126605,"line_start":445,"line_end":445,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":499},{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\mod.rs","byte_start":45249,"byte_end":45251,"line_start":22,"line_end":22,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\mod.rs","byte_start":47695,"byte_end":47700,"line_start":94,"line_end":94,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12435305,"byte_end":12435309,"line_start":14,"line_end":14,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":970},{"krate":0,"index":971}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12436556,"byte_end":12436558,"line_start":51,"line_end":51,"column_start":10,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":978}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12437208,"byte_end":12437210,"line_start":81,"line_end":81,"column_start":19,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":981}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12437360,"byte_end":12437362,"line_start":88,"line_end":88,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":985}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12437494,"byte_end":12437496,"line_start":94,"line_end":94,"column_start":17,"column_end":19},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12437528,"byte_end":12437530,"line_start":96,"line_end":96,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":990}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12437832,"byte_end":12437834,"line_start":107,"line_end":107,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":993}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12438076,"byte_end":12438078,"line_start":117,"line_end":117,"column_start":15,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":995},{"krate":0,"index":996}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12438978,"byte_end":12438983,"line_start":145,"line_end":145,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":998},{"krate":0,"index":999}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12439381,"byte_end":12439386,"line_start":162,"line_end":162,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1002}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12439754,"byte_end":12439759,"line_start":176,"line_end":176,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1004},{"krate":0,"index":1005}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12439950,"byte_end":12439955,"line_start":186,"line_end":186,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1008}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12440051,"byte_end":12440056,"line_start":192,"line_end":192,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1010}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12440306,"byte_end":12440311,"line_start":202,"line_end":202,"column_start":13,"column_end":18},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12440334,"byte_end":12440339,"line_start":204,"line_end":204,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1013}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12441109,"byte_end":12441116,"line_start":240,"line_end":240,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1018}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12441625,"byte_end":12441632,"line_start":256,"line_end":256,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1022}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12442510,"byte_end":12442517,"line_start":283,"line_end":283,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1027},{"krate":0,"index":1028}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12442925,"byte_end":12442935,"line_start":300,"line_end":300,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1032}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12443424,"byte_end":12443434,"line_start":319,"line_end":319,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1036},{"krate":0,"index":1037}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12443858,"byte_end":12443872,"line_start":336,"line_end":336,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1040}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12444079,"byte_end":12444085,"line_start":344,"line_end":344,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1043}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12446572,"byte_end":12446578,"line_start":430,"line_end":430,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1058}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12457694,"byte_end":12457700,"line_start":719,"line_end":719,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1067},{"krate":0,"index":1068}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\alias.rs","byte_start":12460505,"byte_end":12460510,"line_start":36,"line_end":36,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1286}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\assert_expr.rs","byte_start":12462283,"byte_end":12462299,"line_start":30,"line_end":30,"column_start":24,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1318}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\assert_expr.rs","byte_start":12463462,"byte_end":12463472,"line_start":60,"line_end":60,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1323}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\assert_expr.rs","byte_start":12464424,"byte_end":12464435,"line_start":93,"line_end":93,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1326}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\custom.rs","byte_start":12467823,"byte_end":12467829,"line_start":54,"line_end":54,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1351}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\custom.rs","byte_start":12468398,"byte_end":12468409,"line_start":76,"line_end":76,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1355}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\custom.rs","byte_start":12469200,"byte_end":12469217,"line_start":100,"line_end":100,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1358}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\tag.rs","byte_start":12472840,"byte_end":12472843,"line_start":43,"line_end":43,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1380}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\tag.rs","byte_start":12473423,"byte_end":12473430,"line_start":65,"line_end":65,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1383}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\export.rs","byte_start":12474282,"byte_end":12474288,"line_start":30,"line_end":30,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1411}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\export.rs","byte_start":12474531,"byte_end":12474541,"line_start":40,"line_end":40,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1414}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\export.rs","byte_start":12476465,"byte_end":12476477,"line_start":108,"line_end":108,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1418}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\export.rs","byte_start":12476814,"byte_end":12476826,"line_start":121,"line_end":121,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1421},{"krate":0,"index":1422}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12477929,"byte_end":12477939,"line_start":16,"line_end":16,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1453}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12480782,"byte_end":12480798,"line_start":102,"line_end":102,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1503},{"krate":0,"index":1504},{"krate":0,"index":1506},{"krate":0,"index":1507}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12532157,"byte_end":12532166,"line_start":1162,"line_end":1162,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1511}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12532682,"byte_end":12532694,"line_start":1181,"line_end":1181,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1514}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12533139,"byte_end":12533146,"line_start":1199,"line_end":1199,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1517}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12533573,"byte_end":12533587,"line_start":1216,"line_end":1216,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1520}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12534096,"byte_end":12534103,"line_start":1235,"line_end":1235,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1523}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12535202,"byte_end":12535208,"line_start":1270,"line_end":1270,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1528}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12537867,"byte_end":12537882,"line_start":1351,"line_end":1351,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1544}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12540063,"byte_end":12540075,"line_start":1405,"line_end":1405,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1548}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12541089,"byte_end":12541098,"line_start":1432,"line_end":1432,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1552}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12541901,"byte_end":12541910,"line_start":1455,"line_end":1455,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1555}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12542537,"byte_end":12542545,"line_start":1475,"line_end":1475,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1558}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12543034,"byte_end":12543043,"line_start":1493,"line_end":1493,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1561}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12543646,"byte_end":12543656,"line_start":1513,"line_end":1513,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1564}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12544456,"byte_end":12544466,"line_start":1536,"line_end":1536,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1567}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12545205,"byte_end":12545217,"line_start":1558,"line_end":1558,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1570}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12545683,"byte_end":12545692,"line_start":1580,"line_end":1580,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6116}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12548949,"byte_end":12548958,"line_start":1671,"line_end":1671,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1574}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12551188,"byte_end":12551200,"line_start":1741,"line_end":1741,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1577}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12552048,"byte_end":12552059,"line_start":1773,"line_end":1773,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1580}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\func.rs","byte_start":12554041,"byte_end":12554045,"line_start":46,"line_end":46,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1603}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\func.rs","byte_start":12555391,"byte_end":12555396,"line_start":93,"line_end":93,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1606}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\global.rs","byte_start":12557384,"byte_end":12557390,"line_start":36,"line_end":36,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1629}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\import.rs","byte_start":12558516,"byte_end":12558522,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1657}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\import.rs","byte_start":12559757,"byte_end":12559764,"line_start":59,"line_end":59,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1661}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\import.rs","byte_start":12562390,"byte_end":12562402,"line_start":137,"line_end":137,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1664}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\import.rs","byte_start":12562676,"byte_end":12562688,"line_start":149,"line_end":149,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1667},{"krate":0,"index":1668}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\instance.rs","byte_start":12565029,"byte_end":12565037,"line_start":49,"line_end":49,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1690}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\instance.rs","byte_start":12565987,"byte_end":12565998,"line_start":83,"line_end":83,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1695}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12567607,"byte_end":12567613,"line_start":42,"line_end":42,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1723}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12570378,"byte_end":12570382,"line_start":130,"line_end":130,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1727}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12573539,"byte_end":12573546,"line_start":219,"line_end":219,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1730},{"krate":0,"index":1731}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12574118,"byte_end":12574125,"line_start":238,"line_end":238,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1734}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12576499,"byte_end":12576502,"line_start":17,"line_end":17,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1775}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12577928,"byte_end":12577934,"line_start":62,"line_end":62,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1779},{"krate":0,"index":1780},{"krate":0,"index":1781}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12580981,"byte_end":12580987,"line_start":135,"line_end":135,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1784}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12582287,"byte_end":12582298,"line_start":182,"line_end":182,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1787}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12582572,"byte_end":12582583,"line_start":192,"line_end":192,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1790}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\nested_module.rs","byte_start":12585870,"byte_end":12585882,"line_start":39,"line_end":39,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1818}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\nested_module.rs","byte_start":12587797,"byte_end":12587807,"line_start":89,"line_end":89,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1823},{"krate":0,"index":1824}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12589909,"byte_end":12589914,"line_start":43,"line_end":43,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1846}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12593012,"byte_end":12593016,"line_start":139,"line_end":139,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1850}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12594407,"byte_end":12594418,"line_start":183,"line_end":183,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1854}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12594551,"byte_end":12594562,"line_start":189,"line_end":189,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1857}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12596316,"byte_end":12596323,"line_start":18,"line_end":18,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1889}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12597488,"byte_end":12597495,"line_start":54,"line_end":54,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1893},{"krate":0,"index":1894}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12598878,"byte_end":12598886,"line_start":95,"line_end":95,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1897}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12599831,"byte_end":12599839,"line_start":124,"line_end":124,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1900},{"krate":0,"index":1901}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12600452,"byte_end":12600459,"line_start":147,"line_end":147,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1904},{"krate":0,"index":1905},{"krate":0,"index":1906},{"krate":0,"index":1907},{"krate":0,"index":1908},{"krate":0,"index":1909}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12601612,"byte_end":12601619,"line_start":197,"line_end":197,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1912}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12603286,"byte_end":12603293,"line_start":247,"line_end":247,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1916},{"krate":0,"index":1917}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12604001,"byte_end":12604012,"line_start":272,"line_end":272,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1920}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12604769,"byte_end":12604779,"line_start":298,"line_end":298,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1923}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12605537,"byte_end":12605543,"line_start":326,"line_end":326,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1927}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12606093,"byte_end":12606101,"line_start":347,"line_end":347,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1930}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12606657,"byte_end":12606666,"line_start":368,"line_end":368,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1933}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12607396,"byte_end":12607406,"line_start":396,"line_end":396,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1936}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12608457,"byte_end":12608469,"line_start":428,"line_end":428,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1939}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12610300,"byte_end":12610312,"line_start":474,"line_end":474,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1943}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12610571,"byte_end":12610583,"line_start":485,"line_end":485,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1946},{"krate":0,"index":1947}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12611088,"byte_end":12611107,"line_start":506,"line_end":506,"column_start":24,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1950}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12611388,"byte_end":12611407,"line_start":517,"line_end":517,"column_start":19,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1953},{"krate":0,"index":1954}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12611617,"byte_end":12611629,"line_start":527,"line_end":527,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1957}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12611901,"byte_end":12611911,"line_start":540,"line_end":540,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1960}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12612768,"byte_end":12612779,"line_start":569,"line_end":569,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1964}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12613533,"byte_end":12613542,"line_start":594,"line_end":594,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1968}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12614273,"byte_end":12614283,"line_start":618,"line_end":618,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1972}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12614966,"byte_end":12614976,"line_start":640,"line_end":640,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1977},{"krate":0,"index":1978}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12615522,"byte_end":12615534,"line_start":664,"line_end":664,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1981}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12615995,"byte_end":12616007,"line_start":679,"line_end":679,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1985},{"krate":0,"index":1986}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12616668,"byte_end":12616678,"line_start":707,"line_end":707,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1989}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12617795,"byte_end":12617799,"line_start":745,"line_end":745,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1993}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12619276,"byte_end":12619283,"line_start":789,"line_end":789,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1998}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12619821,"byte_end":12619828,"line_start":806,"line_end":806,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2002}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12620164,"byte_end":12620171,"line_start":819,"line_end":819,"column_start":57,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":2005}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12620954,"byte_end":12620958,"line_start":16,"line_end":16,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2044}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12621610,"byte_end":12621628,"line_start":36,"line_end":36,"column_start":15,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2049},{"krate":0,"index":2050}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12623250,"byte_end":12623263,"line_start":104,"line_end":104,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2052}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12624056,"byte_end":12624069,"line_start":123,"line_end":123,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2055}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12630578,"byte_end":12630589,"line_start":280,"line_end":280,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2073}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12631366,"byte_end":12631376,"line_start":308,"line_end":308,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2076}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12631960,"byte_end":12631971,"line_start":333,"line_end":333,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2080}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":148744,"byte_end":148749,"line_start":261,"line_end":261,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":551},{"krate":0,"index":554},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":566},{"krate":0,"index":576},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":171796,"byte_end":171801,"line_start":845,"line_end":845,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":585},{"krate":0,"index":586}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":171949,"byte_end":171954,"line_start":853,"line_end":853,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":172519,"byte_end":172526,"line_start":872,"line_end":872,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":173014,"byte_end":173019,"line_start":890,"line_end":890,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":597},{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":173330,"byte_end":173340,"line_start":903,"line_end":903,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":601},{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":173782,"byte_end":173790,"line_start":923,"line_end":923,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":605}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":197242,"byte_end":197253,"line_start":332,"line_end":332,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":683}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":200712,"byte_end":200718,"line_start":425,"line_end":425,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":689},{"krate":0,"index":691},{"krate":0,"index":693},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":705},{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":218274,"byte_end":218286,"line_start":889,"line_end":889,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":719}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":218542,"byte_end":218548,"line_start":899,"line_end":899,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":738},{"krate":0,"index":741}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":230981,"byte_end":230991,"line_start":1217,"line_end":1217,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":743},{"krate":0,"index":745}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":232654,"byte_end":232660,"line_start":1265,"line_end":1265,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":749}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":3384,"byte_end":3389,"line_start":101,"line_end":101,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":758}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":6254,"byte_end":6259,"line_start":191,"line_end":191,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":760}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":7233,"byte_end":7238,"line_start":228,"line_end":228,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":7248,"byte_end":7252,"line_start":230,"line_end":230,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":764}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":2547,"byte_end":2552,"line_start":62,"line_end":62,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":519}},{"kind":"Mod","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":2562,"byte_end":2568,"line_start":63,"line_end":63,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":609}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":13333,"byte_end":13340,"line_start":153,"line_end":153,"column_start":6,"column_end":13},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":30},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":14457,"byte_end":14460,"line_start":197,"line_end":197,"column_start":28,"column_end":31},"kind":{"Impl":{"id":1}},"from":{"krate":5,"index":7014},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":15476,"byte_end":15488,"line_start":247,"line_end":247,"column_start":17,"column_end":29},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":6735},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":15712,"byte_end":15722,"line_start":257,"line_end":257,"column_start":17,"column_end":27},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":6761},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":15961,"byte_end":15970,"line_start":267,"line_end":267,"column_start":17,"column_end":26},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":6781},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":16110,"byte_end":16120,"line_start":274,"line_end":274,"column_start":17,"column_end":27},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":6791},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":16256,"byte_end":16268,"line_start":281,"line_end":281,"column_start":17,"column_end":29},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":6804},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":16372,"byte_end":16382,"line_start":287,"line_end":287,"column_start":17,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":6816},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":16512,"byte_end":16516,"line_start":294,"line_end":294,"column_start":17,"column_end":21},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":6847},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":17215,"byte_end":17221,"line_start":321,"line_end":321,"column_start":17,"column_end":23},"kind":{"Impl":{"id":16}},"from":{"krate":2,"index":43179},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":17529,"byte_end":17536,"line_start":334,"line_end":334,"column_start":21,"column_end":28},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":6482},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":18212,"byte_end":18220,"line_start":358,"line_end":358,"column_start":21,"column_end":29},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":6524},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":18676,"byte_end":18683,"line_start":374,"line_end":374,"column_start":21,"column_end":28},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":6564},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":20094,"byte_end":20105,"line_start":423,"line_end":423,"column_start":21,"column_end":32},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":6591},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":20381,"byte_end":20387,"line_start":435,"line_end":435,"column_start":17,"column_end":23},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":6181},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":20688,"byte_end":20695,"line_start":449,"line_end":449,"column_start":17,"column_end":24},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":6193},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":21573,"byte_end":21580,"line_start":484,"line_end":484,"column_start":20,"column_end":27},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":6856},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":21784,"byte_end":21789,"line_start":493,"line_end":493,"column_start":17,"column_end":22},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1080},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":22017,"byte_end":22027,"line_start":502,"line_end":502,"column_start":20,"column_end":30},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1116},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":22131,"byte_end":22138,"line_start":508,"line_end":508,"column_start":20,"column_end":27},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1097},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":22680,"byte_end":22689,"line_start":528,"line_end":528,"column_start":21,"column_end":30},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":6686},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":22821,"byte_end":22827,"line_start":535,"line_end":535,"column_start":17,"column_end":23},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":6650},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":23170,"byte_end":23180,"line_start":551,"line_end":551,"column_start":17,"column_end":27},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":6713},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":24096,"byte_end":24106,"line_start":578,"line_end":578,"column_start":21,"column_end":31},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":6623},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":24310,"byte_end":24315,"line_start":589,"line_end":589,"column_start":17,"column_end":22},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":6425},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":24592,"byte_end":24598,"line_start":599,"line_end":599,"column_start":17,"column_end":23},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":6274},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":24877,"byte_end":24883,"line_start":609,"line_end":609,"column_start":17,"column_end":23},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":6159},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":25195,"byte_end":25201,"line_start":620,"line_end":620,"column_start":17,"column_end":23},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":2281},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":25428,"byte_end":25438,"line_start":630,"line_end":630,"column_start":17,"column_end":27},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":2289},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":25915,"byte_end":25919,"line_start":645,"line_end":645,"column_start":17,"column_end":21},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":6449},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":28200,"byte_end":28211,"line_start":717,"line_end":717,"column_start":17,"column_end":28},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":6471},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":28562,"byte_end":28566,"line_start":731,"line_end":731,"column_start":17,"column_end":21},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":6298},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":29268,"byte_end":29272,"line_start":756,"line_end":756,"column_start":17,"column_end":21},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":6129},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":29766,"byte_end":29769,"line_start":773,"line_end":773,"column_start":17,"column_end":20},"kind":{"Impl":{"id":40}},"from":{"krate":5,"index":7014},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":30242,"byte_end":30252,"line_start":789,"line_end":789,"column_start":17,"column_end":27},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":2358},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":30427,"byte_end":30436,"line_start":798,"line_end":798,"column_start":17,"column_end":26},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":5988},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":31170,"byte_end":31182,"line_start":823,"line_end":823,"column_start":17,"column_end":29},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":5996},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":31281,"byte_end":31288,"line_start":829,"line_end":829,"column_start":17,"column_end":24},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":6002},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":31421,"byte_end":31428,"line_start":836,"line_end":836,"column_start":17,"column_end":24},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":6016},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":31525,"byte_end":31531,"line_start":842,"line_end":842,"column_start":17,"column_end":23},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":6020},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":32024,"byte_end":32039,"line_start":861,"line_end":861,"column_start":17,"column_end":32},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":6028},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":32171,"byte_end":32183,"line_start":868,"line_end":868,"column_start":17,"column_end":29},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":6035},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":32312,"byte_end":32321,"line_start":875,"line_end":875,"column_start":17,"column_end":26},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":6042},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":32452,"byte_end":32461,"line_start":882,"line_end":882,"column_start":17,"column_end":26},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":6049},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":32589,"byte_end":32597,"line_start":889,"line_end":889,"column_start":17,"column_end":25},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":6056},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":32697,"byte_end":32706,"line_start":895,"line_end":895,"column_start":17,"column_end":26},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":6062},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":32806,"byte_end":32816,"line_start":901,"line_end":901,"column_start":17,"column_end":27},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":6068},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":32945,"byte_end":32955,"line_start":908,"line_end":908,"column_start":17,"column_end":27},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":6075},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":33083,"byte_end":33097,"line_start":915,"line_end":915,"column_start":17,"column_end":31},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":6009},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":33232,"byte_end":33239,"line_start":922,"line_end":922,"column_start":17,"column_end":24},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1258},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":33362,"byte_end":33369,"line_start":928,"line_end":928,"column_start":17,"column_end":24},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1262},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":40018,"byte_end":40023,"line_start":1111,"line_end":1111,"column_start":6,"column_end":11},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":766},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":40567,"byte_end":40572,"line_start":1128,"line_end":1128,"column_start":17,"column_end":22},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":766},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":42027,"byte_end":42029,"line_start":1181,"line_end":1181,"column_start":17,"column_end":19},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1070},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":42172,"byte_end":42181,"line_start":1188,"line_end":1188,"column_start":17,"column_end":26},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":6091},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":42303,"byte_end":42315,"line_start":1194,"line_end":1194,"column_start":17,"column_end":29},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":6118},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":42433,"byte_end":42444,"line_start":1200,"line_end":1200,"column_start":21,"column_end":32},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":6123},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":42698,"byte_end":42704,"line_start":1212,"line_end":1212,"column_start":17,"column_end":23},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":2181},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":42864,"byte_end":42867,"line_start":1220,"line_end":1220,"column_start":17,"column_end":20},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":2249},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":43108,"byte_end":43115,"line_start":1230,"line_end":1230,"column_start":17,"column_end":24},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":2260},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":43332,"byte_end":43344,"line_start":1241,"line_end":1241,"column_start":17,"column_end":29},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":6082},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":43479,"byte_end":43491,"line_start":1248,"line_end":1248,"column_start":17,"column_end":29},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":6405},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":43813,"byte_end":43821,"line_start":1259,"line_end":1259,"column_start":17,"column_end":25},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":6246},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":44215,"byte_end":44226,"line_start":1272,"line_end":1272,"column_start":17,"column_end":28},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":6267},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\binary.rs","byte_start":44453,"byte_end":44458,"line_start":1282,"line_end":1282,"column_start":17,"column_end":22},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":2082},"to":{"krate":0,"index":40}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\aliases.rs","byte_start":51903,"byte_end":51911,"line_start":65,"line_end":65,"column_start":10,"column_end":18},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":794},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\aliases.rs","byte_start":60882,"byte_end":60894,"line_start":314,"line_end":314,"column_start":25,"column_end":37},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":6735},"to":{"krate":0,"index":263}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\aliases.rs","byte_start":60980,"byte_end":60990,"line_start":318,"line_end":318,"column_start":25,"column_end":35},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":6791},"to":{"krate":0,"index":263}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\aliases.rs","byte_start":61276,"byte_end":61288,"line_start":329,"line_end":329,"column_start":25,"column_end":37},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":6804},"to":{"krate":0,"index":263}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\names.rs","byte_start":74962,"byte_end":74970,"line_start":44,"line_end":44,"column_start":10,"column_end":18},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":806},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\names.rs","byte_start":91477,"byte_end":91486,"line_start":475,"line_end":475,"column_start":10,"column_end":19},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":824},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\names.rs","byte_start":94907,"byte_end":94919,"line_start":568,"line_end":568,"column_start":14,"column_end":26},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":352},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\names.rs","byte_start":106014,"byte_end":106021,"line_start":881,"line_end":881,"column_start":14,"column_end":21},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":370},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\names.rs","byte_start":107739,"byte_end":107746,"line_start":938,"line_end":938,"column_start":23,"column_end":30},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":370},"to":{"krate":2,"index":3224}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\names.rs","byte_start":108534,"byte_end":108546,"line_start":970,"line_end":970,"column_start":32,"column_end":44},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":6735},"to":{"krate":0,"index":401}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\names.rs","byte_start":110592,"byte_end":110604,"line_start":1027,"line_end":1027,"column_start":32,"column_end":44},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":6804},"to":{"krate":0,"index":401}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\names.rs","byte_start":111098,"byte_end":111108,"line_start":1044,"line_end":1044,"column_start":32,"column_end":42},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":6791},"to":{"krate":0,"index":401}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\types.rs","byte_start":112585,"byte_end":112593,"line_start":28,"line_end":28,"column_start":10,"column_end":18},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\types.rs","byte_start":121966,"byte_end":121973,"line_start":280,"line_end":280,"column_start":26,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":2967},"to":{"krate":0,"index":443}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\types.rs","byte_start":122374,"byte_end":122386,"line_start":294,"line_end":294,"column_start":32,"column_end":44},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":6735},"to":{"krate":0,"index":443}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\types.rs","byte_start":122676,"byte_end":122683,"line_start":306,"line_end":306,"column_start":26,"column_end":33},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":453},"to":{"krate":0,"index":448}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\types.rs","byte_start":123312,"byte_end":123324,"line_start":326,"line_end":326,"column_start":32,"column_end":44},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":6804},"to":{"krate":0,"index":443}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\types.rs","byte_start":123726,"byte_end":123737,"line_start":343,"line_end":343,"column_start":26,"column_end":37},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":467},"to":{"krate":0,"index":448}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\types.rs","byte_start":124586,"byte_end":124596,"line_start":372,"line_end":372,"column_start":32,"column_end":42},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":6791},"to":{"krate":0,"index":443}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\types.rs","byte_start":125333,"byte_end":125342,"line_start":399,"line_end":399,"column_start":26,"column_end":35},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":481},"to":{"krate":0,"index":448}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\types.rs","byte_start":126601,"byte_end":126605,"line_start":445,"line_end":445,"column_start":10,"column_end":14},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\mod.rs","byte_start":45249,"byte_end":45251,"line_start":22,"line_end":22,"column_start":6,"column_end":8},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":892},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\resolve\\mod.rs","byte_start":47695,"byte_end":47700,"line_start":94,"line_end":94,"column_start":10,"column_end":15},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":923},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12435305,"byte_end":12435309,"line_start":14,"line_end":14,"column_start":6,"column_end":10},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":8715},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12436556,"byte_end":12436558,"line_start":51,"line_end":51,"column_start":10,"column_end":12},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1070},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12437208,"byte_end":12437210,"line_start":81,"line_end":81,"column_start":19,"column_end":21},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1070},"to":{"krate":2,"index":9506}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12437360,"byte_end":12437362,"line_start":88,"line_end":88,"column_start":24,"column_end":26},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1070},"to":{"krate":2,"index":2640}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12437494,"byte_end":12437496,"line_start":94,"line_end":94,"column_start":17,"column_end":19},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1070},"to":{"krate":2,"index":2645}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12437528,"byte_end":12437530,"line_start":96,"line_end":96,"column_start":24,"column_end":26},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1070},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12437832,"byte_end":12437834,"line_start":107,"line_end":107,"column_start":21,"column_end":23},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1070},"to":{"krate":2,"index":9300}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12438076,"byte_end":12438078,"line_start":117,"line_end":117,"column_start":15,"column_end":17},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1070},"to":{"krate":0,"index":652}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12438978,"byte_end":12438983,"line_start":145,"line_end":145,"column_start":6,"column_end":11},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1080},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12439381,"byte_end":12439386,"line_start":162,"line_end":162,"column_start":24,"column_end":29},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1080},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12439754,"byte_end":12439759,"line_start":176,"line_end":176,"column_start":15,"column_end":20},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1080},"to":{"krate":0,"index":652}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12439950,"byte_end":12439955,"line_start":186,"line_end":186,"column_start":27,"column_end":32},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1080},"to":{"krate":2,"index":2895}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12440051,"byte_end":12440056,"line_start":192,"line_end":192,"column_start":20,"column_end":25},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1080},"to":{"krate":2,"index":2640}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12440306,"byte_end":12440311,"line_start":202,"line_end":202,"column_start":13,"column_end":18},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1080},"to":{"krate":2,"index":2645}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12440334,"byte_end":12440339,"line_start":204,"line_end":204,"column_start":15,"column_end":20},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1080},"to":{"krate":2,"index":9506}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12441109,"byte_end":12441116,"line_start":240,"line_end":240,"column_start":13,"column_end":20},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1097},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12441625,"byte_end":12441632,"line_start":256,"line_end":256,"column_start":38,"column_end":45},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1097},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12442510,"byte_end":12442517,"line_start":283,"line_end":283,"column_start":28,"column_end":35},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1097},"to":{"krate":0,"index":652}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12442925,"byte_end":12442935,"line_start":300,"line_end":300,"column_start":27,"column_end":37},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1116},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12443424,"byte_end":12443434,"line_start":319,"line_end":319,"column_start":28,"column_end":38},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1116},"to":{"krate":0,"index":652}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12443858,"byte_end":12443872,"line_start":336,"line_end":336,"column_start":24,"column_end":38},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1129},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12444079,"byte_end":12444085,"line_start":344,"line_end":344,"column_start":24,"column_end":30},"kind":{"Impl":{"id":115}},"from":{"krate":2,"index":43179},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12446572,"byte_end":12446578,"line_start":430,"line_end":430,"column_start":20,"column_end":26},"kind":{"Impl":{"id":116}},"from":{"krate":5,"index":7547},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\token.rs","byte_start":12457694,"byte_end":12457700,"line_start":719,"line_end":719,"column_start":15,"column_end":21},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1064},"to":{"krate":0,"index":652}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\alias.rs","byte_start":12460505,"byte_end":12460510,"line_start":36,"line_end":36,"column_start":24,"column_end":29},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2082},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\assert_expr.rs","byte_start":12462283,"byte_end":12462299,"line_start":30,"line_end":30,"column_start":24,"column_end":40},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2103},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\assert_expr.rs","byte_start":12463462,"byte_end":12463472,"line_start":60,"line_end":60,"column_start":27,"column_end":37},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2136},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\assert_expr.rs","byte_start":12464424,"byte_end":12464435,"line_start":93,"line_end":93,"column_start":24,"column_end":35},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2154},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\custom.rs","byte_start":12467823,"byte_end":12467829,"line_start":54,"line_end":54,"column_start":24,"column_end":30},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2181},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\custom.rs","byte_start":12468398,"byte_end":12468409,"line_start":76,"line_end":76,"column_start":24,"column_end":35},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":2190},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\custom.rs","byte_start":12469200,"byte_end":12469217,"line_start":100,"line_end":100,"column_start":24,"column_end":41},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2210},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\tag.rs","byte_start":12472840,"byte_end":12472843,"line_start":43,"line_end":43,"column_start":24,"column_end":27},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2249},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\tag.rs","byte_start":12473423,"byte_end":12473430,"line_start":65,"line_end":65,"column_start":24,"column_end":31},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2260},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\export.rs","byte_start":12474282,"byte_end":12474288,"line_start":30,"line_end":30,"column_start":24,"column_end":30},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":2281},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\export.rs","byte_start":12474531,"byte_end":12474541,"line_start":40,"line_end":40,"column_start":24,"column_end":34},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2289},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\export.rs","byte_start":12476465,"byte_end":12476477,"line_start":108,"line_end":108,"column_start":24,"column_end":36},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2352},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\export.rs","byte_start":12476814,"byte_end":12476826,"line_start":121,"line_end":121,"column_start":15,"column_end":27},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2352},"to":{"krate":0,"index":652}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12477929,"byte_end":12477939,"line_start":16,"line_end":16,"column_start":24,"column_end":34},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2358},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12480782,"byte_end":12480798,"line_start":102,"line_end":102,"column_start":10,"column_end":26},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2364},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12532157,"byte_end":12532166,"line_start":1162,"line_end":1162,"column_start":24,"column_end":33},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":5988},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12532682,"byte_end":12532694,"line_start":1181,"line_end":1181,"column_start":24,"column_end":36},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":5996},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12533139,"byte_end":12533146,"line_start":1199,"line_end":1199,"column_start":24,"column_end":31},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":6002},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12533573,"byte_end":12533587,"line_start":1216,"line_end":1216,"column_start":24,"column_end":38},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":6009},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12534096,"byte_end":12534103,"line_start":1235,"line_end":1235,"column_start":24,"column_end":31},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":6016},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12535202,"byte_end":12535208,"line_start":1270,"line_end":1270,"column_start":10,"column_end":16},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":6020},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12537867,"byte_end":12537882,"line_start":1351,"line_end":1351,"column_start":10,"column_end":25},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":6028},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12540063,"byte_end":12540075,"line_start":1405,"line_end":1405,"column_start":24,"column_end":36},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":6035},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12541089,"byte_end":12541098,"line_start":1432,"line_end":1432,"column_start":24,"column_end":33},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":6042},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12541901,"byte_end":12541910,"line_start":1455,"line_end":1455,"column_start":24,"column_end":33},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":6049},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12542537,"byte_end":12542545,"line_start":1475,"line_end":1475,"column_start":24,"column_end":32},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":6056},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12543034,"byte_end":12543043,"line_start":1493,"line_end":1493,"column_start":24,"column_end":33},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":6062},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12543646,"byte_end":12543656,"line_start":1513,"line_end":1513,"column_start":24,"column_end":34},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":6068},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12544456,"byte_end":12544466,"line_start":1536,"line_end":1536,"column_start":24,"column_end":34},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":6075},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12545205,"byte_end":12545217,"line_start":1558,"line_end":1558,"column_start":24,"column_end":36},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":6082},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12545683,"byte_end":12545692,"line_start":1580,"line_end":1580,"column_start":6,"column_end":15},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":6091},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12548949,"byte_end":12548958,"line_start":1671,"line_end":1671,"column_start":24,"column_end":33},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":6091},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12551188,"byte_end":12551200,"line_start":1741,"line_end":1741,"column_start":24,"column_end":36},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":6118},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\expr.rs","byte_start":12552048,"byte_end":12552059,"line_start":1773,"line_end":1773,"column_start":24,"column_end":35},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":6123},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\func.rs","byte_start":12554041,"byte_end":12554045,"line_start":46,"line_end":46,"column_start":24,"column_end":28},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":6129},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\func.rs","byte_start":12555391,"byte_end":12555396,"line_start":93,"line_end":93,"column_start":10,"column_end":15},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":6151},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\global.rs","byte_start":12557384,"byte_end":12557390,"line_start":36,"line_end":36,"column_start":24,"column_end":30},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":6159},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\import.rs","byte_start":12558516,"byte_end":12558522,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":6181},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\import.rs","byte_start":12559757,"byte_end":12559764,"line_start":59,"line_end":59,"column_start":24,"column_end":31},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":6193},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\import.rs","byte_start":12562390,"byte_end":12562402,"line_start":137,"line_end":137,"column_start":24,"column_end":36},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":6234},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\import.rs","byte_start":12562676,"byte_end":12562688,"line_start":149,"line_end":149,"column_start":15,"column_end":27},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":6234},"to":{"krate":0,"index":652}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\instance.rs","byte_start":12565029,"byte_end":12565037,"line_start":49,"line_end":49,"column_start":24,"column_end":32},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":6246},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\instance.rs","byte_start":12565987,"byte_end":12565998,"line_start":83,"line_end":83,"column_start":24,"column_end":35},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":6267},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12567607,"byte_end":12567613,"line_start":42,"line_end":42,"column_start":24,"column_end":30},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":6274},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12570378,"byte_end":12570382,"line_start":130,"line_end":130,"column_start":24,"column_end":28},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":6298},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12573539,"byte_end":12573546,"line_start":219,"line_end":219,"column_start":6,"column_end":13},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":6318},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\memory.rs","byte_start":12574118,"byte_end":12574125,"line_start":238,"line_end":238,"column_start":24,"column_end":31},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":6318},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12576499,"byte_end":12576502,"line_start":17,"line_end":17,"column_start":24,"column_end":27},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":6329},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12577928,"byte_end":12577934,"line_start":62,"line_end":62,"column_start":10,"column_end":16},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":6335},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12580981,"byte_end":12580987,"line_start":135,"line_end":135,"column_start":24,"column_end":30},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":6335},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12582287,"byte_end":12582298,"line_start":182,"line_end":182,"column_start":10,"column_end":21},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":6355},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\module.rs","byte_start":12582572,"byte_end":12582583,"line_start":192,"line_end":192,"column_start":24,"column_end":35},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":6355},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\nested_module.rs","byte_start":12585870,"byte_end":12585882,"line_start":39,"line_end":39,"column_start":24,"column_end":36},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":6405},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\nested_module.rs","byte_start":12587797,"byte_end":12587807,"line_start":89,"line_end":89,"column_start":15,"column_end":25},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":1820},"to":{"krate":0,"index":652}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12589909,"byte_end":12589914,"line_start":43,"line_end":43,"column_start":24,"column_end":29},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":6425},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12593012,"byte_end":12593016,"line_start":139,"line_end":139,"column_start":24,"column_end":28},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":6449},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12594407,"byte_end":12594418,"line_start":183,"line_end":183,"column_start":24,"column_end":35},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":6471},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\table.rs","byte_start":12594551,"byte_end":12594562,"line_start":189,"line_end":189,"column_start":10,"column_end":21},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":6471},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12596316,"byte_end":12596323,"line_start":18,"line_end":18,"column_start":24,"column_end":31},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":6482},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12597488,"byte_end":12597495,"line_start":54,"line_end":54,"column_start":19,"column_end":26},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":6482},"to":{"krate":0,"index":652}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12598878,"byte_end":12598886,"line_start":95,"line_end":95,"column_start":24,"column_end":32},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":6524},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12599831,"byte_end":12599839,"line_start":124,"line_end":124,"column_start":19,"column_end":27},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":6524},"to":{"krate":0,"index":652}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12600452,"byte_end":12600459,"line_start":147,"line_end":147,"column_start":10,"column_end":17},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":6564},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12601612,"byte_end":12601619,"line_start":197,"line_end":197,"column_start":24,"column_end":31},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":6564},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12603286,"byte_end":12603293,"line_start":247,"line_end":247,"column_start":19,"column_end":26},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":6564},"to":{"krate":0,"index":652}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12604001,"byte_end":12604012,"line_start":272,"line_end":272,"column_start":24,"column_end":35},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":6591},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12604769,"byte_end":12604779,"line_start":298,"line_end":298,"column_start":24,"column_end":34},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":6623},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12605537,"byte_end":12605543,"line_start":326,"line_end":326,"column_start":24,"column_end":30},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":6650},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12606093,"byte_end":12606101,"line_start":347,"line_end":347,"column_start":24,"column_end":32},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":6668},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12606657,"byte_end":12606666,"line_start":368,"line_end":368,"column_start":24,"column_end":33},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":6686},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12607396,"byte_end":12607406,"line_start":396,"line_end":396,"column_start":24,"column_end":34},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":6713},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12608457,"byte_end":12608469,"line_start":428,"line_end":428,"column_start":10,"column_end":22},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":6735},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12610300,"byte_end":12610312,"line_start":474,"line_end":474,"column_start":24,"column_end":36},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":6735},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12610571,"byte_end":12610583,"line_start":485,"line_end":485,"column_start":19,"column_end":31},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":6735},"to":{"krate":0,"index":652}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12611088,"byte_end":12611107,"line_start":506,"line_end":506,"column_start":24,"column_end":43},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":6748},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12611388,"byte_end":12611407,"line_start":517,"line_end":517,"column_start":19,"column_end":38},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":6748},"to":{"krate":0,"index":652}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12611617,"byte_end":12611629,"line_start":527,"line_end":527,"column_start":44,"column_end":56},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":6735},"to":{"krate":2,"index":2895}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12611901,"byte_end":12611911,"line_start":540,"line_end":540,"column_start":24,"column_end":34},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":6761},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12612768,"byte_end":12612779,"line_start":569,"line_end":569,"column_start":10,"column_end":21},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":6770},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12613533,"byte_end":12613542,"line_start":594,"line_end":594,"column_start":24,"column_end":33},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":6781},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12614273,"byte_end":12614283,"line_start":618,"line_end":618,"column_start":24,"column_end":34},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":6791},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12614966,"byte_end":12614976,"line_start":640,"line_end":640,"column_start":19,"column_end":29},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":6791},"to":{"krate":0,"index":652}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12615522,"byte_end":12615534,"line_start":664,"line_end":664,"column_start":24,"column_end":36},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":6804},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12615995,"byte_end":12616007,"line_start":679,"line_end":679,"column_start":19,"column_end":31},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":6804},"to":{"krate":0,"index":652}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12616668,"byte_end":12616678,"line_start":707,"line_end":707,"column_start":24,"column_end":34},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":6816},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12617795,"byte_end":12617799,"line_start":745,"line_end":745,"column_start":24,"column_end":28},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":6847},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12619276,"byte_end":12619283,"line_start":789,"line_end":789,"column_start":13,"column_end":20},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":6856},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12619821,"byte_end":12619828,"line_start":806,"line_end":806,"column_start":45,"column_end":52},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":6856},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\types.rs","byte_start":12620164,"byte_end":12620171,"line_start":819,"line_end":819,"column_start":57,"column_end":64},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":6856},"to":{"krate":2,"index":2895}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12620954,"byte_end":12620958,"line_start":16,"line_end":16,"column_start":24,"column_end":28},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":6869},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12621610,"byte_end":12621628,"line_start":36,"line_end":36,"column_start":15,"column_end":33},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":2046},"to":{"krate":0,"index":652}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12623250,"byte_end":12623263,"line_start":104,"line_end":104,"column_start":6,"column_end":19},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":6875},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12624056,"byte_end":12624069,"line_start":123,"line_end":123,"column_start":24,"column_end":37},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":6875},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12630578,"byte_end":12630589,"line_start":280,"line_end":280,"column_start":24,"column_end":35},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":6920},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12631366,"byte_end":12631376,"line_start":308,"line_end":308,"column_start":24,"column_end":34},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":6934},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\ast\\wast.rs","byte_start":12631960,"byte_end":12631971,"line_start":333,"line_end":333,"column_start":24,"column_end":35},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":6943},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":148744,"byte_end":148749,"line_start":261,"line_end":261,"column_start":10,"column_end":15},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":8448},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":171796,"byte_end":171801,"line_start":845,"line_end":845,"column_start":23,"column_end":28},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":8448},"to":{"krate":2,"index":7566}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":171949,"byte_end":171954,"line_start":853,"line_end":853,"column_start":10,"column_end":15},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":8456},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":172519,"byte_end":172526,"line_start":872,"line_end":872,"column_start":10,"column_end":17},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":8556},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":173014,"byte_end":173019,"line_start":890,"line_end":890,"column_start":10,"column_end":15},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":8584},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":173330,"byte_end":173340,"line_start":903,"line_end":903,"column_start":10,"column_end":20},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":8610},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lexer.rs","byte_start":173782,"byte_end":173790,"line_start":923,"line_end":923,"column_start":23,"column_end":31},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":8500},"to":{"krate":2,"index":9307}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":192602,"byte_end":192607,"line_start":208,"line_end":208,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":2994},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":197242,"byte_end":197253,"line_start":332,"line_end":332,"column_start":6,"column_end":17},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":658},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":200712,"byte_end":200718,"line_start":425,"line_end":425,"column_start":10,"column_end":16},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":8672},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":218274,"byte_end":218286,"line_start":889,"line_end":889,"column_start":23,"column_end":35},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":713},"to":{"krate":2,"index":3224}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":218542,"byte_end":218548,"line_start":899,"line_end":899,"column_start":10,"column_end":16},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":8680},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":230981,"byte_end":230991,"line_start":1217,"line_end":1217,"column_start":6,"column_end":16},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":665},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\parser.rs","byte_start":232654,"byte_end":232660,"line_start":1265,"line_end":1265,"column_start":45,"column_end":51},"kind":{"Impl":{"id":226}},"from":{"krate":2,"index":43179},"to":{"krate":0,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":3384,"byte_end":3389,"line_start":101,"line_end":101,"column_start":6,"column_end":11},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":8689},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":6254,"byte_end":6259,"line_start":191,"line_end":191,"column_start":23,"column_end":28},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":8689},"to":{"krate":2,"index":9307}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":7233,"byte_end":7238,"line_start":228,"line_end":228,"column_start":28,"column_end":33},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":8689},"to":{"krate":1,"index":2336}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wast-39.0.0\\src\\lib.rs","byte_start":7248,"byte_end":7252,"line_start":230,"line_end":230,"column_start":6,"column_end":10},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":8700},"to":{"krate":4294967295,"index":4294967295}}]}