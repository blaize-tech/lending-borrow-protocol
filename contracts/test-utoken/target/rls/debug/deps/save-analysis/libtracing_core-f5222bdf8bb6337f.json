{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22","program":"C:\\Users\\комфи\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","tracing_core","--edition=2018","C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"lazy_static\"","--cfg","feature=\"std\"","-C","metadata=f5222bdf8bb6337f","-C","extra-filename=-f5222bdf8bb6337f","--out-dir","c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\test-utoken\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\test-utoken\\target\\rls\\debug\\deps","--extern","lazy_static=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\test-utoken\\target\\rls\\debug\\deps\\liblazy_static-d6cbdbe0b44bd4a4.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\комфи\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\test-utoken\\target\\rls\\debug\\deps\\libtracing_core-f5222bdf8bb6337f.rmeta"},"prelude":{"crate_id":{"name":"tracing_core","disambiguator":[5753343767479207645,0]},"crate_root":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src","external_crates":[{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[7976927198175868373,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","num":2,"id":{"name":"core","disambiguator":[11165144592143370822,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[252041924521724887,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5467317383579905353,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7624884120048857693,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[11703982264691436790,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[2970152443746782806,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9222488229097456044,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7853498759631503325,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16147963203778103955,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[14622278557065309757,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[12620427935833221912,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[5227252993197737239,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","num":14,"id":{"name":"lazy_static","disambiguator":[8441177590269360409,0]}}],"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":0,"byte_end":9525,"line_start":1,"line_end":304,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":1,"index":7677},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":9074,"byte_end":9078,"line_start":278,"line_end":278,"column_start":23,"column_end":27},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":56},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":9282,"byte_end":9290,"line_start":292,"line_end":292,"column_start":15,"column_end":23},"alias_span":null,"name":"Callsite","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":811},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":9308,"byte_end":9316,"line_start":293,"line_end":293,"column_start":17,"column_end":25},"alias_span":null,"name":"Dispatch","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":828},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":9329,"byte_end":9334,"line_start":294,"line_end":294,"column_start":12,"column_end":17},"alias_span":null,"name":"Event","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":836},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":9347,"byte_end":9352,"line_start":295,"line_end":295,"column_start":12,"column_end":17},"alias_span":null,"name":"Field","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1083},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":9369,"byte_end":9374,"line_start":296,"line_end":296,"column_start":16,"column_end":21},"alias_span":null,"name":"Level","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1101},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":9376,"byte_end":9387,"line_start":296,"line_end":296,"column_start":23,"column_end":34},"alias_span":null,"name":"LevelFilter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":468},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":9389,"byte_end":9397,"line_start":296,"line_end":296,"column_start":36,"column_end":44},"alias_span":null,"name":"Metadata","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":693},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":9416,"byte_end":9426,"line_start":297,"line_end":297,"column_start":17,"column_end":27},"alias_span":null,"name":"Subscriber","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1071},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":9457,"byte_end":9461,"line_start":300,"line_end":300,"column_start":26,"column_end":30},"alias_span":null,"name":"Kind","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1213},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":9475,"byte_end":9483,"line_start":300,"line_end":300,"column_start":44,"column_end":52},"alias_span":null,"name":"Interest","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":0,"byte_end":9525,"line_start":1,"line_end":304,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":70},{"krate":0,"index":218},{"krate":0,"index":248},{"krate":0,"index":443},{"krate":0,"index":595},{"krate":0,"index":599},{"krate":0,"index":663},{"krate":0,"index":665},{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":764},{"krate":0,"index":767},{"krate":0,"index":770},{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":777},{"krate":0,"index":780},{"krate":0,"index":783},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":790},{"krate":0,"index":793}],"decl_id":null,"docs":" Core primitives for `tracing`.","sig":null,"attributes":[{"value":"/ Core primitives for `tracing`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":0,"byte_end":34,"line_start":1,"line_end":1,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":35,"byte_end":38,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ [`tracing`] is a framework for instrumenting Rust programs to collect","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":39,"byte_end":112,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ structured, event-based diagnostic information. This crate defines the core","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":113,"byte_end":192,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ primitives of `tracing`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":193,"byte_end":221,"line_start":5,"line_end":5,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":222,"byte_end":225,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This crate provides:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":226,"byte_end":250,"line_start":7,"line_end":7,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":251,"byte_end":254,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ * [`span::Id`] identifies a span within the execution of a program.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":255,"byte_end":326,"line_start":9,"line_end":9,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":327,"byte_end":330,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ * [`Event`] represents a single event within a trace.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":331,"byte_end":388,"line_start":11,"line_end":11,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":389,"byte_end":392,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ * [`Subscriber`], the trait implemented to collect trace data.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":393,"byte_end":459,"line_start":13,"line_end":13,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":460,"byte_end":463,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ * [`Metadata`] and [`Callsite`] provide information describing spans and","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":464,"byte_end":540,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/   `Event`s.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":541,"byte_end":556,"line_start":16,"line_end":16,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":557,"byte_end":560,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * [`Field`], [`FieldSet`], [`Value`], and [`ValueSet`] represent the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":561,"byte_end":633,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/   structured data attached to a span.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":634,"byte_end":675,"line_start":19,"line_end":19,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":676,"byte_end":679,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ * [`Dispatch`] allows spans and events to be dispatched to `Subscriber`s.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":680,"byte_end":757,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":758,"byte_end":761,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ In addition, it defines the global callsite registry and per-thread current","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":762,"byte_end":841,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ dispatcher which other components of the tracing system rely on.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":842,"byte_end":910,"line_start":24,"line_end":24,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":911,"byte_end":914,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ *Compiler support: [requires `rustc` 1.42+][msrv]*","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":915,"byte_end":969,"line_start":26,"line_end":26,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":970,"byte_end":973,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [msrv]: #supported-rust-versions","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":974,"byte_end":1010,"line_start":28,"line_end":28,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":1011,"byte_end":1014,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ## Usage","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":1015,"byte_end":1027,"line_start":30,"line_end":30,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":1028,"byte_end":1031,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Application authors will typically not use this crate directly. Instead,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":1032,"byte_end":1108,"line_start":32,"line_end":32,"column_start":1,"column_end":77}},{"value":"/ they will use the [`tracing`] crate, which provides a much more","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":1109,"byte_end":1176,"line_start":33,"line_end":33,"column_start":1,"column_end":68}},{"value":"/ fully-featured API. However, this crate's API will change very infrequently,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":1177,"byte_end":1257,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ so it may be used when dependencies must be very stable.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":1258,"byte_end":1318,"line_start":35,"line_end":35,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":1319,"byte_end":1322,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ `Subscriber` implementations may depend on `tracing-core` rather than","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":1323,"byte_end":1396,"line_start":37,"line_end":37,"column_start":1,"column_end":74}},{"value":"/ `tracing`, as the additional APIs provided by `tracing` are primarily useful","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":1397,"byte_end":1477,"line_start":38,"line_end":38,"column_start":1,"column_end":81}},{"value":"/ for instrumenting libraries and applications, and are generally not","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":1478,"byte_end":1549,"line_start":39,"line_end":39,"column_start":1,"column_end":72}},{"value":"/ necessary for `Subscriber` implementations.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":1550,"byte_end":1597,"line_start":40,"line_end":40,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":1598,"byte_end":1601,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ The [`tokio-rs/tracing`] repository contains less stable crates designed to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":1602,"byte_end":1681,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ be used with the `tracing` ecosystem. It includes a collection of","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":1682,"byte_end":1751,"line_start":43,"line_end":43,"column_start":1,"column_end":70}},{"value":"/ `Subscriber` implementations, as well as utility and adapter crates.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":1752,"byte_end":1824,"line_start":44,"line_end":44,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":1825,"byte_end":1828,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ## Crate Feature Flags","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":1829,"byte_end":1855,"line_start":46,"line_end":46,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":1856,"byte_end":1859,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ The following crate [feature flags] are available:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":1860,"byte_end":1914,"line_start":48,"line_end":48,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":1915,"byte_end":1918,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ * `std`: Depend on the Rust standard library (enabled by default).","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":1919,"byte_end":1989,"line_start":50,"line_end":50,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":1990,"byte_end":1993,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/   `no_std` users may disable this feature with `default-features = false`:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":1994,"byte_end":2072,"line_start":52,"line_end":52,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":2073,"byte_end":2076,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/   ```toml","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":2077,"byte_end":2090,"line_start":54,"line_end":54,"column_start":1,"column_end":14}},{"value":"/   [dependencies]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":2091,"byte_end":2111,"line_start":55,"line_end":55,"column_start":1,"column_end":21}},{"value":"/   tracing-core = { version = \"0.1.22\", default-features = false }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":2112,"byte_end":2181,"line_start":56,"line_end":56,"column_start":1,"column_end":70}},{"value":"/   ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":2182,"byte_end":2191,"line_start":57,"line_end":57,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":2192,"byte_end":2195,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/   **Note**:`tracing-core`'s `no_std` support requires `liballoc`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":2196,"byte_end":2265,"line_start":59,"line_end":59,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":2266,"byte_end":2269,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ### Unstable Features","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":2270,"byte_end":2295,"line_start":61,"line_end":61,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":2296,"byte_end":2299,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ These feature flags enable **unstable** features. The public API may break in 0.1.x","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":2300,"byte_end":2387,"line_start":63,"line_end":63,"column_start":1,"column_end":88}},{"value":"/ releases. To enable these features, the `--cfg tracing_unstable` must be passed to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":2388,"byte_end":2474,"line_start":64,"line_end":64,"column_start":1,"column_end":87}},{"value":"/ `rustc` when compiling.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":2475,"byte_end":2502,"line_start":65,"line_end":65,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":2503,"byte_end":2506,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ The following unstable feature flags are currently available:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":2507,"byte_end":2572,"line_start":67,"line_end":67,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":2573,"byte_end":2576,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ * `valuable`: Enables support for recording [field values] using the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":2577,"byte_end":2649,"line_start":69,"line_end":69,"column_start":1,"column_end":73}},{"value":"/   [`valuable`] crate.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":2650,"byte_end":2675,"line_start":70,"line_end":70,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":2676,"byte_end":2679,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ #### Enabling Unstable Features","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":2680,"byte_end":2715,"line_start":72,"line_end":72,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":2716,"byte_end":2719,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ The easiest way to set the `tracing_unstable` cfg is to use the `RUSTFLAGS`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":2720,"byte_end":2799,"line_start":74,"line_end":74,"column_start":1,"column_end":80}},{"value":"/ env variable when running `cargo` commands:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":2800,"byte_end":2847,"line_start":75,"line_end":75,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":2848,"byte_end":2851,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ```shell","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":2852,"byte_end":2864,"line_start":77,"line_end":77,"column_start":1,"column_end":13}},{"value":"/ RUSTFLAGS=\"--cfg tracing_unstable\" cargo build","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":2865,"byte_end":2915,"line_start":78,"line_end":78,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":2916,"byte_end":2923,"line_start":79,"line_end":79,"column_start":1,"column_end":8}},{"value":"/ Alternatively, the following can be added to the `.cargo/config` file in a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":2924,"byte_end":3002,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/ project to automatically enable the cfg flag for that project:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":3003,"byte_end":3069,"line_start":81,"line_end":81,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":3070,"byte_end":3073,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":3074,"byte_end":3085,"line_start":83,"line_end":83,"column_start":1,"column_end":12}},{"value":"/ [build]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":3086,"byte_end":3097,"line_start":84,"line_end":84,"column_start":1,"column_end":12}},{"value":"/ rustflags = [\"--cfg\", \"tracing_unstable\"]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":3098,"byte_end":3143,"line_start":85,"line_end":85,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":3144,"byte_end":3151,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":3152,"byte_end":3155,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":3156,"byte_end":3253,"line_start":88,"line_end":88,"column_start":1,"column_end":98}},{"value":"/ [field values]: crate::field","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":3254,"byte_end":3286,"line_start":89,"line_end":89,"column_start":1,"column_end":33}},{"value":"/ [`valuable`]: https://crates.io/crates/valuable","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":3287,"byte_end":3338,"line_start":90,"line_end":90,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":3339,"byte_end":3342,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ## Supported Rust Versions","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":3343,"byte_end":3373,"line_start":92,"line_end":92,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":3374,"byte_end":3377,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ Tracing is built against the latest stable release. The minimum supported","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":3378,"byte_end":3455,"line_start":94,"line_end":94,"column_start":1,"column_end":78}},{"value":"/ version is 1.42. The current Tracing version is not guaranteed to build on","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":3456,"byte_end":3534,"line_start":95,"line_end":95,"column_start":1,"column_end":79}},{"value":"/ Rust versions earlier than the minimum supported version.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":3535,"byte_end":3596,"line_start":96,"line_end":96,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":3597,"byte_end":3600,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ Tracing follows the same compiler support policies as the rest of the Tokio","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":3601,"byte_end":3680,"line_start":98,"line_end":98,"column_start":1,"column_end":80}},{"value":"/ project. The current stable Rust compiler and the three most recent minor","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":3681,"byte_end":3758,"line_start":99,"line_end":99,"column_start":1,"column_end":78}},{"value":"/ versions before it will always be supported. For example, if the current","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":3759,"byte_end":3835,"line_start":100,"line_end":100,"column_start":1,"column_end":77}},{"value":"/ stable compiler version is 1.45, the minimum supported version will not be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":3836,"byte_end":3914,"line_start":101,"line_end":101,"column_start":1,"column_end":79}},{"value":"/ increased past 1.42, three minor versions prior. Increasing the minimum","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":3915,"byte_end":3990,"line_start":102,"line_end":102,"column_start":1,"column_end":76}},{"value":"/ supported compiler version is not considered a semver breaking change as","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":3991,"byte_end":4067,"line_start":103,"line_end":103,"column_start":1,"column_end":77}},{"value":"/ long as doing so complies with this policy.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":4068,"byte_end":4115,"line_start":104,"line_end":104,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":4116,"byte_end":4119,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":4120,"byte_end":4123,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ [`span::Id`]: span/struct.Id.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":4124,"byte_end":4161,"line_start":107,"line_end":107,"column_start":1,"column_end":38}},{"value":"/ [`Event`]: event/struct.Event.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":4162,"byte_end":4200,"line_start":108,"line_end":108,"column_start":1,"column_end":39}},{"value":"/ [`Subscriber`]: subscriber/trait.Subscriber.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":4201,"byte_end":4253,"line_start":109,"line_end":109,"column_start":1,"column_end":53}},{"value":"/ [`Metadata`]: metadata/struct.Metadata.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":4254,"byte_end":4301,"line_start":110,"line_end":110,"column_start":1,"column_end":48}},{"value":"/ [`Callsite`]: callsite/trait.Callsite.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":4302,"byte_end":4348,"line_start":111,"line_end":111,"column_start":1,"column_end":47}},{"value":"/ [`Field`]: field/struct.Field.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":4349,"byte_end":4387,"line_start":112,"line_end":112,"column_start":1,"column_end":39}},{"value":"/ [`FieldSet`]: field/struct.FieldSet.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":4388,"byte_end":4432,"line_start":113,"line_end":113,"column_start":1,"column_end":45}},{"value":"/ [`Value`]: field/trait.Value.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":4433,"byte_end":4470,"line_start":114,"line_end":114,"column_start":1,"column_end":38}},{"value":"/ [`ValueSet`]: field/struct.ValueSet.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":4471,"byte_end":4515,"line_start":115,"line_end":115,"column_start":1,"column_end":45}},{"value":"/ [`Dispatch`]: dispatcher/struct.Dispatch.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":4516,"byte_end":4565,"line_start":116,"line_end":116,"column_start":1,"column_end":50}},{"value":"/ [`tokio-rs/tracing`]: https://github.com/tokio-rs/tracing","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":4566,"byte_end":4627,"line_start":117,"line_end":117,"column_start":1,"column_end":62}},{"value":"/ [`tracing`]: https://crates.io/crates/tracing","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":4628,"byte_end":4677,"line_start":118,"line_end":118,"column_start":1,"column_end":50}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub, bad_style, const_err, dead_code, improper_ctypes,\n       non_shorthand_field_patterns, no_mangle_generic_items,\n       overflowing_literals, path_statements, patterns_in_fns_without_body,\n       private_in_public, unconditional_recursion, unused, unused_allocation,\n       unused_comparisons, unused_parens, while_true)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":5050,"byte_end":5512,"line_start":126,"line_end":147,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":11},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"callsite","qualname":"::callsite","value":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","parent":null,"children":[{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":795},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":803},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":56},{"krate":0,"index":806},{"krate":0,"index":809},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":67}],"decl_id":null,"docs":" Callsites represent the source locations from which spans or events\n originate.\n","sig":null,"attributes":[{"value":"/ Callsites represent the source locations from which spans or events","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":9527,"byte_end":9598,"line_start":1,"line_end":1,"column_start":1,"column_end":72}},{"value":"/ originate.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":9599,"byte_end":9613,"line_start":2,"line_end":2,"column_start":1,"column_end":15}}]},{"kind":"Trait","id":{"krate":0,"index":56},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":11903,"byte_end":11911,"line_start":77,"line_end":77,"column_start":11,"column_end":19},"name":"Callsite","qualname":"::callsite::Callsite","value":"Callsite: Sync","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":58}],"decl_id":null,"docs":" Trait implemented by callsites.","sig":null,"attributes":[{"value":"/ Trait implemented by callsites.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":11691,"byte_end":11726,"line_start":73,"line_end":73,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":11727,"byte_end":11730,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ These functions are only intended to be called by the callsite registry, which","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":11731,"byte_end":11813,"line_start":75,"line_end":75,"column_start":1,"column_end":83}},{"value":"/ correctly handles determining the common interest between all subscribers.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":11814,"byte_end":11892,"line_start":76,"line_end":76,"column_start":1,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":12041,"byte_end":12053,"line_start":81,"line_end":81,"column_start":8,"column_end":20},"name":"set_interest","qualname":"::callsite::Callsite::set_interest","value":"pub fn set_interest(&Self, Interest)","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":" Sets the [`Interest`] for this callsite.","sig":null,"attributes":[{"value":"/ Sets the [`Interest`] for this callsite.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":11924,"byte_end":11968,"line_start":78,"line_end":78,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":11973,"byte_end":11976,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ [`Interest`]: ../subscriber/struct.Interest.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":11981,"byte_end":12033,"line_start":80,"line_end":80,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":12212,"byte_end":12220,"line_start":86,"line_end":86,"column_start":8,"column_end":16},"name":"metadata","qualname":"::callsite::Callsite::metadata","value":"pub fn metadata(&Self) -> &Metadata","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":" Returns the [metadata] associated with the callsite.","sig":null,"attributes":[{"value":"/ Returns the [metadata] associated with the callsite.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":12087,"byte_end":12143,"line_start":83,"line_end":83,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":12148,"byte_end":12151,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ [metadata]: ../metadata/struct.Metadata.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":12156,"byte_end":12204,"line_start":85,"line_end":85,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":806},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":12447,"byte_end":12457,"line_start":95,"line_end":95,"column_start":12,"column_end":22},"name":"Identifier","qualname":"::callsite::Identifier","value":"","parent":null,"children":[],"decl_id":null,"docs":" Uniquely identifies a [`Callsite`]","sig":null,"attributes":[{"value":"/ Uniquely identifies a [`Callsite`]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":12249,"byte_end":12287,"line_start":89,"line_end":89,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":12288,"byte_end":12291,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ Two `Identifier`s are equal if they both refer to the same callsite.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":12292,"byte_end":12364,"line_start":91,"line_end":91,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":12365,"byte_end":12368,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ [`Callsite`]: ../callsite/trait.Callsite.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":12369,"byte_end":12418,"line_start":93,"line_end":93,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":808},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":13070,"byte_end":13095,"line_start":105,"line_end":105,"column_start":5,"column_end":30},"name":"0","qualname":"::callsite::Identifier::0","value":"&'static (dyn callsite::Callsite + 'static)","parent":{"krate":0,"index":806},"children":[],"decl_id":null,"docs":" **Warning**: The fields on this type are currently `pub` because it must\n be able to be constructed statically by macros. However, when `const\n fn`s are available on stable Rust, this will no longer be necessary.\n Thus, these fields are *not* considered stable public API, and they may\n change warning. Do not rely on any fields on `Identifier`. When\n constructing new `Identifier`s, use the `identify_callsite!` macro or\n the `Callsite::id` function instead.\n","sig":null,"attributes":[{"value":"/ **Warning**: The fields on this type are currently `pub` because it must","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":12463,"byte_end":12539,"line_start":96,"line_end":96,"column_start":5,"column_end":81}},{"value":"/ be able to be constructed statically by macros. However, when `const","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":12544,"byte_end":12616,"line_start":97,"line_end":97,"column_start":5,"column_end":77}},{"value":"/ fn`s are available on stable Rust, this will no longer be necessary.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":12621,"byte_end":12693,"line_start":98,"line_end":98,"column_start":5,"column_end":77}},{"value":"/ Thus, these fields are *not* considered stable public API, and they may","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":12698,"byte_end":12773,"line_start":99,"line_end":99,"column_start":5,"column_end":80}},{"value":"/ change warning. Do not rely on any fields on `Identifier`. When","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":12778,"byte_end":12845,"line_start":100,"line_end":100,"column_start":5,"column_end":72}},{"value":"/ constructing new `Identifier`s, use the `identify_callsite!` macro or","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":12850,"byte_end":12923,"line_start":101,"line_end":101,"column_start":5,"column_end":78}},{"value":"/ the `Callsite::id` function instead.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":12928,"byte_end":12968,"line_start":102,"line_end":102,"column_start":5,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":59},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":14216,"byte_end":14238,"line_start":127,"line_end":127,"column_start":8,"column_end":30},"name":"rebuild_interest_cache","qualname":"::callsite::rebuild_interest_cache","value":"pub fn rebuild_interest_cache()","parent":null,"children":[],"decl_id":null,"docs":" Clear and reregister interest on every [`Callsite`]","sig":null,"attributes":[{"value":"/ Clear and reregister interest on every [`Callsite`]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":13101,"byte_end":13156,"line_start":108,"line_end":108,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":13157,"byte_end":13160,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ This function is intended for runtime reconfiguration of filters on traces","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":13161,"byte_end":13239,"line_start":110,"line_end":110,"column_start":1,"column_end":79}},{"value":"/ when the filter recalculation is much less frequent than trace events are.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":13240,"byte_end":13318,"line_start":111,"line_end":111,"column_start":1,"column_end":79}},{"value":"/ The alternative is to have the [`Subscriber`] that supports runtime","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":13319,"byte_end":13390,"line_start":112,"line_end":112,"column_start":1,"column_end":72}},{"value":"/ reconfiguration of filters always return [`Interest::sometimes()`] so that","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":13391,"byte_end":13469,"line_start":113,"line_end":113,"column_start":1,"column_end":79}},{"value":"/ [`enabled`] is evaluated for every event.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":13470,"byte_end":13515,"line_start":114,"line_end":114,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":13516,"byte_end":13519,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ This function will also re-compute the global maximum level as determined by","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":13520,"byte_end":13600,"line_start":116,"line_end":116,"column_start":1,"column_end":81}},{"value":"/ the [`max_level_hint`] method. If a [`Subscriber`]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":13601,"byte_end":13655,"line_start":117,"line_end":117,"column_start":1,"column_end":55}},{"value":"/ implementation changes the value returned by its `max_level_hint`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":13656,"byte_end":13725,"line_start":118,"line_end":118,"column_start":1,"column_end":70}},{"value":"/ implementation at runtime, then it **must** call this function after that","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":13726,"byte_end":13803,"line_start":119,"line_end":119,"column_start":1,"column_end":78}},{"value":"/ value changes, in order for the change to be reflected.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":13804,"byte_end":13863,"line_start":120,"line_end":120,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":13864,"byte_end":13867,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ [`max_level_hint`]: ../subscriber/trait.Subscriber.html#method.max_level_hint","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":13868,"byte_end":13949,"line_start":122,"line_end":122,"column_start":1,"column_end":82}},{"value":"/ [`Callsite`]: ../callsite/trait.Callsite.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":13950,"byte_end":13999,"line_start":123,"line_end":123,"column_start":1,"column_end":50}},{"value":"/ [`enabled`]: ../subscriber/trait.Subscriber.html#tymethod.enabled","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":14000,"byte_end":14069,"line_start":124,"line_end":124,"column_start":1,"column_end":70}},{"value":"/ [`Interest::sometimes()`]: ../subscriber/struct.Interest.html#method.sometimes","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":14070,"byte_end":14152,"line_start":125,"line_end":125,"column_start":1,"column_end":83}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":14153,"byte_end":14208,"line_start":126,"line_end":126,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":60},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":14484,"byte_end":14492,"line_start":136,"line_end":136,"column_start":8,"column_end":16},"name":"register","qualname":"::callsite::register","value":"pub fn register(&'static dyn Callsite)","parent":null,"children":[],"decl_id":null,"docs":" Register a new `Callsite` with the global registry.","sig":null,"attributes":[{"value":"/ Register a new `Callsite` with the global registry.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":14328,"byte_end":14383,"line_start":132,"line_end":132,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":14384,"byte_end":14387,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ This should be called once per callsite after the callsite has been","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":14388,"byte_end":14459,"line_start":134,"line_end":134,"column_start":1,"column_end":72}},{"value":"/ constructed.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":14460,"byte_end":14476,"line_start":135,"line_end":135,"column_start":1,"column_end":17}}]},{"kind":"Mod","id":{"krate":0,"index":70},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dispatcher","qualname":"::dispatcher","value":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":91},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":101},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":118},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":132},{"krate":0,"index":811},{"krate":0,"index":813},{"krate":0,"index":815},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":819},{"krate":0,"index":822},{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":824},{"krate":0,"index":826},{"krate":0,"index":154},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":162},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":170},{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":197},{"krate":0,"index":200},{"krate":0,"index":205},{"krate":0,"index":209},{"krate":0,"index":212},{"krate":0,"index":215}],"decl_id":null,"docs":" Dispatches trace events to [`Subscriber`]s.","sig":null,"attributes":[{"value":"/ Dispatches trace events to [`Subscriber`]s.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":15444,"byte_end":15491,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":15492,"byte_end":15495,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The _dispatcher_ is the component of the tracing system which is responsible","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":15496,"byte_end":15576,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ for forwarding trace data from the instrumentation points that generate it","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":15577,"byte_end":15655,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ to the subscriber that collects it.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":15656,"byte_end":15695,"line_start":5,"line_end":5,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":15696,"byte_end":15699,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Using the Trace Dispatcher","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":15700,"byte_end":15732,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":15733,"byte_end":15736,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Every thread in a program using `tracing` has a _default subscriber_. When","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":15737,"byte_end":15815,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ events occur, or spans are created, they are dispatched to the thread's","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":15816,"byte_end":15891,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ current subscriber.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":15892,"byte_end":15915,"line_start":11,"line_end":11,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":15916,"byte_end":15919,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ## Setting the Default Subscriber","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":15920,"byte_end":15957,"line_start":13,"line_end":13,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":15958,"byte_end":15961,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ By default, the current subscriber is an empty implementation that does","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":15962,"byte_end":16037,"line_start":15,"line_end":15,"column_start":1,"column_end":76}},{"value":"/ nothing. To use a subscriber implementation, it must be set as the default.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":16038,"byte_end":16117,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ There are two methods for doing so: [`with_default`] and","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":16118,"byte_end":16178,"line_start":17,"line_end":17,"column_start":1,"column_end":61}},{"value":"/ [`set_global_default`]. `with_default` sets the default subscriber for the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":16179,"byte_end":16257,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ duration of a scope, while `set_global_default` sets a default subscriber","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":16258,"byte_end":16335,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ for the entire process.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":16336,"byte_end":16363,"line_start":20,"line_end":20,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":16364,"byte_end":16367,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ To use either of these functions, we must first wrap our subscriber in a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":16368,"byte_end":16444,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"/ [`Dispatch`], a cloneable, type-erased reference to a subscriber. For","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":16445,"byte_end":16518,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/ example:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":16519,"byte_end":16531,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":16532,"byte_end":16543,"line_start":25,"line_end":25,"column_start":1,"column_end":12}},{"value":"/ # pub struct FooSubscriber;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":16544,"byte_end":16575,"line_start":26,"line_end":26,"column_start":1,"column_end":32}},{"value":"/ # use tracing_core::{","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":16576,"byte_end":16601,"line_start":27,"line_end":27,"column_start":1,"column_end":26}},{"value":"/ #   dispatcher, Event, Metadata,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":16602,"byte_end":16638,"line_start":28,"line_end":28,"column_start":1,"column_end":37}},{"value":"/ #   span::{Attributes, Id, Record}","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":16639,"byte_end":16677,"line_start":29,"line_end":29,"column_start":1,"column_end":39}},{"value":"/ # };","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":16678,"byte_end":16686,"line_start":30,"line_end":30,"column_start":1,"column_end":9}},{"value":"/ # impl tracing_core::Subscriber for FooSubscriber {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":16687,"byte_end":16742,"line_start":31,"line_end":31,"column_start":1,"column_end":56}},{"value":"/ #   fn new_span(&self, _: &Attributes) -> Id { Id::from_u64(0) }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":16743,"byte_end":16811,"line_start":32,"line_end":32,"column_start":1,"column_end":69}},{"value":"/ #   fn record(&self, _: &Id, _: &Record) {}","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":16812,"byte_end":16859,"line_start":33,"line_end":33,"column_start":1,"column_end":48}},{"value":"/ #   fn event(&self, _: &Event) {}","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":16860,"byte_end":16897,"line_start":34,"line_end":34,"column_start":1,"column_end":38}},{"value":"/ #   fn record_follows_from(&self, _: &Id, _: &Id) {}","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":16898,"byte_end":16954,"line_start":35,"line_end":35,"column_start":1,"column_end":57}},{"value":"/ #   fn enabled(&self, _: &Metadata) -> bool { false }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":16955,"byte_end":17012,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/ #   fn enter(&self, _: &Id) {}","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":17013,"byte_end":17047,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"/ #   fn exit(&self, _: &Id) {}","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":17048,"byte_end":17081,"line_start":38,"line_end":38,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":17082,"byte_end":17089,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ # impl FooSubscriber { fn new() -> Self { FooSubscriber } }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":17090,"byte_end":17153,"line_start":40,"line_end":40,"column_start":1,"column_end":64}},{"value":"/ use dispatcher::Dispatch;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":17154,"byte_end":17183,"line_start":41,"line_end":41,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":17184,"byte_end":17187,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let my_subscriber = FooSubscriber::new();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":17188,"byte_end":17233,"line_start":43,"line_end":43,"column_start":1,"column_end":46}},{"value":"/ let my_dispatch = Dispatch::new(my_subscriber);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":17234,"byte_end":17285,"line_start":44,"line_end":44,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":17286,"byte_end":17293,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ Then, we can use [`with_default`] to set our `Dispatch` as the default for","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":17294,"byte_end":17372,"line_start":46,"line_end":46,"column_start":1,"column_end":79}},{"value":"/ the duration of a block:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":17373,"byte_end":17401,"line_start":47,"line_end":47,"column_start":1,"column_end":29}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":17402,"byte_end":17413,"line_start":48,"line_end":48,"column_start":1,"column_end":12}},{"value":"/ # pub struct FooSubscriber;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":17414,"byte_end":17445,"line_start":49,"line_end":49,"column_start":1,"column_end":32}},{"value":"/ # use tracing_core::{","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":17446,"byte_end":17471,"line_start":50,"line_end":50,"column_start":1,"column_end":26}},{"value":"/ #   dispatcher, Event, Metadata,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":17472,"byte_end":17508,"line_start":51,"line_end":51,"column_start":1,"column_end":37}},{"value":"/ #   span::{Attributes, Id, Record}","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":17509,"byte_end":17547,"line_start":52,"line_end":52,"column_start":1,"column_end":39}},{"value":"/ # };","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":17548,"byte_end":17556,"line_start":53,"line_end":53,"column_start":1,"column_end":9}},{"value":"/ # impl tracing_core::Subscriber for FooSubscriber {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":17557,"byte_end":17612,"line_start":54,"line_end":54,"column_start":1,"column_end":56}},{"value":"/ #   fn new_span(&self, _: &Attributes) -> Id { Id::from_u64(0) }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":17613,"byte_end":17681,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"/ #   fn record(&self, _: &Id, _: &Record) {}","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":17682,"byte_end":17729,"line_start":56,"line_end":56,"column_start":1,"column_end":48}},{"value":"/ #   fn event(&self, _: &Event) {}","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":17730,"byte_end":17767,"line_start":57,"line_end":57,"column_start":1,"column_end":38}},{"value":"/ #   fn record_follows_from(&self, _: &Id, _: &Id) {}","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":17768,"byte_end":17824,"line_start":58,"line_end":58,"column_start":1,"column_end":57}},{"value":"/ #   fn enabled(&self, _: &Metadata) -> bool { false }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":17825,"byte_end":17882,"line_start":59,"line_end":59,"column_start":1,"column_end":58}},{"value":"/ #   fn enter(&self, _: &Id) {}","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":17883,"byte_end":17917,"line_start":60,"line_end":60,"column_start":1,"column_end":35}},{"value":"/ #   fn exit(&self, _: &Id) {}","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":17918,"byte_end":17951,"line_start":61,"line_end":61,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":17952,"byte_end":17959,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ # impl FooSubscriber { fn new() -> Self { FooSubscriber } }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":17960,"byte_end":18023,"line_start":63,"line_end":63,"column_start":1,"column_end":64}},{"value":"/ # let my_subscriber = FooSubscriber::new();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":18024,"byte_end":18071,"line_start":64,"line_end":64,"column_start":1,"column_end":48}},{"value":"/ # let my_dispatch = dispatcher::Dispatch::new(my_subscriber);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":18072,"byte_end":18137,"line_start":65,"line_end":65,"column_start":1,"column_end":66}},{"value":"/ // no default subscriber","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":18138,"byte_end":18166,"line_start":66,"line_end":66,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":18167,"byte_end":18170,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # #[cfg(feature = \"std\")]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":18171,"byte_end":18200,"line_start":68,"line_end":68,"column_start":1,"column_end":30}},{"value":"/ dispatcher::with_default(&my_dispatch, || {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":18201,"byte_end":18248,"line_start":69,"line_end":69,"column_start":1,"column_end":48}},{"value":"/     // my_subscriber is the default","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":18249,"byte_end":18288,"line_start":70,"line_end":70,"column_start":1,"column_end":40}},{"value":"/ });","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":18289,"byte_end":18296,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":18297,"byte_end":18300,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ // no default subscriber again","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":18301,"byte_end":18335,"line_start":73,"line_end":73,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":18336,"byte_end":18343,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ It's important to note that `with_default` will not propagate the current","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":18344,"byte_end":18421,"line_start":75,"line_end":75,"column_start":1,"column_end":78}},{"value":"/ thread's default subscriber to any threads spawned within the `with_default`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":18422,"byte_end":18502,"line_start":76,"line_end":76,"column_start":1,"column_end":81}},{"value":"/ block. To propagate the default subscriber to new threads, either use","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":18503,"byte_end":18576,"line_start":77,"line_end":77,"column_start":1,"column_end":74}},{"value":"/ `with_default` from the new thread, or use `set_global_default`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":18577,"byte_end":18645,"line_start":78,"line_end":78,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":18646,"byte_end":18649,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ As an alternative to `with_default`, we can use [`set_global_default`] to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":18650,"byte_end":18727,"line_start":80,"line_end":80,"column_start":1,"column_end":78}},{"value":"/ set a `Dispatch` as the default for all threads, for the lifetime of the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":18728,"byte_end":18804,"line_start":81,"line_end":81,"column_start":1,"column_end":77}},{"value":"/ program. For example:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":18805,"byte_end":18830,"line_start":82,"line_end":82,"column_start":1,"column_end":26}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":18831,"byte_end":18842,"line_start":83,"line_end":83,"column_start":1,"column_end":12}},{"value":"/ # pub struct FooSubscriber;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":18843,"byte_end":18874,"line_start":84,"line_end":84,"column_start":1,"column_end":32}},{"value":"/ # use tracing_core::{","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":18875,"byte_end":18900,"line_start":85,"line_end":85,"column_start":1,"column_end":26}},{"value":"/ #   dispatcher, Event, Metadata,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":18901,"byte_end":18937,"line_start":86,"line_end":86,"column_start":1,"column_end":37}},{"value":"/ #   span::{Attributes, Id, Record}","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":18938,"byte_end":18976,"line_start":87,"line_end":87,"column_start":1,"column_end":39}},{"value":"/ # };","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":18977,"byte_end":18985,"line_start":88,"line_end":88,"column_start":1,"column_end":9}},{"value":"/ # impl tracing_core::Subscriber for FooSubscriber {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":18986,"byte_end":19041,"line_start":89,"line_end":89,"column_start":1,"column_end":56}},{"value":"/ #   fn new_span(&self, _: &Attributes) -> Id { Id::from_u64(0) }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":19042,"byte_end":19110,"line_start":90,"line_end":90,"column_start":1,"column_end":69}},{"value":"/ #   fn record(&self, _: &Id, _: &Record) {}","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":19111,"byte_end":19158,"line_start":91,"line_end":91,"column_start":1,"column_end":48}},{"value":"/ #   fn event(&self, _: &Event) {}","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":19159,"byte_end":19196,"line_start":92,"line_end":92,"column_start":1,"column_end":38}},{"value":"/ #   fn record_follows_from(&self, _: &Id, _: &Id) {}","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":19197,"byte_end":19253,"line_start":93,"line_end":93,"column_start":1,"column_end":57}},{"value":"/ #   fn enabled(&self, _: &Metadata) -> bool { false }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":19254,"byte_end":19311,"line_start":94,"line_end":94,"column_start":1,"column_end":58}},{"value":"/ #   fn enter(&self, _: &Id) {}","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":19312,"byte_end":19346,"line_start":95,"line_end":95,"column_start":1,"column_end":35}},{"value":"/ #   fn exit(&self, _: &Id) {}","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":19347,"byte_end":19380,"line_start":96,"line_end":96,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":19381,"byte_end":19388,"line_start":97,"line_end":97,"column_start":1,"column_end":8}},{"value":"/ # impl FooSubscriber { fn new() -> Self { FooSubscriber } }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":19389,"byte_end":19452,"line_start":98,"line_end":98,"column_start":1,"column_end":64}},{"value":"/ # let my_subscriber = FooSubscriber::new();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":19453,"byte_end":19500,"line_start":99,"line_end":99,"column_start":1,"column_end":48}},{"value":"/ # let my_dispatch = dispatcher::Dispatch::new(my_subscriber);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":19501,"byte_end":19566,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ // no default subscriber","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":19567,"byte_end":19595,"line_start":101,"line_end":101,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":19596,"byte_end":19599,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ dispatcher::set_global_default(my_dispatch)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":19600,"byte_end":19647,"line_start":103,"line_end":103,"column_start":1,"column_end":48}},{"value":"/     // `set_global_default` will return an error if the global default","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":19648,"byte_end":19722,"line_start":104,"line_end":104,"column_start":1,"column_end":75}},{"value":"/     // subscriber has already been set.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":19723,"byte_end":19766,"line_start":105,"line_end":105,"column_start":1,"column_end":44}},{"value":"/     .expect(\"global default was already set!\");","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":19767,"byte_end":19818,"line_start":106,"line_end":106,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":19819,"byte_end":19822,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ // `my_subscriber` is now the default","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":19823,"byte_end":19864,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":19865,"byte_end":19872,"line_start":109,"line_end":109,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":19873,"byte_end":19876,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":19877,"byte_end":19942,"line_start":111,"line_end":111,"column_start":1,"column_end":66}},{"value":"/     <strong>Note</strong>:the thread-local scoped dispatcher","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":19943,"byte_end":20007,"line_start":112,"line_end":112,"column_start":1,"column_end":65}},{"value":"/     (<a href=\"#fn.with_default\"><code>with_default</code></a>) requires the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":20008,"byte_end":20087,"line_start":113,"line_end":113,"column_start":1,"column_end":80}},{"value":"/     Rust standard library. <code>no_std</code> users should use","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":20088,"byte_end":20155,"line_start":114,"line_end":114,"column_start":1,"column_end":68}},{"value":"/     <a href=\"#fn.set_global_default\"><code>set_global_default</code></a>","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":20156,"byte_end":20232,"line_start":115,"line_end":115,"column_start":1,"column_end":77}},{"value":"/     instead.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":20233,"byte_end":20249,"line_start":116,"line_end":116,"column_start":1,"column_end":17}},{"value":"/ </pre>","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":20250,"byte_end":20260,"line_start":117,"line_end":117,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":20261,"byte_end":20264,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ ## Accessing the Default Subscriber","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":20265,"byte_end":20304,"line_start":119,"line_end":119,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":20305,"byte_end":20308,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ A thread's current default subscriber can be accessed using the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":20309,"byte_end":20376,"line_start":121,"line_end":121,"column_start":1,"column_end":68}},{"value":"/ [`get_default`] function, which executes a closure with a reference to the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":20377,"byte_end":20455,"line_start":122,"line_end":122,"column_start":1,"column_end":79}},{"value":"/ currently default `Dispatch`. This is used primarily by `tracing`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":20456,"byte_end":20525,"line_start":123,"line_end":123,"column_start":1,"column_end":70}},{"value":"/ instrumentation.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":20526,"byte_end":20546,"line_start":124,"line_end":124,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":20547,"byte_end":20550,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ [`Subscriber`]: struct.Subscriber.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":20551,"byte_end":20593,"line_start":126,"line_end":126,"column_start":1,"column_end":43}},{"value":"/ [`with_default`]: fn.with_default.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":20594,"byte_end":20636,"line_start":127,"line_end":127,"column_start":1,"column_end":43}},{"value":"/ [`set_global_default`]: fn.set_global_default.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":20637,"byte_end":20691,"line_start":128,"line_end":128,"column_start":1,"column_end":55}},{"value":"/ [`get_default`]: fn.get_default.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":20692,"byte_end":20732,"line_start":129,"line_end":129,"column_start":1,"column_end":41}},{"value":"/ [`Dispatch`]: struct.Dispatch.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":20733,"byte_end":20771,"line_start":130,"line_end":130,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":811},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":21248,"byte_end":21256,"line_start":156,"line_end":156,"column_start":12,"column_end":20},"name":"Dispatch","qualname":"::dispatcher::Dispatch","value":"Dispatch {  }","parent":null,"children":[{"krate":0,"index":812}],"decl_id":null,"docs":" `Dispatch` trace data to a [`Subscriber`].","sig":null,"attributes":[{"value":"/ `Dispatch` trace data to a [`Subscriber`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":21127,"byte_end":21173,"line_start":152,"line_end":152,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":21174,"byte_end":21177,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ [`Subscriber`]: trait.Subscriber.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":21178,"byte_end":21219,"line_start":154,"line_end":154,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":819},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":22852,"byte_end":22864,"line_start":203,"line_end":203,"column_start":12,"column_end":24},"name":"DefaultGuard","qualname":"::dispatcher::DefaultGuard","value":"","parent":null,"children":[],"decl_id":null,"docs":" A guard that resets the current default dispatcher to the prior\n default dispatcher when dropped.\n","sig":null,"attributes":[{"value":"/ A guard that resets the current default dispatcher to the prior","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":22648,"byte_end":22715,"line_start":198,"line_end":198,"column_start":1,"column_end":68}},{"value":"/ default dispatcher when dropped.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":22716,"byte_end":22752,"line_start":199,"line_end":199,"column_start":1,"column_end":37}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":22753,"byte_end":22776,"line_start":200,"line_end":200,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":148},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":23608,"byte_end":23620,"line_start":222,"line_end":222,"column_start":8,"column_end":20},"name":"with_default","qualname":"::dispatcher::with_default","value":"pub fn with_default<T, impl FnOnce() -> T: FnOnce() ->\n                    T>(&Dispatch, impl FnOnce() -> T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Sets this dispatch as the default for the duration of a closure.","sig":null,"attributes":[{"value":"/ Sets this dispatch as the default for the duration of a closure.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":22885,"byte_end":22953,"line_start":205,"line_end":205,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":22954,"byte_end":22957,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ The default dispatcher is used when creating a new [span] or","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":22958,"byte_end":23022,"line_start":207,"line_end":207,"column_start":1,"column_end":65}},{"value":"/ [`Event`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":23023,"byte_end":23037,"line_start":208,"line_end":208,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":23038,"byte_end":23041,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":23042,"byte_end":23107,"line_start":210,"line_end":210,"column_start":1,"column_end":66}},{"value":"/     <strong>Note</strong>: This function required the Rust standard library.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":23108,"byte_end":23188,"line_start":211,"line_end":211,"column_start":1,"column_end":81}},{"value":"/     <code>no_std</code> users should use <a href=\"../fn.set_global_default.html\">","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":23189,"byte_end":23274,"line_start":212,"line_end":212,"column_start":1,"column_end":86}},{"value":"/     <code>set_global_default</code></a> instead.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":23275,"byte_end":23327,"line_start":213,"line_end":213,"column_start":1,"column_end":53}},{"value":"/ </pre>","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":23328,"byte_end":23338,"line_start":214,"line_end":214,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":23339,"byte_end":23342,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ [span]: ../span/index.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":23343,"byte_end":23373,"line_start":216,"line_end":216,"column_start":1,"column_end":31}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":23374,"byte_end":23429,"line_start":217,"line_end":217,"column_start":1,"column_end":56}},{"value":"/ [`Event`]: ../event/struct.Event.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":23430,"byte_end":23471,"line_start":218,"line_end":218,"column_start":1,"column_end":42}},{"value":"/ [`set_global_default`]: ../fn.set_global_default.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":23472,"byte_end":23529,"line_start":219,"line_end":219,"column_start":1,"column_end":58}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":23530,"byte_end":23553,"line_start":220,"line_end":220,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":151},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":24594,"byte_end":24605,"line_start":244,"line_end":244,"column_start":8,"column_end":19},"name":"set_default","qualname":"::dispatcher::set_default","value":"pub fn set_default(&Dispatch) -> DefaultGuard","parent":null,"children":[],"decl_id":null,"docs":" Sets the dispatch as the default dispatch for the duration of the lifetime\n of the returned DefaultGuard","sig":null,"attributes":[{"value":"/ Sets the dispatch as the default dispatch for the duration of the lifetime","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":23978,"byte_end":24056,"line_start":231,"line_end":231,"column_start":1,"column_end":79}},{"value":"/ of the returned DefaultGuard","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":24057,"byte_end":24089,"line_start":232,"line_end":232,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":24090,"byte_end":24093,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":24094,"byte_end":24159,"line_start":234,"line_end":234,"column_start":1,"column_end":66}},{"value":"/     <strong>Note</strong>: This function required the Rust standard library.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":24160,"byte_end":24240,"line_start":235,"line_end":235,"column_start":1,"column_end":81}},{"value":"/     <code>no_std</code> users should use <a href=\"../fn.set_global_default.html\">","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":24241,"byte_end":24326,"line_start":236,"line_end":236,"column_start":1,"column_end":86}},{"value":"/     <code>set_global_default</code></a> instead.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":24327,"byte_end":24379,"line_start":237,"line_end":237,"column_start":1,"column_end":53}},{"value":"/ </pre>","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":24380,"byte_end":24390,"line_start":238,"line_end":238,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":24391,"byte_end":24394,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ [`set_global_default`]: ../fn.set_global_default.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":24395,"byte_end":24452,"line_start":240,"line_end":240,"column_start":1,"column_end":58}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":24453,"byte_end":24476,"line_start":241,"line_end":241,"column_start":1,"column_end":24}},{"value":"must_use = \"Dropping the guard unregisters the dispatcher.\"","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":24524,"byte_end":24586,"line_start":243,"line_end":243,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":152},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":25784,"byte_end":25802,"line_start":267,"line_end":267,"column_start":8,"column_end":26},"name":"set_global_default","qualname":"::dispatcher::set_global_default","value":"pub fn set_global_default(Dispatch) -> Result<(), SetGlobalDefaultError>","parent":null,"children":[],"decl_id":null,"docs":" Sets this dispatch as the global default for the duration of the entire program.\n Will be used as a fallback if no thread-local dispatch has been set in a thread\n (using `with_default`.)","sig":null,"attributes":[{"value":"/ Sets this dispatch as the global default for the duration of the entire program.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":24914,"byte_end":24998,"line_start":251,"line_end":251,"column_start":1,"column_end":85}},{"value":"/ Will be used as a fallback if no thread-local dispatch has been set in a thread","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":24999,"byte_end":25082,"line_start":252,"line_end":252,"column_start":1,"column_end":84}},{"value":"/ (using `with_default`.)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":25083,"byte_end":25110,"line_start":253,"line_end":253,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":25111,"byte_end":25114,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ Can only be set once; subsequent attempts to set the global default will fail.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":25115,"byte_end":25197,"line_start":255,"line_end":255,"column_start":1,"column_end":83}},{"value":"/ Returns `Err` if the global default has already been set.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":25198,"byte_end":25259,"line_start":256,"line_end":256,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":25260,"byte_end":25263,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\"><pre class=\"compile_fail\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":25264,"byte_end":25390,"line_start":258,"line_end":258,"column_start":1,"column_end":127}},{"value":"/     <strong>Warning</strong>: In general, libraries should <em>not</em> call","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":25391,"byte_end":25471,"line_start":259,"line_end":259,"column_start":1,"column_end":81}},{"value":"/     <code>set_global_default()</code>! Doing so will cause conflicts when","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":25472,"byte_end":25549,"line_start":260,"line_end":260,"column_start":1,"column_end":78}},{"value":"/     executables that depend on the library try to set the default later.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":25550,"byte_end":25626,"line_start":261,"line_end":261,"column_start":1,"column_end":77}},{"value":"/ </pre></div>","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":25627,"byte_end":25643,"line_start":262,"line_end":262,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":25644,"byte_end":25647,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/ [span]: ../span/index.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":25648,"byte_end":25678,"line_start":264,"line_end":264,"column_start":1,"column_end":31}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":25679,"byte_end":25734,"line_start":265,"line_end":265,"column_start":1,"column_end":56}},{"value":"/ [`Event`]: ../event/struct.Event.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":25735,"byte_end":25776,"line_start":266,"line_end":266,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":153},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":26717,"byte_end":26729,"line_start":296,"line_end":296,"column_start":8,"column_end":20},"name":"has_been_set","qualname":"::dispatcher::has_been_set","value":"pub fn has_been_set() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if a `tracing` dispatcher has ever been set.","sig":null,"attributes":[{"value":"/ Returns true if a `tracing` dispatcher has ever been set.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":26491,"byte_end":26552,"line_start":290,"line_end":290,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":26553,"byte_end":26556,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/ This may be used to completely elide trace points if tracing is not in use","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":26557,"byte_end":26635,"line_start":292,"line_end":292,"column_start":1,"column_end":79}},{"value":"/ at all or has yet to be initialized.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":26636,"byte_end":26676,"line_start":293,"line_end":293,"column_start":1,"column_end":41}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":26692,"byte_end":26709,"line_start":295,"line_end":295,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":824},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":26861,"byte_end":26882,"line_start":302,"line_end":302,"column_start":12,"column_end":33},"name":"SetGlobalDefaultError","qualname":"::dispatcher::SetGlobalDefaultError","value":"SetGlobalDefaultError {  }","parent":null,"children":[{"krate":0,"index":825}],"decl_id":null,"docs":" Returned if setting the global dispatcher fails.\n","sig":null,"attributes":[{"value":"/ Returned if setting the global dispatcher fails.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":26780,"byte_end":26832,"line_start":300,"line_end":300,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":157},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":27619,"byte_end":27630,"line_start":324,"line_end":324,"column_start":8,"column_end":19},"name":"get_default","qualname":"::dispatcher::get_default","value":"pub fn get_default<T, F>(F) -> T where F: FnMut(&Dispatch) -> T","parent":null,"children":[],"decl_id":null,"docs":" Executes a closure with a reference to this thread's current [dispatcher].","sig":null,"attributes":[{"value":"/ Executes a closure with a reference to this thread's current [dispatcher].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":27220,"byte_end":27298,"line_start":316,"line_end":316,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":27299,"byte_end":27302,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/ Note that calls to `get_default` should not be nested; if this function is","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":27303,"byte_end":27381,"line_start":318,"line_end":318,"column_start":1,"column_end":79}},{"value":"/ called while inside of another `get_default`, that closure will be provided","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":27382,"byte_end":27461,"line_start":319,"line_end":319,"column_start":1,"column_end":80}},{"value":"/ with `Dispatch::none` rather than the previously set dispatcher.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":27462,"byte_end":27530,"line_start":320,"line_end":320,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":27531,"byte_end":27534,"line_start":321,"line_end":321,"column_start":1,"column_end":4}},{"value":"/ [dispatcher]: ../dispatcher/struct.Dispatch.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":27535,"byte_end":27587,"line_start":322,"line_end":322,"column_start":1,"column_end":53}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":27588,"byte_end":27611,"line_start":323,"line_end":323,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":28377,"byte_end":28388,"line_start":349,"line_end":349,"column_start":8,"column_end":19},"name":"get_current","qualname":"::dispatcher::get_current","value":"pub fn get_current<T, impl FnOnce(&Dispatch) -> T: FnOnce(&Dispatch) ->\n                   T>(impl FnOnce(&Dispatch) -> T) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Executes a closure with a reference to this thread's current [dispatcher].","sig":null,"attributes":[{"value":"/ Executes a closure with a reference to this thread's current [dispatcher].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":27946,"byte_end":28024,"line_start":339,"line_end":339,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":28025,"byte_end":28028,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/ Note that calls to `get_default` should not be nested; if this function is","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":28029,"byte_end":28107,"line_start":341,"line_end":341,"column_start":1,"column_end":79}},{"value":"/ called while inside of another `get_default`, that closure will be provided","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":28108,"byte_end":28187,"line_start":342,"line_end":342,"column_start":1,"column_end":80}},{"value":"/ with `Dispatch::none` rather than the previously set dispatcher.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":28188,"byte_end":28256,"line_start":343,"line_end":343,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":28257,"byte_end":28260,"line_start":344,"line_end":344,"column_start":1,"column_end":4}},{"value":"/ [dispatcher]: ../dispatcher/struct.Dispatch.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":28261,"byte_end":28313,"line_start":345,"line_end":345,"column_start":1,"column_end":53}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":28314,"byte_end":28337,"line_start":346,"line_end":346,"column_start":1,"column_end":24}},{"value":"inline(never)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":28353,"byte_end":28369,"line_start":348,"line_end":348,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":29842,"byte_end":29846,"line_start":401,"line_end":401,"column_start":12,"column_end":16},"name":"none","qualname":"<Dispatch>::none","value":"pub fn none() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Dispatch` that discards events and spans.\n","sig":null,"attributes":[{"value":"/ Returns a new `Dispatch` that discards events and spans.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":29756,"byte_end":29816,"line_start":399,"line_end":399,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":29821,"byte_end":29830,"line_start":400,"line_end":400,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":30105,"byte_end":30108,"line_start":410,"line_end":410,"column_start":12,"column_end":15},"name":"new","qualname":"<Dispatch>::new","value":"pub fn new<S>(S) -> Self where S: Subscriber + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Dispatch` that forwards to the given [`Subscriber`].","sig":null,"attributes":[{"value":"/ Returns a `Dispatch` that forwards to the given [`Subscriber`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":29958,"byte_end":30025,"line_start":407,"line_end":407,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":30030,"byte_end":30033,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":30038,"byte_end":30093,"line_start":409,"line_end":409,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":30918,"byte_end":30935,"line_start":434,"line_end":434,"column_start":12,"column_end":29},"name":"register_callsite","qualname":"<Dispatch>::register_callsite","value":"pub fn register_callsite(&Self, &'static Metadata) -> subscriber::Interest","parent":null,"children":[],"decl_id":null,"docs":" Registers a new callsite with this subscriber, returning whether or not\n the subscriber is interested in being notified about the callsite.","sig":null,"attributes":[{"value":"/ Registers a new callsite with this subscriber, returning whether or not","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":30456,"byte_end":30531,"line_start":425,"line_end":425,"column_start":5,"column_end":80}},{"value":"/ the subscriber is interested in being notified about the callsite.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":30536,"byte_end":30606,"line_start":426,"line_end":426,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":30611,"byte_end":30614,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ This calls the [`register_callsite`] function on the [`Subscriber`]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":30619,"byte_end":30690,"line_start":428,"line_end":428,"column_start":5,"column_end":76}},{"value":"/ that this `Dispatch` forwards to.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":30695,"byte_end":30732,"line_start":429,"line_end":429,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":30737,"byte_end":30740,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":30745,"byte_end":30800,"line_start":431,"line_end":431,"column_start":5,"column_end":60}},{"value":"/ [`register_callsite`]: ../subscriber/trait.Subscriber.html#method.register_callsite","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":30805,"byte_end":30892,"line_start":432,"line_end":432,"column_start":5,"column_end":92}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":30897,"byte_end":30906,"line_start":433,"line_end":433,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":32213,"byte_end":32221,"line_start":464,"line_end":464,"column_start":12,"column_end":20},"name":"new_span","qualname":"<Dispatch>::new_span","value":"pub fn new_span(&Self, &span::Attributes) -> span::Id","parent":null,"children":[],"decl_id":null,"docs":" Record the construction of a new span, returning a new [ID] for the\n span being constructed.","sig":null,"attributes":[{"value":"/ Record the construction of a new span, returning a new [ID] for the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":31788,"byte_end":31859,"line_start":454,"line_end":454,"column_start":5,"column_end":76}},{"value":"/ span being constructed.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":31864,"byte_end":31891,"line_start":455,"line_end":455,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":31896,"byte_end":31899,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ This calls the [`new_span`] function on the [`Subscriber`] that this","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":31904,"byte_end":31976,"line_start":457,"line_end":457,"column_start":5,"column_end":77}},{"value":"/ `Dispatch` forwards to.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":31981,"byte_end":32008,"line_start":458,"line_end":458,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":32013,"byte_end":32016,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ [ID]: ../span/struct.Id.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":32021,"byte_end":32053,"line_start":460,"line_end":460,"column_start":5,"column_end":37}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":32058,"byte_end":32113,"line_start":461,"line_end":461,"column_start":5,"column_end":60}},{"value":"/ [`new_span`]: ../subscriber/trait.Subscriber.html#method.new_span","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":32118,"byte_end":32187,"line_start":462,"line_end":462,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":32192,"byte_end":32201,"line_start":463,"line_end":463,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":32638,"byte_end":32644,"line_start":476,"line_end":476,"column_start":12,"column_end":18},"name":"record","qualname":"<Dispatch>::record","value":"pub fn record(&Self, &span::Id, &span::Record)","parent":null,"children":[],"decl_id":null,"docs":" Record a set of values on a span.","sig":null,"attributes":[{"value":"/ Record a set of values on a span.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":32322,"byte_end":32359,"line_start":468,"line_end":468,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":32364,"byte_end":32367,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ This calls the [`record`] function on the [`Subscriber`] that this","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":32372,"byte_end":32442,"line_start":470,"line_end":470,"column_start":5,"column_end":75}},{"value":"/ `Dispatch` forwards to.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":32447,"byte_end":32474,"line_start":471,"line_end":471,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":32479,"byte_end":32482,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":32487,"byte_end":32542,"line_start":473,"line_end":473,"column_start":5,"column_end":60}},{"value":"/ [`record`]: ../subscriber/trait.Subscriber.html#method.record","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":32547,"byte_end":32612,"line_start":474,"line_end":474,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":32617,"byte_end":32626,"line_start":475,"line_end":475,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":33159,"byte_end":33178,"line_start":489,"line_end":489,"column_start":12,"column_end":31},"name":"record_follows_from","qualname":"<Dispatch>::record_follows_from","value":"pub fn record_follows_from(&Self, &span::Id, &span::Id)","parent":null,"children":[],"decl_id":null,"docs":" Adds an indication that `span` follows from the span with the id\n `follows`.","sig":null,"attributes":[{"value":"/ Adds an indication that `span` follows from the span with the id","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":32754,"byte_end":32822,"line_start":480,"line_end":480,"column_start":5,"column_end":73}},{"value":"/ `follows`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":32827,"byte_end":32841,"line_start":481,"line_end":481,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":32846,"byte_end":32849,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ This calls the [`record_follows_from`] function on the [`Subscriber`]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":32854,"byte_end":32927,"line_start":483,"line_end":483,"column_start":5,"column_end":78}},{"value":"/ that this `Dispatch` forwards to.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":32932,"byte_end":32969,"line_start":484,"line_end":484,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":32974,"byte_end":32977,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":32982,"byte_end":33037,"line_start":486,"line_end":486,"column_start":5,"column_end":60}},{"value":"/ [`record_follows_from`]: ../subscriber/trait.Subscriber.html#method.record_follows_from","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":33042,"byte_end":33133,"line_start":487,"line_end":487,"column_start":5,"column_end":96}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":33138,"byte_end":33147,"line_start":488,"line_end":488,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":33713,"byte_end":33720,"line_start":503,"line_end":503,"column_start":12,"column_end":19},"name":"enabled","qualname":"<Dispatch>::enabled","value":"pub fn enabled(&Self, &Metadata) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if a span with the specified [metadata] would be\n recorded.","sig":null,"attributes":[{"value":"/ Returns true if a span with the specified [metadata] would be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":33295,"byte_end":33360,"line_start":493,"line_end":493,"column_start":5,"column_end":70}},{"value":"/ recorded.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":33365,"byte_end":33378,"line_start":494,"line_end":494,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":33383,"byte_end":33386,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ This calls the [`enabled`] function on the [`Subscriber`] that this","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":33391,"byte_end":33462,"line_start":496,"line_end":496,"column_start":5,"column_end":76}},{"value":"/ `Dispatch` forwards to.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":33467,"byte_end":33494,"line_start":497,"line_end":497,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":33499,"byte_end":33502,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ [metadata]: ../metadata/struct.Metadata.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":33507,"byte_end":33555,"line_start":499,"line_end":499,"column_start":5,"column_end":53}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":33560,"byte_end":33615,"line_start":500,"line_end":500,"column_start":5,"column_end":60}},{"value":"/ [`enabled`]: ../subscriber/trait.Subscriber.html#method.enabled","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":33620,"byte_end":33687,"line_start":501,"line_end":501,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":33692,"byte_end":33701,"line_start":502,"line_end":502,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":34181,"byte_end":34186,"line_start":516,"line_end":516,"column_start":12,"column_end":17},"name":"event","qualname":"<Dispatch>::event","value":"pub fn event(&Self, &Event)","parent":null,"children":[],"decl_id":null,"docs":" Records that an [`Event`] has occurred.","sig":null,"attributes":[{"value":"/ Records that an [`Event`] has occurred.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":33816,"byte_end":33859,"line_start":507,"line_end":507,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":33864,"byte_end":33867,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ This calls the [`event`] function on the [`Subscriber`] that this","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":33872,"byte_end":33941,"line_start":509,"line_end":509,"column_start":5,"column_end":74}},{"value":"/ `Dispatch` forwards to.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":33946,"byte_end":33973,"line_start":510,"line_end":510,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":33978,"byte_end":33981,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ [`Event`]: ../event/struct.Event.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":33986,"byte_end":34027,"line_start":512,"line_end":512,"column_start":5,"column_end":46}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":34032,"byte_end":34087,"line_start":513,"line_end":513,"column_start":5,"column_end":60}},{"value":"/ [`event`]: ../subscriber/trait.Subscriber.html#method.event","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":34092,"byte_end":34155,"line_start":514,"line_end":514,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":34160,"byte_end":34169,"line_start":515,"line_end":515,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":34582,"byte_end":34587,"line_start":528,"line_end":528,"column_start":12,"column_end":17},"name":"enter","qualname":"<Dispatch>::enter","value":"pub fn enter(&Self, &span::Id)","parent":null,"children":[],"decl_id":null,"docs":" Records that a span has been can_enter.","sig":null,"attributes":[{"value":"/ Records that a span has been can_enter.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":34263,"byte_end":34306,"line_start":520,"line_end":520,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":34311,"byte_end":34314,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ This calls the [`enter`] function on the [`Subscriber`] that this","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":34319,"byte_end":34388,"line_start":522,"line_end":522,"column_start":5,"column_end":74}},{"value":"/ `Dispatch` forwards to.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":34393,"byte_end":34420,"line_start":523,"line_end":523,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":34425,"byte_end":34428,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":34433,"byte_end":34488,"line_start":525,"line_end":525,"column_start":5,"column_end":60}},{"value":"/ [`enter`]: ../subscriber/trait.Subscriber.html#method.enter","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":34493,"byte_end":34556,"line_start":526,"line_end":526,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":34561,"byte_end":34570,"line_start":527,"line_end":527,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":34975,"byte_end":34979,"line_start":540,"line_end":540,"column_start":12,"column_end":16},"name":"exit","qualname":"<Dispatch>::exit","value":"pub fn exit(&Self, &span::Id)","parent":null,"children":[],"decl_id":null,"docs":" Records that a span has been exited.","sig":null,"attributes":[{"value":"/ Records that a span has been exited.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":34662,"byte_end":34702,"line_start":532,"line_end":532,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":34707,"byte_end":34710,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ This calls the [`exit`] function on the [`Subscriber`] that this","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":34715,"byte_end":34783,"line_start":534,"line_end":534,"column_start":5,"column_end":73}},{"value":"/ `Dispatch` forwards to.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":34788,"byte_end":34815,"line_start":535,"line_end":535,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":34820,"byte_end":34823,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":34828,"byte_end":34883,"line_start":537,"line_end":537,"column_start":5,"column_end":60}},{"value":"/ [`exit`]: ../subscriber/trait.Subscriber.html#method.exit","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":34888,"byte_end":34949,"line_start":538,"line_end":538,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":34954,"byte_end":34963,"line_start":539,"line_end":539,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":35785,"byte_end":35795,"line_start":559,"line_end":559,"column_start":12,"column_end":22},"name":"clone_span","qualname":"<Dispatch>::clone_span","value":"pub fn clone_span(&Self, &span::Id) -> span::Id","parent":null,"children":[],"decl_id":null,"docs":" Notifies the subscriber that a [span ID] has been cloned.","sig":null,"attributes":[{"value":"/ Notifies the subscriber that a [span ID] has been cloned.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":35053,"byte_end":35114,"line_start":544,"line_end":544,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":35119,"byte_end":35122,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ This function must only be called with span IDs that were returned by","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":35127,"byte_end":35200,"line_start":546,"line_end":546,"column_start":5,"column_end":78}},{"value":"/ this `Dispatch`'s [`new_span`] function. The `tracing` crate upholds","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":35205,"byte_end":35277,"line_start":547,"line_end":547,"column_start":5,"column_end":77}},{"value":"/ this guarantee and any other libraries implementing instrumentation APIs","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":35282,"byte_end":35358,"line_start":548,"line_end":548,"column_start":5,"column_end":81}},{"value":"/ must as well.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":35363,"byte_end":35380,"line_start":549,"line_end":549,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":35385,"byte_end":35388,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ This calls the [`clone_span`] function on the `Subscriber` that this","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":35393,"byte_end":35465,"line_start":551,"line_end":551,"column_start":5,"column_end":77}},{"value":"/ `Dispatch` forwards to.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":35470,"byte_end":35497,"line_start":552,"line_end":552,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":35502,"byte_end":35505,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ [span ID]: ../span/struct.Id.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":35510,"byte_end":35547,"line_start":554,"line_end":554,"column_start":5,"column_end":42}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":35552,"byte_end":35607,"line_start":555,"line_end":555,"column_start":5,"column_end":60}},{"value":"/ [`clone_span`]: ../subscriber/trait.Subscriber.html#method.clone_span","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":35612,"byte_end":35685,"line_start":556,"line_end":556,"column_start":5,"column_end":78}},{"value":"/ [`new_span`]: ../subscriber/trait.Subscriber.html#method.new_span","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":35690,"byte_end":35759,"line_start":557,"line_end":557,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":35764,"byte_end":35773,"line_start":558,"line_end":558,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":37103,"byte_end":37112,"line_start":587,"line_end":587,"column_start":12,"column_end":21},"name":"drop_span","qualname":"<Dispatch>::drop_span","value":"pub fn drop_span(&Self, span::Id)","parent":null,"children":[],"decl_id":null,"docs":" Notifies the subscriber that a [span ID] has been dropped.","sig":null,"attributes":[{"value":"/ Notifies the subscriber that a [span ID] has been dropped.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":35882,"byte_end":35944,"line_start":563,"line_end":563,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":35949,"byte_end":35952,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ This function must only be called with span IDs that were returned by","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":35957,"byte_end":36030,"line_start":565,"line_end":565,"column_start":5,"column_end":78}},{"value":"/ this `Dispatch`'s [`new_span`] function. The `tracing` crate upholds","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":36035,"byte_end":36107,"line_start":566,"line_end":566,"column_start":5,"column_end":77}},{"value":"/ this guarantee and any other libraries implementing instrumentation APIs","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":36112,"byte_end":36188,"line_start":567,"line_end":567,"column_start":5,"column_end":81}},{"value":"/ must as well.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":36193,"byte_end":36210,"line_start":568,"line_end":568,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":36215,"byte_end":36218,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ This calls the [`drop_span`] function on the [`Subscriber`] that this","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":36223,"byte_end":36296,"line_start":570,"line_end":570,"column_start":5,"column_end":78}},{"value":"/ `Dispatch` forwards to.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":36301,"byte_end":36328,"line_start":571,"line_end":571,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":36333,"byte_end":36336,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ <pre class=\"compile_fail\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":36341,"byte_end":36412,"line_start":573,"line_end":573,"column_start":5,"column_end":76}},{"value":"/     <strong>Deprecated</strong>: The <a href=\"#method.try_close\"><code>","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":36417,"byte_end":36492,"line_start":574,"line_end":574,"column_start":5,"column_end":80}},{"value":"/     try_close</code></a> method is functionally identical, but returns","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":36497,"byte_end":36571,"line_start":575,"line_end":575,"column_start":5,"column_end":79}},{"value":"/     <code>true</code> if the span is now closed. It should be used","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":36576,"byte_end":36646,"line_start":576,"line_end":576,"column_start":5,"column_end":75}},{"value":"/     instead of this method.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":36651,"byte_end":36682,"line_start":577,"line_end":577,"column_start":5,"column_end":36}},{"value":"/ </pre>","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":36687,"byte_end":36697,"line_start":578,"line_end":578,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":36702,"byte_end":36705,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ [span ID]: ../span/struct.Id.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":36710,"byte_end":36747,"line_start":580,"line_end":580,"column_start":5,"column_end":42}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":36752,"byte_end":36807,"line_start":581,"line_end":581,"column_start":5,"column_end":60}},{"value":"/ [`drop_span`]: ../subscriber/trait.Subscriber.html#method.drop_span","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":36812,"byte_end":36883,"line_start":582,"line_end":582,"column_start":5,"column_end":76}},{"value":"/ [`new_span`]: ../subscriber/trait.Subscriber.html#method.new_span","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":36888,"byte_end":36957,"line_start":583,"line_end":583,"column_start":5,"column_end":74}},{"value":"/ [`try_close`]: #method.try_close","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":36962,"byte_end":36998,"line_start":584,"line_end":584,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":37003,"byte_end":37012,"line_start":585,"line_end":585,"column_start":5,"column_end":14}},{"value":"deprecated(since = \"0.1.2\", note = \"use `Dispatch::try_close` instead\")","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":37017,"byte_end":37091,"line_start":586,"line_end":586,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":38022,"byte_end":38031,"line_start":608,"line_end":608,"column_start":12,"column_end":21},"name":"try_close","qualname":"<Dispatch>::try_close","value":"pub fn try_close(&Self, span::Id) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Notifies the subscriber that a [span ID] has been dropped, and returns\n `true` if there are now 0 IDs referring to that span.","sig":null,"attributes":[{"value":"/ Notifies the subscriber that a [span ID] has been dropped, and returns","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":37215,"byte_end":37289,"line_start":592,"line_end":592,"column_start":5,"column_end":79}},{"value":"/ `true` if there are now 0 IDs referring to that span.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":37294,"byte_end":37351,"line_start":593,"line_end":593,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":37356,"byte_end":37359,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ This function must only be called with span IDs that were returned by","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":37364,"byte_end":37437,"line_start":595,"line_end":595,"column_start":5,"column_end":78}},{"value":"/ this `Dispatch`'s [`new_span`] function. The `tracing` crate upholds","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":37442,"byte_end":37514,"line_start":596,"line_end":596,"column_start":5,"column_end":77}},{"value":"/ this guarantee and any other libraries implementing instrumentation APIs","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":37519,"byte_end":37595,"line_start":597,"line_end":597,"column_start":5,"column_end":81}},{"value":"/ must as well.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":37600,"byte_end":37617,"line_start":598,"line_end":598,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":37622,"byte_end":37625,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ This calls the [`try_close`] function on the [`Subscriber`] that this","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":37630,"byte_end":37703,"line_start":600,"line_end":600,"column_start":5,"column_end":78}},{"value":"/  `Dispatch` forwards to.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":37708,"byte_end":37736,"line_start":601,"line_end":601,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":37741,"byte_end":37744,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ [span ID]: ../span/struct.Id.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":37749,"byte_end":37786,"line_start":603,"line_end":603,"column_start":5,"column_end":42}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":37791,"byte_end":37846,"line_start":604,"line_end":604,"column_start":5,"column_end":60}},{"value":"/ [`try_close`]: ../subscriber/trait.Subscriber.html#method.try_close","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":37851,"byte_end":37922,"line_start":605,"line_end":605,"column_start":5,"column_end":76}},{"value":"/ [`new_span`]: ../subscriber/trait.Subscriber.html#method.new_span","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":37927,"byte_end":37996,"line_start":606,"line_end":606,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":38001,"byte_end":38010,"line_start":607,"line_end":607,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":38407,"byte_end":38419,"line_start":619,"line_end":619,"column_start":12,"column_end":24},"name":"current_span","qualname":"<Dispatch>::current_span","value":"pub fn current_span(&Self) -> span::Current","parent":null,"children":[],"decl_id":null,"docs":" Returns a type representing this subscriber's view of the current span.","sig":null,"attributes":[{"value":"/ Returns a type representing this subscriber's view of the current span.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":38112,"byte_end":38187,"line_start":612,"line_end":612,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":38192,"byte_end":38195,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ This calls the [`current`] function on the `Subscriber` that this","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":38200,"byte_end":38269,"line_start":614,"line_end":614,"column_start":5,"column_end":74}},{"value":"/ `Dispatch` forwards to.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":38274,"byte_end":38301,"line_start":615,"line_end":615,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":38306,"byte_end":38309,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ [`current`]: ../subscriber/trait.Subscriber.html#method.current","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":38314,"byte_end":38381,"line_start":617,"line_end":617,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":38386,"byte_end":38395,"line_start":618,"line_end":618,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":38607,"byte_end":38609,"line_start":626,"line_end":626,"column_start":12,"column_end":14},"name":"is","qualname":"<Dispatch>::is","value":"pub fn is<T: Any>(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this `Dispatch` forwards to a `Subscriber` of type\n `T`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this `Dispatch` forwards to a `Subscriber` of type","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":38496,"byte_end":38568,"line_start":623,"line_end":623,"column_start":5,"column_end":77}},{"value":"/ `T`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":38573,"byte_end":38581,"line_start":624,"line_end":624,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":38586,"byte_end":38595,"line_start":625,"line_end":625,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":38852,"byte_end":38864,"line_start":633,"line_end":633,"column_start":12,"column_end":24},"name":"downcast_ref","qualname":"<Dispatch>::downcast_ref","value":"pub fn downcast_ref<T: Any>(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns some reference to the `Subscriber` this `Dispatch` forwards to\n if it is of type `T`, or `None` if it isn't.\n","sig":null,"attributes":[{"value":"/ Returns some reference to the `Subscriber` this `Dispatch` forwards to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":38699,"byte_end":38773,"line_start":630,"line_end":630,"column_start":5,"column_end":79}},{"value":"/ if it is of type `T`, or `None` if it isn't.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":38778,"byte_end":38826,"line_start":631,"line_end":631,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":38831,"byte_end":38840,"line_start":632,"line_end":632,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":218},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"event","qualname":"::event","value":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","parent":null,"children":[{"krate":0,"index":219},{"krate":0,"index":222},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":229},{"krate":0,"index":828},{"krate":0,"index":833},{"krate":0,"index":232}],"decl_id":null,"docs":" Events represent single points in time during the execution of a program.\n","sig":null,"attributes":[{"value":"/ Events represent single points in time during the execution of a program.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":46698,"byte_end":46775,"line_start":1,"line_end":1,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":828},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":47692,"byte_end":47697,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"name":"Event","qualname":"::event::Event","value":"Event {  }","parent":null,"children":[{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832}],"decl_id":null,"docs":" `Event`s represent single points in time where something occurred during the\n execution of a program.","sig":null,"attributes":[{"value":"/ `Event`s represent single points in time where something occurred during the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":46855,"byte_end":46935,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ execution of a program.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":46936,"byte_end":46963,"line_start":7,"line_end":7,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":46964,"byte_end":46967,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ An `Event` can be compared to a log record in unstructured logging, but with","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":46968,"byte_end":47048,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ two key differences:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":47049,"byte_end":47073,"line_start":10,"line_end":10,"column_start":1,"column_end":25}},{"value":"/ - `Event`s exist _within the context of a [span]_. Unlike log lines, they","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":47074,"byte_end":47151,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/   may be located within the trace tree, allowing visibility into the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":47152,"byte_end":47224,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/   _temporal_ context in which the event occurred, as well as the source","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":47225,"byte_end":47300,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/   code location.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":47301,"byte_end":47321,"line_start":14,"line_end":14,"column_start":1,"column_end":21}},{"value":"/ - Like spans, `Event`s have structured key-value data known as _[fields]_,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":47322,"byte_end":47400,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/   which may include textual message. In general, a majority of the data","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":47401,"byte_end":47476,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/   associated with an event should be in the event's fields rather than in","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":47477,"byte_end":47554,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/   the textual message, as the fields are more structured.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":47555,"byte_end":47616,"line_start":18,"line_end":18,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":47617,"byte_end":47620,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [span]: ../span","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":47621,"byte_end":47640,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ [fields]: ../field","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":47641,"byte_end":47663,"line_start":21,"line_end":21,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":47971,"byte_end":47979,"line_start":32,"line_end":32,"column_start":12,"column_end":20},"name":"dispatch","qualname":"<Event>::dispatch","value":"pub fn dispatch(&'static Metadata, &'a field::ValueSet)","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Event` with the specified metadata and set of values,\n and observes it with the current subscriber.\n","sig":null,"attributes":[{"value":"/ Constructs a new `Event` with the specified metadata and set of values,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":47831,"byte_end":47906,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/ and observes it with the current subscriber.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":47911,"byte_end":47959,"line_start":31,"line_end":31,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":48339,"byte_end":48342,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"new","qualname":"<Event>::new","value":"pub fn new(&'static Metadata, &'a field::ValueSet) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Event` in the current span, with the specified metadata\n and set of values.\n","sig":null,"attributes":[{"value":"/ Returns a new `Event` in the current span, with the specified metadata","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":48212,"byte_end":48286,"line_start":39,"line_end":39,"column_start":5,"column_end":79}},{"value":"/ and set of values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":48291,"byte_end":48313,"line_start":40,"line_end":40,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":48318,"byte_end":48327,"line_start":41,"line_end":41,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":48679,"byte_end":48691,"line_start":53,"line_end":53,"column_start":12,"column_end":24},"name":"new_child_of","qualname":"<Event>::new_child_of","value":"pub fn new_child_of<impl Into<Option<Id>>: Into<Option<Id>>>(impl Into<Option<Id>>,\n                                                             &'static Metadata,\n                                                             &'a field::ValueSet)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Event` as a child of the specified span, with the\n provided metadata and set of values.\n","sig":null,"attributes":[{"value":"/ Returns a new `Event` as a child of the specified span, with the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":48540,"byte_end":48608,"line_start":50,"line_end":50,"column_start":5,"column_end":73}},{"value":"/ provided metadata and set of values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":48613,"byte_end":48653,"line_start":51,"line_end":51,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":48658,"byte_end":48667,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":49229,"byte_end":49237,"line_start":71,"line_end":71,"column_start":12,"column_end":20},"name":"child_of","qualname":"<Event>::child_of","value":"pub fn child_of<impl Into<Option<Id>>: Into<Option<Id>>>(impl Into<Option<Id>>,\n                                                         &'static Metadata,\n                                                         &'a field::ValueSet)","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Event` with the specified metadata and set of values,\n and observes it with the current subscriber and an explicit parent.\n","sig":null,"attributes":[{"value":"/ Constructs a new `Event` with the specified metadata and set of values,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":49066,"byte_end":49141,"line_start":69,"line_end":69,"column_start":5,"column_end":80}},{"value":"/ and observes it with the current subscriber and an explicit parent.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":49146,"byte_end":49217,"line_start":70,"line_end":70,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":49698,"byte_end":49704,"line_start":86,"line_end":86,"column_start":12,"column_end":18},"name":"record","qualname":"<Event>::record","value":"pub fn record(&Self, &mut dyn field::Visit)","parent":null,"children":[],"decl_id":null,"docs":" Visits all the fields on this `Event` with the specified [visitor].","sig":null,"attributes":[{"value":"/ Visits all the fields on this `Event` with the specified [visitor].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":49548,"byte_end":49619,"line_start":82,"line_end":82,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":49624,"byte_end":49627,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ [visitor]: ../field/trait.Visit.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":49632,"byte_end":49672,"line_start":84,"line_end":84,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":49677,"byte_end":49686,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":49869,"byte_end":49875,"line_start":91,"line_end":91,"column_start":12,"column_end":18},"name":"fields","qualname":"<Event>::fields","value":"pub fn fields(&Self) -> field::Iter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the set of values on this `Event`.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the set of values on this `Event`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":49794,"byte_end":49857,"line_start":90,"line_end":90,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":50061,"byte_end":50069,"line_start":98,"line_end":98,"column_start":12,"column_end":20},"name":"metadata","qualname":"<Event>::metadata","value":"pub fn metadata(&Self) -> &'static Metadata","parent":null,"children":[],"decl_id":null,"docs":" Returns [metadata] describing this `Event`.","sig":null,"attributes":[{"value":"/ Returns [metadata] describing this `Event`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":49950,"byte_end":49997,"line_start":95,"line_end":95,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":50002,"byte_end":50005,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ [metadata]: ../struct.Metadata.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":50010,"byte_end":50049,"line_start":97,"line_end":97,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":50205,"byte_end":50212,"line_start":103,"line_end":103,"column_start":12,"column_end":19},"name":"is_root","qualname":"<Event>::is_root","value":"pub fn is_root(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the new event should be a root.\n","sig":null,"attributes":[{"value":"/ Returns true if the new event should be a root.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":50142,"byte_end":50193,"line_start":102,"line_end":102,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":50670,"byte_end":50683,"line_start":114,"line_end":114,"column_start":12,"column_end":25},"name":"is_contextual","qualname":"<Event>::is_contextual","value":"pub fn is_contextual(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the new event's parent should be determined based on the\n current context.","sig":null,"attributes":[{"value":"/ Returns true if the new event's parent should be determined based on the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":50285,"byte_end":50361,"line_start":107,"line_end":107,"column_start":5,"column_end":81}},{"value":"/ current context.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":50366,"byte_end":50386,"line_start":108,"line_end":108,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":50391,"byte_end":50394,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ If this is true and the current thread is currently inside a span, then","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":50399,"byte_end":50474,"line_start":110,"line_end":110,"column_start":5,"column_end":80}},{"value":"/ that span should be the new event's parent. Otherwise, if the current","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":50479,"byte_end":50552,"line_start":111,"line_end":111,"column_start":5,"column_end":78}},{"value":"/ thread is _not_ inside a span, then the new event will be the root of its","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":50557,"byte_end":50634,"line_start":112,"line_end":112,"column_start":5,"column_end":82}},{"value":"/ own trace tree.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":50639,"byte_end":50658,"line_start":113,"line_end":113,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":50958,"byte_end":50964,"line_start":122,"line_end":122,"column_start":12,"column_end":18},"name":"parent","qualname":"<Event>::parent","value":"pub fn parent(&Self) -> Option<&Id>","parent":null,"children":[],"decl_id":null,"docs":" Returns the new event's explicitly-specified parent, if there is one.","sig":null,"attributes":[{"value":"/ Returns the new event's explicitly-specified parent, if there is one.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":50759,"byte_end":50832,"line_start":118,"line_end":118,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":50837,"byte_end":50840,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Otherwise (if the new event is a root or is a child of the current span),","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":50845,"byte_end":50922,"line_start":120,"line_end":120,"column_start":5,"column_end":82}},{"value":"/ returns `None`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":50927,"byte_end":50946,"line_start":121,"line_end":121,"column_start":5,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":248},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"field","qualname":"::field","value":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","parent":null,"children":[{"krate":0,"index":249},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":256},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":263},{"krate":0,"index":266},{"krate":0,"index":269},{"krate":0,"index":272},{"krate":0,"index":836},{"krate":0,"index":839},{"krate":0,"index":841},{"krate":0,"index":843},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":275},{"krate":0,"index":278},{"krate":0,"index":851},{"krate":0,"index":854},{"krate":0,"index":282},{"krate":0,"index":290},{"krate":0,"index":856},{"krate":0,"index":860},{"krate":0,"index":863},{"krate":0,"index":867},{"krate":0,"index":292},{"krate":0,"index":294},{"krate":0,"index":296},{"krate":0,"index":300},{"krate":0,"index":304},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":912},{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":919},{"krate":0,"index":920},{"krate":0,"index":921},{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":311},{"krate":0,"index":313},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":322},{"krate":0,"index":325},{"krate":0,"index":329},{"krate":0,"index":332},{"krate":0,"index":336},{"krate":0,"index":338},{"krate":0,"index":341},{"krate":0,"index":351},{"krate":0,"index":353},{"krate":0,"index":355},{"krate":0,"index":358},{"krate":0,"index":361},{"krate":0,"index":364},{"krate":0,"index":366},{"krate":0,"index":369},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":375},{"krate":0,"index":377},{"krate":0,"index":380},{"krate":0,"index":383},{"krate":0,"index":385},{"krate":0,"index":387},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":393},{"krate":0,"index":395},{"krate":0,"index":409},{"krate":0,"index":414},{"krate":0,"index":416},{"krate":0,"index":418},{"krate":0,"index":421},{"krate":0,"index":430},{"krate":0,"index":434},{"krate":0,"index":438},{"krate":0,"index":442},{"krate":0,"index":972},{"krate":0,"index":975},{"krate":0,"index":978},{"krate":0,"index":981},{"krate":0,"index":984},{"krate":0,"index":987},{"krate":0,"index":990},{"krate":0,"index":993},{"krate":0,"index":996},{"krate":0,"index":999},{"krate":0,"index":1002},{"krate":0,"index":1005},{"krate":0,"index":1008},{"krate":0,"index":1011},{"krate":0,"index":1014},{"krate":0,"index":1017},{"krate":0,"index":1020},{"krate":0,"index":1023},{"krate":0,"index":1026},{"krate":0,"index":1029},{"krate":0,"index":1032},{"krate":0,"index":1035},{"krate":0,"index":1038},{"krate":0,"index":1041},{"krate":0,"index":1044},{"krate":0,"index":1047},{"krate":0,"index":1050},{"krate":0,"index":1053},{"krate":0,"index":1056},{"krate":0,"index":1059},{"krate":0,"index":1062},{"krate":0,"index":1065},{"krate":0,"index":1068}],"decl_id":null,"docs":" `Span` and `Event` key-value data.","sig":null,"attributes":[{"value":"/ `Span` and `Event` key-value data.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":51107,"byte_end":51145,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":51146,"byte_end":51149,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Spans and events may be annotated with key-value data, referred to as known","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":51150,"byte_end":51229,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"/ as _fields_. These fields consist of a mapping from a key (corresponding to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":51230,"byte_end":51309,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ a `&str` but represented internally as an array index) to a [`Value`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":51310,"byte_end":51384,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":51385,"byte_end":51388,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # `Value`s and `Subscriber`s","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":51389,"byte_end":51421,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":51422,"byte_end":51425,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ `Subscriber`s consume `Value`s as fields attached to [span]s or [`Event`]s.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":51426,"byte_end":51505,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ The set of field keys on a given span or is defined on its [`Metadata`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":51506,"byte_end":51582,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ When a span is created, it provides [`Attributes`] to the `Subscriber`'s","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":51583,"byte_end":51659,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/ [`new_span`] method, containing any fields whose values were provided when","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":51660,"byte_end":51738,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ the span was created; and may call the `Subscriber`'s [`record`] method","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":51739,"byte_end":51814,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/ with additional [`Record`]s if values are added for more of its fields.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":51815,"byte_end":51890,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/ Similarly, the [`Event`] type passed to the subscriber's [`event`] method","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":51891,"byte_end":51968,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ will contain any fields attached to each event.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":51969,"byte_end":52020,"line_start":16,"line_end":16,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":52021,"byte_end":52024,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ `tracing` represents values as either one of a set of Rust primitives","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":52025,"byte_end":52098,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ (`i64`, `u64`, `f64`, `bool`, and `&str`) or using a `fmt::Display` or","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":52099,"byte_end":52173,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ `fmt::Debug` implementation. `Subscriber`s are provided these primitive","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":52174,"byte_end":52249,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ value types as `dyn Value` trait objects.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":52250,"byte_end":52295,"line_start":21,"line_end":21,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":52296,"byte_end":52299,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ These trait objects can be formatted using `fmt::Debug`, but may also be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":52300,"byte_end":52376,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/ recorded as typed data by calling the [`Value::record`] method on these","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":52377,"byte_end":52452,"line_start":24,"line_end":24,"column_start":1,"column_end":76}},{"value":"/ trait objects with a _visitor_ implementing the [`Visit`] trait. This trait","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":52453,"byte_end":52532,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/ represents the behavior used to record values of various types. For example,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":52533,"byte_end":52613,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ an implementation of `Visit` might record integers by incrementing counters","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":52614,"byte_end":52693,"line_start":27,"line_end":27,"column_start":1,"column_end":80}},{"value":"/ for their field names rather than printing them.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":52694,"byte_end":52746,"line_start":28,"line_end":28,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":52747,"byte_end":52750,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":52751,"byte_end":52754,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Using `valuable`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":52755,"byte_end":52777,"line_start":31,"line_end":31,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":52778,"byte_end":52781,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ `tracing`'s [`Value`] trait is intentionally minimalist: it supports only a small","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":52782,"byte_end":52867,"line_start":33,"line_end":33,"column_start":1,"column_end":86}},{"value":"/ number of Rust primitives as typed values, and only permits recording","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":52868,"byte_end":52941,"line_start":34,"line_end":34,"column_start":1,"column_end":74}},{"value":"/ user-defined types with their [`fmt::Debug`] or [`fmt::Display`]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":52942,"byte_end":53010,"line_start":35,"line_end":35,"column_start":1,"column_end":69}},{"value":"/ implementations. However, there are some cases where it may be useful to record","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":53011,"byte_end":53094,"line_start":36,"line_end":36,"column_start":1,"column_end":84}},{"value":"/ nested values (such as arrays, `Vec`s, or `HashMap`s containing values), or","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":53095,"byte_end":53174,"line_start":37,"line_end":37,"column_start":1,"column_end":80}},{"value":"/ user-defined `struct` and `enum` types without having to format them as","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":53175,"byte_end":53250,"line_start":38,"line_end":38,"column_start":1,"column_end":76}},{"value":"/ unstructured text.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":53251,"byte_end":53273,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":53274,"byte_end":53277,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ To address `Value`'s limitations, `tracing` offers experimental support for","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":53278,"byte_end":53357,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/ the [`valuable`] crate, which provides object-safe inspection of structured","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":53358,"byte_end":53437,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ values. User-defined types can implement the [`valuable::Valuable`] trait,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":53438,"byte_end":53516,"line_start":43,"line_end":43,"column_start":1,"column_end":79}},{"value":"/ and be recorded as a `tracing` field by calling their [`as_value`] method.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":53517,"byte_end":53595,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/ If the [`Subscriber`] also supports the `valuable` crate, it can","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":53596,"byte_end":53664,"line_start":45,"line_end":45,"column_start":1,"column_end":69}},{"value":"/ then visit those types fields as structured values using `valuable`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":53665,"byte_end":53737,"line_start":46,"line_end":46,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":53738,"byte_end":53741,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":53742,"byte_end":53807,"line_start":48,"line_end":48,"column_start":1,"column_end":66}},{"value":"/     <strong>Note</strong>: <code>valuable</code> support is an","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":53808,"byte_end":53874,"line_start":49,"line_end":49,"column_start":1,"column_end":67}},{"value":"/     <a href = \"../index.html#unstable-features\">unstable feature</a>. See","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":53875,"byte_end":53952,"line_start":50,"line_end":50,"column_start":1,"column_end":78}},{"value":"/     the documentation on unstable features for details on how to enable it.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":53953,"byte_end":54032,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ </pre>","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":54033,"byte_end":54043,"line_start":52,"line_end":52,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":54044,"byte_end":54047,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":54048,"byte_end":54064,"line_start":54,"line_end":54,"column_start":1,"column_end":17}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":54065,"byte_end":54078,"line_start":55,"line_end":55,"column_start":1,"column_end":14}},{"value":"/ // Derive `Valuable` for our types:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":54079,"byte_end":54118,"line_start":56,"line_end":56,"column_start":1,"column_end":40}},{"value":"/ use valuable::Valuable;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":54119,"byte_end":54146,"line_start":57,"line_end":57,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":54147,"byte_end":54150,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ #[derive(Clone, Debug, Valuable)]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":54151,"byte_end":54188,"line_start":59,"line_end":59,"column_start":1,"column_end":38}},{"value":"/ struct User {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":54189,"byte_end":54206,"line_start":60,"line_end":60,"column_start":1,"column_end":18}},{"value":"/     name: String,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":54207,"byte_end":54228,"line_start":61,"line_end":61,"column_start":1,"column_end":22}},{"value":"/     age: u32,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":54229,"byte_end":54246,"line_start":62,"line_end":62,"column_start":1,"column_end":18}},{"value":"/     address: Address,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":54247,"byte_end":54272,"line_start":63,"line_end":63,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":54273,"byte_end":54278,"line_start":64,"line_end":64,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":54279,"byte_end":54282,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ #[derive(Clone, Debug, Valuable)]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":54283,"byte_end":54320,"line_start":66,"line_end":66,"column_start":1,"column_end":38}},{"value":"/ struct Address {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":54321,"byte_end":54341,"line_start":67,"line_end":67,"column_start":1,"column_end":21}},{"value":"/     country: String,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":54342,"byte_end":54366,"line_start":68,"line_end":68,"column_start":1,"column_end":25}},{"value":"/     city: String,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":54367,"byte_end":54388,"line_start":69,"line_end":69,"column_start":1,"column_end":22}},{"value":"/     street: String,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":54389,"byte_end":54412,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":54413,"byte_end":54418,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":54419,"byte_end":54422,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ let user = User {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":54423,"byte_end":54444,"line_start":73,"line_end":73,"column_start":1,"column_end":22}},{"value":"/     name: \"Arwen Undomiel\".to_string(),","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":54445,"byte_end":54488,"line_start":74,"line_end":74,"column_start":1,"column_end":44}},{"value":"/     age: 3000,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":54489,"byte_end":54507,"line_start":75,"line_end":75,"column_start":1,"column_end":19}},{"value":"/     address: Address {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":54508,"byte_end":54534,"line_start":76,"line_end":76,"column_start":1,"column_end":27}},{"value":"/         country: \"Middle Earth\".to_string(),","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":54535,"byte_end":54583,"line_start":77,"line_end":77,"column_start":1,"column_end":49}},{"value":"/         city: \"Rivendell\".to_string(),","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":54584,"byte_end":54626,"line_start":78,"line_end":78,"column_start":1,"column_end":43}},{"value":"/         street: \"leafy lane\".to_string(),","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":54627,"byte_end":54672,"line_start":79,"line_end":79,"column_start":1,"column_end":46}},{"value":"/     },","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":54673,"byte_end":54683,"line_start":80,"line_end":80,"column_start":1,"column_end":11}},{"value":"/ };","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":54684,"byte_end":54690,"line_start":81,"line_end":81,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":54691,"byte_end":54694,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ // Recording `user` as a `valuable::Value` will allow the `tracing` subscriber","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":54695,"byte_end":54777,"line_start":83,"line_end":83,"column_start":1,"column_end":83}},{"value":"/ // to traverse its fields as a nested, typed structure:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":54778,"byte_end":54837,"line_start":84,"line_end":84,"column_start":1,"column_end":60}},{"value":"/ tracing::info!(current_user = user.as_value());","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":54838,"byte_end":54889,"line_start":85,"line_end":85,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":54890,"byte_end":54897,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":54898,"byte_end":54901,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Alternatively, the [`valuable()`] function may be used to convert a type","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":54902,"byte_end":54978,"line_start":88,"line_end":88,"column_start":1,"column_end":77}},{"value":"/ implementing [`Valuable`] into a `tracing` field value.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":54979,"byte_end":55038,"line_start":89,"line_end":89,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":55039,"byte_end":55042,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ When the `valuable` feature is enabled, the [`Visit`] trait will include an","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":55043,"byte_end":55122,"line_start":91,"line_end":91,"column_start":1,"column_end":80}},{"value":"/ optional [`record_value`] method. `Visit` implementations that wish to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":55123,"byte_end":55197,"line_start":92,"line_end":92,"column_start":1,"column_end":75}},{"value":"/ record `valuable` values can implement this method with custom behavior.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":55198,"byte_end":55274,"line_start":93,"line_end":93,"column_start":1,"column_end":77}},{"value":"/ If a visitor does not implement `record_value`, the [`valuable::Value`] will","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":55275,"byte_end":55355,"line_start":94,"line_end":94,"column_start":1,"column_end":81}},{"value":"/ be forwarded to the visitor's [`record_debug`] method.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":55356,"byte_end":55414,"line_start":95,"line_end":95,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":55415,"byte_end":55418,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ [`valuable`]: https://crates.io/crates/valuable","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":55419,"byte_end":55470,"line_start":97,"line_end":97,"column_start":1,"column_end":52}},{"value":"/ [`as_value`]: valuable::Valuable::as_value","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":55471,"byte_end":55517,"line_start":98,"line_end":98,"column_start":1,"column_end":47}},{"value":"/ [`Subscriber`]: crate::Subscriber","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":55518,"byte_end":55555,"line_start":99,"line_end":99,"column_start":1,"column_end":38}},{"value":"/ [`record_value`]: Visit::record_value","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":55556,"byte_end":55597,"line_start":100,"line_end":100,"column_start":1,"column_end":42}},{"value":"/ [`record_debug`]: Visit::record_debug","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":55598,"byte_end":55639,"line_start":101,"line_end":101,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":55640,"byte_end":55643,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ [`Value`]: trait.Value.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":55644,"byte_end":55675,"line_start":103,"line_end":103,"column_start":1,"column_end":32}},{"value":"/ [span]: ../span/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":55676,"byte_end":55696,"line_start":104,"line_end":104,"column_start":1,"column_end":21}},{"value":"/ [`Event`]: ../event/struct.Event.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":55697,"byte_end":55738,"line_start":105,"line_end":105,"column_start":1,"column_end":42}},{"value":"/ [`Metadata`]: ../metadata/struct.Metadata.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":55739,"byte_end":55789,"line_start":106,"line_end":106,"column_start":1,"column_end":51}},{"value":"/ [`Attributes`]:  ../span/struct.Attributes.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":55790,"byte_end":55841,"line_start":107,"line_end":107,"column_start":1,"column_end":52}},{"value":"/ [`Record`]: ../span/struct.Record.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":55842,"byte_end":55884,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/ [`new_span`]: ../subscriber/trait.Subscriber.html#method.new_span","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":55885,"byte_end":55954,"line_start":109,"line_end":109,"column_start":1,"column_end":70}},{"value":"/ [`record`]: ../subscriber/trait.Subscriber.html#method.record","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":55955,"byte_end":56020,"line_start":110,"line_end":110,"column_start":1,"column_end":66}},{"value":"/ [`event`]:  ../subscriber/trait.Subscriber.html#method.event","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":56021,"byte_end":56085,"line_start":111,"line_end":111,"column_start":1,"column_end":65}},{"value":"/ [`Value::record`]: trait.Value.html#method.record","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":56086,"byte_end":56139,"line_start":112,"line_end":112,"column_start":1,"column_end":54}},{"value":"/ [`Visit`]: trait.Visit.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":56140,"byte_end":56171,"line_start":113,"line_end":113,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":836},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":56811,"byte_end":56816,"line_start":134,"line_end":134,"column_start":12,"column_end":17},"name":"Field","qualname":"::field::Field","value":"Field {  }","parent":null,"children":[{"krate":0,"index":837},{"krate":0,"index":838}],"decl_id":null,"docs":" An opaque key allowing _O_(1) access to a field in a `Span`'s key-value\n data.","sig":null,"attributes":[{"value":"/ An opaque key allowing _O_(1) access to a field in a `Span`'s key-value","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":56328,"byte_end":56403,"line_start":125,"line_end":125,"column_start":1,"column_end":76}},{"value":"/ data.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":56404,"byte_end":56413,"line_start":126,"line_end":126,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":56414,"byte_end":56417,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ As keys are defined by the _metadata_ of a span, rather than by an","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":56418,"byte_end":56488,"line_start":128,"line_end":128,"column_start":1,"column_end":71}},{"value":"/ individual instance of a span, a key may be used to access the same field","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":56489,"byte_end":56566,"line_start":129,"line_end":129,"column_start":1,"column_end":78}},{"value":"/ across all instances of a given span with the same metadata. Thus, when a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":56567,"byte_end":56644,"line_start":130,"line_end":130,"column_start":1,"column_end":78}},{"value":"/ subscriber observes a new span, it need only access a field by name _once_,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":56645,"byte_end":56724,"line_start":131,"line_end":131,"column_start":1,"column_end":80}},{"value":"/ and use the key for that name for all other accesses.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":56725,"byte_end":56782,"line_start":132,"line_end":132,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":841},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":57107,"byte_end":57112,"line_start":146,"line_end":146,"column_start":12,"column_end":17},"name":"Empty","qualname":"::field::Empty","value":"","parent":null,"children":[],"decl_id":null,"docs":" An empty field.","sig":null,"attributes":[{"value":"/ An empty field.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":56858,"byte_end":56877,"line_start":139,"line_end":139,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":56878,"byte_end":56881,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ This can be used to indicate that the value of a field is not currently","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":56882,"byte_end":56957,"line_start":141,"line_end":141,"column_start":1,"column_end":76}},{"value":"/ present but will be recorded later.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":56958,"byte_end":56997,"line_start":142,"line_end":142,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":56998,"byte_end":57001,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ When a field's value is `Empty`. it will not be recorded.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":57002,"byte_end":57063,"line_start":144,"line_end":144,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":275},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":57170,"byte_end":57178,"line_start":149,"line_end":149,"column_start":12,"column_end":20},"name":"FieldSet","qualname":"::field::FieldSet","value":"FieldSet {  }","parent":null,"children":[{"krate":0,"index":276},{"krate":0,"index":277}],"decl_id":null,"docs":" Describes the fields present on a span.\n","sig":null,"attributes":[{"value":"/ Describes the fields present on a span.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":57115,"byte_end":57158,"line_start":148,"line_end":148,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":278},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":57423,"byte_end":57431,"line_start":157,"line_end":157,"column_start":12,"column_end":20},"name":"ValueSet","qualname":"::field::ValueSet","value":"ValueSet {  }","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":281}],"decl_id":null,"docs":" A set of fields and values for a span.\n","sig":null,"attributes":[{"value":"/ A set of fields and values for a span.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":57369,"byte_end":57411,"line_start":156,"line_end":156,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":851},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":57594,"byte_end":57598,"line_start":164,"line_end":164,"column_start":12,"column_end":16},"name":"Iter","qualname":"::field::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":852},{"krate":0,"index":853}],"decl_id":null,"docs":" An iterator over a set of fields.\n","sig":null,"attributes":[{"value":"/ An iterator over a set of fields.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":57528,"byte_end":57565,"line_start":162,"line_end":162,"column_start":1,"column_end":38}}]},{"kind":"Trait","id":{"krate":0,"index":282},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":61467,"byte_end":61472,"line_start":259,"line_end":259,"column_start":11,"column_end":16},"name":"Visit","qualname":"::field::Visit","value":"Visit","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289}],"decl_id":null,"docs":" Visits typed values.","sig":null,"attributes":[{"value":"/ Visits typed values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":57650,"byte_end":57674,"line_start":169,"line_end":169,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":57675,"byte_end":57678,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ An instance of `Visit` (\"a visitor\") represents the logic necessary to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":57679,"byte_end":57753,"line_start":171,"line_end":171,"column_start":1,"column_end":75}},{"value":"/ record field values of various types. When an implementor of [`Value`] is","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":57754,"byte_end":57831,"line_start":172,"line_end":172,"column_start":1,"column_end":78}},{"value":"/ [recorded], it calls the appropriate method on the provided visitor to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":57832,"byte_end":57906,"line_start":173,"line_end":173,"column_start":1,"column_end":75}},{"value":"/ indicate the type that value should be recorded as.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":57907,"byte_end":57962,"line_start":174,"line_end":174,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":57963,"byte_end":57966,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ When a [`Subscriber`] implementation [records an `Event`] or a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":57967,"byte_end":58033,"line_start":176,"line_end":176,"column_start":1,"column_end":67}},{"value":"/ [set of `Value`s added to a `Span`], it can pass an `&mut Visit` to the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":58034,"byte_end":58109,"line_start":177,"line_end":177,"column_start":1,"column_end":76}},{"value":"/ `record` method on the provided [`ValueSet`] or [`Event`]. This visitor","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":58110,"byte_end":58185,"line_start":178,"line_end":178,"column_start":1,"column_end":76}},{"value":"/ will then be used to record all the field-value pairs present on that","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":58186,"byte_end":58259,"line_start":179,"line_end":179,"column_start":1,"column_end":74}},{"value":"/ `Event` or `ValueSet`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":58260,"byte_end":58286,"line_start":180,"line_end":180,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":58287,"byte_end":58290,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":58291,"byte_end":58305,"line_start":182,"line_end":182,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":58306,"byte_end":58309,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ A simple visitor that writes to a string might be implemented like so:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":58310,"byte_end":58384,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":58385,"byte_end":58392,"line_start":185,"line_end":185,"column_start":1,"column_end":8}},{"value":"/ # extern crate tracing_core as tracing;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":58393,"byte_end":58436,"line_start":186,"line_end":186,"column_start":1,"column_end":44}},{"value":"/ use std::fmt::{self, Write};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":58437,"byte_end":58469,"line_start":187,"line_end":187,"column_start":1,"column_end":33}},{"value":"/ use tracing::field::{Value, Visit, Field};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":58470,"byte_end":58516,"line_start":188,"line_end":188,"column_start":1,"column_end":47}},{"value":"/ pub struct StringVisitor<'a> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":58517,"byte_end":58551,"line_start":189,"line_end":189,"column_start":1,"column_end":35}},{"value":"/     string: &'a mut String,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":58552,"byte_end":58583,"line_start":190,"line_end":190,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":58584,"byte_end":58589,"line_start":191,"line_end":191,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":58590,"byte_end":58593,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ impl<'a> Visit for StringVisitor<'a> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":58594,"byte_end":58636,"line_start":193,"line_end":193,"column_start":1,"column_end":43}},{"value":"/     fn record_debug(&mut self, field: &Field, value: &dyn fmt::Debug) {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":58637,"byte_end":58712,"line_start":194,"line_end":194,"column_start":1,"column_end":76}},{"value":"/         write!(self.string, \"{} = {:?}; \", field.name(), value).unwrap();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":58713,"byte_end":58790,"line_start":195,"line_end":195,"column_start":1,"column_end":78}},{"value":"/     }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":58791,"byte_end":58800,"line_start":196,"line_end":196,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":58801,"byte_end":58806,"line_start":197,"line_end":197,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":58807,"byte_end":58814,"line_start":198,"line_end":198,"column_start":1,"column_end":8}},{"value":"/ This visitor will format each recorded value using `fmt::Debug`, and","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":58815,"byte_end":58887,"line_start":199,"line_end":199,"column_start":1,"column_end":73}},{"value":"/ append the field name and formatted value to the provided string,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":58888,"byte_end":58957,"line_start":200,"line_end":200,"column_start":1,"column_end":70}},{"value":"/ regardless of the type of the recorded value. When all the values have","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":58958,"byte_end":59032,"line_start":201,"line_end":201,"column_start":1,"column_end":75}},{"value":"/ been recorded, the `StringVisitor` may be dropped, allowing the string","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":59033,"byte_end":59107,"line_start":202,"line_end":202,"column_start":1,"column_end":75}},{"value":"/ to be printed or stored in some other data structure.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":59108,"byte_end":59165,"line_start":203,"line_end":203,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":59166,"byte_end":59169,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ The `Visit` trait provides default implementations for `record_i64`,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":59170,"byte_end":59242,"line_start":205,"line_end":205,"column_start":1,"column_end":73}},{"value":"/ `record_u64`, `record_bool`, `record_str`, and `record_error`, which simply","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":59243,"byte_end":59322,"line_start":206,"line_end":206,"column_start":1,"column_end":80}},{"value":"/ forward the recorded value to `record_debug`. Thus, `record_debug` is the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":59323,"byte_end":59400,"line_start":207,"line_end":207,"column_start":1,"column_end":78}},{"value":"/ only method which a `Visit` implementation *must* implement. However,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":59401,"byte_end":59474,"line_start":208,"line_end":208,"column_start":1,"column_end":74}},{"value":"/ visitors may override the default implementations of these functions in","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":59475,"byte_end":59550,"line_start":209,"line_end":209,"column_start":1,"column_end":76}},{"value":"/ order to implement type-specific behavior.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":59551,"byte_end":59597,"line_start":210,"line_end":210,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":59598,"byte_end":59601,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ Additionally, when a visitor receives a value of a type it does not care","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":59602,"byte_end":59678,"line_start":212,"line_end":212,"column_start":1,"column_end":77}},{"value":"/ about, it is free to ignore those values completely. For example, a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":59679,"byte_end":59750,"line_start":213,"line_end":213,"column_start":1,"column_end":72}},{"value":"/ visitor which only records numeric data might look like this:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":59751,"byte_end":59816,"line_start":214,"line_end":214,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":59817,"byte_end":59820,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":59821,"byte_end":59828,"line_start":216,"line_end":216,"column_start":1,"column_end":8}},{"value":"/ # extern crate tracing_core as tracing;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":59829,"byte_end":59872,"line_start":217,"line_end":217,"column_start":1,"column_end":44}},{"value":"/ # use std::fmt::{self, Write};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":59873,"byte_end":59907,"line_start":218,"line_end":218,"column_start":1,"column_end":35}},{"value":"/ # use tracing::field::{Value, Visit, Field};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":59908,"byte_end":59956,"line_start":219,"line_end":219,"column_start":1,"column_end":49}},{"value":"/ pub struct SumVisitor {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":59957,"byte_end":59984,"line_start":220,"line_end":220,"column_start":1,"column_end":28}},{"value":"/     sum: i64,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":59985,"byte_end":60002,"line_start":221,"line_end":221,"column_start":1,"column_end":18}},{"value":"/ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":60003,"byte_end":60008,"line_start":222,"line_end":222,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":60009,"byte_end":60012,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ impl Visit for SumVisitor {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":60013,"byte_end":60044,"line_start":224,"line_end":224,"column_start":1,"column_end":32}},{"value":"/     fn record_i64(&mut self, _field: &Field, value: i64) {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":60045,"byte_end":60107,"line_start":225,"line_end":225,"column_start":1,"column_end":63}},{"value":"/        self.sum += value;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":60108,"byte_end":60137,"line_start":226,"line_end":226,"column_start":1,"column_end":30}},{"value":"/     }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":60138,"byte_end":60147,"line_start":227,"line_end":227,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":60148,"byte_end":60151,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/     fn record_u64(&mut self, _field: &Field, value: u64) {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":60152,"byte_end":60214,"line_start":229,"line_end":229,"column_start":1,"column_end":63}},{"value":"/         self.sum += value as i64;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":60215,"byte_end":60252,"line_start":230,"line_end":230,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":60253,"byte_end":60262,"line_start":231,"line_end":231,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":60263,"byte_end":60266,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/     fn record_debug(&mut self, _field: &Field, _value: &fmt::Debug) {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":60267,"byte_end":60340,"line_start":233,"line_end":233,"column_start":1,"column_end":74}},{"value":"/         // Do nothing","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":60341,"byte_end":60366,"line_start":234,"line_end":234,"column_start":1,"column_end":26}},{"value":"/     }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":60367,"byte_end":60376,"line_start":235,"line_end":235,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":60377,"byte_end":60382,"line_start":236,"line_end":236,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":60383,"byte_end":60390,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":60391,"byte_end":60394,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ This visitor (which is probably not particularly useful) keeps a running","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":60395,"byte_end":60471,"line_start":239,"line_end":239,"column_start":1,"column_end":77}},{"value":"/ sum of all the numeric values it records, and ignores all other values. A","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":60472,"byte_end":60549,"line_start":240,"line_end":240,"column_start":1,"column_end":78}},{"value":"/ more practical example of recording typed values is presented in","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":60550,"byte_end":60618,"line_start":241,"line_end":241,"column_start":1,"column_end":69}},{"value":"/ `examples/counters.rs`, which demonstrates a very simple metrics system","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":60619,"byte_end":60694,"line_start":242,"line_end":242,"column_start":1,"column_end":76}},{"value":"/ implemented using `tracing`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":60695,"byte_end":60727,"line_start":243,"line_end":243,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":60728,"byte_end":60731,"line_start":244,"line_end":244,"column_start":1,"column_end":4}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\">","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":60732,"byte_end":60791,"line_start":245,"line_end":245,"column_start":1,"column_end":60}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":60792,"byte_end":60857,"line_start":246,"line_end":246,"column_start":1,"column_end":66}},{"value":"/ <strong>Note</strong>: The <code>record_error</code> trait method is only","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":60858,"byte_end":60935,"line_start":247,"line_end":247,"column_start":1,"column_end":78}},{"value":"/ available when the Rust standard library is present, as it requires the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":60936,"byte_end":61011,"line_start":248,"line_end":248,"column_start":1,"column_end":76}},{"value":"/ <code>std::error::Error</code> trait.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":61012,"byte_end":61053,"line_start":249,"line_end":249,"column_start":1,"column_end":42}},{"value":"/ </pre></div>","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":61054,"byte_end":61070,"line_start":250,"line_end":250,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":61071,"byte_end":61074,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ [`Value`]: trait.Value.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":61075,"byte_end":61106,"line_start":252,"line_end":252,"column_start":1,"column_end":32}},{"value":"/ [recorded]: trait.Value.html#method.record","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":61107,"byte_end":61153,"line_start":253,"line_end":253,"column_start":1,"column_end":47}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":61154,"byte_end":61209,"line_start":254,"line_end":254,"column_start":1,"column_end":56}},{"value":"/ [records an `Event`]: ../subscriber/trait.Subscriber.html#method.event","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":61210,"byte_end":61284,"line_start":255,"line_end":255,"column_start":1,"column_end":75}},{"value":"/ [set of `Value`s added to a `Span`]: ../subscriber/trait.Subscriber.html#method.record","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":61285,"byte_end":61375,"line_start":256,"line_end":256,"column_start":1,"column_end":91}},{"value":"/ [`Event`]: ../event/struct.Event.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":61376,"byte_end":61417,"line_start":257,"line_end":257,"column_start":1,"column_end":42}},{"value":"/ [`ValueSet`]: struct.ValueSet.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":61418,"byte_end":61456,"line_start":258,"line_end":258,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":61940,"byte_end":61950,"line_start":270,"line_end":270,"column_start":8,"column_end":18},"name":"record_f64","qualname":"::field::Visit::record_f64","value":"pub fn record_f64(&mut Self, &Field, f64)","parent":{"krate":0,"index":282},"children":[],"decl_id":null,"docs":" Visit a double-precision floating point value.\n","sig":null,"attributes":[{"value":"/ Visit a double-precision floating point value.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":61882,"byte_end":61932,"line_start":269,"line_end":269,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":62091,"byte_end":62101,"line_start":275,"line_end":275,"column_start":8,"column_end":18},"name":"record_i64","qualname":"::field::Visit::record_i64","value":"pub fn record_i64(&mut Self, &Field, i64)","parent":{"krate":0,"index":282},"children":[],"decl_id":null,"docs":" Visit a signed 64-bit integer value.\n","sig":null,"attributes":[{"value":"/ Visit a signed 64-bit integer value.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":62043,"byte_end":62083,"line_start":274,"line_end":274,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":62245,"byte_end":62255,"line_start":280,"line_end":280,"column_start":8,"column_end":18},"name":"record_u64","qualname":"::field::Visit::record_u64","value":"pub fn record_u64(&mut Self, &Field, u64)","parent":{"krate":0,"index":282},"children":[],"decl_id":null,"docs":" Visit an unsigned 64-bit integer value.\n","sig":null,"attributes":[{"value":"/ Visit an unsigned 64-bit integer value.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":62194,"byte_end":62237,"line_start":279,"line_end":279,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":62382,"byte_end":62393,"line_start":285,"line_end":285,"column_start":8,"column_end":19},"name":"record_bool","qualname":"::field::Visit::record_bool","value":"pub fn record_bool(&mut Self, &Field, bool)","parent":{"krate":0,"index":282},"children":[],"decl_id":null,"docs":" Visit a boolean value.\n","sig":null,"attributes":[{"value":"/ Visit a boolean value.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":62348,"byte_end":62374,"line_start":284,"line_end":284,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":62520,"byte_end":62530,"line_start":290,"line_end":290,"column_start":8,"column_end":18},"name":"record_str","qualname":"::field::Visit::record_str","value":"pub fn record_str(&mut Self, &Field, &str)","parent":{"krate":0,"index":282},"children":[],"decl_id":null,"docs":" Visit a string value.\n","sig":null,"attributes":[{"value":"/ Visit a string value.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":62487,"byte_end":62512,"line_start":289,"line_end":289,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":63011,"byte_end":63023,"line_start":303,"line_end":303,"column_start":8,"column_end":20},"name":"record_error","qualname":"::field::Visit::record_error","value":"pub fn record_error(&mut Self, &Field, &dyn std::error::Error + 'static)","parent":{"krate":0,"index":282},"children":[],"decl_id":null,"docs":" Records a type implementing `Error`.","sig":null,"attributes":[{"value":"/ Records a type implementing `Error`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":62624,"byte_end":62664,"line_start":294,"line_end":294,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":62669,"byte_end":62672,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\">","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":62677,"byte_end":62736,"line_start":296,"line_end":296,"column_start":5,"column_end":64}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":62741,"byte_end":62806,"line_start":297,"line_end":297,"column_start":5,"column_end":70}},{"value":"/ <strong>Note</strong>: This is only enabled when the Rust standard library is","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":62811,"byte_end":62892,"line_start":298,"line_end":298,"column_start":5,"column_end":86}},{"value":"/ present.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":62897,"byte_end":62909,"line_start":299,"line_end":299,"column_start":5,"column_end":17}},{"value":"/ </pre>","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":62914,"byte_end":62924,"line_start":300,"line_end":300,"column_start":5,"column_end":15}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":62929,"byte_end":62952,"line_start":301,"line_end":301,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":63219,"byte_end":63231,"line_start":308,"line_end":308,"column_start":8,"column_end":20},"name":"record_debug","qualname":"::field::Visit::record_debug","value":"pub fn record_debug(&mut Self, &Field, &dyn fmt::Debug)","parent":{"krate":0,"index":282},"children":[],"decl_id":null,"docs":" Visit a value implementing `fmt::Debug`.\n","sig":null,"attributes":[{"value":"/ Visit a value implementing `fmt::Debug`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":63167,"byte_end":63211,"line_start":307,"line_end":307,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":290},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":63563,"byte_end":63568,"line_start":318,"line_end":318,"column_start":11,"column_end":16},"name":"Value","qualname":"::field::Value","value":"Value: crate::sealed::Sealed","parent":null,"children":[{"krate":0,"index":291}],"decl_id":null,"docs":" A field value of an erased type.","sig":null,"attributes":[{"value":"/ A field value of an erased type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":63286,"byte_end":63322,"line_start":311,"line_end":311,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":63323,"byte_end":63326,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ Implementors of `Value` may call the appropriate typed recording methods on","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":63327,"byte_end":63406,"line_start":313,"line_end":313,"column_start":1,"column_end":80}},{"value":"/ the [visitor] passed to their `record` method in order to indicate how","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":63407,"byte_end":63481,"line_start":314,"line_end":314,"column_start":1,"column_end":75}},{"value":"/ their data should be recorded.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":63482,"byte_end":63516,"line_start":315,"line_end":315,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":63517,"byte_end":63520,"line_start":316,"line_end":316,"column_start":1,"column_end":4}},{"value":"/ [visitor]: trait.Visit.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":63521,"byte_end":63552,"line_start":317,"line_end":317,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":63653,"byte_end":63659,"line_start":320,"line_end":320,"column_start":8,"column_end":14},"name":"record","qualname":"::field::Value::record","value":"pub fn record(&Self, &Field, &mut dyn Visit)","parent":{"krate":0,"index":290},"children":[],"decl_id":null,"docs":" Visits this value with the given `Visitor`.\n","sig":null,"attributes":[{"value":"/ Visits this value with the given `Visitor`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":63598,"byte_end":63645,"line_start":319,"line_end":319,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":856},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":63888,"byte_end":63900,"line_start":328,"line_end":328,"column_start":12,"column_end":24},"name":"DisplayValue","qualname":"::field::DisplayValue","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `Value` which serializes using `fmt::Display`.","sig":null,"attributes":[{"value":"/ A `Value` which serializes using `fmt::Display`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":63709,"byte_end":63761,"line_start":323,"line_end":323,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":63762,"byte_end":63765,"line_start":324,"line_end":324,"column_start":1,"column_end":4}},{"value":"/ Uses `record_debug` in the `Value` implementation to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":63766,"byte_end":63822,"line_start":325,"line_end":325,"column_start":1,"column_end":57}},{"value":"/ avoid an unnecessary evaluation.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":63823,"byte_end":63859,"line_start":326,"line_end":326,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":863},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":64014,"byte_end":64024,"line_start":332,"line_end":332,"column_start":12,"column_end":22},"name":"DebugValue","qualname":"::field::DebugValue","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `Value` which serializes as a string using `fmt::Debug`.\n","sig":null,"attributes":[{"value":"/ A `Value` which serializes as a string using `fmt::Debug`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":63923,"byte_end":63985,"line_start":330,"line_end":330,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":292},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":64171,"byte_end":64178,"line_start":336,"line_end":336,"column_start":8,"column_end":15},"name":"display","qualname":"::field::display","value":"pub fn display<T>(T) -> DisplayValue<T> where T: fmt::Display","parent":null,"children":[],"decl_id":null,"docs":" Wraps a type implementing `fmt::Display` as a `Value` that can be\n recorded using its `Display` implementation.\n","sig":null,"attributes":[{"value":"/ Wraps a type implementing `fmt::Display` as a `Value` that can be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":64045,"byte_end":64114,"line_start":334,"line_end":334,"column_start":1,"column_end":70}},{"value":"/ recorded using its `Display` implementation.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":64115,"byte_end":64163,"line_start":335,"line_end":335,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":294},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":64381,"byte_end":64386,"line_start":345,"line_end":345,"column_start":8,"column_end":13},"name":"debug","qualname":"::field::debug","value":"pub fn debug<T>(T) -> DebugValue<T> where T: fmt::Debug","parent":null,"children":[],"decl_id":null,"docs":" Wraps a type implementing `fmt::Debug` as a `Value` that can be\n recorded using its `Debug` implementation.\n","sig":null,"attributes":[{"value":"/ Wraps a type implementing `fmt::Debug` as a `Value` that can be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":64259,"byte_end":64326,"line_start":343,"line_end":343,"column_start":1,"column_end":68}},{"value":"/ recorded using its `Debug` implementation.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":64327,"byte_end":64373,"line_start":344,"line_end":344,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":73756,"byte_end":73764,"line_start":686,"line_end":686,"column_start":12,"column_end":20},"name":"callsite","qualname":"<Field>::callsite","value":"pub fn callsite(&Self) -> callsite::Identifier","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Identifier`] that uniquely identifies the [`Callsite`]\n which defines this field.","sig":null,"attributes":[{"value":"/ Returns an [`Identifier`] that uniquely identifies the [`Callsite`]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":73504,"byte_end":73575,"line_start":680,"line_end":680,"column_start":5,"column_end":76}},{"value":"/ which defines this field.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":73580,"byte_end":73609,"line_start":681,"line_end":681,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":73614,"byte_end":73617,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ [`Identifier`]: ../callsite/struct.Identifier.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":73622,"byte_end":73676,"line_start":683,"line_end":683,"column_start":5,"column_end":59}},{"value":"/ [`Callsite`]: ../callsite/trait.Callsite.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":73681,"byte_end":73730,"line_start":684,"line_end":684,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":73735,"byte_end":73744,"line_start":685,"line_end":685,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":73908,"byte_end":73912,"line_start":691,"line_end":691,"column_start":12,"column_end":16},"name":"name","qualname":"<Field>::name","value":"pub fn name(&Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Returns a string representing the name of the field.\n","sig":null,"attributes":[{"value":"/ Returns a string representing the name of the field.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":73840,"byte_end":73896,"line_start":690,"line_end":690,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":74928,"byte_end":74931,"line_start":742,"line_end":742,"column_start":18,"column_end":21},"name":"new","qualname":"<FieldSet>::new","value":"pub const fn new(&'static [&'static str], callsite::Identifier) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `FieldSet` with the given array of field names and callsite.\n","sig":null,"attributes":[{"value":"/ Constructs a new `FieldSet` with the given array of field names and callsite.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":74829,"byte_end":74910,"line_start":741,"line_end":741,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":75537,"byte_end":75542,"line_start":758,"line_end":758,"column_start":12,"column_end":17},"name":"field","qualname":"<FieldSet>::field","value":"pub fn field<Q: ?Sized>(&Self, &Q) -> Option<Field> where Q: Borrow<str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the [`Field`] named `name`, or `None` if no such field exists.","sig":null,"attributes":[{"value":"/ Returns the [`Field`] named `name`, or `None` if no such field exists.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":75403,"byte_end":75477,"line_start":755,"line_end":755,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":75482,"byte_end":75485,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ [`Field`]: ../struct.Field.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":75490,"byte_end":75525,"line_start":757,"line_end":757,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":76568,"byte_end":76576,"line_start":783,"line_end":783,"column_start":12,"column_end":20},"name":"contains","qualname":"<FieldSet>::contains","value":"pub fn contains(&Self, &Field) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` contains the given `field`.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` contains the given `field`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":75890,"byte_end":75946,"line_start":772,"line_end":772,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":75951,"byte_end":75954,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\">","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":75959,"byte_end":76018,"line_start":774,"line_end":774,"column_start":5,"column_end":64}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":76023,"byte_end":76088,"line_start":775,"line_end":775,"column_start":5,"column_end":70}},{"value":"/ <strong>Note</strong>: If <code>field</code> shares a name with a field","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":76093,"byte_end":76168,"line_start":776,"line_end":776,"column_start":5,"column_end":80}},{"value":"/ in this <code>FieldSet</code>, but was created by a <code>FieldSet</code>","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":76173,"byte_end":76250,"line_start":777,"line_end":777,"column_start":5,"column_end":82}},{"value":"/ with a different callsite, this <code>FieldSet</code> does <em>not</em>","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":76255,"byte_end":76330,"line_start":778,"line_end":778,"column_start":5,"column_end":80}},{"value":"/ contain it. This is so that if two separate span callsites define a field","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":76335,"byte_end":76412,"line_start":779,"line_end":779,"column_start":5,"column_end":82}},{"value":"/ named \"foo\", the <code>Field</code> corresponding to \"foo\" for each","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":76417,"byte_end":76488,"line_start":780,"line_end":780,"column_start":5,"column_end":76}},{"value":"/ of those callsites are not equivalent.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":76493,"byte_end":76535,"line_start":781,"line_end":781,"column_start":5,"column_end":47}},{"value":"/ </pre></div>","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":76540,"byte_end":76556,"line_start":782,"line_end":782,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":76762,"byte_end":76766,"line_start":788,"line_end":788,"column_start":12,"column_end":16},"name":"iter","qualname":"<FieldSet>::iter","value":"pub fn iter(&Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the `Field`s in this `FieldSet`.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the `Field`s in this `FieldSet`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":76689,"byte_end":76750,"line_start":787,"line_end":787,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":77201,"byte_end":77210,"line_start":804,"line_end":804,"column_start":12,"column_end":21},"name":"value_set","qualname":"<FieldSet>::value_set","value":"pub fn value_set<'v, V>(&'v Self, &'v V) -> ValueSet where V: ValidLen","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `ValueSet` with entries for this `FieldSet`'s values.","sig":null,"attributes":[{"value":"/ Returns a new `ValueSet` with entries for this `FieldSet`'s values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":76996,"byte_end":77067,"line_start":799,"line_end":799,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":77072,"byte_end":77075,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ Note that a `ValueSet` may not be constructed with arrays of over 32","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":77080,"byte_end":77152,"line_start":801,"line_end":801,"column_start":5,"column_end":77}},{"value":"/ elements.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":77157,"byte_end":77170,"line_start":802,"line_end":802,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":77481,"byte_end":77484,"line_start":816,"line_end":816,"column_start":12,"column_end":15},"name":"len","qualname":"<FieldSet>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of fields in this `FieldSet`.\n","sig":null,"attributes":[{"value":"/ Returns the number of fields in this `FieldSet`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":77403,"byte_end":77455,"line_start":814,"line_end":814,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":77460,"byte_end":77469,"line_start":815,"line_end":815,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":77619,"byte_end":77627,"line_start":822,"line_end":822,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FieldSet>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether or not this `FieldSet` has fields.\n","sig":null,"attributes":[{"value":"/ Returns whether or not this `FieldSet` has fields.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":77539,"byte_end":77593,"line_start":820,"line_end":820,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":77598,"byte_end":77607,"line_start":821,"line_end":821,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":78986,"byte_end":78994,"line_start":878,"line_end":878,"column_start":12,"column_end":20},"name":"callsite","qualname":"<ValueSet>::callsite","value":"pub fn callsite(&Self) -> callsite::Identifier","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Identifier`] that uniquely identifies the [`Callsite`]\n defining the fields this `ValueSet` refers to.","sig":null,"attributes":[{"value":"/ Returns an [`Identifier`] that uniquely identifies the [`Callsite`]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":78713,"byte_end":78784,"line_start":872,"line_end":872,"column_start":5,"column_end":76}},{"value":"/ defining the fields this `ValueSet` refers to.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":78789,"byte_end":78839,"line_start":873,"line_end":873,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":78844,"byte_end":78847,"line_start":874,"line_end":874,"column_start":5,"column_end":8}},{"value":"/ [`Identifier`]: ../callsite/struct.Identifier.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":78852,"byte_end":78906,"line_start":875,"line_end":875,"column_start":5,"column_end":59}},{"value":"/ [`Callsite`]: ../callsite/trait.Callsite.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":78911,"byte_end":78960,"line_start":876,"line_end":876,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":78965,"byte_end":78974,"line_start":877,"line_end":877,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":79188,"byte_end":79194,"line_start":885,"line_end":885,"column_start":12,"column_end":18},"name":"record","qualname":"<ValueSet>::record","value":"pub fn record(&Self, &mut dyn Visit)","parent":null,"children":[],"decl_id":null,"docs":" Visits all the fields in this `ValueSet` with the provided [visitor].","sig":null,"attributes":[{"value":"/ Visits all the fields in this `ValueSet` with the provided [visitor].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":79070,"byte_end":79143,"line_start":882,"line_end":882,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":79148,"byte_end":79151,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ [visitor]: Visit","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":79156,"byte_end":79176,"line_start":884,"line_end":884,"column_start":5,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":440},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":81498,"byte_end":81506,"line_start":960,"line_end":960,"column_start":15,"column_end":23},"name":"ValidLen","qualname":"::field::private::ValidLen","value":"ValidLen<'a>: Borrow<[(&'a Field, Option<&'a dyn Value + 'a>)]>","parent":null,"children":[],"decl_id":null,"docs":" Marker trait implemented by arrays which are of valid length to\n construct a `ValueSet`.","sig":null,"attributes":[{"value":"/ Marker trait implemented by arrays which are of valid length to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":81059,"byte_end":81126,"line_start":953,"line_end":953,"column_start":5,"column_end":72}},{"value":"/ construct a `ValueSet`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":81131,"byte_end":81158,"line_start":954,"line_end":954,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":81163,"byte_end":81166,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/ `ValueSet`s may only be constructed from arrays containing 32 or fewer","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":81171,"byte_end":81245,"line_start":956,"line_end":956,"column_start":5,"column_end":79}},{"value":"/ elements, to ensure the array is small enough to always be allocated on the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":81250,"byte_end":81329,"line_start":957,"line_end":957,"column_start":5,"column_end":84}},{"value":"/ stack. This trait is only implemented by arrays of an appropriate length,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":81334,"byte_end":81411,"line_start":958,"line_end":958,"column_start":5,"column_end":82}},{"value":"/ ensuring that the correct size arrays are used at compile-time.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":81416,"byte_end":81483,"line_start":959,"line_end":959,"column_start":5,"column_end":72}}]},{"kind":"Mod","id":{"krate":0,"index":443},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"metadata","qualname":"::metadata","value":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","parent":null,"children":[{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":448},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":455},{"krate":0,"index":458},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":465},{"krate":0,"index":468},{"krate":0,"index":1071},{"krate":0,"index":1074},{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1079},{"krate":0,"index":1080},{"krate":0,"index":1083},{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1089},{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":1098},{"krate":0,"index":1101},{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1107},{"krate":0,"index":1108},{"krate":0,"index":1110},{"krate":0,"index":1111},{"krate":0,"index":1114},{"krate":0,"index":1117},{"krate":0,"index":1120},{"krate":0,"index":1122},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":492},{"krate":0,"index":495},{"krate":0,"index":506},{"krate":0,"index":509},{"krate":0,"index":516},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":1124},{"krate":0,"index":1140},{"krate":0,"index":1141},{"krate":0,"index":1143},{"krate":0,"index":1145},{"krate":0,"index":1148},{"krate":0,"index":1149},{"krate":0,"index":1151},{"krate":0,"index":1152},{"krate":0,"index":525},{"krate":0,"index":527},{"krate":0,"index":529},{"krate":0,"index":531},{"krate":0,"index":548},{"krate":0,"index":550},{"krate":0,"index":552},{"krate":0,"index":1154},{"krate":0,"index":1156},{"krate":0,"index":557},{"krate":0,"index":559},{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":564},{"krate":0,"index":570},{"krate":0,"index":572},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":581},{"krate":0,"index":587},{"krate":0,"index":589}],"decl_id":null,"docs":" Metadata describing trace data.\n","sig":null,"attributes":[{"value":"/ Metadata describing trace data.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":86716,"byte_end":86751,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":468},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":89375,"byte_end":89383,"line_start":60,"line_end":60,"column_start":12,"column_end":20},"name":"Metadata","qualname":"::metadata::Metadata","value":"Metadata {  }","parent":null,"children":[{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477}],"decl_id":null,"docs":" Metadata describing a [span] or [event].","sig":null,"attributes":[{"value":"/ Metadata describing a [span] or [event].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":86882,"byte_end":86926,"line_start":9,"line_end":9,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":86927,"byte_end":86930,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ All spans and events have the following metadata:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":86931,"byte_end":86984,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"/ - A [name], represented as a static string.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":86985,"byte_end":87032,"line_start":12,"line_end":12,"column_start":1,"column_end":48}},{"value":"/ - A [target], a string that categorizes part of the system where the span","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":87033,"byte_end":87110,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/   or event occurred. The `tracing` macros default to using the module","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":87111,"byte_end":87184,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/   path where the span or event originated as the target, but it may be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":87185,"byte_end":87259,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"/   overridden.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":87260,"byte_end":87277,"line_start":16,"line_end":16,"column_start":1,"column_end":18}},{"value":"/ - A [verbosity level]. This determines how verbose a given span or event","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":87278,"byte_end":87354,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/   is, and allows enabling or disabling more verbose diagnostics","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":87355,"byte_end":87422,"line_start":18,"line_end":18,"column_start":1,"column_end":68}},{"value":"/   situationally. See the documentation for the [`Level`] type for details.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":87423,"byte_end":87501,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ - The names of the [fields] defined by the span or event.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":87502,"byte_end":87563,"line_start":20,"line_end":20,"column_start":1,"column_end":62}},{"value":"/ - Whether the metadata corresponds to a span or event.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":87564,"byte_end":87622,"line_start":21,"line_end":21,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":87623,"byte_end":87626,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ In addition, the following optional metadata describing the source code","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":87627,"byte_end":87702,"line_start":23,"line_end":23,"column_start":1,"column_end":76}},{"value":"/ location where the span or event originated _may_ be provided:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":87703,"byte_end":87769,"line_start":24,"line_end":24,"column_start":1,"column_end":67}},{"value":"/ - The [file name]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":87770,"byte_end":87791,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/ - The [line number]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":87792,"byte_end":87815,"line_start":26,"line_end":26,"column_start":1,"column_end":24}},{"value":"/ - The [module path]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":87816,"byte_end":87839,"line_start":27,"line_end":27,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":87840,"byte_end":87843,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Metadata is used by [`Subscriber`]s when filtering spans and events, and it","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":87844,"byte_end":87923,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/ may also be used as part of their data payload.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":87924,"byte_end":87975,"line_start":30,"line_end":30,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":87976,"byte_end":87979,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ When created by the `event!` or `span!` macro, the metadata describing a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":87980,"byte_end":88056,"line_start":32,"line_end":32,"column_start":1,"column_end":77}},{"value":"/ particular event or span is constructed statically and exists as a single","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":88057,"byte_end":88134,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ static instance. Thus, the overhead of creating the metadata is","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":88135,"byte_end":88202,"line_start":34,"line_end":34,"column_start":1,"column_end":68}},{"value":"/ _significantly_ lower than that of creating the actual span. Therefore,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":88203,"byte_end":88278,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/ filtering is based on metadata, rather than on the constructed span.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":88279,"byte_end":88351,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":88352,"byte_end":88355,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":88356,"byte_end":88421,"line_start":38,"line_end":38,"column_start":1,"column_end":66}},{"value":"/     <strong>Note</strong>: Although instances of <code>Metadata</code>","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":88422,"byte_end":88496,"line_start":39,"line_end":39,"column_start":1,"column_end":75}},{"value":"/     cannot be compared directly, they provide a method","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":88497,"byte_end":88555,"line_start":40,"line_end":40,"column_start":1,"column_end":59}},{"value":"/     <a href=\"struct.Metadata.html#method.id\"><code>id</code></a>, returning","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":88556,"byte_end":88635,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/     an opaque <a href=\"../callsite/struct.Identifier.html\">callsite","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":88636,"byte_end":88707,"line_start":42,"line_end":42,"column_start":1,"column_end":72}},{"value":"/     identifier</a>which uniquely identifies the callsite where the metadata","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":88708,"byte_end":88787,"line_start":43,"line_end":43,"column_start":1,"column_end":80}},{"value":"/     originated. This can be used to determine if two <code>Metadata</code>","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":88788,"byte_end":88866,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/     correspond to the same callsite.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":88867,"byte_end":88907,"line_start":45,"line_end":45,"column_start":1,"column_end":41}},{"value":"/ </pre>","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":88908,"byte_end":88918,"line_start":46,"line_end":46,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":88919,"byte_end":88922,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ [span]: ../span/index.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":88923,"byte_end":88953,"line_start":48,"line_end":48,"column_start":1,"column_end":31}},{"value":"/ [event]: ../event/index.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":88954,"byte_end":88986,"line_start":49,"line_end":49,"column_start":1,"column_end":33}},{"value":"/ [name]: #method.name","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":88987,"byte_end":89011,"line_start":50,"line_end":50,"column_start":1,"column_end":25}},{"value":"/ [target]: #method.target","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":89012,"byte_end":89040,"line_start":51,"line_end":51,"column_start":1,"column_end":29}},{"value":"/ [fields]: #method.fields","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":89041,"byte_end":89069,"line_start":52,"line_end":52,"column_start":1,"column_end":29}},{"value":"/ [verbosity level]: #method.level","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":89070,"byte_end":89106,"line_start":53,"line_end":53,"column_start":1,"column_end":37}},{"value":"/ [file name]: #method.file","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":89107,"byte_end":89136,"line_start":54,"line_end":54,"column_start":1,"column_end":30}},{"value":"/ [line number]: #method.line","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":89137,"byte_end":89168,"line_start":55,"line_end":55,"column_start":1,"column_end":32}},{"value":"/ [module path]: #method.module","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":89169,"byte_end":89202,"line_start":56,"line_end":56,"column_start":1,"column_end":34}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":89203,"byte_end":89258,"line_start":57,"line_end":57,"column_start":1,"column_end":56}},{"value":"/ [`id`]: struct.Metadata.html#method.id","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":89259,"byte_end":89301,"line_start":58,"line_end":58,"column_start":1,"column_end":43}},{"value":"/ [callsite identifier]: ../callsite/struct.Identifier.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":89302,"byte_end":89363,"line_start":59,"line_end":59,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":1071},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":90374,"byte_end":90378,"line_start":93,"line_end":93,"column_start":12,"column_end":16},"name":"Kind","qualname":"::metadata::Kind","value":"","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether the callsite is a span or event.\n","sig":null,"attributes":[{"value":"/ Indicates whether the callsite is a span or event.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":90276,"byte_end":90330,"line_start":91,"line_end":91,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":1083},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":95609,"byte_end":95614,"line_start":224,"line_end":224,"column_start":12,"column_end":17},"name":"Level","qualname":"::metadata::Level","value":"","parent":null,"children":[],"decl_id":null,"docs":" Describes the level of verbosity of a span or event.","sig":null,"attributes":[{"value":"/ Describes the level of verbosity of a span or event.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":90385,"byte_end":90441,"line_start":95,"line_end":95,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":90442,"byte_end":90445,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ # Comparing Levels","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":90446,"byte_end":90468,"line_start":97,"line_end":97,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":90469,"byte_end":90472,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ `Level` implements the [`PartialOrd`] and [`Ord`] traits, allowing two","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":90473,"byte_end":90547,"line_start":99,"line_end":99,"column_start":1,"column_end":75}},{"value":"/ `Level`s to be compared to determine which is considered more or less","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":90548,"byte_end":90621,"line_start":100,"line_end":100,"column_start":1,"column_end":74}},{"value":"/ verbose. Levels which are more verbose are considered \"greater than\" levels","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":90622,"byte_end":90701,"line_start":101,"line_end":101,"column_start":1,"column_end":80}},{"value":"/ which are less verbose, with [`Level::ERROR`] considered the lowest, and","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":90702,"byte_end":90778,"line_start":102,"line_end":102,"column_start":1,"column_end":77}},{"value":"/ [`Level::TRACE`] considered the highest.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":90779,"byte_end":90823,"line_start":103,"line_end":103,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":90824,"byte_end":90827,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":90828,"byte_end":90844,"line_start":105,"line_end":105,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":90845,"byte_end":90852,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"/ use tracing_core::Level;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":90853,"byte_end":90881,"line_start":107,"line_end":107,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":90882,"byte_end":90885,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ assert!(Level::TRACE > Level::DEBUG);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":90886,"byte_end":90927,"line_start":109,"line_end":109,"column_start":1,"column_end":42}},{"value":"/ assert!(Level::ERROR < Level::WARN);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":90928,"byte_end":90968,"line_start":110,"line_end":110,"column_start":1,"column_end":41}},{"value":"/ assert!(Level::INFO <= Level::DEBUG);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":90969,"byte_end":91010,"line_start":111,"line_end":111,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(Level::TRACE, Level::TRACE);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":91011,"byte_end":91054,"line_start":112,"line_end":112,"column_start":1,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":91055,"byte_end":91062,"line_start":113,"line_end":113,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":91063,"byte_end":91066,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ # Filtering","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":91067,"byte_end":91082,"line_start":115,"line_end":115,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":91083,"byte_end":91086,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ `Level`s are typically used to implement filtering that determines which","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":91087,"byte_end":91163,"line_start":117,"line_end":117,"column_start":1,"column_end":77}},{"value":"/ spans and events are enabled. Depending on the use case, more or less","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":91164,"byte_end":91237,"line_start":118,"line_end":118,"column_start":1,"column_end":74}},{"value":"/ verbose diagnostics may be desired. For example, when running in","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":91238,"byte_end":91306,"line_start":119,"line_end":119,"column_start":1,"column_end":69}},{"value":"/ development, [`DEBUG`]-level traces may be enabled by default. When running in","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":91307,"byte_end":91389,"line_start":120,"line_end":120,"column_start":1,"column_end":83}},{"value":"/ production, only [`INFO`]-level and lower traces might be enabled. Libraries","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":91390,"byte_end":91470,"line_start":121,"line_end":121,"column_start":1,"column_end":81}},{"value":"/ may include very verbose diagnostics at the [`DEBUG`] and/or [`TRACE`] levels.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":91471,"byte_end":91553,"line_start":122,"line_end":122,"column_start":1,"column_end":83}},{"value":"/ Applications using those libraries typically chose to ignore those traces. However, when","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":91554,"byte_end":91646,"line_start":123,"line_end":123,"column_start":1,"column_end":93}},{"value":"/ debugging an issue involving said libraries, it may be useful to temporarily","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":91647,"byte_end":91727,"line_start":124,"line_end":124,"column_start":1,"column_end":81}},{"value":"/ enable the more verbose traces.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":91728,"byte_end":91763,"line_start":125,"line_end":125,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":91764,"byte_end":91767,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ The [`LevelFilter`] type is provided to enable filtering traces by","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":91768,"byte_end":91838,"line_start":127,"line_end":127,"column_start":1,"column_end":71}},{"value":"/ verbosity. `Level`s can be compared against [`LevelFilter`]s, and","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":91839,"byte_end":91908,"line_start":128,"line_end":128,"column_start":1,"column_end":70}},{"value":"/ [`LevelFilter`] has a variant for each `Level`, which compares analogously","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":91909,"byte_end":91987,"line_start":129,"line_end":129,"column_start":1,"column_end":79}},{"value":"/ to that level. In addition, [`LevelFilter`] adds a [`LevelFilter::OFF`]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":91988,"byte_end":92063,"line_start":130,"line_end":130,"column_start":1,"column_end":76}},{"value":"/ variant, which is considered \"less verbose\" than every other `Level`. This is","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":92064,"byte_end":92145,"line_start":131,"line_end":131,"column_start":1,"column_end":82}},{"value":"/ intended to allow filters to completely disable tracing in a particular context.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":92146,"byte_end":92230,"line_start":132,"line_end":132,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":92231,"byte_end":92234,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":92235,"byte_end":92251,"line_start":134,"line_end":134,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":92252,"byte_end":92259,"line_start":135,"line_end":135,"column_start":1,"column_end":8}},{"value":"/ use tracing_core::{Level, LevelFilter};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":92260,"byte_end":92303,"line_start":136,"line_end":136,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":92304,"byte_end":92307,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ assert!(LevelFilter::OFF < Level::TRACE);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":92308,"byte_end":92353,"line_start":138,"line_end":138,"column_start":1,"column_end":46}},{"value":"/ assert!(LevelFilter::TRACE > Level::DEBUG);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":92354,"byte_end":92401,"line_start":139,"line_end":139,"column_start":1,"column_end":48}},{"value":"/ assert!(LevelFilter::ERROR < Level::WARN);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":92402,"byte_end":92448,"line_start":140,"line_end":140,"column_start":1,"column_end":47}},{"value":"/ assert!(LevelFilter::INFO <= Level::DEBUG);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":92449,"byte_end":92496,"line_start":141,"line_end":141,"column_start":1,"column_end":48}},{"value":"/ assert!(LevelFilter::INFO >= Level::INFO);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":92497,"byte_end":92543,"line_start":142,"line_end":142,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":92544,"byte_end":92551,"line_start":143,"line_end":143,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":92552,"byte_end":92555,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":92556,"byte_end":92571,"line_start":145,"line_end":145,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":92572,"byte_end":92575,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ Below is a simple example of how a [`Subscriber`] could implement filtering through","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":92576,"byte_end":92663,"line_start":147,"line_end":147,"column_start":1,"column_end":88}},{"value":"/ a [`LevelFilter`]. When a span or event is recorded, the [`Subscriber::enabled`] method","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":92664,"byte_end":92755,"line_start":148,"line_end":148,"column_start":1,"column_end":92}},{"value":"/ compares the span or event's `Level` against the configured [`LevelFilter`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":92756,"byte_end":92836,"line_start":149,"line_end":149,"column_start":1,"column_end":81}},{"value":"/ The optional [`Subscriber::max_level_hint`] method can also be implemented to allow spans","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":92837,"byte_end":92930,"line_start":150,"line_end":150,"column_start":1,"column_end":94}},{"value":"/ and events above a maximum verbosity level to be skipped more efficiently,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":92931,"byte_end":93009,"line_start":151,"line_end":151,"column_start":1,"column_end":79}},{"value":"/ often improving performance in short-lived programs.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":93010,"byte_end":93066,"line_start":152,"line_end":152,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":93067,"byte_end":93070,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":93071,"byte_end":93078,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/ use tracing_core::{span, Event, Level, LevelFilter, Subscriber, Metadata};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":93079,"byte_end":93157,"line_start":155,"line_end":155,"column_start":1,"column_end":79}},{"value":"/ # use tracing_core::span::{Id, Record, Current};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":93158,"byte_end":93210,"line_start":156,"line_end":156,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":93211,"byte_end":93214,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug)]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":93215,"byte_end":93235,"line_start":158,"line_end":158,"column_start":1,"column_end":21}},{"value":"/ pub struct MySubscriber {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":93236,"byte_end":93265,"line_start":159,"line_end":159,"column_start":1,"column_end":30}},{"value":"/     /// The most verbose level that this subscriber will enable.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":93266,"byte_end":93334,"line_start":160,"line_end":160,"column_start":1,"column_end":69}},{"value":"/     max_level: LevelFilter,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":93335,"byte_end":93366,"line_start":161,"line_end":161,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":93367,"byte_end":93370,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":93371,"byte_end":93385,"line_start":163,"line_end":163,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":93386,"byte_end":93391,"line_start":164,"line_end":164,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":93392,"byte_end":93395,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ impl MySubscriber {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":93396,"byte_end":93419,"line_start":166,"line_end":166,"column_start":1,"column_end":24}},{"value":"/     /// Returns a new `MySubscriber` which will record spans and events up to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":93420,"byte_end":93501,"line_start":167,"line_end":167,"column_start":1,"column_end":82}},{"value":"/     /// `max_level`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":93502,"byte_end":93526,"line_start":168,"line_end":168,"column_start":1,"column_end":25}},{"value":"/     pub fn with_max_level(max_level: LevelFilter) -> Self {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":93527,"byte_end":93590,"line_start":169,"line_end":169,"column_start":1,"column_end":64}},{"value":"/         Self {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":93591,"byte_end":93609,"line_start":170,"line_end":170,"column_start":1,"column_end":19}},{"value":"/             max_level,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":93610,"byte_end":93636,"line_start":171,"line_end":171,"column_start":1,"column_end":27}},{"value":"/             // ...","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":93637,"byte_end":93659,"line_start":172,"line_end":172,"column_start":1,"column_end":23}},{"value":"/         }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":93660,"byte_end":93673,"line_start":173,"line_end":173,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":93674,"byte_end":93683,"line_start":174,"line_end":174,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":93684,"byte_end":93689,"line_start":175,"line_end":175,"column_start":1,"column_end":6}},{"value":"/ impl Subscriber for MySubscriber {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":93690,"byte_end":93728,"line_start":176,"line_end":176,"column_start":1,"column_end":39}},{"value":"/     fn enabled(&self, meta: &Metadata<'_>) -> bool {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":93729,"byte_end":93785,"line_start":177,"line_end":177,"column_start":1,"column_end":57}},{"value":"/         // A span or event is enabled if it is at or below the configured","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":93786,"byte_end":93863,"line_start":178,"line_end":178,"column_start":1,"column_end":78}},{"value":"/         // maximum level.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":93864,"byte_end":93893,"line_start":179,"line_end":179,"column_start":1,"column_end":30}},{"value":"/         meta.level() <= &self.max_level","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":93894,"byte_end":93937,"line_start":180,"line_end":180,"column_start":1,"column_end":44}},{"value":"/     }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":93938,"byte_end":93947,"line_start":181,"line_end":181,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":93948,"byte_end":93951,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/     // This optional method returns the most verbose level that this","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":93952,"byte_end":94024,"line_start":183,"line_end":183,"column_start":1,"column_end":73}},{"value":"/     // subscriber will enable. Although implementing this method is not","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":94025,"byte_end":94100,"line_start":184,"line_end":184,"column_start":1,"column_end":76}},{"value":"/     // *required*, it permits additional optimizations when it is provided,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":94101,"byte_end":94180,"line_start":185,"line_end":185,"column_start":1,"column_end":80}},{"value":"/     // allowing spans and events above the max level to be skipped","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":94181,"byte_end":94251,"line_start":186,"line_end":186,"column_start":1,"column_end":71}},{"value":"/     // more efficiently.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":94252,"byte_end":94280,"line_start":187,"line_end":187,"column_start":1,"column_end":29}},{"value":"/     fn max_level_hint(&self) -> Option<LevelFilter> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":94281,"byte_end":94338,"line_start":188,"line_end":188,"column_start":1,"column_end":58}},{"value":"/         Some(self.max_level)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":94339,"byte_end":94371,"line_start":189,"line_end":189,"column_start":1,"column_end":33}},{"value":"/     }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":94372,"byte_end":94381,"line_start":190,"line_end":190,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":94382,"byte_end":94385,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/     // Implement the rest of the subscriber...","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":94386,"byte_end":94436,"line_start":192,"line_end":192,"column_start":1,"column_end":51}},{"value":"/     fn new_span(&self, span: &span::Attributes<'_>) -> span::Id {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":94437,"byte_end":94506,"line_start":193,"line_end":193,"column_start":1,"column_end":70}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":94507,"byte_end":94525,"line_start":194,"line_end":194,"column_start":1,"column_end":19}},{"value":"/         # drop(span); Id::from_u64(1)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":94526,"byte_end":94567,"line_start":195,"line_end":195,"column_start":1,"column_end":42}},{"value":"/     }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":94568,"byte_end":94577,"line_start":196,"line_end":196,"column_start":1,"column_end":10}},{"value":"/     fn event(&self, event: &Event<'_>) {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":94579,"byte_end":94623,"line_start":198,"line_end":198,"column_start":1,"column_end":45}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":94624,"byte_end":94642,"line_start":199,"line_end":199,"column_start":1,"column_end":19}},{"value":"/         # drop(event);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":94643,"byte_end":94669,"line_start":200,"line_end":200,"column_start":1,"column_end":27}},{"value":"/     }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":94670,"byte_end":94679,"line_start":201,"line_end":201,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":94680,"byte_end":94683,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":94684,"byte_end":94698,"line_start":203,"line_end":203,"column_start":1,"column_end":15}},{"value":"/     # fn enter(&self, _: &Id) {}","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":94699,"byte_end":94735,"line_start":204,"line_end":204,"column_start":1,"column_end":37}},{"value":"/     # fn exit(&self, _: &Id) {}","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":94736,"byte_end":94771,"line_start":205,"line_end":205,"column_start":1,"column_end":36}},{"value":"/     # fn record(&self, _: &Id, _: &Record<'_>) {}","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":94772,"byte_end":94825,"line_start":206,"line_end":206,"column_start":1,"column_end":54}},{"value":"/     # fn record_follows_from(&self, _: &Id, _: &Id) {}","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":94826,"byte_end":94884,"line_start":207,"line_end":207,"column_start":1,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":94885,"byte_end":94890,"line_start":208,"line_end":208,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":94891,"byte_end":94898,"line_start":209,"line_end":209,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":94899,"byte_end":94902,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ It is worth noting that the `tracing-subscriber` crate provides [additional","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":94903,"byte_end":94982,"line_start":211,"line_end":211,"column_start":1,"column_end":80}},{"value":"/ APIs][envfilter] for performing more sophisticated filtering, such as","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":94983,"byte_end":95056,"line_start":212,"line_end":212,"column_start":1,"column_end":74}},{"value":"/ enabling different levels based on which module or crate a span or event is","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":95057,"byte_end":95136,"line_start":213,"line_end":213,"column_start":1,"column_end":80}},{"value":"/ recorded in.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":95137,"byte_end":95153,"line_start":214,"line_end":214,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":95154,"byte_end":95157,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ [`DEBUG`]: Level::DEBUG","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":95158,"byte_end":95185,"line_start":216,"line_end":216,"column_start":1,"column_end":28}},{"value":"/ [`INFO`]: Level::INFO","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":95186,"byte_end":95211,"line_start":217,"line_end":217,"column_start":1,"column_end":26}},{"value":"/ [`TRACE`]: Level::TRACE","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":95212,"byte_end":95239,"line_start":218,"line_end":218,"column_start":1,"column_end":28}},{"value":"/ [`Subscriber::enabled`]: crate::subscriber::Subscriber::enabled","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":95240,"byte_end":95307,"line_start":219,"line_end":219,"column_start":1,"column_end":68}},{"value":"/ [`Subscriber::max_level_hint`]: crate::subscriber::Subscriber::max_level_hint","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":95308,"byte_end":95389,"line_start":220,"line_end":220,"column_start":1,"column_end":82}},{"value":"/ [`Subscriber`]: crate::subscriber::Subscriber","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":95390,"byte_end":95439,"line_start":221,"line_end":221,"column_start":1,"column_end":50}},{"value":"/ [envfilter]: https://docs.rs/tracing-subscriber/latest/tracing_subscriber/filter/struct.EnvFilter.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":95440,"byte_end":95546,"line_start":222,"line_end":222,"column_start":1,"column_end":107}}]},{"kind":"Struct","id":{"krate":0,"index":1101},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":96293,"byte_end":96304,"line_start":243,"line_end":243,"column_start":12,"column_end":23},"name":"LevelFilter","qualname":"::metadata::LevelFilter","value":"","parent":null,"children":[],"decl_id":null,"docs":" A filter comparable to a verbosity [`Level`].","sig":null,"attributes":[{"value":"/ A filter comparable to a verbosity [`Level`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":95629,"byte_end":95678,"line_start":226,"line_end":226,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":95679,"byte_end":95682,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ If a [`Level`] is considered less than a `LevelFilter`, it should be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":95683,"byte_end":95755,"line_start":228,"line_end":228,"column_start":1,"column_end":73}},{"value":"/ considered enabled; if greater than or equal to the `LevelFilter`,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":95756,"byte_end":95826,"line_start":229,"line_end":229,"column_start":1,"column_end":71}},{"value":"/ that level is disabled. See [`LevelFilter::current`] for more","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":95827,"byte_end":95892,"line_start":230,"line_end":230,"column_start":1,"column_end":66}},{"value":"/ details.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":95893,"byte_end":95905,"line_start":231,"line_end":231,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":95906,"byte_end":95909,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ Note that this is essentially identical to the `Level` type, but with the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":95910,"byte_end":95987,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/ addition of an [`OFF`] level that completely disables all trace","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":95988,"byte_end":96055,"line_start":234,"line_end":234,"column_start":1,"column_end":68}},{"value":"/ instrumentation.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":96056,"byte_end":96076,"line_start":235,"line_end":235,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":96077,"byte_end":96080,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ See the documentation for the [`Level`] type to see how `Level`s","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":96081,"byte_end":96149,"line_start":237,"line_end":237,"column_start":1,"column_end":69}},{"value":"/ and `LevelFilter`s interact.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":96150,"byte_end":96182,"line_start":238,"line_end":238,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":96183,"byte_end":96186,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ [`OFF`]: LevelFilter::OFF","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":96187,"byte_end":96216,"line_start":240,"line_end":240,"column_start":1,"column_end":30}},{"value":"repr(transparent)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":96217,"byte_end":96237,"line_start":241,"line_end":241,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":1117},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":96423,"byte_end":96444,"line_start":247,"line_end":247,"column_start":12,"column_end":33},"name":"ParseLevelFilterError","qualname":"::metadata::ParseLevelFilterError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Indicates that a string could not be parsed to a valid level.\n","sig":null,"attributes":[{"value":"/ Indicates that a string could not be parsed to a valid level.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":96322,"byte_end":96387,"line_start":245,"line_end":245,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":96733,"byte_end":96736,"line_start":256,"line_end":256,"column_start":18,"column_end":21},"name":"new","qualname":"<Metadata>::new","value":"pub const fn new(&'static str, &'a str, Level, Option<&'a str>, Option<u32>,\n                 Option<&'a str>, field::FieldSet, Kind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct new metadata for a span or event, with a name, target, level, field\n names, and optional source code location.\n","sig":null,"attributes":[{"value":"/ Construct new metadata for a span or event, with a name, target, level, field","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":96584,"byte_end":96665,"line_start":254,"line_end":254,"column_start":5,"column_end":86}},{"value":"/ names, and optional source code location.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":96670,"byte_end":96715,"line_start":255,"line_end":255,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":97253,"byte_end":97259,"line_start":279,"line_end":279,"column_start":12,"column_end":18},"name":"fields","qualname":"<Metadata>::fields","value":"pub fn fields(&Self) -> &field::FieldSet","parent":null,"children":[],"decl_id":null,"docs":" Returns the names of the fields on the described span or event.\n","sig":null,"attributes":[{"value":"/ Returns the names of the fields on the described span or event.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":97174,"byte_end":97241,"line_start":278,"line_end":278,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":97399,"byte_end":97404,"line_start":284,"line_end":284,"column_start":12,"column_end":17},"name":"level","qualname":"<Metadata>::level","value":"pub fn level(&Self) -> &Level","parent":null,"children":[],"decl_id":null,"docs":" Returns the level of verbosity of the described span or event.\n","sig":null,"attributes":[{"value":"/ Returns the level of verbosity of the described span or event.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":97321,"byte_end":97387,"line_start":283,"line_end":283,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":97500,"byte_end":97504,"line_start":289,"line_end":289,"column_start":12,"column_end":16},"name":"name","qualname":"<Metadata>::name","value":"pub fn name(&Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of the span.\n","sig":null,"attributes":[{"value":"/ Returns the name of the span.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":97455,"byte_end":97488,"line_start":288,"line_end":288,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":97827,"byte_end":97833,"line_start":298,"line_end":298,"column_start":12,"column_end":18},"name":"target","qualname":"<Metadata>::target","value":"pub fn target(&Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Returns a string describing the part of the system where the span or\n event that this metadata describes occurred.","sig":null,"attributes":[{"value":"/ Returns a string describing the part of the system where the span or","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":97559,"byte_end":97631,"line_start":293,"line_end":293,"column_start":5,"column_end":77}},{"value":"/ event that this metadata describes occurred.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":97636,"byte_end":97684,"line_start":294,"line_end":294,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":97689,"byte_end":97692,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ Typically, this is the module path, but alternate targets may be set","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":97697,"byte_end":97769,"line_start":296,"line_end":296,"column_start":5,"column_end":77}},{"value":"/ when spans or events are constructed.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":97774,"byte_end":97815,"line_start":297,"line_end":297,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":98010,"byte_end":98021,"line_start":304,"line_end":304,"column_start":12,"column_end":23},"name":"module_path","qualname":"<Metadata>::module_path","value":"pub fn module_path(&Self) -> Option<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the path to the Rust module where the span occurred, or\n `None` if the module path is unknown.\n","sig":null,"attributes":[{"value":"/ Returns the path to the Rust module where the span occurred, or","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":97885,"byte_end":97952,"line_start":302,"line_end":302,"column_start":5,"column_end":72}},{"value":"/ `None` if the module path is unknown.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":97957,"byte_end":97998,"line_start":303,"line_end":303,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":98208,"byte_end":98212,"line_start":310,"line_end":310,"column_start":12,"column_end":16},"name":"file","qualname":"<Metadata>::file","value":"pub fn file(&Self) -> Option<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of the source code file where the span\n occurred, or `None` if the file is unknown\n","sig":null,"attributes":[{"value":"/ Returns the name of the source code file where the span","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":98086,"byte_end":98145,"line_start":308,"line_end":308,"column_start":5,"column_end":64}},{"value":"/ occurred, or `None` if the file is unknown","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":98150,"byte_end":98196,"line_start":309,"line_end":309,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":98407,"byte_end":98411,"line_start":316,"line_end":316,"column_start":12,"column_end":16},"name":"line","qualname":"<Metadata>::line","value":"pub fn line(&Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the line number in the source code file where the span\n occurred, or `None` if the line number is unknown.\n","sig":null,"attributes":[{"value":"/ Returns the line number in the source code file where the span","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":98270,"byte_end":98336,"line_start":314,"line_end":314,"column_start":5,"column_end":71}},{"value":"/ occurred, or `None` if the line number is unknown.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":98341,"byte_end":98395,"line_start":315,"line_end":315,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":98604,"byte_end":98612,"line_start":323,"line_end":323,"column_start":12,"column_end":20},"name":"callsite","qualname":"<Metadata>::callsite","value":"pub fn callsite(&Self) -> callsite::Identifier","parent":null,"children":[],"decl_id":null,"docs":" Returns an opaque `Identifier` that uniquely identifies the callsite\n this `Metadata` originated from.\n","sig":null,"attributes":[{"value":"/ Returns an opaque `Identifier` that uniquely identifies the callsite","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":98465,"byte_end":98537,"line_start":320,"line_end":320,"column_start":5,"column_end":77}},{"value":"/ this `Metadata` originated from.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":98542,"byte_end":98578,"line_start":321,"line_end":321,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":98583,"byte_end":98592,"line_start":322,"line_end":322,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":98749,"byte_end":98757,"line_start":328,"line_end":328,"column_start":12,"column_end":20},"name":"is_event","qualname":"<Metadata>::is_event","value":"pub fn is_event(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the callsite kind is `Event`.\n","sig":null,"attributes":[{"value":"/ Returns true if the callsite kind is `Event`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":98688,"byte_end":98737,"line_start":327,"line_end":327,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":98874,"byte_end":98881,"line_start":333,"line_end":333,"column_start":12,"column_end":19},"name":"is_span","qualname":"<Metadata>::is_span","value":"pub fn is_span(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the callsite kind is `Span`.\n","sig":null,"attributes":[{"value":"/ Return true if the callsite kind is `Span`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":98815,"byte_end":98862,"line_start":332,"line_end":332,"column_start":5,"column_end":52}}]},{"kind":"Const","id":{"krate":0,"index":499},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":100180,"byte_end":100185,"line_start":377,"line_end":377,"column_start":15,"column_end":20},"name":"EVENT","qualname":"::metadata::Kind::EVENT","value":"Kind","parent":{"krate":0,"index":495},"children":[],"decl_id":null,"docs":" `Event` callsite\n","sig":null,"attributes":[{"value":"/ `Event` callsite","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":100145,"byte_end":100165,"line_start":376,"line_end":376,"column_start":5,"column_end":25}}]},{"kind":"Const","id":{"krate":0,"index":500},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":100256,"byte_end":100260,"line_start":380,"line_end":380,"column_start":15,"column_end":19},"name":"SPAN","qualname":"::metadata::Kind::SPAN","value":"Kind","parent":{"krate":0,"index":495},"children":[],"decl_id":null,"docs":" `Span` callsite\n","sig":null,"attributes":[{"value":"/ `Span` callsite","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":100222,"byte_end":100241,"line_start":379,"line_end":379,"column_start":5,"column_end":24}}]},{"kind":"Const","id":{"krate":0,"index":501},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":100490,"byte_end":100494,"line_start":385,"line_end":385,"column_start":15,"column_end":19},"name":"HINT","qualname":"::metadata::Kind::HINT","value":"Kind","parent":{"krate":0,"index":495},"children":[],"decl_id":null,"docs":" `enabled!` callsite. [`Subscriber`][`crate::subscriber::Subscriber`]s can assume\n this `Kind` means they will never recieve a\n full event with this [`Metadata`].\n","sig":null,"attributes":[{"value":"/ `enabled!` callsite. [`Subscriber`][`crate::subscriber::Subscriber`]s can assume","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":100296,"byte_end":100380,"line_start":382,"line_end":382,"column_start":5,"column_end":89}},{"value":"/ this `Kind` means they will never recieve a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":100385,"byte_end":100432,"line_start":383,"line_end":383,"column_start":5,"column_end":52}},{"value":"/ full event with this [`Metadata`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":100437,"byte_end":100475,"line_start":384,"line_end":384,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":100588,"byte_end":100595,"line_start":388,"line_end":388,"column_start":12,"column_end":19},"name":"is_span","qualname":"<Kind>::is_span","value":"pub fn is_span(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the callsite kind is `Span`\n","sig":null,"attributes":[{"value":"/ Return true if the callsite kind is `Span`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":100530,"byte_end":100576,"line_start":387,"line_end":387,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":100733,"byte_end":100741,"line_start":393,"line_end":393,"column_start":12,"column_end":20},"name":"is_event","qualname":"<Kind>::is_event","value":"pub fn is_event(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the callsite kind is `Event`\n","sig":null,"attributes":[{"value":"/ Return true if the callsite kind is `Event`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":100674,"byte_end":100721,"line_start":392,"line_end":392,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":100880,"byte_end":100887,"line_start":398,"line_end":398,"column_start":12,"column_end":19},"name":"is_hint","qualname":"<Kind>::is_hint","value":"pub fn is_hint(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the callsite kind is `Hint`\n","sig":null,"attributes":[{"value":"/ Return true if the callsite kind is `Hint`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":100822,"byte_end":100868,"line_start":397,"line_end":397,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":101200,"byte_end":101204,"line_start":406,"line_end":406,"column_start":18,"column_end":22},"name":"hint","qualname":"<Kind>::hint","value":"pub const fn hint(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets that this `Kind` is a [hint](Self::HINT).","sig":null,"attributes":[{"value":"/ Sets that this `Kind` is a [hint](Self::HINT).","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":100966,"byte_end":101016,"line_start":402,"line_end":402,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":101021,"byte_end":101024,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ This can be called on [`SPAN`](Self::SPAN) and [`EVENT`](Self::EVENT)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":101029,"byte_end":101102,"line_start":404,"line_end":404,"column_start":5,"column_end":78}},{"value":"/ kinds to construct a hint callsite that also counts as a span or event.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":101107,"byte_end":101182,"line_start":405,"line_end":405,"column_start":5,"column_end":80}}]},{"kind":"Const","id":{"krate":0,"index":510},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":102219,"byte_end":102224,"line_start":452,"line_end":452,"column_start":15,"column_end":20},"name":"ERROR","qualname":"::metadata::Level::ERROR","value":"Level","parent":{"krate":0,"index":509},"children":[],"decl_id":null,"docs":" The \"error\" level.","sig":null,"attributes":[{"value":"/ The \"error\" level.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":102134,"byte_end":102156,"line_start":449,"line_end":449,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":102161,"byte_end":102164,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ Designates very serious errors.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":102169,"byte_end":102204,"line_start":451,"line_end":451,"column_start":5,"column_end":40}}]},{"kind":"Const","id":{"krate":0,"index":511},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":102349,"byte_end":102353,"line_start":456,"line_end":456,"column_start":15,"column_end":19},"name":"WARN","qualname":"::metadata::Level::WARN","value":"Level","parent":{"krate":0,"index":509},"children":[],"decl_id":null,"docs":" The \"warn\" level.","sig":null,"attributes":[{"value":"/ The \"warn\" level.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":102264,"byte_end":102285,"line_start":453,"line_end":453,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":102290,"byte_end":102293,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ Designates hazardous situations.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":102298,"byte_end":102334,"line_start":455,"line_end":455,"column_start":5,"column_end":41}}]},{"kind":"Const","id":{"krate":0,"index":512},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":102475,"byte_end":102479,"line_start":460,"line_end":460,"column_start":15,"column_end":19},"name":"INFO","qualname":"::metadata::Level::INFO","value":"Level","parent":{"krate":0,"index":509},"children":[],"decl_id":null,"docs":" The \"info\" level.","sig":null,"attributes":[{"value":"/ The \"info\" level.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":102392,"byte_end":102413,"line_start":457,"line_end":457,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":102418,"byte_end":102421,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ Designates useful information.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":102426,"byte_end":102460,"line_start":459,"line_end":459,"column_start":5,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":513},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":102610,"byte_end":102615,"line_start":464,"line_end":464,"column_start":15,"column_end":20},"name":"DEBUG","qualname":"::metadata::Level::DEBUG","value":"Level","parent":{"krate":0,"index":509},"children":[],"decl_id":null,"docs":" The \"debug\" level.","sig":null,"attributes":[{"value":"/ The \"debug\" level.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":102518,"byte_end":102540,"line_start":461,"line_end":461,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":102545,"byte_end":102548,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ Designates lower priority information.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":102553,"byte_end":102595,"line_start":463,"line_end":463,"column_start":5,"column_end":47}}]},{"kind":"Const","id":{"krate":0,"index":514},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":102776,"byte_end":102781,"line_start":468,"line_end":468,"column_start":15,"column_end":20},"name":"TRACE","qualname":"::metadata::Level::TRACE","value":"Level","parent":{"krate":0,"index":509},"children":[],"decl_id":null,"docs":" The \"trace\" level.","sig":null,"attributes":[{"value":"/ The \"trace\" level.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":102655,"byte_end":102677,"line_start":465,"line_end":465,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":102682,"byte_end":102685,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ Designates very low priority, often extremely verbose, information.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":102690,"byte_end":102761,"line_start":467,"line_end":467,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":102970,"byte_end":102976,"line_start":473,"line_end":473,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Level>::as_str","value":"pub fn as_str(&Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Returns the string representation of the `Level`.","sig":null,"attributes":[{"value":"/ Returns the string representation of the `Level`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":102822,"byte_end":102875,"line_start":470,"line_end":470,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":102880,"byte_end":102883,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ This returns the same string as the `fmt::Display` implementation.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":102888,"byte_end":102958,"line_start":472,"line_end":472,"column_start":5,"column_end":75}}]},{"kind":"Const","id":{"krate":0,"index":532},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":105821,"byte_end":105824,"line_start":576,"line_end":576,"column_start":15,"column_end":18},"name":"OFF","qualname":"::metadata::LevelFilter::OFF","value":"LevelFilter","parent":{"krate":0,"index":531},"children":[],"decl_id":null,"docs":" The \"off\" level.","sig":null,"attributes":[{"value":"/ The \"off\" level.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":105701,"byte_end":105721,"line_start":573,"line_end":573,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":105726,"byte_end":105729,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ Designates that trace instrumentation should be completely disabled.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":105734,"byte_end":105806,"line_start":575,"line_end":575,"column_start":5,"column_end":77}}]},{"kind":"Const","id":{"krate":0,"index":533},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":105948,"byte_end":105953,"line_start":580,"line_end":580,"column_start":15,"column_end":20},"name":"ERROR","qualname":"::metadata::LevelFilter::ERROR","value":"LevelFilter","parent":{"krate":0,"index":531},"children":[],"decl_id":null,"docs":" The \"error\" level.","sig":null,"attributes":[{"value":"/ The \"error\" level.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":105863,"byte_end":105885,"line_start":577,"line_end":577,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":105890,"byte_end":105893,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ Designates very serious errors.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":105898,"byte_end":105933,"line_start":579,"line_end":579,"column_start":5,"column_end":40}}]},{"kind":"Const","id":{"krate":0,"index":534},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":106097,"byte_end":106101,"line_start":584,"line_end":584,"column_start":15,"column_end":19},"name":"WARN","qualname":"::metadata::LevelFilter::WARN","value":"LevelFilter","parent":{"krate":0,"index":531},"children":[],"decl_id":null,"docs":" The \"warn\" level.","sig":null,"attributes":[{"value":"/ The \"warn\" level.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":106012,"byte_end":106033,"line_start":581,"line_end":581,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":106038,"byte_end":106041,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ Designates hazardous situations.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":106046,"byte_end":106082,"line_start":583,"line_end":583,"column_start":5,"column_end":41}}]},{"kind":"Const","id":{"krate":0,"index":535},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":106242,"byte_end":106246,"line_start":588,"line_end":588,"column_start":15,"column_end":19},"name":"INFO","qualname":"::metadata::LevelFilter::INFO","value":"LevelFilter","parent":{"krate":0,"index":531},"children":[],"decl_id":null,"docs":" The \"info\" level.","sig":null,"attributes":[{"value":"/ The \"info\" level.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":106159,"byte_end":106180,"line_start":585,"line_end":585,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":106185,"byte_end":106188,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ Designates useful information.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":106193,"byte_end":106227,"line_start":587,"line_end":587,"column_start":5,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":536},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":106396,"byte_end":106401,"line_start":592,"line_end":592,"column_start":15,"column_end":20},"name":"DEBUG","qualname":"::metadata::LevelFilter::DEBUG","value":"LevelFilter","parent":{"krate":0,"index":531},"children":[],"decl_id":null,"docs":" The \"debug\" level.","sig":null,"attributes":[{"value":"/ The \"debug\" level.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":106304,"byte_end":106326,"line_start":589,"line_end":589,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":106331,"byte_end":106334,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ Designates lower priority information.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":106339,"byte_end":106381,"line_start":591,"line_end":591,"column_start":5,"column_end":47}}]},{"kind":"Const","id":{"krate":0,"index":537},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":106581,"byte_end":106586,"line_start":596,"line_end":596,"column_start":15,"column_end":20},"name":"TRACE","qualname":"::metadata::LevelFilter::TRACE","value":"LevelFilter","parent":{"krate":0,"index":531},"children":[],"decl_id":null,"docs":" The \"trace\" level.","sig":null,"attributes":[{"value":"/ The \"trace\" level.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":106460,"byte_end":106482,"line_start":593,"line_end":593,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":106487,"byte_end":106490,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ Designates very low priority, often extremely verbose, information.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":106495,"byte_end":106566,"line_start":595,"line_end":595,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":538},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":106767,"byte_end":106777,"line_start":600,"line_end":600,"column_start":18,"column_end":28},"name":"from_level","qualname":"<LevelFilter>::from_level","value":"pub const fn from_level(Level) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LevelFilter` that enables spans and events with verbosity up\n to and including `level`.\n","sig":null,"attributes":[{"value":"/ Returns a `LevelFilter` that enables spans and events with verbosity up","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":106640,"byte_end":106715,"line_start":598,"line_end":598,"column_start":5,"column_end":80}},{"value":"/ to and including `level`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":106720,"byte_end":106749,"line_start":599,"line_end":599,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":107046,"byte_end":107056,"line_start":609,"line_end":609,"column_start":18,"column_end":28},"name":"into_level","qualname":"<LevelFilter>::into_level","value":"pub const fn into_level(Self) -> Option<Level>","parent":null,"children":[],"decl_id":null,"docs":" Returns the most verbose [`Level`] that this filter accepts, or `None`\n if it is [`OFF`].","sig":null,"attributes":[{"value":"/ Returns the most verbose [`Level`] that this filter accepts, or `None`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":106839,"byte_end":106913,"line_start":604,"line_end":604,"column_start":5,"column_end":79}},{"value":"/ if it is [`OFF`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":106918,"byte_end":106939,"line_start":605,"line_end":605,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":106944,"byte_end":106947,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ [`Level`]: ../struct.Level.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":106952,"byte_end":106987,"line_start":607,"line_end":607,"column_start":5,"column_end":40}},{"value":"/ [`OFF`]: #associatedconstant.OFF","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":106992,"byte_end":107028,"line_start":608,"line_end":608,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":108786,"byte_end":108793,"line_start":644,"line_end":644,"column_start":12,"column_end":19},"name":"current","qualname":"<LevelFilter>::current","value":"pub fn current() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LevelFilter` that matches the most verbose [`Level`] that any\n currently active [`Subscriber`] will enable.","sig":null,"attributes":[{"value":"/ Returns a `LevelFilter` that matches the most verbose [`Level`] that any","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":107907,"byte_end":107983,"line_start":627,"line_end":627,"column_start":5,"column_end":81}},{"value":"/ currently active [`Subscriber`] will enable.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":107988,"byte_end":108036,"line_start":628,"line_end":628,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":108041,"byte_end":108044,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ User code should treat this as a *hint*. If a given span or event has a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":108049,"byte_end":108124,"line_start":630,"line_end":630,"column_start":5,"column_end":80}},{"value":"/ level *higher* than the returned `LevelFilter`, it will not be enabled.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":108129,"byte_end":108204,"line_start":631,"line_end":631,"column_start":5,"column_end":80}},{"value":"/ However, if the level is less than or equal to this value, the span or","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":108209,"byte_end":108283,"line_start":632,"line_end":632,"column_start":5,"column_end":79}},{"value":"/ event is *not* guaranteed to be enabled; the subscriber will still","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":108288,"byte_end":108358,"line_start":633,"line_end":633,"column_start":5,"column_end":75}},{"value":"/ filter each callsite individually.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":108363,"byte_end":108401,"line_start":634,"line_end":634,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":108406,"byte_end":108409,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ Therefore, comparing a given span or event's level to the returned","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":108414,"byte_end":108484,"line_start":636,"line_end":636,"column_start":5,"column_end":75}},{"value":"/ `LevelFilter` **can** be used for determining if something is","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":108489,"byte_end":108554,"line_start":637,"line_end":637,"column_start":5,"column_end":70}},{"value":"/ *disabled*, but **should not** be used for determining if something is","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":108559,"byte_end":108633,"line_start":638,"line_end":638,"column_start":5,"column_end":79}},{"value":"/ *enabled*.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":108638,"byte_end":108652,"line_start":639,"line_end":639,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":108657,"byte_end":108660,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ [`Level`]: ../struct.Level.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":108665,"byte_end":108700,"line_start":641,"line_end":641,"column_start":5,"column_end":40}},{"value":"/ [`Subscriber`]: ../../trait.Subscriber.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":108705,"byte_end":108752,"line_start":642,"line_end":642,"column_start":5,"column_end":52}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":108757,"byte_end":108774,"line_start":643,"line_end":643,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":1154},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":113497,"byte_end":113512,"line_start":753,"line_end":753,"column_start":12,"column_end":27},"name":"ParseLevelError","qualname":"::metadata::ParseLevelError","value":"ParseLevelError {  }","parent":null,"children":[{"krate":0,"index":1155}],"decl_id":null,"docs":" Returned if parsing a `Level` fails.\n","sig":null,"attributes":[{"value":"/ Returned if parsing a `Level` fails.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":113428,"byte_end":113468,"line_start":751,"line_end":751,"column_start":1,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":599},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"span","qualname":"::span","value":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","parent":null,"children":[{"krate":0,"index":600},{"krate":0,"index":603},{"krate":0,"index":606},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":613},{"krate":0,"index":1168},{"krate":0,"index":1171},{"krate":0,"index":1173},{"krate":0,"index":1175},{"krate":0,"index":1176},{"krate":0,"index":1179},{"krate":0,"index":1180},{"krate":0,"index":1182},{"krate":0,"index":1185},{"krate":0,"index":1190},{"krate":0,"index":1193},{"krate":0,"index":1196},{"krate":0,"index":1199},{"krate":0,"index":1201},{"krate":0,"index":1203},{"krate":0,"index":1211},{"krate":0,"index":616},{"krate":0,"index":621},{"krate":0,"index":624},{"krate":0,"index":638},{"krate":0,"index":644},{"krate":0,"index":652},{"krate":0,"index":655},{"krate":0,"index":658},{"krate":0,"index":660}],"decl_id":null,"docs":" Spans represent periods of time in the execution of a program.\n","sig":null,"attributes":[{"value":"/ Spans represent periods of time in the execution of a program.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":124803,"byte_end":124869,"line_start":1,"line_end":1,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":1168},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":125438,"byte_end":125440,"line_start":16,"line_end":16,"column_start":12,"column_end":14},"name":"Id","qualname":"::span::Id","value":"","parent":null,"children":[],"decl_id":null,"docs":" Identifies a span within the context of a subscriber.","sig":null,"attributes":[{"value":"/ Identifies a span within the context of a subscriber.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":124992,"byte_end":125049,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":125050,"byte_end":125053,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ They are generated by [`Subscriber`]s for each span as it is created, by","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":125054,"byte_end":125130,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ the [`new_span`] trait method. See the documentation for that method for","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":125131,"byte_end":125207,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ more information on span ID generation.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":125208,"byte_end":125251,"line_start":11,"line_end":11,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":125252,"byte_end":125255,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":125256,"byte_end":125311,"line_start":13,"line_end":13,"column_start":1,"column_end":56}},{"value":"/ [`new_span`]: ../subscriber/trait.Subscriber.html#method.new_span","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":125312,"byte_end":125381,"line_start":14,"line_end":14,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":1185},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":125571,"byte_end":125581,"line_start":21,"line_end":21,"column_start":12,"column_end":22},"name":"Attributes","qualname":"::span::Attributes","value":"Attributes {  }","parent":null,"children":[{"krate":0,"index":1187},{"krate":0,"index":1188},{"krate":0,"index":1189}],"decl_id":null,"docs":" Attributes provided to a `Subscriber` describing a new span when it is\n created.\n","sig":null,"attributes":[{"value":"/ Attributes provided to a `Subscriber` describing a new span when it is","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":125455,"byte_end":125529,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ created.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":125530,"byte_end":125542,"line_start":19,"line_end":19,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":1193},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":125758,"byte_end":125764,"line_start":29,"line_end":29,"column_start":12,"column_end":18},"name":"Record","qualname":"::span::Record","value":"Record {  }","parent":null,"children":[{"krate":0,"index":1195}],"decl_id":null,"docs":" A set of fields recorded by a span.\n","sig":null,"attributes":[{"value":"/ A set of fields recorded by a span.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":125690,"byte_end":125729,"line_start":27,"line_end":27,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1199},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":126402,"byte_end":126409,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"Current","qualname":"::span::Current","value":"Current {  }","parent":null,"children":[{"krate":0,"index":1200}],"decl_id":null,"docs":" Indicates what [the `Subscriber` considers] the \"current\" span.","sig":null,"attributes":[{"value":"/ Indicates what [the `Subscriber` considers] the \"current\" span.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":125811,"byte_end":125878,"line_start":33,"line_end":33,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":125879,"byte_end":125882,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ As subscribers may not track a notion of a current span, this has three","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":125883,"byte_end":125958,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/ possible states:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":125959,"byte_end":125979,"line_start":36,"line_end":36,"column_start":1,"column_end":21}},{"value":"/ - \"unknown\", indicating that the subscriber does not track a current span,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":125980,"byte_end":126058,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"/ - \"none\", indicating that the current context is known to not be in a span,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":126059,"byte_end":126138,"line_start":38,"line_end":38,"column_start":1,"column_end":80}},{"value":"/ - \"some\", with the current span's [`Id`] and [`Metadata`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":126139,"byte_end":126201,"line_start":39,"line_end":39,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":126202,"byte_end":126205,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ [the `Subscriber` considers]: ../subscriber/trait.Subscriber.html#method.current_span","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":126206,"byte_end":126295,"line_start":41,"line_end":41,"column_start":1,"column_end":90}},{"value":"/ [`Id`]: struct.Id.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":126296,"byte_end":126322,"line_start":42,"line_end":42,"column_start":1,"column_end":27}},{"value":"/ [`Metadata`]: ../metadata/struct.Metadata.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":126323,"byte_end":126373,"line_start":43,"line_end":43,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":617},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":126915,"byte_end":126923,"line_start":70,"line_end":70,"column_start":12,"column_end":20},"name":"from_u64","qualname":"<Id>::from_u64","value":"pub fn from_u64(u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new span ID from the given `u64`.","sig":null,"attributes":[{"value":"/ Constructs a new span ID from the given `u64`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":126626,"byte_end":126676,"line_start":62,"line_end":62,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":126681,"byte_end":126684,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":126689,"byte_end":126754,"line_start":64,"line_end":64,"column_start":5,"column_end":70}},{"value":"/     <strong>Note</strong>: Span IDs must be greater than zero.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":126759,"byte_end":126825,"line_start":65,"line_end":65,"column_start":5,"column_end":71}},{"value":"/ </pre>","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":126830,"byte_end":126840,"line_start":66,"line_end":66,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":126845,"byte_end":126848,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":126853,"byte_end":126865,"line_start":68,"line_end":68,"column_start":5,"column_end":17}},{"value":"/ - If the provided `u64` is 0.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":126870,"byte_end":126903,"line_start":69,"line_end":69,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":127186,"byte_end":127203,"line_start":78,"line_end":78,"column_start":18,"column_end":35},"name":"from_non_zero_u64","qualname":"<Id>::from_non_zero_u64","value":"pub const fn from_non_zero_u64(NonZeroU64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new span ID from the given `NonZeroU64`.","sig":null,"attributes":[{"value":"/ Constructs a new span ID from the given `NonZeroU64`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":127015,"byte_end":127072,"line_start":74,"line_end":74,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":127077,"byte_end":127080,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Unlike [`Id::from_u64`](#method.from_u64), this will never panic.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":127085,"byte_end":127154,"line_start":76,"line_end":76,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":127159,"byte_end":127168,"line_start":77,"line_end":77,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":619},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":127416,"byte_end":127424,"line_start":85,"line_end":85,"column_start":12,"column_end":20},"name":"into_u64","qualname":"<Id>::into_u64","value":"pub fn into_u64(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the span's ID as a `u64`.\n","sig":null,"attributes":[{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":127323,"byte_end":127362,"line_start":83,"line_end":83,"column_start":5,"column_end":44}},{"value":"/ Returns the span's ID as a `u64`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":127367,"byte_end":127404,"line_start":84,"line_end":84,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":127660,"byte_end":127677,"line_start":93,"line_end":93,"column_start":18,"column_end":35},"name":"into_non_zero_u64","qualname":"<Id>::into_non_zero_u64","value":"pub const fn into_non_zero_u64(&Self) -> NonZeroU64","parent":null,"children":[],"decl_id":null,"docs":" Returns the span's ID as a `NonZeroU64`.\n","sig":null,"attributes":[{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":127540,"byte_end":127579,"line_start":90,"line_end":90,"column_start":5,"column_end":44}},{"value":"/ Returns the span's ID as a `NonZeroU64`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":127584,"byte_end":127628,"line_start":91,"line_end":91,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":127633,"byte_end":127642,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":128026,"byte_end":128029,"line_start":109,"line_end":109,"column_start":12,"column_end":15},"name":"new","qualname":"<Attributes>::new","value":"pub fn new(&'static Metadata, &'a field::ValueSet) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns `Attributes` describing a new child span of the current span,\n with the provided metadata and values.\n","sig":null,"attributes":[{"value":"/ Returns `Attributes` describing a new child span of the current span,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":127894,"byte_end":127967,"line_start":107,"line_end":107,"column_start":5,"column_end":78}},{"value":"/ with the provided metadata and values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":127972,"byte_end":128014,"line_start":108,"line_end":108,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":128372,"byte_end":128380,"line_start":119,"line_end":119,"column_start":12,"column_end":20},"name":"new_root","qualname":"<Attributes>::new_root","value":"pub fn new_root(&'static Metadata, &'a field::ValueSet) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns `Attributes` describing a new span at the root of its own trace\n tree, with the provided metadata and values.\n","sig":null,"attributes":[{"value":"/ Returns `Attributes` describing a new span at the root of its own trace","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":128232,"byte_end":128307,"line_start":117,"line_end":117,"column_start":5,"column_end":80}},{"value":"/ tree, with the provided metadata and values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":128312,"byte_end":128360,"line_start":118,"line_end":118,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":128721,"byte_end":128729,"line_start":129,"line_end":129,"column_start":12,"column_end":20},"name":"child_of","qualname":"<Attributes>::child_of","value":"pub fn child_of(Id, &'static Metadata, &'a field::ValueSet) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns `Attributes` describing a new child span of the specified\n parent span, with the provided metadata and values.\n","sig":null,"attributes":[{"value":"/ Returns `Attributes` describing a new child span of the specified","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":128580,"byte_end":128649,"line_start":127,"line_end":127,"column_start":5,"column_end":74}},{"value":"/ parent span, with the provided metadata and values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":128654,"byte_end":128709,"line_start":128,"line_end":128,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":129047,"byte_end":129055,"line_start":142,"line_end":142,"column_start":12,"column_end":20},"name":"metadata","qualname":"<Attributes>::metadata","value":"pub fn metadata(&Self) -> &'static Metadata","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the new span's metadata.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the new span's metadata.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":128984,"byte_end":129035,"line_start":141,"line_end":141,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":129240,"byte_end":129246,"line_start":148,"line_end":148,"column_start":12,"column_end":18},"name":"values","qualname":"<Attributes>::values","value":"pub fn values(&Self) -> &field::ValueSet","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a `ValueSet` containing any values the new span\n was created with.\n","sig":null,"attributes":[{"value":"/ Returns a reference to a `ValueSet` containing any values the new span","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":129128,"byte_end":129202,"line_start":146,"line_end":146,"column_start":5,"column_end":79}},{"value":"/ was created with.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":129207,"byte_end":129228,"line_start":147,"line_end":147,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":129373,"byte_end":129380,"line_start":153,"line_end":153,"column_start":12,"column_end":19},"name":"is_root","qualname":"<Attributes>::is_root","value":"pub fn is_root(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the new span should be a root.\n","sig":null,"attributes":[{"value":"/ Returns true if the new span should be a root.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":129311,"byte_end":129361,"line_start":152,"line_end":152,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":129835,"byte_end":129848,"line_start":164,"line_end":164,"column_start":12,"column_end":25},"name":"is_contextual","qualname":"<Attributes>::is_contextual","value":"pub fn is_contextual(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the new span's parent should be determined based on the\n current context.","sig":null,"attributes":[{"value":"/ Returns true if the new span's parent should be determined based on the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":129453,"byte_end":129528,"line_start":157,"line_end":157,"column_start":5,"column_end":80}},{"value":"/ current context.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":129533,"byte_end":129553,"line_start":158,"line_end":158,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":129558,"byte_end":129561,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ If this is true and the current thread is currently inside a span, then","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":129566,"byte_end":129641,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ that span should be the new span's parent. Otherwise, if the current","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":129646,"byte_end":129718,"line_start":161,"line_end":161,"column_start":5,"column_end":77}},{"value":"/ thread is _not_ inside a span, then the new span will be the root of its","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":129723,"byte_end":129799,"line_start":162,"line_end":162,"column_start":5,"column_end":81}},{"value":"/ own trace tree.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":129804,"byte_end":129823,"line_start":163,"line_end":163,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":130121,"byte_end":130127,"line_start":172,"line_end":172,"column_start":12,"column_end":18},"name":"parent","qualname":"<Attributes>::parent","value":"pub fn parent(&Self) -> Option<&Id>","parent":null,"children":[],"decl_id":null,"docs":" Returns the new span's explicitly-specified parent, if there is one.","sig":null,"attributes":[{"value":"/ Returns the new span's explicitly-specified parent, if there is one.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":129924,"byte_end":129996,"line_start":168,"line_end":168,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":130001,"byte_end":130004,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ Otherwise (if the new span is a root or is a child of the current span),","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":130009,"byte_end":130085,"line_start":170,"line_end":170,"column_start":5,"column_end":81}},{"value":"/ returns `None`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":130090,"byte_end":130109,"line_start":171,"line_end":171,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":130428,"byte_end":130434,"line_start":183,"line_end":183,"column_start":12,"column_end":18},"name":"record","qualname":"<Attributes>::record","value":"pub fn record(&Self, &mut dyn field::Visit)","parent":null,"children":[],"decl_id":null,"docs":" Records all the fields in this set of `Attributes` with the provided\n [Visitor].","sig":null,"attributes":[{"value":"/ Records all the fields in this set of `Attributes` with the provided","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":130272,"byte_end":130344,"line_start":179,"line_end":179,"column_start":5,"column_end":77}},{"value":"/ [Visitor].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":130349,"byte_end":130363,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":130368,"byte_end":130371,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ [visitor]: ../field/trait.Visit.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":130376,"byte_end":130416,"line_start":182,"line_end":182,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":130629,"byte_end":130637,"line_start":189,"line_end":189,"column_start":12,"column_end":20},"name":"contains","qualname":"<Attributes>::contains","value":"pub fn contains(&Self, &field::Field) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this set of `Attributes` contains a value for the\n given `Field`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this set of `Attributes` contains a value for the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":130523,"byte_end":130594,"line_start":187,"line_end":187,"column_start":5,"column_end":76}},{"value":"/ given `Field`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":130599,"byte_end":130617,"line_start":188,"line_end":188,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":130802,"byte_end":130810,"line_start":194,"line_end":194,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Attributes>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this set of `Attributes` contains _no_ values.\n","sig":null,"attributes":[{"value":"/ Returns true if this set of `Attributes` contains _no_ values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":130724,"byte_end":130790,"line_start":193,"line_end":193,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":637},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":131443,"byte_end":131449,"line_start":209,"line_end":209,"column_start":12,"column_end":18},"name":"fields","qualname":"<Attributes>::fields","value":"pub fn fields(&Self) -> &FieldSet","parent":null,"children":[],"decl_id":null,"docs":" Returns the set of all [fields] defined by this span's [`Metadata`].","sig":null,"attributes":[{"value":"/ Returns the set of all [fields] defined by this span's [`Metadata`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":130870,"byte_end":130942,"line_start":198,"line_end":198,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":130947,"byte_end":130950,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ Note that the [`FieldSet`] returned by this method includes *all* the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":130955,"byte_end":131028,"line_start":200,"line_end":200,"column_start":5,"column_end":78}},{"value":"/ fields declared by this span, not just those with values that are recorded","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":131033,"byte_end":131111,"line_start":201,"line_end":201,"column_start":5,"column_end":83}},{"value":"/ as part of this set of `Attributes`. Other fields with values not present in","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":131116,"byte_end":131196,"line_start":202,"line_end":202,"column_start":5,"column_end":85}},{"value":"/ this `Attributes`' value set may [record] values later.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":131201,"byte_end":131260,"line_start":203,"line_end":203,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":131265,"byte_end":131268,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ [fields]: crate::field","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":131273,"byte_end":131299,"line_start":205,"line_end":205,"column_start":5,"column_end":31}},{"value":"/ [record]: Attributes::record()","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":131304,"byte_end":131338,"line_start":206,"line_end":206,"column_start":5,"column_end":39}},{"value":"/ [`Metadata`]: crate::metadata::Metadata","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":131343,"byte_end":131386,"line_start":207,"line_end":207,"column_start":5,"column_end":48}},{"value":"/ [`FieldSet`]: crate::field::FieldSet","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":131391,"byte_end":131431,"line_start":208,"line_end":208,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":131627,"byte_end":131630,"line_start":218,"line_end":218,"column_start":12,"column_end":15},"name":"new","qualname":"<Record>::new","value":"pub fn new(&'a field::ValueSet) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Record` from a `ValueSet`.\n","sig":null,"attributes":[{"value":"/ Constructs a new `Record` from a `ValueSet`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":131567,"byte_end":131615,"line_start":217,"line_end":217,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":131846,"byte_end":131852,"line_start":225,"line_end":225,"column_start":12,"column_end":18},"name":"record","qualname":"<Record>::record","value":"pub fn record(&Self, &mut dyn field::Visit)","parent":null,"children":[],"decl_id":null,"docs":" Records all the fields in this `Record` with the provided [Visitor].","sig":null,"attributes":[{"value":"/ Records all the fields in this `Record` with the provided [Visitor].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":131709,"byte_end":131781,"line_start":222,"line_end":222,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":131786,"byte_end":131789,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ [visitor]: ../field/trait.Visit.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":131794,"byte_end":131834,"line_start":224,"line_end":224,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":132028,"byte_end":132036,"line_start":230,"line_end":230,"column_start":12,"column_end":20},"name":"contains","qualname":"<Record>::contains","value":"pub fn contains(&Self, &field::Field) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this `Record` contains a value for the given `Field`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this `Record` contains a value for the given `Field`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":131941,"byte_end":132016,"line_start":229,"line_end":229,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":643},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":132190,"byte_end":132198,"line_start":235,"line_end":235,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Record>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this `Record` contains _no_ values.\n","sig":null,"attributes":[{"value":"/ Returns true if this `Record` contains _no_ values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":132123,"byte_end":132178,"line_start":234,"line_end":234,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":645},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":132441,"byte_end":132444,"line_start":245,"line_end":245,"column_start":12,"column_end":15},"name":"new","qualname":"<Current>::new","value":"pub fn new(Id, &'static Metadata) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Current` that indicates the current context is a span\n with the given `metadata` and `metadata`.\n","sig":null,"attributes":[{"value":"/ Constructs a new `Current` that indicates the current context is a span","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":132304,"byte_end":132379,"line_start":243,"line_end":243,"column_start":5,"column_end":80}},{"value":"/ with the given `metadata` and `metadata`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":132384,"byte_end":132429,"line_start":244,"line_end":244,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":132701,"byte_end":132705,"line_start":253,"line_end":253,"column_start":12,"column_end":16},"name":"none","qualname":"<Current>::none","value":"pub fn none() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Current` that indicates the current context is *not*\n in a span.\n","sig":null,"attributes":[{"value":"/ Constructs a new `Current` that indicates the current context is *not*","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":132596,"byte_end":132670,"line_start":251,"line_end":251,"column_start":5,"column_end":79}},{"value":"/ in a span.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":132675,"byte_end":132689,"line_start":252,"line_end":252,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":133605,"byte_end":133613,"line_start":279,"line_end":279,"column_start":12,"column_end":20},"name":"is_known","qualname":"<Current>::is_known","value":"pub fn is_known(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Subscriber` that constructed this `Current` tracks a\n current span.","sig":null,"attributes":[{"value":"/ Returns `true` if the `Subscriber` that constructed this `Current` tracks a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":133011,"byte_end":133090,"line_start":267,"line_end":267,"column_start":5,"column_end":84}},{"value":"/ current span.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":133095,"byte_end":133112,"line_start":268,"line_end":268,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":133117,"byte_end":133120,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ If this returns `true` and [`id`], [`metadata`], or [`into_inner`]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":133125,"byte_end":133195,"line_start":270,"line_end":270,"column_start":5,"column_end":75}},{"value":"/ return `None`, that indicates that we are currently known to *not* be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":133200,"byte_end":133273,"line_start":271,"line_end":271,"column_start":5,"column_end":78}},{"value":"/ inside a span. If this returns `false`, those methods will also return","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":133278,"byte_end":133352,"line_start":272,"line_end":272,"column_start":5,"column_end":79}},{"value":"/ `None`, but in this case, that is because the subscriber does not keep","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":133357,"byte_end":133431,"line_start":273,"line_end":273,"column_start":5,"column_end":79}},{"value":"/ track of the currently-entered span.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":133436,"byte_end":133476,"line_start":274,"line_end":274,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":133481,"byte_end":133484,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ [`id`]: #method.id","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":133489,"byte_end":133511,"line_start":276,"line_end":276,"column_start":5,"column_end":27}},{"value":"/ [`metadata`]: #method.metadata","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":133516,"byte_end":133550,"line_start":277,"line_end":277,"column_start":5,"column_end":39}},{"value":"/ [`into_inner`]: #method.into_inner","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":133555,"byte_end":133593,"line_start":278,"line_end":278,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":133824,"byte_end":133834,"line_start":285,"line_end":285,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Current>::into_inner","value":"pub fn into_inner(Self) -> Option<(Id, &'static Metadata)>","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` and returns the span `Id` and `Metadata` of the current\n span, if one exists and is known.\n","sig":null,"attributes":[{"value":"/ Consumes `self` and returns the span `Id` and `Metadata` of the current","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":133695,"byte_end":133770,"line_start":283,"line_end":283,"column_start":5,"column_end":80}},{"value":"/ span, if one exists and is known.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":133775,"byte_end":133812,"line_start":284,"line_end":284,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":650},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":134115,"byte_end":134117,"line_start":293,"line_end":293,"column_start":12,"column_end":14},"name":"id","qualname":"<Current>::id","value":"pub fn id(&Self) -> Option<&Id>","parent":null,"children":[],"decl_id":null,"docs":" Borrows the `Id` of the current span, if one exists and is known.\n","sig":null,"attributes":[{"value":"/ Borrows the `Id` of the current span, if one exists and is known.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":134034,"byte_end":134103,"line_start":292,"line_end":292,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":134362,"byte_end":134370,"line_start":301,"line_end":301,"column_start":12,"column_end":20},"name":"metadata","qualname":"<Current>::metadata","value":"pub fn metadata(&Self) -> Option<&'static Metadata>","parent":null,"children":[],"decl_id":null,"docs":" Borrows the `Metadata` of the current span, if one exists and is known.\n","sig":null,"attributes":[{"value":"/ Borrows the `Metadata` of the current span, if one exists and is known.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":134275,"byte_end":134350,"line_start":300,"line_end":300,"column_start":5,"column_end":80}}]},{"kind":"Mod","id":{"krate":0,"index":665},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"subscriber","qualname":"::subscriber","value":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","parent":null,"children":[{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":670},{"krate":0,"index":673},{"krate":0,"index":676},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":684},{"krate":0,"index":687},{"krate":0,"index":690},{"krate":0,"index":693},{"krate":0,"index":708},{"krate":0,"index":1213},{"krate":0,"index":1216},{"krate":0,"index":1218},{"krate":0,"index":1220},{"krate":0,"index":1230},{"krate":0,"index":1231},{"krate":0,"index":1233},{"krate":0,"index":1235},{"krate":0,"index":1236},{"krate":0,"index":1238},{"krate":0,"index":1239},{"krate":0,"index":1241},{"krate":0,"index":1243},{"krate":0,"index":713},{"krate":0,"index":1245},{"krate":0,"index":1248},{"krate":0,"index":1249},{"krate":0,"index":1251},{"krate":0,"index":1253},{"krate":0,"index":721},{"krate":0,"index":730},{"krate":0,"index":745}],"decl_id":null,"docs":" Subscribers collect and record trace data.\n","sig":null,"attributes":[{"value":"/ Subscribers collect and record trace data.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":137602,"byte_end":137648,"line_start":1,"line_end":1,"column_start":1,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":693},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":141516,"byte_end":141526,"line_start":74,"line_end":74,"column_start":11,"column_end":21},"name":"Subscriber","qualname":"::subscriber::Subscriber","value":"Subscriber: 'static","parent":null,"children":[{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707}],"decl_id":null,"docs":" Trait representing the functions required to collect trace data.","sig":null,"attributes":[{"value":"/ Trait representing the functions required to collect trace data.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":137779,"byte_end":137847,"line_start":10,"line_end":10,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":137848,"byte_end":137851,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Crates that provide implementations of methods for collecting or recording","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":137852,"byte_end":137930,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ trace data should implement the `Subscriber` interface. This trait is","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":137931,"byte_end":138004,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/ intended to represent fundamental primitives for collecting trace events and","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":138005,"byte_end":138085,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ spans — other libraries may offer utility functions and types to make","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":138086,"byte_end":138161,"line_start":15,"line_end":15,"column_start":1,"column_end":74}},{"value":"/ subscriber implementations more modular or improve the ergonomics of writing","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":138162,"byte_end":138242,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ subscribers.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":138243,"byte_end":138259,"line_start":17,"line_end":17,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":138260,"byte_end":138263,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ A subscriber is responsible for the following:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":138264,"byte_end":138314,"line_start":19,"line_end":19,"column_start":1,"column_end":51}},{"value":"/ - Registering new spans as they are created, and providing them with span","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":138315,"byte_end":138392,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/   IDs. Implicitly, this means the subscriber may determine the strategy for","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":138393,"byte_end":138472,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/   determining span equality.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":138473,"byte_end":138505,"line_start":22,"line_end":22,"column_start":1,"column_end":33}},{"value":"/ - Recording the attachment of field values and follows-from annotations to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":138506,"byte_end":138584,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/   spans.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":138585,"byte_end":138597,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/ - Filtering spans and events, and determining when those filters must be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":138598,"byte_end":138674,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/   invalidated.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":138675,"byte_end":138693,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"/ - Observing spans as they are entered, exited, and closed, and events as","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":138694,"byte_end":138770,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"/   they occur.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":138771,"byte_end":138788,"line_start":28,"line_end":28,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":138789,"byte_end":138792,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ When a span is entered or exited, the subscriber is provided only with the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":138793,"byte_end":138871,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ [ID] with which it tagged that span when it was created. This means","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":138872,"byte_end":138943,"line_start":31,"line_end":31,"column_start":1,"column_end":72}},{"value":"/ that it is up to the subscriber to determine whether and how span _data_ —","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":138944,"byte_end":139024,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/ the fields and metadata describing the span — should be stored. The","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":139025,"byte_end":139098,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"/ [`new_span`] function is called when a new span is created, and at that","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":139099,"byte_end":139174,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/ point, the subscriber _may_ choose to store the associated data if it will","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":139175,"byte_end":139253,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ be referenced again. However, if the data has already been recorded and will","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":139254,"byte_end":139334,"line_start":36,"line_end":36,"column_start":1,"column_end":81}},{"value":"/ not be needed by the implementations of `enter` and `exit`, the subscriber","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":139335,"byte_end":139413,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"/ may freely discard that data without allocating space to store it.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":139414,"byte_end":139484,"line_start":38,"line_end":38,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":139485,"byte_end":139488,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ## Overriding default impls","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":139489,"byte_end":139520,"line_start":40,"line_end":40,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":139521,"byte_end":139524,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Some trait methods on `Subscriber` have default implementations, either in","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":139525,"byte_end":139603,"line_start":42,"line_end":42,"column_start":1,"column_end":79}},{"value":"/ order to reduce the surface area of implementing `Subscriber`, or for","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":139604,"byte_end":139677,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/ backward-compatibility reasons. However, many subscribers will likely want","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":139678,"byte_end":139756,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/ to override these default implementations.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":139757,"byte_end":139803,"line_start":45,"line_end":45,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":139804,"byte_end":139807,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ The following methods are likely of interest:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":139808,"byte_end":139857,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":139858,"byte_end":139861,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ - [`register_callsite`] is called once for each callsite from which a span","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":139862,"byte_end":139940,"line_start":49,"line_end":49,"column_start":1,"column_end":79}},{"value":"/   event may originate, and returns an [`Interest`] value describing whether or","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":139941,"byte_end":140023,"line_start":50,"line_end":50,"column_start":1,"column_end":83}},{"value":"/   not the subscriber wishes to see events or spans from that callsite. By","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":140024,"byte_end":140101,"line_start":51,"line_end":51,"column_start":1,"column_end":78}},{"value":"/   default, it calls [`enabled`], and returns `Interest::always()` if","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":140102,"byte_end":140174,"line_start":52,"line_end":52,"column_start":1,"column_end":73}},{"value":"/   `enabled` returns true, or `Interest::never()` if enabled returns false.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":140175,"byte_end":140253,"line_start":53,"line_end":53,"column_start":1,"column_end":79}},{"value":"/   However, if the subscriber's interest can change dynamically at runtime,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":140254,"byte_end":140332,"line_start":54,"line_end":54,"column_start":1,"column_end":79}},{"value":"/   it may want to override this function to return `Interest::sometimes()`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":140333,"byte_end":140411,"line_start":55,"line_end":55,"column_start":1,"column_end":79}},{"value":"/   Additionally, subscribers which wish to perform a behaviour once for each","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":140412,"byte_end":140491,"line_start":56,"line_end":56,"column_start":1,"column_end":80}},{"value":"/   callsite, such as allocating storage for data related to that callsite,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":140492,"byte_end":140569,"line_start":57,"line_end":57,"column_start":1,"column_end":78}},{"value":"/   can perform it in `register_callsite`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":140570,"byte_end":140614,"line_start":58,"line_end":58,"column_start":1,"column_end":45}},{"value":"/ - [`clone_span`] is called every time a span ID is cloned, and [`try_close`]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":140615,"byte_end":140695,"line_start":59,"line_end":59,"column_start":1,"column_end":81}},{"value":"/   is called when a span ID is dropped. By default, these functions do","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":140696,"byte_end":140769,"line_start":60,"line_end":60,"column_start":1,"column_end":74}},{"value":"/   nothing. However, they can be used to implement reference counting for","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":140770,"byte_end":140846,"line_start":61,"line_end":61,"column_start":1,"column_end":77}},{"value":"/   spans, allowing subscribers to free storage for span data and to determine","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":140847,"byte_end":140927,"line_start":62,"line_end":62,"column_start":1,"column_end":81}},{"value":"/   when a span has _closed_ permanently (rather than being exited).","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":140928,"byte_end":140998,"line_start":63,"line_end":63,"column_start":1,"column_end":71}},{"value":"/   Subscribers which store per-span data or which need to track span closures","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":140999,"byte_end":141079,"line_start":64,"line_end":64,"column_start":1,"column_end":81}},{"value":"/   should override these functions together.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":141080,"byte_end":141127,"line_start":65,"line_end":65,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":141128,"byte_end":141131,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ [ID]: ../span/struct.Id.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":141132,"byte_end":141164,"line_start":67,"line_end":67,"column_start":1,"column_end":33}},{"value":"/ [`new_span`]: trait.Subscriber.html#method.new_span","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":141165,"byte_end":141220,"line_start":68,"line_end":68,"column_start":1,"column_end":56}},{"value":"/ [`register_callsite`]: trait.Subscriber.html#method.register_callsite","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":141221,"byte_end":141294,"line_start":69,"line_end":69,"column_start":1,"column_end":74}},{"value":"/ [`Interest`]: struct.Interest.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":141295,"byte_end":141333,"line_start":70,"line_end":70,"column_start":1,"column_end":39}},{"value":"/ [`enabled`]: trait.Subscriber.html#method.enabled","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":141334,"byte_end":141387,"line_start":71,"line_end":71,"column_start":1,"column_end":54}},{"value":"/ [`clone_span`]: trait.Subscriber.html#method.clone_span","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":141388,"byte_end":141447,"line_start":72,"line_end":72,"column_start":1,"column_end":60}},{"value":"/ [`try_close`]: trait.Subscriber.html#method.try_close","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":141448,"byte_end":141505,"line_start":73,"line_end":73,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":145562,"byte_end":145579,"line_start":144,"line_end":144,"column_start":8,"column_end":25},"name":"register_callsite","qualname":"::subscriber::Subscriber::register_callsite","value":"pub fn register_callsite(&Self, &'static Metadata) -> Interest","parent":{"krate":0,"index":693},"children":[],"decl_id":null,"docs":" Registers a new callsite with this subscriber, returning whether or not\n the subscriber is interested in being notified about the callsite.","sig":null,"attributes":[{"value":"/ Registers a new callsite with this subscriber, returning whether or not","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":141623,"byte_end":141698,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/ the subscriber is interested in being notified about the callsite.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":141703,"byte_end":141773,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":141778,"byte_end":141781,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ By default, this function assumes that the subscriber's [filter]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":141786,"byte_end":141854,"line_start":80,"line_end":80,"column_start":5,"column_end":73}},{"value":"/ represents an unchanging view of its interest in the callsite. However,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":141859,"byte_end":141934,"line_start":81,"line_end":81,"column_start":5,"column_end":80}},{"value":"/ if this is not the case, subscribers may override this function to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":141939,"byte_end":142009,"line_start":82,"line_end":82,"column_start":5,"column_end":75}},{"value":"/ indicate different interests, or to implement behaviour that should run","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":142014,"byte_end":142089,"line_start":83,"line_end":83,"column_start":5,"column_end":80}},{"value":"/ once for every callsite.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":142094,"byte_end":142122,"line_start":84,"line_end":84,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":142127,"byte_end":142130,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ This function is guaranteed to be called at least once per callsite on","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":142135,"byte_end":142209,"line_start":86,"line_end":86,"column_start":5,"column_end":79}},{"value":"/ every active subscriber. The subscriber may store the keys to fields it","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":142214,"byte_end":142289,"line_start":87,"line_end":87,"column_start":5,"column_end":80}},{"value":"/ cares about in order to reduce the cost of accessing fields by name,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":142294,"byte_end":142366,"line_start":88,"line_end":88,"column_start":5,"column_end":77}},{"value":"/ preallocate storage for that callsite, or perform any other actions it","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":142371,"byte_end":142445,"line_start":89,"line_end":89,"column_start":5,"column_end":79}},{"value":"/ wishes to perform once for each callsite.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":142450,"byte_end":142495,"line_start":90,"line_end":90,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":142500,"byte_end":142503,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ The subscriber should then return an [`Interest`], indicating","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":142508,"byte_end":142573,"line_start":92,"line_end":92,"column_start":5,"column_end":70}},{"value":"/ whether it is interested in being notified about that callsite in the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":142578,"byte_end":142651,"line_start":93,"line_end":93,"column_start":5,"column_end":78}},{"value":"/ future. This may be `Always` indicating that the subscriber always","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":142656,"byte_end":142726,"line_start":94,"line_end":94,"column_start":5,"column_end":75}},{"value":"/ wishes to be notified about the callsite, and its filter need not be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":142731,"byte_end":142803,"line_start":95,"line_end":95,"column_start":5,"column_end":77}},{"value":"/ re-evaluated; `Sometimes`, indicating that the subscriber may sometimes","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":142808,"byte_end":142883,"line_start":96,"line_end":96,"column_start":5,"column_end":80}},{"value":"/ care about the callsite but not always (such as when sampling), or","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":142888,"byte_end":142958,"line_start":97,"line_end":97,"column_start":5,"column_end":75}},{"value":"/ `Never`, indicating that the subscriber never wishes to be notified about","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":142963,"byte_end":143040,"line_start":98,"line_end":98,"column_start":5,"column_end":82}},{"value":"/ that callsite. If all active subscribers return `Never`, a callsite will","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":143045,"byte_end":143121,"line_start":99,"line_end":99,"column_start":5,"column_end":81}},{"value":"/ never be enabled unless a new subscriber expresses interest in it.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":143126,"byte_end":143196,"line_start":100,"line_end":100,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":143201,"byte_end":143204,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ `Subscriber`s which require their filters to be run every time an event","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":143209,"byte_end":143284,"line_start":102,"line_end":102,"column_start":5,"column_end":80}},{"value":"/ occurs or a span is entered/exited should return `Interest::sometimes`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":143289,"byte_end":143364,"line_start":103,"line_end":103,"column_start":5,"column_end":80}},{"value":"/ If a subscriber returns `Interest::sometimes`, then its [`enabled`] method","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":143369,"byte_end":143447,"line_start":104,"line_end":104,"column_start":5,"column_end":83}},{"value":"/ will be called every time an event or span is created from that callsite.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":143452,"byte_end":143529,"line_start":105,"line_end":105,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":143534,"byte_end":143537,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ For example, suppose a sampling subscriber is implemented by","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":143542,"byte_end":143606,"line_start":107,"line_end":107,"column_start":5,"column_end":69}},{"value":"/ incrementing a counter every time `enabled` is called and only returning","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":143611,"byte_end":143687,"line_start":108,"line_end":108,"column_start":5,"column_end":81}},{"value":"/ `true` when the counter is divisible by a specified sampling rate. If","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":143692,"byte_end":143765,"line_start":109,"line_end":109,"column_start":5,"column_end":78}},{"value":"/ that subscriber returns `Interest::always` from `register_callsite`, then","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":143770,"byte_end":143847,"line_start":110,"line_end":110,"column_start":5,"column_end":82}},{"value":"/ the filter will not be re-evaluated once it has been applied to a given","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":143852,"byte_end":143927,"line_start":111,"line_end":111,"column_start":5,"column_end":80}},{"value":"/ set of metadata. Thus, the counter will not be incremented, and the span","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":143932,"byte_end":144008,"line_start":112,"line_end":112,"column_start":5,"column_end":81}},{"value":"/ or event that corresponds to the metadata will never be `enabled`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":144013,"byte_end":144083,"line_start":113,"line_end":113,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":144088,"byte_end":144091,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ `Subscriber`s that need to change their filters occasionally should call","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":144096,"byte_end":144172,"line_start":115,"line_end":115,"column_start":5,"column_end":81}},{"value":"/ [`rebuild_interest_cache`] to re-evaluate `register_callsite` for all","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":144177,"byte_end":144250,"line_start":116,"line_end":116,"column_start":5,"column_end":78}},{"value":"/ callsites.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":144255,"byte_end":144269,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":144274,"byte_end":144277,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ Similarly, if a `Subscriber` has a filtering strategy that can be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":144282,"byte_end":144351,"line_start":119,"line_end":119,"column_start":5,"column_end":74}},{"value":"/ changed dynamically at runtime, it would need to re-evaluate that filter","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":144356,"byte_end":144432,"line_start":120,"line_end":120,"column_start":5,"column_end":81}},{"value":"/ if the cached results have changed.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":144437,"byte_end":144476,"line_start":121,"line_end":121,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":144481,"byte_end":144484,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ A subscriber which manages fanout to multiple other subscribers","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":144489,"byte_end":144556,"line_start":123,"line_end":123,"column_start":5,"column_end":72}},{"value":"/ should proxy this decision to all of its child subscribers,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":144561,"byte_end":144624,"line_start":124,"line_end":124,"column_start":5,"column_end":68}},{"value":"/ returning `Interest::never` only if _all_ such children return","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":144629,"byte_end":144695,"line_start":125,"line_end":125,"column_start":5,"column_end":71}},{"value":"/ `Interest::never`. If the set of subscribers to which spans are","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":144700,"byte_end":144767,"line_start":126,"line_end":126,"column_start":5,"column_end":72}},{"value":"/ broadcast may change dynamically, the subscriber should also never","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":144772,"byte_end":144842,"line_start":127,"line_end":127,"column_start":5,"column_end":75}},{"value":"/ return `Interest::Never`, as a new subscriber may be added that _is_","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":144847,"byte_end":144919,"line_start":128,"line_end":128,"column_start":5,"column_end":77}},{"value":"/ interested.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":144924,"byte_end":144939,"line_start":129,"line_end":129,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":144944,"byte_end":144947,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":144952,"byte_end":144963,"line_start":131,"line_end":131,"column_start":5,"column_end":16}},{"value":"/ This function may be called again when a new subscriber is created or","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":144968,"byte_end":145041,"line_start":132,"line_end":132,"column_start":5,"column_end":78}},{"value":"/ when the registry is invalidated.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":145046,"byte_end":145083,"line_start":133,"line_end":133,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":145088,"byte_end":145091,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ If a subscriber returns `Interest::never` for a particular callsite, it","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":145096,"byte_end":145171,"line_start":135,"line_end":135,"column_start":5,"column_end":80}},{"value":"/ _may_ still see spans and events originating from that callsite, if","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":145176,"byte_end":145247,"line_start":136,"line_end":136,"column_start":5,"column_end":76}},{"value":"/ another subscriber expressed interest in it.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":145252,"byte_end":145300,"line_start":137,"line_end":137,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":145305,"byte_end":145308,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ [filter]: #method.enabled","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":145313,"byte_end":145342,"line_start":139,"line_end":139,"column_start":5,"column_end":34}},{"value":"/ [metadata]: ../metadata/struct.Metadata.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":145347,"byte_end":145395,"line_start":140,"line_end":140,"column_start":5,"column_end":53}},{"value":"/ [`Interest`]: struct.Interest.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":145400,"byte_end":145438,"line_start":141,"line_end":141,"column_start":5,"column_end":43}},{"value":"/ [`enabled`]: #method.enabled","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":145443,"byte_end":145475,"line_start":142,"line_end":142,"column_start":5,"column_end":37}},{"value":"/ [`rebuild_interest_cache`]: ../callsite/fn.rebuild_interest_cache.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":145480,"byte_end":145554,"line_start":143,"line_end":143,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":146953,"byte_end":146960,"line_start":172,"line_end":172,"column_start":8,"column_end":15},"name":"enabled","qualname":"::subscriber::Subscriber::enabled","value":"pub fn enabled(&Self, &Metadata) -> bool","parent":{"krate":0,"index":693},"children":[],"decl_id":null,"docs":" Returns true if a span or event with the specified [metadata] would be\n recorded.","sig":null,"attributes":[{"value":"/ Returns true if a span or event with the specified [metadata] would be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":145774,"byte_end":145848,"line_start":152,"line_end":152,"column_start":5,"column_end":79}},{"value":"/ recorded.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":145853,"byte_end":145866,"line_start":153,"line_end":153,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":145871,"byte_end":145874,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ By default, it is assumed that this filter needs only be evaluated once","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":145879,"byte_end":145954,"line_start":155,"line_end":155,"column_start":5,"column_end":80}},{"value":"/ for each callsite, so it is called by [`register_callsite`] when each","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":145959,"byte_end":146032,"line_start":156,"line_end":156,"column_start":5,"column_end":78}},{"value":"/ callsite is registered. The result is used to determine if the subscriber","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":146037,"byte_end":146114,"line_start":157,"line_end":157,"column_start":5,"column_end":82}},{"value":"/ is always [interested] or never interested in that callsite. This is intended","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":146119,"byte_end":146200,"line_start":158,"line_end":158,"column_start":5,"column_end":86}},{"value":"/ primarily as an optimization, so that expensive filters (such as those","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":146205,"byte_end":146279,"line_start":159,"line_end":159,"column_start":5,"column_end":79}},{"value":"/ involving string search, et cetera) need not be re-evaluated.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":146284,"byte_end":146349,"line_start":160,"line_end":160,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":146354,"byte_end":146357,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ However, if the subscriber's interest in a particular span or event may","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":146362,"byte_end":146437,"line_start":162,"line_end":162,"column_start":5,"column_end":80}},{"value":"/ change, or depends on contexts only determined dynamically at runtime,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":146442,"byte_end":146516,"line_start":163,"line_end":163,"column_start":5,"column_end":79}},{"value":"/ then the `register_callsite` method should be overridden to return","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":146521,"byte_end":146591,"line_start":164,"line_end":164,"column_start":5,"column_end":75}},{"value":"/ [`Interest::sometimes`]. In that case, this function will be called every","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":146596,"byte_end":146673,"line_start":165,"line_end":165,"column_start":5,"column_end":82}},{"value":"/ time that span or event occurs.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":146678,"byte_end":146713,"line_start":166,"line_end":166,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":146718,"byte_end":146721,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ [metadata]: ../metadata/struct.Metadata.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":146726,"byte_end":146774,"line_start":168,"line_end":168,"column_start":5,"column_end":53}},{"value":"/ [interested]: struct.Interest.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":146779,"byte_end":146817,"line_start":169,"line_end":169,"column_start":5,"column_end":43}},{"value":"/ [`Interest::sometimes`]: struct.Interest.html#method.sometimes","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":146822,"byte_end":146888,"line_start":170,"line_end":170,"column_start":5,"column_end":71}},{"value":"/ [`register_callsite`]: #method.register_callsite","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":146893,"byte_end":146945,"line_start":171,"line_end":171,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":696},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":148410,"byte_end":148424,"line_start":197,"line_end":197,"column_start":8,"column_end":22},"name":"max_level_hint","qualname":"::subscriber::Subscriber::max_level_hint","value":"pub fn max_level_hint(&Self) -> Option<LevelFilter>","parent":{"krate":0,"index":693},"children":[],"decl_id":null,"docs":" Returns the highest [verbosity level][level] that this `Subscriber` will\n enable, or `None`, if the subscriber does not implement level-based\n filtering or chooses not to implement this method.","sig":null,"attributes":[{"value":"/ Returns the highest [verbosity level][level] that this `Subscriber` will","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":147007,"byte_end":147083,"line_start":174,"line_end":174,"column_start":5,"column_end":81}},{"value":"/ enable, or `None`, if the subscriber does not implement level-based","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":147088,"byte_end":147159,"line_start":175,"line_end":175,"column_start":5,"column_end":76}},{"value":"/ filtering or chooses not to implement this method.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":147164,"byte_end":147218,"line_start":176,"line_end":176,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":147223,"byte_end":147226,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ If this method returns a [`Level`][level], it will be used as a hint to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":147231,"byte_end":147306,"line_start":178,"line_end":178,"column_start":5,"column_end":80}},{"value":"/ determine the most verbose level that will be enabled. This will allow","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":147311,"byte_end":147385,"line_start":179,"line_end":179,"column_start":5,"column_end":79}},{"value":"/ spans and events which are more verbose than that level to be skipped","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":147390,"byte_end":147463,"line_start":180,"line_end":180,"column_start":5,"column_end":78}},{"value":"/ more efficiently. Subscribers which perform filtering are strongly","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":147468,"byte_end":147538,"line_start":181,"line_end":181,"column_start":5,"column_end":75}},{"value":"/ encouraged to provide an implementation of this method.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":147543,"byte_end":147602,"line_start":182,"line_end":182,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":147607,"byte_end":147610,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ If the maximum level the subscriber will enable can change over the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":147615,"byte_end":147686,"line_start":184,"line_end":184,"column_start":5,"column_end":76}},{"value":"/ course of its lifetime, it is free to return a different value from","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":147691,"byte_end":147762,"line_start":185,"line_end":185,"column_start":5,"column_end":76}},{"value":"/ multiple invocations of this method. However, note that changes in the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":147767,"byte_end":147841,"line_start":186,"line_end":186,"column_start":5,"column_end":79}},{"value":"/ maximum level will **only** be reflected after the callsite [`Interest`]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":147846,"byte_end":147922,"line_start":187,"line_end":187,"column_start":5,"column_end":81}},{"value":"/ cache is rebuilt, by calling the [`callsite::rebuild_interest_cache`][rebuild]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":147927,"byte_end":148009,"line_start":188,"line_end":188,"column_start":5,"column_end":87}},{"value":"/ function. Therefore, if the subscriber will change the value returned by","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":148014,"byte_end":148090,"line_start":189,"line_end":189,"column_start":5,"column_end":81}},{"value":"/ this method, it is responsible for ensuring that","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":148095,"byte_end":148147,"line_start":190,"line_end":190,"column_start":5,"column_end":57}},{"value":"/ [`rebuild_interest_cache`][rebuild] is called after the value of the max","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":148152,"byte_end":148228,"line_start":191,"line_end":191,"column_start":5,"column_end":81}},{"value":"/ level changes.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":148233,"byte_end":148251,"line_start":192,"line_end":192,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":148256,"byte_end":148259,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ [level]: ../struct.Level.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":148264,"byte_end":148297,"line_start":194,"line_end":194,"column_start":5,"column_end":38}},{"value":"/ [`Interest`]: struct.Interest.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":148302,"byte_end":148340,"line_start":195,"line_end":195,"column_start":5,"column_end":43}},{"value":"/ [rebuild]: ../callsite/fn.rebuild_interest_cache.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":148345,"byte_end":148402,"line_start":196,"line_end":196,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":149867,"byte_end":149875,"line_start":225,"line_end":225,"column_start":8,"column_end":16},"name":"new_span","qualname":"::subscriber::Subscriber::new_span","value":"pub fn new_span(&Self, &span::Attributes) -> span::Id","parent":{"krate":0,"index":693},"children":[],"decl_id":null,"docs":" Visit the construction of a new span, returning a new [span ID] for the\n span being constructed.","sig":null,"attributes":[{"value":"/ Visit the construction of a new span, returning a new [span ID] for the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":148481,"byte_end":148556,"line_start":201,"line_end":201,"column_start":5,"column_end":80}},{"value":"/ span being constructed.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":148561,"byte_end":148588,"line_start":202,"line_end":202,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":148593,"byte_end":148596,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ The provided [`Attributes`] contains any field values that were provided","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":148601,"byte_end":148677,"line_start":204,"line_end":204,"column_start":5,"column_end":81}},{"value":"/ when the span was created. The subscriber may pass a [visitor] to the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":148682,"byte_end":148755,"line_start":205,"line_end":205,"column_start":5,"column_end":78}},{"value":"/ `Attributes`' [`record` method] to record these values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":148760,"byte_end":148819,"line_start":206,"line_end":206,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":148824,"byte_end":148827,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ IDs are used to uniquely identify spans and events within the context of a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":148832,"byte_end":148910,"line_start":208,"line_end":208,"column_start":5,"column_end":83}},{"value":"/ subscriber, so span equality will be based on the returned ID. Thus, if","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":148915,"byte_end":148990,"line_start":209,"line_end":209,"column_start":5,"column_end":80}},{"value":"/ the subscriber wishes for all spans with the same metadata to be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":148995,"byte_end":149063,"line_start":210,"line_end":210,"column_start":5,"column_end":73}},{"value":"/ considered equal, it should return the same ID every time it is given a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":149068,"byte_end":149143,"line_start":211,"line_end":211,"column_start":5,"column_end":80}},{"value":"/ particular set of metadata. Similarly, if it wishes for two separate","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":149148,"byte_end":149220,"line_start":212,"line_end":212,"column_start":5,"column_end":77}},{"value":"/ instances of a span with the same metadata to *not* be equal, it should","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":149225,"byte_end":149300,"line_start":213,"line_end":213,"column_start":5,"column_end":80}},{"value":"/ return a distinct ID every time this function is called, regardless of","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":149305,"byte_end":149379,"line_start":214,"line_end":214,"column_start":5,"column_end":79}},{"value":"/ the metadata.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":149384,"byte_end":149401,"line_start":215,"line_end":215,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":149406,"byte_end":149409,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ Note that the subscriber is free to assign span IDs based on whatever","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":149414,"byte_end":149487,"line_start":217,"line_end":217,"column_start":5,"column_end":78}},{"value":"/ scheme it sees fit. Any guarantees about uniqueness, ordering, or ID","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":149492,"byte_end":149564,"line_start":218,"line_end":218,"column_start":5,"column_end":77}},{"value":"/ reuse are left up to the subscriber implementation to determine.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":149569,"byte_end":149637,"line_start":219,"line_end":219,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":149642,"byte_end":149645,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ [span ID]: ../span/struct.Id.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":149650,"byte_end":149687,"line_start":221,"line_end":221,"column_start":5,"column_end":42}},{"value":"/ [`Attributes`]: ../span/struct.Attributes.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":149692,"byte_end":149742,"line_start":222,"line_end":222,"column_start":5,"column_end":55}},{"value":"/ [visitor]: ../field/trait.Visit.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":149747,"byte_end":149787,"line_start":223,"line_end":223,"column_start":5,"column_end":45}},{"value":"/ [`record` method]: ../span/struct.Attributes.html#method.record","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":149792,"byte_end":149859,"line_start":224,"line_end":224,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":698},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":151490,"byte_end":151496,"line_start":265,"line_end":265,"column_start":8,"column_end":14},"name":"record","qualname":"::subscriber::Subscriber::record","value":"pub fn record(&Self, &span::Id, &span::Record)","parent":{"krate":0,"index":693},"children":[],"decl_id":null,"docs":" Record a set of values on a span.","sig":null,"attributes":[{"value":"/ Record a set of values on a span.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":150011,"byte_end":150048,"line_start":229,"line_end":229,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":150053,"byte_end":150056,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ This method will be invoked when value is recorded on a span.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":150061,"byte_end":150126,"line_start":231,"line_end":231,"column_start":5,"column_end":70}},{"value":"/ Recording multiple values for the same field is possible,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":150131,"byte_end":150192,"line_start":232,"line_end":232,"column_start":5,"column_end":66}},{"value":"/ but the actual behaviour is defined by the subscriber implementation.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":150197,"byte_end":150270,"line_start":233,"line_end":233,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":150275,"byte_end":150278,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ Keep in mind that a span might not provide a value","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":150283,"byte_end":150337,"line_start":235,"line_end":235,"column_start":5,"column_end":59}},{"value":"/ for each field it declares.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":150342,"byte_end":150373,"line_start":236,"line_end":236,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":150378,"byte_end":150381,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ The subscriber is expected to provide a [visitor] to the `Record`'s","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":150386,"byte_end":150457,"line_start":238,"line_end":238,"column_start":5,"column_end":76}},{"value":"/ [`record` method] in order to record the added values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":150462,"byte_end":150520,"line_start":239,"line_end":239,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":150525,"byte_end":150528,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":150533,"byte_end":150546,"line_start":241,"line_end":241,"column_start":5,"column_end":18}},{"value":"/  \"foo = 3\" will be recorded when [`record`] is called on the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":150551,"byte_end":150615,"line_start":242,"line_end":242,"column_start":5,"column_end":69}},{"value":"/ `Attributes` passed to `new_span`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":150620,"byte_end":150658,"line_start":243,"line_end":243,"column_start":5,"column_end":43}},{"value":"/ Since values are not provided for the `bar` and `baz` fields,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":150663,"byte_end":150728,"line_start":244,"line_end":244,"column_start":5,"column_end":70}},{"value":"/ the span's `Metadata` will indicate that it _has_ those fields,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":150733,"byte_end":150800,"line_start":245,"line_end":245,"column_start":5,"column_end":72}},{"value":"/ but values for them won't be recorded at this time.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":150805,"byte_end":150860,"line_start":246,"line_end":246,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":150865,"byte_end":150868,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":150873,"byte_end":150891,"line_start":248,"line_end":248,"column_start":5,"column_end":23}},{"value":"/ # use tracing::span;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":150896,"byte_end":150920,"line_start":249,"line_end":249,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":150925,"byte_end":150928,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ let mut span = span!(\"my_span\", foo = 3, bar, baz);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":150933,"byte_end":150988,"line_start":251,"line_end":251,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":150993,"byte_end":150996,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ // `Subscriber::record` will be called with a `Record`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":151001,"byte_end":151059,"line_start":253,"line_end":253,"column_start":5,"column_end":63}},{"value":"/ // containing \"bar = false\"","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":151064,"byte_end":151095,"line_start":254,"line_end":254,"column_start":5,"column_end":36}},{"value":"/ span.record(\"bar\", &false);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":151100,"byte_end":151131,"line_start":255,"line_end":255,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":151136,"byte_end":151139,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ // `Subscriber::record` will be called with a `Record`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":151144,"byte_end":151202,"line_start":257,"line_end":257,"column_start":5,"column_end":63}},{"value":"/ // containing \"baz = \"a string\"\"","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":151207,"byte_end":151243,"line_start":258,"line_end":258,"column_start":5,"column_end":41}},{"value":"/ span.record(\"baz\", &\"a string\");","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":151248,"byte_end":151284,"line_start":259,"line_end":259,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":151289,"byte_end":151296,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":151301,"byte_end":151304,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ [visitor]: ../field/trait.Visit.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":151309,"byte_end":151349,"line_start":262,"line_end":262,"column_start":5,"column_end":45}},{"value":"/ [`record`]: ../span/struct.Attributes.html#method.record","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":151354,"byte_end":151414,"line_start":263,"line_end":263,"column_start":5,"column_end":65}},{"value":"/ [`record` method]: ../span/struct.Record.html#method.record","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":151419,"byte_end":151482,"line_start":264,"line_end":264,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":152730,"byte_end":152749,"line_start":285,"line_end":285,"column_start":8,"column_end":27},"name":"record_follows_from","qualname":"::subscriber::Subscriber::record_follows_from","value":"pub fn record_follows_from(&Self, &span::Id, &span::Id)","parent":{"krate":0,"index":693},"children":[],"decl_id":null,"docs":" Adds an indication that `span` follows from the span with the id\n `follows`.","sig":null,"attributes":[{"value":"/ Adds an indication that `span` follows from the span with the id","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":151554,"byte_end":151622,"line_start":267,"line_end":267,"column_start":5,"column_end":73}},{"value":"/ `follows`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":151627,"byte_end":151641,"line_start":268,"line_end":268,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":151646,"byte_end":151649,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ This relationship differs somewhat from the parent-child relationship: a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":151654,"byte_end":151730,"line_start":270,"line_end":270,"column_start":5,"column_end":81}},{"value":"/ span may have any number of prior spans, rather than a single one; and","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":151735,"byte_end":151809,"line_start":271,"line_end":271,"column_start":5,"column_end":79}},{"value":"/ spans are not considered to be executing _inside_ of the spans they","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":151814,"byte_end":151885,"line_start":272,"line_end":272,"column_start":5,"column_end":76}},{"value":"/ follow from. This means that a span may close even if subsequent spans","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":151890,"byte_end":151964,"line_start":273,"line_end":273,"column_start":5,"column_end":79}},{"value":"/ that follow from it are still open, and time spent inside of a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":151969,"byte_end":152035,"line_start":274,"line_end":274,"column_start":5,"column_end":71}},{"value":"/ subsequent span should not be included in the time its precedents were","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":152040,"byte_end":152114,"line_start":275,"line_end":275,"column_start":5,"column_end":79}},{"value":"/ executing. This is used to model causal relationships such as when a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":152119,"byte_end":152191,"line_start":276,"line_end":276,"column_start":5,"column_end":77}},{"value":"/ single future spawns several related background tasks, et cetera.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":152196,"byte_end":152265,"line_start":277,"line_end":277,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":152270,"byte_end":152273,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ If the subscriber has spans corresponding to the given IDs, it should","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":152278,"byte_end":152351,"line_start":279,"line_end":279,"column_start":5,"column_end":78}},{"value":"/ record this relationship in whatever way it deems necessary. Otherwise,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":152356,"byte_end":152431,"line_start":280,"line_end":280,"column_start":5,"column_end":80}},{"value":"/ if one or both of the given span IDs do not correspond to spans that the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":152436,"byte_end":152512,"line_start":281,"line_end":281,"column_start":5,"column_end":81}},{"value":"/ subscriber knows about, or if a cyclical relationship would be created","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":152517,"byte_end":152591,"line_start":282,"line_end":282,"column_start":5,"column_end":79}},{"value":"/ (i.e., some span _a_ which proceeds some other span _b_ may not also","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":152596,"byte_end":152668,"line_start":283,"line_end":283,"column_start":5,"column_end":77}},{"value":"/ follow from _b_), it may silently do nothing.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":152673,"byte_end":152722,"line_start":284,"line_end":284,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":700},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":153720,"byte_end":153725,"line_start":305,"line_end":305,"column_start":8,"column_end":13},"name":"event","qualname":"::subscriber::Subscriber::event","value":"pub fn event(&Self, &Event)","parent":{"krate":0,"index":693},"children":[],"decl_id":null,"docs":" Records that an [`Event`] has occurred.","sig":null,"attributes":[{"value":"/ Records that an [`Event`] has occurred.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":152800,"byte_end":152843,"line_start":287,"line_end":287,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":152848,"byte_end":152851,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ This method will be invoked when an Event is constructed by","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":152856,"byte_end":152919,"line_start":289,"line_end":289,"column_start":5,"column_end":68}},{"value":"/ the `Event`'s [`dispatch` method]. For example, this happens internally","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":152924,"byte_end":152999,"line_start":290,"line_end":290,"column_start":5,"column_end":80}},{"value":"/ when an event macro from `tracing` is called.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":153004,"byte_end":153053,"line_start":291,"line_end":291,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":153058,"byte_end":153061,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ The key difference between this method and `record` is that `record` is","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":153066,"byte_end":153141,"line_start":293,"line_end":293,"column_start":5,"column_end":80}},{"value":"/ called when a value is recorded for a field defined by a span,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":153146,"byte_end":153212,"line_start":294,"line_end":294,"column_start":5,"column_end":71}},{"value":"/ while `event` is called when a new event occurs.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":153217,"byte_end":153269,"line_start":295,"line_end":295,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":153274,"byte_end":153277,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ The provided `Event` struct contains any field values attached to the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":153282,"byte_end":153355,"line_start":297,"line_end":297,"column_start":5,"column_end":78}},{"value":"/ event. The subscriber may pass a [visitor] to the `Event`'s","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":153360,"byte_end":153423,"line_start":298,"line_end":298,"column_start":5,"column_end":68}},{"value":"/ [`record` method] to record these values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":153428,"byte_end":153473,"line_start":299,"line_end":299,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":153478,"byte_end":153481,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ [`Event`]: ../event/struct.Event.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":153486,"byte_end":153527,"line_start":301,"line_end":301,"column_start":5,"column_end":46}},{"value":"/ [visitor]: ../field/trait.Visit.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":153532,"byte_end":153572,"line_start":302,"line_end":302,"column_start":5,"column_end":45}},{"value":"/ [`record` method]: ../event/struct.Event.html#method.record","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":153577,"byte_end":153640,"line_start":303,"line_end":303,"column_start":5,"column_end":68}},{"value":"/ [`dispatch` method]: ../event/struct.Event.html#method.dispatch","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":153645,"byte_end":153712,"line_start":304,"line_end":304,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":701},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":154141,"byte_end":154146,"line_start":315,"line_end":315,"column_start":8,"column_end":13},"name":"enter","qualname":"::subscriber::Subscriber::enter","value":"pub fn enter(&Self, &span::Id)","parent":{"krate":0,"index":693},"children":[],"decl_id":null,"docs":" Records that a span has been entered.","sig":null,"attributes":[{"value":"/ Records that a span has been entered.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":153758,"byte_end":153799,"line_start":307,"line_end":307,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":153804,"byte_end":153807,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ When entering a span, this method is called to notify the subscriber","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":153812,"byte_end":153884,"line_start":309,"line_end":309,"column_start":5,"column_end":77}},{"value":"/ that the span has been entered. The subscriber is provided with the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":153889,"byte_end":153960,"line_start":310,"line_end":310,"column_start":5,"column_end":76}},{"value":"/ [span ID] of the entered span, and should update any internal state","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":153965,"byte_end":154036,"line_start":311,"line_end":311,"column_start":5,"column_end":76}},{"value":"/ tracking the current span accordingly.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":154041,"byte_end":154083,"line_start":312,"line_end":312,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":154088,"byte_end":154091,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ [span ID]: ../span/struct.Id.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":154096,"byte_end":154133,"line_start":314,"line_end":314,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":154640,"byte_end":154644,"line_start":327,"line_end":327,"column_start":8,"column_end":12},"name":"exit","qualname":"::subscriber::Subscriber::exit","value":"pub fn exit(&Self, &span::Id)","parent":{"krate":0,"index":693},"children":[],"decl_id":null,"docs":" Records that a span has been exited.","sig":null,"attributes":[{"value":"/ Records that a span has been exited.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":154177,"byte_end":154217,"line_start":317,"line_end":317,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":154222,"byte_end":154225,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ When exiting a span, this method is called to notify the subscriber","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":154230,"byte_end":154301,"line_start":319,"line_end":319,"column_start":5,"column_end":76}},{"value":"/ that the span has been exited. The subscriber is provided with the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":154306,"byte_end":154376,"line_start":320,"line_end":320,"column_start":5,"column_end":75}},{"value":"/ [span ID] of the exited span, and should update any internal state","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":154381,"byte_end":154451,"line_start":321,"line_end":321,"column_start":5,"column_end":75}},{"value":"/ tracking the current span accordingly.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":154456,"byte_end":154498,"line_start":322,"line_end":322,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":154503,"byte_end":154506,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ Exiting a span does not imply that the span will not be re-entered.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":154511,"byte_end":154582,"line_start":324,"line_end":324,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":154587,"byte_end":154590,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ [span ID]: ../span/struct.Id.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":154595,"byte_end":154632,"line_start":326,"line_end":326,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":155839,"byte_end":155849,"line_start":349,"line_end":349,"column_start":8,"column_end":18},"name":"clone_span","qualname":"::subscriber::Subscriber::clone_span","value":"pub fn clone_span(&Self, &span::Id) -> span::Id","parent":{"krate":0,"index":693},"children":[],"decl_id":null,"docs":" Notifies the subscriber that a [span ID] has been cloned.","sig":null,"attributes":[{"value":"/ Notifies the subscriber that a [span ID] has been cloned.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":154675,"byte_end":154736,"line_start":329,"line_end":329,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":154741,"byte_end":154744,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ This function is guaranteed to only be called with span IDs that were","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":154749,"byte_end":154822,"line_start":331,"line_end":331,"column_start":5,"column_end":78}},{"value":"/ returned by this subscriber's `new_span` function.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":154827,"byte_end":154881,"line_start":332,"line_end":332,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":154886,"byte_end":154889,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ Note that the default implementation of this function this is just the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":154894,"byte_end":154968,"line_start":334,"line_end":334,"column_start":5,"column_end":79}},{"value":"/ identity function, passing through the identifier. However, it can be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":154973,"byte_end":155046,"line_start":335,"line_end":335,"column_start":5,"column_end":78}},{"value":"/ used in conjunction with [`try_close`] to track the number of handles","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":155051,"byte_end":155124,"line_start":336,"line_end":336,"column_start":5,"column_end":78}},{"value":"/ capable of `enter`ing a span. When all the handles have been dropped","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":155129,"byte_end":155201,"line_start":337,"line_end":337,"column_start":5,"column_end":77}},{"value":"/ (i.e., `try_close` has been called one more time than `clone_span` for a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":155206,"byte_end":155282,"line_start":338,"line_end":338,"column_start":5,"column_end":81}},{"value":"/ given ID), the subscriber may assume that the span will not be entered","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":155287,"byte_end":155361,"line_start":339,"line_end":339,"column_start":5,"column_end":79}},{"value":"/ again. It is then free to deallocate storage for data associated with","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":155366,"byte_end":155439,"line_start":340,"line_end":340,"column_start":5,"column_end":78}},{"value":"/ that span, write data from that span to IO, and so on.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":155444,"byte_end":155502,"line_start":341,"line_end":341,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":155507,"byte_end":155510,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ For more unsafe situations, however, if `id` is itself a pointer of some","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":155515,"byte_end":155591,"line_start":343,"line_end":343,"column_start":5,"column_end":81}},{"value":"/ kind this can be used as a hook to \"clone\" the pointer, depending on","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":155596,"byte_end":155668,"line_start":344,"line_end":344,"column_start":5,"column_end":77}},{"value":"/ what that means for the specified pointer.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":155673,"byte_end":155719,"line_start":345,"line_end":345,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":155724,"byte_end":155727,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ [span ID]: ../span/struct.Id.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":155732,"byte_end":155769,"line_start":347,"line_end":347,"column_start":5,"column_end":42}},{"value":"/ [`try_close`]: trait.Subscriber.html#method.try_close","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":155774,"byte_end":155831,"line_start":348,"line_end":348,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":156373,"byte_end":156382,"line_start":363,"line_end":363,"column_start":8,"column_end":17},"name":"drop_span","qualname":"::subscriber::Subscriber::drop_span","value":"pub fn drop_span(&Self, span::Id)","parent":{"krate":0,"index":693},"children":[],"decl_id":null,"docs":" **This method is deprecated.**","sig":null,"attributes":[{"value":"/ **This method is deprecated.**","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":155916,"byte_end":155950,"line_start":353,"line_end":353,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":155955,"byte_end":155958,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ Using `drop_span` may result in subscribers composed using","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":155963,"byte_end":156025,"line_start":355,"line_end":355,"column_start":5,"column_end":67}},{"value":"/ `tracing-subscriber` crate's `Layer` trait from observing close events.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":156030,"byte_end":156105,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ Use [`try_close`] instead.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":156110,"byte_end":156140,"line_start":357,"line_end":357,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":156145,"byte_end":156148,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ The default implementation of this function does nothing.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":156153,"byte_end":156214,"line_start":359,"line_end":359,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":156219,"byte_end":156222,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ [`try_close`]: trait.Subscriber.html#method.try_close","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":156227,"byte_end":156284,"line_start":361,"line_end":361,"column_start":5,"column_end":62}},{"value":"deprecated(since = \"0.1.2\", note = \"use `Subscriber::try_close` instead\")","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":156289,"byte_end":156365,"line_start":362,"line_end":362,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":158575,"byte_end":158584,"line_start":401,"line_end":401,"column_start":8,"column_end":17},"name":"try_close","qualname":"::subscriber::Subscriber::try_close","value":"pub fn try_close(&Self, span::Id) -> bool","parent":{"krate":0,"index":693},"children":[],"decl_id":null,"docs":" Notifies the subscriber that a [span ID] has been dropped, and returns\n `true` if there are now 0 IDs that refer to that span.","sig":null,"attributes":[{"value":"/ Notifies the subscriber that a [span ID] has been dropped, and returns","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":156413,"byte_end":156487,"line_start":365,"line_end":365,"column_start":5,"column_end":79}},{"value":"/ `true` if there are now 0 IDs that refer to that span.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":156492,"byte_end":156550,"line_start":366,"line_end":366,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":156555,"byte_end":156558,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ Higher-level libraries providing functionality for composing multiple","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":156563,"byte_end":156636,"line_start":368,"line_end":368,"column_start":5,"column_end":78}},{"value":"/ subscriber implementations may use this return value to notify any","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":156641,"byte_end":156711,"line_start":369,"line_end":369,"column_start":5,"column_end":75}},{"value":"/ \"layered\" subscribers that this subscriber considers the span closed.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":156716,"byte_end":156789,"line_start":370,"line_end":370,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":156794,"byte_end":156797,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ The default implementation of this method calls the subscriber's","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":156802,"byte_end":156870,"line_start":372,"line_end":372,"column_start":5,"column_end":73}},{"value":"/ [`drop_span`] method and returns `false`. This means that, unless the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":156875,"byte_end":156948,"line_start":373,"line_end":373,"column_start":5,"column_end":78}},{"value":"/ subscriber overrides the default implementation, close notifications","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":156953,"byte_end":157025,"line_start":374,"line_end":374,"column_start":5,"column_end":77}},{"value":"/ will never be sent to any layered subscribers. In general, if the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":157030,"byte_end":157099,"line_start":375,"line_end":375,"column_start":5,"column_end":74}},{"value":"/ subscriber tracks reference counts, this method should be implemented,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":157104,"byte_end":157178,"line_start":376,"line_end":376,"column_start":5,"column_end":79}},{"value":"/ rather than `drop_span`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":157183,"byte_end":157211,"line_start":377,"line_end":377,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":157216,"byte_end":157219,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ This function is guaranteed to only be called with span IDs that were","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":157224,"byte_end":157297,"line_start":379,"line_end":379,"column_start":5,"column_end":78}},{"value":"/ returned by this subscriber's `new_span` function.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":157302,"byte_end":157356,"line_start":380,"line_end":380,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":157361,"byte_end":157364,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ It's guaranteed that if this function has been called once more than the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":157369,"byte_end":157445,"line_start":382,"line_end":382,"column_start":5,"column_end":81}},{"value":"/ number of times `clone_span` was called with the same `id`, then no more","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":157450,"byte_end":157526,"line_start":383,"line_end":383,"column_start":5,"column_end":81}},{"value":"/ handles that can enter the span with that `id` exist. This means that it","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":157531,"byte_end":157607,"line_start":384,"line_end":384,"column_start":5,"column_end":81}},{"value":"/ can be used in conjunction with [`clone_span`] to track the number of","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":157612,"byte_end":157685,"line_start":385,"line_end":385,"column_start":5,"column_end":78}},{"value":"/ handles capable of `enter`ing a span. When all the handles have been","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":157690,"byte_end":157762,"line_start":386,"line_end":386,"column_start":5,"column_end":77}},{"value":"/ dropped (i.e., `try_close` has been called one more time than","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":157767,"byte_end":157832,"line_start":387,"line_end":387,"column_start":5,"column_end":70}},{"value":"/ `clone_span` for a given ID), the subscriber may assume that the span","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":157837,"byte_end":157910,"line_start":388,"line_end":388,"column_start":5,"column_end":78}},{"value":"/ will not be entered again, and should return `true`. It is then free to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":157915,"byte_end":157990,"line_start":389,"line_end":389,"column_start":5,"column_end":80}},{"value":"/ deallocate storage for data associated with that span, write data from","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":157995,"byte_end":158069,"line_start":390,"line_end":390,"column_start":5,"column_end":79}},{"value":"/ that span to IO, and so on.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":158074,"byte_end":158105,"line_start":391,"line_end":391,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":158110,"byte_end":158113,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ **Note**: since this function is called when spans are dropped,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":158118,"byte_end":158185,"line_start":393,"line_end":393,"column_start":5,"column_end":72}},{"value":"/ implementations should ensure that they are unwind-safe. Panicking from","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":158190,"byte_end":158265,"line_start":394,"line_end":394,"column_start":5,"column_end":80}},{"value":"/ inside of a `try_close` function may cause a double panic, if the span","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":158270,"byte_end":158344,"line_start":395,"line_end":395,"column_start":5,"column_end":79}},{"value":"/ was dropped due to a thread unwinding.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":158349,"byte_end":158391,"line_start":396,"line_end":396,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":158396,"byte_end":158399,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ [span ID]: ../span/struct.Id.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":158404,"byte_end":158441,"line_start":398,"line_end":398,"column_start":5,"column_end":42}},{"value":"/ [`clone_span`]: trait.Subscriber.html#method.clone_span","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":158446,"byte_end":158505,"line_start":399,"line_end":399,"column_start":5,"column_end":64}},{"value":"/ [`drop_span`]: trait.Subscriber.html#method.drop_span","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":158510,"byte_end":158567,"line_start":400,"line_end":400,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":159412,"byte_end":159424,"line_start":420,"line_end":420,"column_start":8,"column_end":20},"name":"current_span","qualname":"::subscriber::Subscriber::current_span","value":"pub fn current_span(&Self) -> span::Current","parent":{"krate":0,"index":693},"children":[],"decl_id":null,"docs":" Returns a type representing this subscriber's view of the current span.","sig":null,"attributes":[{"value":"/ Returns a type representing this subscriber's view of the current span.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":158698,"byte_end":158773,"line_start":407,"line_end":407,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":158778,"byte_end":158781,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ If subscribers track a current span, they should override this function","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":158786,"byte_end":158861,"line_start":409,"line_end":409,"column_start":5,"column_end":80}},{"value":"/ to return [`Current::new`] if the thread from which this method is","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":158866,"byte_end":158936,"line_start":410,"line_end":410,"column_start":5,"column_end":75}},{"value":"/ called is inside a span, or [`Current::none`] if the thread is not","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":158941,"byte_end":159011,"line_start":411,"line_end":411,"column_start":5,"column_end":75}},{"value":"/ inside a span.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":159016,"byte_end":159034,"line_start":412,"line_end":412,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":159039,"byte_end":159042,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ By default, this returns a value indicating that the subscriber","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":159047,"byte_end":159114,"line_start":414,"line_end":414,"column_start":5,"column_end":72}},{"value":"/ does **not** track what span is current. If the subscriber does not","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":159119,"byte_end":159190,"line_start":415,"line_end":415,"column_start":5,"column_end":76}},{"value":"/ implement a current span, it should not override this method.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":159195,"byte_end":159260,"line_start":416,"line_end":416,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":159265,"byte_end":159268,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ [`Current::new`]: ../span/struct.Current.html#tymethod.new","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":159273,"byte_end":159335,"line_start":418,"line_end":418,"column_start":5,"column_end":67}},{"value":"/ [`Current::none`]: ../span/struct.Current.html#tymethod.none","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":159340,"byte_end":159404,"line_start":419,"line_end":419,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":160944,"byte_end":160956,"line_start":451,"line_end":451,"column_start":15,"column_end":27},"name":"downcast_raw","qualname":"::subscriber::Subscriber::downcast_raw","value":"pub unsafe fn downcast_raw(&Self, TypeId) -> Option<*const ()>","parent":{"krate":0,"index":693},"children":[],"decl_id":null,"docs":" If `self` is the same type as the provided `TypeId`, returns an untyped\n `*const` pointer to that type. Otherwise, returns `None`.","sig":null,"attributes":[{"value":"/ If `self` is the same type as the provided `TypeId`, returns an untyped","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":159576,"byte_end":159651,"line_start":426,"line_end":426,"column_start":5,"column_end":80}},{"value":"/ `*const` pointer to that type. Otherwise, returns `None`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":159656,"byte_end":159717,"line_start":427,"line_end":427,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":159722,"byte_end":159725,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ If you wish to downcast a `Subscriber`, it is strongly advised to use","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":159730,"byte_end":159803,"line_start":429,"line_end":429,"column_start":5,"column_end":78}},{"value":"/ the safe API provided by [`downcast_ref`] instead.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":159808,"byte_end":159862,"line_start":430,"line_end":430,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":159867,"byte_end":159870,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ This API is required for `downcast_raw` to be a trait method; a method","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":159875,"byte_end":159949,"line_start":432,"line_end":432,"column_start":5,"column_end":79}},{"value":"/ signature like [`downcast_ref`] (with a generic type parameter) is not","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":159954,"byte_end":160028,"line_start":433,"line_end":433,"column_start":5,"column_end":79}},{"value":"/ object-safe, and thus cannot be a trait method for `Subscriber`. This","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":160033,"byte_end":160106,"line_start":434,"line_end":434,"column_start":5,"column_end":78}},{"value":"/ means that if we only exposed `downcast_ref`, `Subscriber`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":160111,"byte_end":160173,"line_start":435,"line_end":435,"column_start":5,"column_end":67}},{"value":"/ implementations could not override the downcasting behavior","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":160178,"byte_end":160241,"line_start":436,"line_end":436,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":160246,"byte_end":160249,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ This method may be overridden by \"fan out\" or \"chained\" subscriber","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":160254,"byte_end":160324,"line_start":438,"line_end":438,"column_start":5,"column_end":75}},{"value":"/ implementations which consist of multiple composed types. Such","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":160329,"byte_end":160395,"line_start":439,"line_end":439,"column_start":5,"column_end":71}},{"value":"/ subscribers might allow `downcast_raw` by returning references to those","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":160400,"byte_end":160475,"line_start":440,"line_end":440,"column_start":5,"column_end":80}},{"value":"/ component if they contain components with the given `TypeId`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":160480,"byte_end":160545,"line_start":441,"line_end":441,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":160550,"byte_end":160553,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":160558,"byte_end":160570,"line_start":443,"line_end":443,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":160575,"byte_end":160578,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ The [`downcast_ref`] method expects that the pointer returned by","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":160583,"byte_end":160651,"line_start":445,"line_end":445,"column_start":5,"column_end":73}},{"value":"/ `downcast_raw` is non-null and points to a valid instance of the type","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":160656,"byte_end":160729,"line_start":446,"line_end":446,"column_start":5,"column_end":78}},{"value":"/ with the provided `TypeId`. Failure to ensure this will result in","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":160734,"byte_end":160803,"line_start":447,"line_end":447,"column_start":5,"column_end":74}},{"value":"/ undefined behaviour, so implementing `downcast_raw` is unsafe.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":160808,"byte_end":160874,"line_start":448,"line_end":448,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":160879,"byte_end":160882,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ [`downcast_ref`]: #method.downcast_ref","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":160887,"byte_end":160929,"line_start":450,"line_end":450,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":161245,"byte_end":161247,"line_start":462,"line_end":462,"column_start":12,"column_end":14},"name":"is","qualname":"<dyn Subscriber>::is","value":"pub fn is<T: Any>(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this `Subscriber` is the same type as `T`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this `Subscriber` is the same type as `T`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":161169,"byte_end":161233,"line_start":461,"line_end":461,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":161445,"byte_end":161457,"line_start":468,"line_end":468,"column_start":12,"column_end":24},"name":"downcast_ref","qualname":"<dyn Subscriber>::downcast_ref","value":"pub fn downcast_ref<T: Any>(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns some reference to this `Subscriber` value if it is of type `T`,\n or `None` if it isn't.\n","sig":null,"attributes":[{"value":"/ Returns some reference to this `Subscriber` value if it is of type `T`,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":161327,"byte_end":161402,"line_start":466,"line_end":466,"column_start":5,"column_end":80}},{"value":"/ or `None` if it isn't.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":161407,"byte_end":161433,"line_start":467,"line_end":467,"column_start":5,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1213},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":162103,"byte_end":162111,"line_start":488,"line_end":488,"column_start":12,"column_end":20},"name":"Interest","qualname":"::subscriber::Interest","value":"","parent":null,"children":[],"decl_id":null,"docs":" Indicates a [`Subscriber`]'s interest in a particular callsite.","sig":null,"attributes":[{"value":"/ Indicates a [`Subscriber`]'s interest in a particular callsite.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":161715,"byte_end":161782,"line_start":480,"line_end":480,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":161783,"byte_end":161786,"line_start":481,"line_end":481,"column_start":1,"column_end":4}},{"value":"/ `Subscriber`s return an `Interest` from their [`register_callsite`] methods","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":161787,"byte_end":161866,"line_start":482,"line_end":482,"column_start":1,"column_end":80}},{"value":"/ in order to determine whether that span should be enabled or disabled.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":161867,"byte_end":161941,"line_start":483,"line_end":483,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":161942,"byte_end":161945,"line_start":484,"line_end":484,"column_start":1,"column_end":4}},{"value":"/ [`Subscriber`]: ../trait.Subscriber.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":161946,"byte_end":161990,"line_start":485,"line_end":485,"column_start":1,"column_end":45}},{"value":"/ [`register_callsite`]: ../trait.Subscriber.html#method.register_callsite","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":161991,"byte_end":162067,"line_start":486,"line_end":486,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":714},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":162590,"byte_end":162595,"line_start":504,"line_end":504,"column_start":12,"column_end":17},"name":"never","qualname":"<Interest>::never","value":"pub fn never() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an `Interest` indicating that the subscriber is never interested\n in being notified about a callsite.","sig":null,"attributes":[{"value":"/ Returns an `Interest` indicating that the subscriber is never interested","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":162283,"byte_end":162359,"line_start":498,"line_end":498,"column_start":5,"column_end":81}},{"value":"/ in being notified about a callsite.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":162364,"byte_end":162403,"line_start":499,"line_end":499,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":162408,"byte_end":162411,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ If all active subscribers are `never()` interested in a callsite, it will","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":162416,"byte_end":162493,"line_start":501,"line_end":501,"column_start":5,"column_end":82}},{"value":"/ be completely disabled unless a new subscriber becomes active.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":162498,"byte_end":162564,"line_start":502,"line_end":502,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":162569,"byte_end":162578,"line_start":503,"line_end":503,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":715},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":163124,"byte_end":163133,"line_start":516,"line_end":516,"column_start":12,"column_end":21},"name":"sometimes","qualname":"<Interest>::sometimes","value":"pub fn sometimes() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an `Interest` indicating the subscriber is sometimes interested\n in being notified about a callsite.","sig":null,"attributes":[{"value":"/ Returns an `Interest` indicating the subscriber is sometimes interested","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":162657,"byte_end":162732,"line_start":508,"line_end":508,"column_start":5,"column_end":80}},{"value":"/ in being notified about a callsite.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":162737,"byte_end":162776,"line_start":509,"line_end":509,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":162781,"byte_end":162784,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ If all active subscribers are `sometimes` or `never` interested in a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":162789,"byte_end":162861,"line_start":511,"line_end":511,"column_start":5,"column_end":77}},{"value":"/ callsite, the currently active subscriber will be asked to filter that","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":162866,"byte_end":162940,"line_start":512,"line_end":512,"column_start":5,"column_end":79}},{"value":"/ callsite every time it creates a span. This will be the case until a new","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":162945,"byte_end":163021,"line_start":513,"line_end":513,"column_start":5,"column_end":81}},{"value":"/ subscriber expresses that it is `always` interested in the callsite.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":163026,"byte_end":163098,"line_start":514,"line_end":514,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":163103,"byte_end":163112,"line_start":515,"line_end":515,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":716},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":163489,"byte_end":163495,"line_start":526,"line_end":526,"column_start":12,"column_end":18},"name":"always","qualname":"<Interest>::always","value":"pub fn always() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an `Interest` indicating the subscriber is always interested in\n being notified about a callsite.","sig":null,"attributes":[{"value":"/ Returns an `Interest` indicating the subscriber is always interested in","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":163199,"byte_end":163274,"line_start":520,"line_end":520,"column_start":5,"column_end":80}},{"value":"/ being notified about a callsite.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":163279,"byte_end":163315,"line_start":521,"line_end":521,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":163320,"byte_end":163323,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ If any subscriber expresses that it is `always()` interested in a given","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":163328,"byte_end":163403,"line_start":523,"line_end":523,"column_start":5,"column_end":80}},{"value":"/ callsite, then the callsite will always be enabled.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":163408,"byte_end":163463,"line_start":524,"line_end":524,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":163468,"byte_end":163477,"line_start":525,"line_end":525,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":163687,"byte_end":163695,"line_start":533,"line_end":533,"column_start":12,"column_end":20},"name":"is_never","qualname":"<Interest>::is_never","value":"pub fn is_never(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the subscriber is never interested in being notified\n about this callsite.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the subscriber is never interested in being notified","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":163558,"byte_end":163632,"line_start":530,"line_end":530,"column_start":5,"column_end":79}},{"value":"/ about this callsite.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":163637,"byte_end":163661,"line_start":531,"line_end":531,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":163666,"byte_end":163675,"line_start":532,"line_end":532,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":163903,"byte_end":163915,"line_start":540,"line_end":540,"column_start":12,"column_end":24},"name":"is_sometimes","qualname":"<Interest>::is_sometimes","value":"pub fn is_sometimes(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the subscriber is sometimes interested in being notified\n about this callsite.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the subscriber is sometimes interested in being notified","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":163770,"byte_end":163848,"line_start":537,"line_end":537,"column_start":5,"column_end":83}},{"value":"/ about this callsite.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":163853,"byte_end":163877,"line_start":538,"line_end":538,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":163882,"byte_end":163891,"line_start":539,"line_end":539,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":164124,"byte_end":164133,"line_start":547,"line_end":547,"column_start":12,"column_end":21},"name":"is_always","qualname":"<Interest>::is_always","value":"pub fn is_always(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the subscriber is always interested in being notified\n about this callsite.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the subscriber is always interested in being notified","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":163994,"byte_end":164069,"line_start":544,"line_end":544,"column_start":5,"column_end":80}},{"value":"/ about this callsite.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":164074,"byte_end":164098,"line_start":545,"line_end":545,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":164103,"byte_end":164112,"line_start":546,"line_end":546,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1245},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":164980,"byte_end":164992,"line_start":571,"line_end":571,"column_start":12,"column_end":24},"name":"NoSubscriber","qualname":"::subscriber::NoSubscriber","value":"","parent":null,"children":[],"decl_id":null,"docs":" A no-op [`Subscriber`].","sig":null,"attributes":[{"value":"/ A no-op [`Subscriber`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":164738,"byte_end":164765,"line_start":566,"line_end":566,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":164766,"byte_end":164769,"line_start":567,"line_end":567,"column_start":1,"column_end":4}},{"value":"/ [`NoSubscriber`] implements the [`Subscriber`] trait by never being enabled,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":164770,"byte_end":164850,"line_start":568,"line_end":568,"column_start":1,"column_end":81}},{"value":"/ never being interested in any callsite, and dropping all spans and events.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":164851,"byte_end":164929,"line_start":569,"line_end":569,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":794},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":9514,"byte_end":9520,"line_start":303,"line_end":303,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::sealed::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":10096,"byte_end":10104,"line_start":27,"line_end":27,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":51},{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":14913,"byte_end":14923,"line_start":150,"line_end":150,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":15118,"byte_end":15128,"line_start":159,"line_end":159,"column_start":13,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":15153,"byte_end":15163,"line_start":161,"line_end":161,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":15298,"byte_end":15308,"line_start":167,"line_end":167,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":26933,"byte_end":26954,"line_start":306,"line_end":306,"column_start":23,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":27194,"byte_end":27215,"line_start":314,"line_end":314,"column_start":23,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":29741,"byte_end":29749,"line_start":398,"line_end":398,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":38980,"byte_end":38988,"line_start":638,"line_end":638,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":39141,"byte_end":39149,"line_start":645,"line_end":645,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":39275,"byte_end":39283,"line_start":651,"line_end":651,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":39434,"byte_end":39443,"line_start":661,"line_end":661,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":201},{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":39837,"byte_end":39842,"line_start":677,"line_end":677,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":206},{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":40666,"byte_end":40673,"line_start":708,"line_end":708,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":41082,"byte_end":41089,"line_start":725,"line_end":725,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":41252,"byte_end":41264,"line_start":735,"line_end":735,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":47815,"byte_end":47820,"line_start":29,"line_end":29,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":239},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":64948,"byte_end":64959,"line_start":367,"line_end":367,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":65120,"byte_end":65128,"line_start":373,"line_end":373,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":65293,"byte_end":65294,"line_start":379,"line_end":379,"column_start":19,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":68456,"byte_end":68464,"line_start":500,"line_end":500,"column_start":58,"column_end":66},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":68524,"byte_end":68532,"line_start":501,"line_end":501,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":69885,"byte_end":69894,"line_start":550,"line_end":550,"column_start":41,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":69927,"byte_end":69936,"line_start":552,"line_end":552,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":70405,"byte_end":70417,"line_start":564,"line_end":564,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":347},{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":71296,"byte_end":71308,"line_start":595,"line_end":595,"column_start":49,"column_end":61},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":71334,"byte_end":71346,"line_start":597,"line_end":597,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":71549,"byte_end":71561,"line_start":606,"line_end":606,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":71710,"byte_end":71722,"line_start":612,"line_end":612,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":71916,"byte_end":71926,"line_start":620,"line_end":620,"column_start":47,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":71952,"byte_end":71962,"line_start":622,"line_end":622,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":72141,"byte_end":72151,"line_start":631,"line_end":631,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":73117,"byte_end":73122,"line_start":661,"line_end":661,"column_start":32,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":73141,"byte_end":73146,"line_start":662,"line_end":662,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":73261,"byte_end":73267,"line_start":667,"line_end":667,"column_start":42,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":73300,"byte_end":73306,"line_start":669,"line_end":669,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":73492,"byte_end":73497,"line_start":679,"line_end":679,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":381},{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":74003,"byte_end":74008,"line_start":696,"line_end":696,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":74130,"byte_end":74135,"line_start":702,"line_end":702,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":74217,"byte_end":74222,"line_start":708,"line_end":708,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":74352,"byte_end":74357,"line_start":714,"line_end":714,"column_start":13,"column_end":18},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":74376,"byte_end":74381,"line_start":716,"line_end":716,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":74545,"byte_end":74550,"line_start":726,"line_end":726,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":74814,"byte_end":74822,"line_start":740,"line_end":740,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":407},{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":77880,"byte_end":77888,"line_start":836,"line_end":836,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":78130,"byte_end":78138,"line_start":845,"line_end":845,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":78354,"byte_end":78358,"line_start":855,"line_end":855,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":419},{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":78694,"byte_end":78702,"line_start":871,"line_end":871,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":427},{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":80226,"byte_end":80234,"line_start":919,"line_end":919,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":80653,"byte_end":80661,"line_start":934,"line_end":934,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":96565,"byte_end":96573,"line_start":253,"line_end":253,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":98960,"byte_end":98968,"line_start":338,"line_end":338,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":100033,"byte_end":100037,"line_start":371,"line_end":371,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":101288,"byte_end":101292,"line_start":411,"line_end":411,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":507}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":102122,"byte_end":102127,"line_start":448,"line_end":448,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":103246,"byte_end":103251,"line_start":484,"line_end":484,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":103682,"byte_end":103697,"line_start":498,"line_end":498,"column_start":38,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":103719,"byte_end":103724,"line_start":500,"line_end":500,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":520},{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":105306,"byte_end":105317,"line_start":551,"line_end":551,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":105440,"byte_end":105451,"line_start":558,"line_end":558,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":105568,"byte_end":105574,"line_start":565,"line_end":565,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":105683,"byte_end":105694,"line_start":572,"line_end":572,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":111310,"byte_end":111321,"line_start":697,"line_end":697,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":549}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":111740,"byte_end":111751,"line_start":710,"line_end":710,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":551}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":112245,"byte_end":112256,"line_start":723,"line_end":723,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":553},{"krate":0,"index":554}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":113552,"byte_end":113567,"line_start":757,"line_end":757,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":558}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":113825,"byte_end":113846,"line_start":766,"line_end":766,"column_start":23,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":560}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":114148,"byte_end":114169,"line_start":776,"line_end":776,"column_start":28,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":118506,"byte_end":118511,"line_start":851,"line_end":851,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":563}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":118666,"byte_end":118671,"line_start":858,"line_end":858,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":119290,"byte_end":119295,"line_start":885,"line_end":885,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":119464,"byte_end":119469,"line_start":892,"line_end":892,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":120362,"byte_end":120373,"line_start":927,"line_end":927,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":120522,"byte_end":120533,"line_start":934,"line_end":934,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":121238,"byte_end":121249,"line_start":961,"line_end":961,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":588}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":121426,"byte_end":121437,"line_start":968,"line_end":968,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":126617,"byte_end":126619,"line_start":61,"line_end":61,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":127751,"byte_end":127757,"line_start":98,"line_end":98,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":623}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":127873,"byte_end":127883,"line_start":106,"line_end":106,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":131550,"byte_end":131556,"line_start":216,"line_end":216,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":132290,"byte_end":132297,"line_start":242,"line_end":242,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":134588,"byte_end":134594,"line_start":309,"line_end":309,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":134702,"byte_end":134708,"line_start":315,"line_end":315,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":134813,"byte_end":134819,"line_start":321,"line_end":321,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":135019,"byte_end":135025,"line_start":330,"line_end":330,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":162268,"byte_end":162276,"line_start":497,"line_end":497,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":165019,"byte_end":165031,"line_start":573,"line_end":573,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":165652,"byte_end":165655,"line_start":598,"line_end":598,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":744}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":167478,"byte_end":167481,"line_start":675,"line_end":675,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":759}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":9089,"byte_end":9097,"line_start":280,"line_end":280,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":11}},{"kind":"Mod","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":9107,"byte_end":9117,"line_start":281,"line_end":281,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":70}},{"kind":"Mod","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":9127,"byte_end":9132,"line_start":282,"line_end":282,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":218}},{"kind":"Mod","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":9142,"byte_end":9147,"line_start":283,"line_end":283,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":248}},{"kind":"Mod","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":9157,"byte_end":9165,"line_start":284,"line_end":284,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":443}},{"kind":"Mod","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":9187,"byte_end":9191,"line_start":286,"line_end":286,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":599}},{"kind":"Mod","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\lib.rs","byte_start":9224,"byte_end":9234,"line_start":288,"line_end":288,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":665}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":10096,"byte_end":10104,"line_start":27,"line_end":27,"column_start":6,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":47},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":11913,"byte_end":11917,"line_start":77,"line_end":77,"column_start":21,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":3001},"to":{"krate":0,"index":56}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":14913,"byte_end":14923,"line_start":150,"line_end":150,"column_start":20,"column_end":30},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":806},"to":{"krate":2,"index":2640}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":15118,"byte_end":15128,"line_start":159,"line_end":159,"column_start":13,"column_end":23},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":806},"to":{"krate":2,"index":2645}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":15153,"byte_end":15163,"line_start":161,"line_end":161,"column_start":21,"column_end":31},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":806},"to":{"krate":2,"index":9300}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\callsite.rs","byte_start":15298,"byte_end":15308,"line_start":167,"line_end":167,"column_start":15,"column_end":25},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":806},"to":{"krate":2,"index":9506}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":26933,"byte_end":26954,"line_start":306,"line_end":306,"column_start":23,"column_end":44},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":824},"to":{"krate":2,"index":9307}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":27194,"byte_end":27215,"line_start":314,"line_end":314,"column_start":23,"column_end":44},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":824},"to":{"krate":1,"index":2336}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":29741,"byte_end":29749,"line_start":398,"line_end":398,"column_start":6,"column_end":14},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":811},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":38980,"byte_end":38988,"line_start":638,"line_end":638,"column_start":18,"column_end":26},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":811},"to":{"krate":2,"index":2967}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":39141,"byte_end":39149,"line_start":645,"line_end":645,"column_start":21,"column_end":29},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":811},"to":{"krate":2,"index":9300}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":39275,"byte_end":39283,"line_start":651,"line_end":651,"column_start":21,"column_end":29},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":811},"to":{"krate":2,"index":2895}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":39434,"byte_end":39443,"line_start":661,"line_end":661,"column_start":6,"column_end":15},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":167},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":39837,"byte_end":39842,"line_start":677,"line_end":677,"column_start":6,"column_end":11},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":141},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":40666,"byte_end":40673,"line_start":708,"line_end":708,"column_start":10,"column_end":17},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":41082,"byte_end":41089,"line_start":725,"line_end":725,"column_start":19,"column_end":26},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":144},"to":{"krate":2,"index":3224}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\dispatcher.rs","byte_start":41252,"byte_end":41264,"line_start":735,"line_end":735,"column_start":15,"column_end":27},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":819},"to":{"krate":2,"index":3224}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\event.rs","byte_start":47815,"byte_end":47820,"line_start":29,"line_end":29,"column_start":10,"column_end":15},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":828},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":63585,"byte_end":63591,"line_start":318,"line_end":318,"column_start":33,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":794},"to":{"krate":0,"index":290}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":64948,"byte_end":64959,"line_start":367,"line_end":367,"column_start":29,"column_end":40},"kind":{"Impl":{"id":17}},"from":{"krate":2,"index":9010},"to":{"krate":0,"index":282}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":65120,"byte_end":65128,"line_start":373,"line_end":373,"column_start":29,"column_end":37},"kind":{"Impl":{"id":18}},"from":{"krate":2,"index":9091},"to":{"krate":0,"index":282}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":65293,"byte_end":65294,"line_start":379,"line_end":379,"column_start":19,"column_end":20},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":305},"to":{"krate":0,"index":282}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":68456,"byte_end":68464,"line_start":500,"line_end":500,"column_start":58,"column_end":66},"kind":{"Impl":{"id":40}},"from":{"krate":2,"index":24746},"to":{"krate":0,"index":794}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":68524,"byte_end":68532,"line_start":501,"line_end":501,"column_start":54,"column_end":62},"kind":{"Impl":{"id":41}},"from":{"krate":2,"index":24746},"to":{"krate":0,"index":290}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":69885,"byte_end":69894,"line_start":550,"line_end":550,"column_start":41,"column_end":50},"kind":{"Impl":{"id":44}},"from":{"krate":2,"index":44221},"to":{"krate":0,"index":794}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":69927,"byte_end":69936,"line_start":552,"line_end":552,"column_start":25,"column_end":34},"kind":{"Impl":{"id":45}},"from":{"krate":2,"index":44221},"to":{"krate":0,"index":290}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":70405,"byte_end":70417,"line_start":564,"line_end":564,"column_start":44,"column_end":56},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":343},"to":{"krate":0,"index":56}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":71296,"byte_end":71308,"line_start":595,"line_end":595,"column_start":49,"column_end":61},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":856},"to":{"krate":0,"index":794}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":71334,"byte_end":71346,"line_start":597,"line_end":597,"column_start":19,"column_end":31},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":856},"to":{"krate":0,"index":290}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":71549,"byte_end":71561,"line_start":606,"line_end":606,"column_start":38,"column_end":50},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":856},"to":{"krate":2,"index":9300}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":71710,"byte_end":71722,"line_start":612,"line_end":612,"column_start":40,"column_end":52},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":856},"to":{"krate":2,"index":9307}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":71916,"byte_end":71926,"line_start":620,"line_end":620,"column_start":47,"column_end":57},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":863},"to":{"krate":0,"index":794}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":71952,"byte_end":71962,"line_start":622,"line_end":622,"column_start":19,"column_end":29},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":863},"to":{"krate":0,"index":290}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":72141,"byte_end":72151,"line_start":631,"line_end":631,"column_start":36,"column_end":46},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":863},"to":{"krate":2,"index":9300}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":73117,"byte_end":73122,"line_start":661,"line_end":661,"column_start":32,"column_end":37},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":841},"to":{"krate":0,"index":794}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":73141,"byte_end":73146,"line_start":662,"line_end":662,"column_start":16,"column_end":21},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":841},"to":{"krate":0,"index":290}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":73261,"byte_end":73267,"line_start":667,"line_end":667,"column_start":42,"column_end":48},"kind":{"Impl":{"id":56}},"from":{"krate":2,"index":43179},"to":{"krate":0,"index":794}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":73300,"byte_end":73306,"line_start":669,"line_end":669,"column_start":26,"column_end":32},"kind":{"Impl":{"id":57}},"from":{"krate":2,"index":43179},"to":{"krate":0,"index":290}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":73492,"byte_end":73497,"line_start":679,"line_end":679,"column_start":6,"column_end":11},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":836},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":74003,"byte_end":74008,"line_start":696,"line_end":696,"column_start":23,"column_end":28},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":836},"to":{"krate":2,"index":9307}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":74130,"byte_end":74135,"line_start":702,"line_end":702,"column_start":21,"column_end":26},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":836},"to":{"krate":2,"index":2886}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":74217,"byte_end":74222,"line_start":708,"line_end":708,"column_start":20,"column_end":25},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":836},"to":{"krate":2,"index":2640}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":74352,"byte_end":74357,"line_start":714,"line_end":714,"column_start":13,"column_end":18},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":836},"to":{"krate":2,"index":2645}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":74376,"byte_end":74381,"line_start":716,"line_end":716,"column_start":15,"column_end":20},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":836},"to":{"krate":2,"index":9506}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":74545,"byte_end":74550,"line_start":726,"line_end":726,"column_start":16,"column_end":21},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":836},"to":{"krate":2,"index":2610}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":74814,"byte_end":74822,"line_start":740,"line_end":740,"column_start":6,"column_end":14},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":275},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":77880,"byte_end":77888,"line_start":836,"line_end":836,"column_start":21,"column_end":29},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":275},"to":{"krate":2,"index":9300}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":78130,"byte_end":78138,"line_start":845,"line_end":845,"column_start":23,"column_end":31},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":275},"to":{"krate":2,"index":9307}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":78354,"byte_end":78358,"line_start":855,"line_end":855,"column_start":19,"column_end":23},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":851},"to":{"krate":2,"index":7566}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":78694,"byte_end":78702,"line_start":871,"line_end":871,"column_start":10,"column_end":18},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":278},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":80226,"byte_end":80234,"line_start":919,"line_end":919,"column_start":25,"column_end":33},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":278},"to":{"krate":2,"index":9300}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":80653,"byte_end":80661,"line_start":934,"line_end":934,"column_start":27,"column_end":35},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":278},"to":{"krate":2,"index":9307}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\field.rs","byte_start":81512,"byte_end":81518,"line_start":960,"line_end":960,"column_start":29,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2588},"to":{"krate":0,"index":440}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":96565,"byte_end":96573,"line_start":253,"line_end":253,"column_start":10,"column_end":18},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":468},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":98960,"byte_end":98968,"line_start":338,"line_end":338,"column_start":25,"column_end":33},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":468},"to":{"krate":2,"index":9300}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":100033,"byte_end":100037,"line_start":371,"line_end":371,"column_start":6,"column_end":10},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1071},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":101288,"byte_end":101292,"line_start":411,"line_end":411,"column_start":21,"column_end":25},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1071},"to":{"krate":2,"index":9300}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":102122,"byte_end":102127,"line_start":448,"line_end":448,"column_start":6,"column_end":11},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1083},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":103246,"byte_end":103251,"line_start":484,"line_end":484,"column_start":23,"column_end":28},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1083},"to":{"krate":2,"index":9307}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":103682,"byte_end":103697,"line_start":498,"line_end":498,"column_start":38,"column_end":53},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1154},"to":{"krate":1,"index":2336}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":103719,"byte_end":103724,"line_start":500,"line_end":500,"column_start":18,"column_end":23},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1083},"to":{"krate":2,"index":11826}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":105306,"byte_end":105317,"line_start":551,"line_end":551,"column_start":22,"column_end":33},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1101},"to":{"krate":2,"index":2895}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":105440,"byte_end":105451,"line_start":558,"line_end":558,"column_start":30,"column_end":41},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1101},"to":{"krate":2,"index":2895}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":105568,"byte_end":105574,"line_start":565,"line_end":565,"column_start":28,"column_end":34},"kind":{"Impl":{"id":82}},"from":{"krate":2,"index":43179},"to":{"krate":2,"index":2895}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":105683,"byte_end":105694,"line_start":572,"line_end":572,"column_start":6,"column_end":17},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1101},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":111310,"byte_end":111321,"line_start":697,"line_end":697,"column_start":23,"column_end":34},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1101},"to":{"krate":2,"index":9307}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":111740,"byte_end":111751,"line_start":710,"line_end":710,"column_start":21,"column_end":32},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1101},"to":{"krate":2,"index":9300}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":112245,"byte_end":112256,"line_start":723,"line_end":723,"column_start":18,"column_end":29},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1101},"to":{"krate":2,"index":11826}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":113552,"byte_end":113567,"line_start":757,"line_end":757,"column_start":23,"column_end":38},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1154},"to":{"krate":2,"index":9307}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":113825,"byte_end":113846,"line_start":766,"line_end":766,"column_start":23,"column_end":44},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1117},"to":{"krate":2,"index":9307}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":114148,"byte_end":114169,"line_start":776,"line_end":776,"column_start":28,"column_end":49},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1117},"to":{"krate":1,"index":2336}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":118506,"byte_end":118511,"line_start":851,"line_end":851,"column_start":33,"column_end":38},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1083},"to":{"krate":2,"index":2640}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":118666,"byte_end":118671,"line_start":858,"line_end":858,"column_start":21,"column_end":26},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1083},"to":{"krate":2,"index":2687}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":119290,"byte_end":119295,"line_start":885,"line_end":885,"column_start":14,"column_end":19},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1083},"to":{"krate":2,"index":2676}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":119464,"byte_end":119469,"line_start":892,"line_end":892,"column_start":34,"column_end":39},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1083},"to":{"krate":2,"index":2687}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":120362,"byte_end":120373,"line_start":927,"line_end":927,"column_start":27,"column_end":38},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1101},"to":{"krate":2,"index":2640}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":120522,"byte_end":120533,"line_start":934,"line_end":934,"column_start":21,"column_end":32},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1101},"to":{"krate":2,"index":2687}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":121238,"byte_end":121249,"line_start":961,"line_end":961,"column_start":14,"column_end":25},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1101},"to":{"krate":2,"index":2676}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\metadata.rs","byte_start":121426,"byte_end":121437,"line_start":968,"line_end":968,"column_start":28,"column_end":39},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1101},"to":{"krate":2,"index":2687}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":126617,"byte_end":126619,"line_start":61,"line_end":61,"column_start":6,"column_end":8},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":127751,"byte_end":127757,"line_start":98,"line_end":98,"column_start":27,"column_end":33},"kind":{"Impl":{"id":99}},"from":{"krate":2,"index":43179},"to":{"krate":2,"index":2895}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":127873,"byte_end":127883,"line_start":106,"line_end":106,"column_start":10,"column_end":20},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1185},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":131550,"byte_end":131556,"line_start":216,"line_end":216,"column_start":10,"column_end":16},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1193},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":132290,"byte_end":132297,"line_start":242,"line_end":242,"column_start":6,"column_end":13},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1199},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":134588,"byte_end":134594,"line_start":309,"line_end":309,"column_start":32,"column_end":38},"kind":{"Impl":{"id":103}},"from":{"krate":2,"index":43179},"to":{"krate":2,"index":2895}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":134702,"byte_end":134708,"line_start":315,"line_end":315,"column_start":32,"column_end":38},"kind":{"Impl":{"id":104}},"from":{"krate":2,"index":43179},"to":{"krate":2,"index":2895}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":134813,"byte_end":134819,"line_start":321,"line_end":321,"column_start":24,"column_end":30},"kind":{"Impl":{"id":105}},"from":{"krate":2,"index":43179},"to":{"krate":2,"index":2895}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\span.rs","byte_start":135019,"byte_end":135025,"line_start":330,"line_end":330,"column_start":32,"column_end":38},"kind":{"Impl":{"id":106}},"from":{"krate":2,"index":43179},"to":{"krate":2,"index":2895}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":162268,"byte_end":162276,"line_start":497,"line_end":497,"column_start":6,"column_end":14},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1213},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":165019,"byte_end":165031,"line_start":573,"line_end":573,"column_start":21,"column_end":33},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1245},"to":{"krate":0,"index":693}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":165652,"byte_end":165655,"line_start":598,"line_end":598,"column_start":21,"column_end":24},"kind":{"Impl":{"id":109}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":693}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-core-0.1.22\\src\\subscriber.rs","byte_start":167478,"byte_end":167481,"line_start":675,"line_end":675,"column_start":21,"column_end":24},"kind":{"Impl":{"id":110}},"from":{"krate":5,"index":5922},"to":{"krate":0,"index":693}}]}