{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0","program":"C:\\Users\\комфи\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","wasmtime","--edition=2018","C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=5f710482d6daad30","-C","extra-filename=-5f710482d6daad30","--out-dir","c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps","--extern","anyhow=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps\\libanyhow-430e93043d879535.rmeta","--extern","backtrace=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps\\libbacktrace-54b1291eea26fb08.rmeta","--extern","bincode=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps\\libbincode-c507db71e3325b91.rmeta","--extern","cfg_if=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps\\libcfg_if-7ebfe9d187c72daf.rmeta","--extern","lazy_static=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps\\liblazy_static-d6cbdbe0b44bd4a4.rmeta","--extern","libc=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps\\liblibc-b6e903b648206168.rmeta","--extern","log=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps\\liblog-8fb4ff5a8792f1ff.rmeta","--extern","region=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps\\libregion-712c3a9a9afa2618.rmeta","--extern","rustc_demangle=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps\\librustc_demangle-1c48680f5f21731f.rmeta","--extern","serde=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps\\libserde-bb2975fbc5a79cfc.rmeta","--extern","smallvec=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps\\libsmallvec-bfc6641e9aa967de.rmeta","--extern","target_lexicon=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps\\libtarget_lexicon-36690c28977a19f7.rmeta","--extern","wasmparser=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps\\libwasmparser-77849c6b9b08d19d.rmeta","--extern","wasmtime_environ=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps\\libwasmtime_environ-f04ca9b03d8a8880.rmeta","--extern","wasmtime_jit=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps\\libwasmtime_jit-26ad5967289ec7a4.rmeta","--extern","wasmtime_profiling=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps\\libwasmtime_profiling-4f09587f73d3ccf6.rmeta","--extern","wasmtime_runtime=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps\\libwasmtime_runtime-a8846ab77f5835bf.rmeta","--extern","winapi=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps\\libwinapi-45f10d884985cdd2.rmeta","--cap-lints","allow","-L","native=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\build\\wasmtime-runtime-4c94079b603b6783\\out","--error-format=json","--sysroot","C:\\Users\\комфи\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps\\libwasmtime-5f710482d6daad30.rmeta"},"prelude":{"crate_id":{"name":"wasmtime","disambiguator":[4602350213885166230,0]},"crate_root":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src","external_crates":[{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[7976927198175868373,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[11165144592143370822,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[252041924521724887,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5467317383579905353,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7624884120048857693,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[11703982264691436790,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[2970152443746782806,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9222488229097456044,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7853498759631503325,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16147963203778103955,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[14622278557065309757,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[12620427935833221912,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[5227252993197737239,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","num":14,"id":{"name":"anyhow","disambiguator":[8982221772121678977,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","num":15,"id":{"name":"wasmtime_environ","disambiguator":[15364518779801219001,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","num":16,"id":{"name":"cranelift_codegen","disambiguator":[5986211292539320187,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","num":17,"id":{"name":"cranelift_bforest","disambiguator":[5967191781066483549,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","num":18,"id":{"name":"cranelift_entity","disambiguator":[1117635928365938132,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","num":19,"id":{"name":"serde","disambiguator":[9823350511623119401,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","num":20,"id":{"name":"serde_derive","disambiguator":[15868471050106267783,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","num":21,"id":{"name":"log","disambiguator":[7262945953961677380,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","num":22,"id":{"name":"cfg_if","disambiguator":[12394071839129264589,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","num":23,"id":{"name":"cranelift_codegen_shared","disambiguator":[14342157761650369642,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","num":24,"id":{"name":"target_lexicon","disambiguator":[2317706166845696577,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","num":25,"id":{"name":"thiserror","disambiguator":[16452521269220640097,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","num":26,"id":{"name":"thiserror_impl","disambiguator":[9048138020972467572,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","num":27,"id":{"name":"gimli","disambiguator":[9437475208511772857,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","num":28,"id":{"name":"stable_deref_trait","disambiguator":[18085504202279939971,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","num":29,"id":{"name":"indexmap","disambiguator":[6864592234072865951,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","num":30,"id":{"name":"hashbrown","disambiguator":[10599224521677906658,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","num":31,"id":{"name":"ahash","disambiguator":[9774790966930561325,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","num":32,"id":{"name":"once_cell","disambiguator":[1116581588057473973,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","num":33,"id":{"name":"getrandom","disambiguator":[516886532770300459,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","num":34,"id":{"name":"fallible_iterator","disambiguator":[6716362794023931551,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","num":35,"id":{"name":"byteorder","disambiguator":[13956033545584725802,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","num":36,"id":{"name":"regalloc","disambiguator":[6693807116643740893,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","num":37,"id":{"name":"smallvec","disambiguator":[9259698098513288274,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","num":38,"id":{"name":"rustc_hash","disambiguator":[2358302366584189522,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","num":39,"id":{"name":"cranelift_wasm","disambiguator":[11336328626624407117,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","num":40,"id":{"name":"cranelift_frontend","disambiguator":[617103835829124428,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","num":41,"id":{"name":"wasmparser","disambiguator":[5422444996453330376,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","num":42,"id":{"name":"more_asserts","disambiguator":[14500903528052251730,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","num":43,"id":{"name":"wasmtime_runtime","disambiguator":[14883717946150445575,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","num":44,"id":{"name":"memoffset","disambiguator":[9067267510339661069,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","num":45,"id":{"name":"lazy_static","disambiguator":[8441177590269360409,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\windows.rs","num":46,"id":{"name":"winapi","disambiguator":[158433219665495671,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\trap.rs","num":47,"id":{"name":"backtrace","disambiguator":[18279527200876222632,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\trap.rs","num":48,"id":{"name":"rustc_demangle","disambiguator":[2006755871501211046,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","num":49,"id":{"name":"cfg_if","disambiguator":[2603666211785926936,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","num":50,"id":{"name":"region","disambiguator":[4904781915204537961,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","num":51,"id":{"name":"bitflags","disambiguator":[12990884787969604699,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","num":52,"id":{"name":"libc","disambiguator":[4367109586866483853,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","num":53,"id":{"name":"wasmtime_jit","disambiguator":[13607415058684044095,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","num":54,"id":{"name":"object","disambiguator":[2620689824429268714,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","num":55,"id":{"name":"wasmparser","disambiguator":[893146131176421885,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","num":56,"id":{"name":"crc32fast","disambiguator":[7880793580109428887,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","num":57,"id":{"name":"wasmtime_debug","disambiguator":[15305723963509255109,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","num":58,"id":{"name":"wasmtime_profiling","disambiguator":[13699745237504365344,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","num":59,"id":{"name":"wasmtime_obj","disambiguator":[15634292842072716547,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","num":60,"id":{"name":"wasmtime_cranelift","disambiguator":[2581340318608398559,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","num":61,"id":{"name":"cranelift_native","disambiguator":[15729419369585329422,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","num":62,"id":{"name":"raw_cpuid","disambiguator":[11269440910251207091,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","num":63,"id":{"name":"bincode","disambiguator":[576794707663839264,0]}}],"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":0,"byte_end":10643,"line_start":1,"line_end":270,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":10181,"byte_end":10182,"line_start":250,"line_end":250,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"Global, Table, Export, Extern, Memory","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1794},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":10211,"byte_end":10220,"line_start":251,"line_end":251,"column_start":28,"column_end":37},"alias_span":null,"name":"FrameInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":10243,"byte_end":10244,"line_start":252,"line_end":252,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"IntoFunc, Func","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2940},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":10271,"byte_end":10279,"line_start":253,"line_end":253,"column_start":26,"column_end":34},"alias_span":null,"name":"Instance","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":10304,"byte_end":10305,"line_start":254,"line_end":254,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2983},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":10330,"byte_end":10336,"line_start":255,"line_end":255,"column_start":24,"column_end":30},"alias_span":null,"name":"Module","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2989},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":10360,"byte_end":10369,"line_start":256,"line_end":256,"column_start":23,"column_end":32},"alias_span":null,"name":"ExternRef","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":10395,"byte_end":10396,"line_start":257,"line_end":257,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"Engine, Store","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3058},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":10419,"byte_end":10423,"line_start":258,"line_end":258,"column_start":22,"column_end":26},"alias_span":null,"name":"Trap","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":10447,"byte_end":10448,"line_start":259,"line_end":259,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"TableType, MemoryType, ExternType, Limits, FuncType, ValType, Mutability, ImportType, GlobalType","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":10473,"byte_end":10474,"line_start":260,"line_end":260,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"Val","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":0,"byte_end":10643,"line_start":1,"line_end":270,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":163},{"krate":0,"index":226},{"krate":0,"index":544},{"krate":0,"index":649},{"krate":0,"index":769},{"krate":0,"index":854},{"krate":0,"index":867},{"krate":0,"index":1104},{"krate":0,"index":1513},{"krate":0,"index":1564},{"krate":0,"index":1662},{"krate":0,"index":1721},{"krate":0,"index":1722},{"krate":0,"index":1725},{"krate":0,"index":1726},{"krate":0,"index":1729},{"krate":0,"index":1730},{"krate":0,"index":1733},{"krate":0,"index":1736},{"krate":0,"index":1737},{"krate":0,"index":1740},{"krate":0,"index":1741},{"krate":0,"index":3355}],"decl_id":null,"docs":" Wasmtime's embedding API","sig":null,"attributes":[{"value":"/ Wasmtime's embedding API","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":0,"byte_end":28,"line_start":1,"line_end":1,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":29,"byte_end":32,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate contains an API used to interact with WebAssembly modules. For","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":33,"byte_end":110,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/ example you can compile modules, instantiate them, call them, etc. As an","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":111,"byte_end":187,"line_start":4,"line_end":4,"column_start":1,"column_end":77}},{"value":"/ embedder of WebAssembly you can also provide WebAssembly modules","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":188,"byte_end":256,"line_start":5,"line_end":5,"column_start":1,"column_end":69}},{"value":"/ functionality from the host by creating host-defined functions, memories,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":257,"byte_end":334,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ globals, etc, which can do things that WebAssembly cannot (such as print to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":335,"byte_end":414,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ the screen).","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":415,"byte_end":431,"line_start":8,"line_end":8,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":432,"byte_end":435,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The `wasmtime` crate draws inspiration from a number of sources, including","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":436,"byte_end":514,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/ the [JS WebAssembly","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":515,"byte_end":538,"line_start":11,"line_end":11,"column_start":1,"column_end":24}},{"value":"/ API](https://developer.mozilla.org/en-US/docs/WebAssembly) as well as the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":539,"byte_end":616,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ [proposed C API](https://github.com/webassembly/wasm-c-api). As with all","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":617,"byte_end":693,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ other Rust code you're guaranteed that programs will be safe (not have","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":694,"byte_end":768,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/ undefined behavior or segfault) so long as you don't use `unsafe` in your","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":769,"byte_end":846,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ own program. With `wasmtime` you can easily and conveniently embed a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":847,"byte_end":919,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/ WebAssembly runtime with confidence that the WebAssembly is safely","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":920,"byte_end":990,"line_start":17,"line_end":17,"column_start":1,"column_end":71}},{"value":"/ sandboxed.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":991,"byte_end":1005,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":1006,"byte_end":1009,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ An example of using Wasmtime looks like:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":1010,"byte_end":1054,"line_start":20,"line_end":20,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":1055,"byte_end":1058,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":1059,"byte_end":1066,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use anyhow::Result;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":1067,"byte_end":1090,"line_start":23,"line_end":23,"column_start":1,"column_end":24}},{"value":"/ use wasmtime::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":1091,"byte_end":1111,"line_start":24,"line_end":24,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":1112,"byte_end":1115,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ fn main() -> Result<()> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":1116,"byte_end":1145,"line_start":26,"line_end":26,"column_start":1,"column_end":30}},{"value":"/     // All wasm objects operate within the context of a \"store\"","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":1146,"byte_end":1213,"line_start":27,"line_end":27,"column_start":1,"column_end":68}},{"value":"/     let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":1214,"byte_end":1251,"line_start":28,"line_end":28,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":1252,"byte_end":1255,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/     // Modules can be compiled through either the text or binary format","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":1256,"byte_end":1331,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/     let wat = r#\"","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":1332,"byte_end":1353,"line_start":31,"line_end":31,"column_start":1,"column_end":22}},{"value":"/         (module","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":1354,"byte_end":1373,"line_start":32,"line_end":32,"column_start":1,"column_end":20}},{"value":"/             (import \"\" \"\" (func $host_hello (param i32)))","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":1374,"byte_end":1435,"line_start":33,"line_end":33,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":1436,"byte_end":1439,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/             (func (export \"hello\")","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":1440,"byte_end":1478,"line_start":35,"line_end":35,"column_start":1,"column_end":39}},{"value":"/                 i32.const 3","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":1479,"byte_end":1510,"line_start":36,"line_end":36,"column_start":1,"column_end":32}},{"value":"/                 call $host_hello)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":1511,"byte_end":1548,"line_start":37,"line_end":37,"column_start":1,"column_end":38}},{"value":"/         )","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":1549,"byte_end":1562,"line_start":38,"line_end":38,"column_start":1,"column_end":14}},{"value":"/     \"#;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":1563,"byte_end":1574,"line_start":39,"line_end":39,"column_start":1,"column_end":12}},{"value":"/     let module = Module::new(store.engine(), wat)?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":1575,"byte_end":1630,"line_start":40,"line_end":40,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":1631,"byte_end":1634,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/     // Host functions can be defined which take/return wasm values and","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":1635,"byte_end":1709,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/     // execute arbitrary code on the host.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":1710,"byte_end":1756,"line_start":43,"line_end":43,"column_start":1,"column_end":47}},{"value":"/     let host_hello = Func::wrap(&store, |param: i32| {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":1757,"byte_end":1815,"line_start":44,"line_end":44,"column_start":1,"column_end":59}},{"value":"/         println!(\"Got {} from WebAssembly\", param);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":1816,"byte_end":1871,"line_start":45,"line_end":45,"column_start":1,"column_end":56}},{"value":"/     });","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":1872,"byte_end":1883,"line_start":46,"line_end":46,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":1884,"byte_end":1887,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/     // Instantiation of a module requires specifying its imports and then","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":1888,"byte_end":1965,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/     // afterwards we can fetch exports by name, as well as asserting the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":1966,"byte_end":2042,"line_start":49,"line_end":49,"column_start":1,"column_end":77}},{"value":"/     // type signature of the function with `get0`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":2043,"byte_end":2097,"line_start":50,"line_end":50,"column_start":1,"column_end":55}},{"value":"/     let instance = Instance::new(&store, &module, &[host_hello.into()])?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":2098,"byte_end":2175,"line_start":51,"line_end":51,"column_start":1,"column_end":78}},{"value":"/     let hello = instance","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":2176,"byte_end":2204,"line_start":52,"line_end":52,"column_start":1,"column_end":29}},{"value":"/         .get_func(\"hello\")","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":2205,"byte_end":2235,"line_start":53,"line_end":53,"column_start":1,"column_end":31}},{"value":"/         .ok_or(anyhow::format_err!(\"failed to find `hello` function export\"))?","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":2236,"byte_end":2318,"line_start":54,"line_end":54,"column_start":1,"column_end":83}},{"value":"/         .get0::<()>()?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":2319,"byte_end":2346,"line_start":55,"line_end":55,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":2347,"byte_end":2350,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/     // And finally we can call the wasm as if it were a Rust function!","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":2351,"byte_end":2425,"line_start":57,"line_end":57,"column_start":1,"column_end":75}},{"value":"/     hello()?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":2426,"byte_end":2443,"line_start":58,"line_end":58,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":2444,"byte_end":2447,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":2448,"byte_end":2462,"line_start":60,"line_end":60,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":2463,"byte_end":2468,"line_start":61,"line_end":61,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":2469,"byte_end":2476,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":2477,"byte_end":2480,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ## Core Concepts","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":2481,"byte_end":2501,"line_start":64,"line_end":64,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":2502,"byte_end":2505,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ There are a number of core types and concepts that are important to be aware","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":2506,"byte_end":2586,"line_start":66,"line_end":66,"column_start":1,"column_end":81}},{"value":"/ of when using the `wasmtime` crate:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":2587,"byte_end":2626,"line_start":67,"line_end":67,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":2627,"byte_end":2630,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ * Reference counting - almost all objects in this API are reference counted.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":2631,"byte_end":2711,"line_start":69,"line_end":69,"column_start":1,"column_end":81}},{"value":"/   Most of the time when and object is `clone`d you're just bumping a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":2712,"byte_end":2784,"line_start":70,"line_end":70,"column_start":1,"column_end":73}},{"value":"/   reference count. For example when you clone an [`Instance`] that is a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":2785,"byte_end":2860,"line_start":71,"line_end":71,"column_start":1,"column_end":76}},{"value":"/   cheap operation, it doesn't create an entirely new instance.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":2861,"byte_end":2927,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":2928,"byte_end":2931,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ * [`Store`] - all WebAssembly object and host values will be \"connected\" to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":2932,"byte_end":3011,"line_start":74,"line_end":74,"column_start":1,"column_end":80}},{"value":"/   a store. A [`Store`] is not threadsafe which means that itself and all","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":3012,"byte_end":3088,"line_start":75,"line_end":75,"column_start":1,"column_end":77}},{"value":"/   objects connected to it are pinned to a single thread (this happens","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":3089,"byte_end":3162,"line_start":76,"line_end":76,"column_start":1,"column_end":74}},{"value":"/   automatically through a lack of the `Send` and `Sync` traits). Similarly","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":3163,"byte_end":3241,"line_start":77,"line_end":77,"column_start":1,"column_end":79}},{"value":"/   `wasmtime` does not have a garbage collector so anything created within a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":3242,"byte_end":3321,"line_start":78,"line_end":78,"column_start":1,"column_end":80}},{"value":"/   [`Store`] will not be deallocated until all references have gone away. See","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":3322,"byte_end":3402,"line_start":79,"line_end":79,"column_start":1,"column_end":81}},{"value":"/   the [`Store`] documentation for more information.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":3403,"byte_end":3458,"line_start":80,"line_end":80,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":3459,"byte_end":3462,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ * [`Module`] - a compiled WebAssembly module. This structure represents","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":3463,"byte_end":3538,"line_start":82,"line_end":82,"column_start":1,"column_end":76}},{"value":"/   in-memory JIT code which is ready to execute after being instantiated.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":3539,"byte_end":3615,"line_start":83,"line_end":83,"column_start":1,"column_end":77}},{"value":"/   It's often important to cache instances of a [`Module`] because creation","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":3616,"byte_end":3694,"line_start":84,"line_end":84,"column_start":1,"column_end":79}},{"value":"/   (compilation) can be expensive. Note that [`Module`] is safe to share","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":3695,"byte_end":3770,"line_start":85,"line_end":85,"column_start":1,"column_end":76}},{"value":"/   across threads.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":3771,"byte_end":3792,"line_start":86,"line_end":86,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":3793,"byte_end":3796,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ * [`Instance`] - an instantiated WebAssembly module. An instance is where","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":3797,"byte_end":3874,"line_start":88,"line_end":88,"column_start":1,"column_end":78}},{"value":"/   you can actually acquire a [`Func`] from, for example, to call. Each","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":3875,"byte_end":3949,"line_start":89,"line_end":89,"column_start":1,"column_end":75}},{"value":"/   [`Instance`], like all other [`Store`]-connected objects, cannot be sent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":3950,"byte_end":4028,"line_start":90,"line_end":90,"column_start":1,"column_end":79}},{"value":"/   across threads.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":4029,"byte_end":4050,"line_start":91,"line_end":91,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":4051,"byte_end":4054,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ There are other important types within the `wasmtime` crate but it's crucial","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":4055,"byte_end":4135,"line_start":93,"line_end":93,"column_start":1,"column_end":81}},{"value":"/ to be familiar with the above types! Be sure to browse the API documentation","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":4136,"byte_end":4216,"line_start":94,"line_end":94,"column_start":1,"column_end":81}},{"value":"/ to get a feeling for what other functionality is offered by this crate.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":4217,"byte_end":4292,"line_start":95,"line_end":95,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":4293,"byte_end":4296,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ## Example Architecture","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":4297,"byte_end":4324,"line_start":97,"line_end":97,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":4325,"byte_end":4328,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ To better understand how Wasmtime types interact with each other let's walk","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":4329,"byte_end":4408,"line_start":99,"line_end":99,"column_start":1,"column_end":80}},{"value":"/ through, at a high-level, an example of how you might use WebAssembly. In","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":4409,"byte_end":4486,"line_start":100,"line_end":100,"column_start":1,"column_end":78}},{"value":"/ our use case let's say we have a web server where we'd like to run some","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":4487,"byte_end":4562,"line_start":101,"line_end":101,"column_start":1,"column_end":76}},{"value":"/ custom WebAssembly on each request. To ensure requests are isolated from","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":4563,"byte_end":4639,"line_start":102,"line_end":102,"column_start":1,"column_end":77}},{"value":"/ each other, though, we'll be creating a new [`Instance`] for each request.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":4640,"byte_end":4718,"line_start":103,"line_end":103,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":4719,"byte_end":4722,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ When the server starts, we'll start off by creating an [`Engine`] (and maybe","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":4723,"byte_end":4803,"line_start":105,"line_end":105,"column_start":1,"column_end":81}},{"value":"/ tweaking [`Config`] settings if necessary). This [`Engine`] will be the only","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":4804,"byte_end":4884,"line_start":106,"line_end":106,"column_start":1,"column_end":81}},{"value":"/ engine for the lifetime of the server itself.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":4885,"byte_end":4934,"line_start":107,"line_end":107,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":4935,"byte_end":4938,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ Next, we can compile our WebAssembly. You'd create a [`Module`] through the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":4939,"byte_end":5018,"line_start":109,"line_end":109,"column_start":1,"column_end":80}},{"value":"/ [`Module::new`] API. This will generate JIT code and perform expensive","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":5019,"byte_end":5093,"line_start":110,"line_end":110,"column_start":1,"column_end":75}},{"value":"/ compilation tasks up-front.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":5094,"byte_end":5125,"line_start":111,"line_end":111,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":5126,"byte_end":5129,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ After that setup, the server starts up as usual and is ready to receive","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":5130,"byte_end":5205,"line_start":113,"line_end":113,"column_start":1,"column_end":76}},{"value":"/ requests. Upon receiving a request you'd then create a [`Store`] with","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":5206,"byte_end":5279,"line_start":114,"line_end":114,"column_start":1,"column_end":74}},{"value":"/ [`Store::new`] referring to the original [`Engine`]. Using your [`Module`]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":5280,"byte_end":5358,"line_start":115,"line_end":115,"column_start":1,"column_end":79}},{"value":"/ from before you'd then call [`Instance::new`] to instantiate our module for","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":5359,"byte_end":5438,"line_start":116,"line_end":116,"column_start":1,"column_end":80}},{"value":"/ the request. Both of these operations are designed to be as cheap as","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":5439,"byte_end":5511,"line_start":117,"line_end":117,"column_start":1,"column_end":73}},{"value":"/ possible.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":5512,"byte_end":5525,"line_start":118,"line_end":118,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":5526,"byte_end":5529,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ With an [`Instance`] you can then invoke various exports and interact with","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":5530,"byte_end":5608,"line_start":120,"line_end":120,"column_start":1,"column_end":79}},{"value":"/ the WebAssembly module. Once the request is finished the [`Store`],","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":5609,"byte_end":5680,"line_start":121,"line_end":121,"column_start":1,"column_end":72}},{"value":"/ [`Instance`], and all other items loaded are dropped and everything will be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":5681,"byte_end":5760,"line_start":122,"line_end":122,"column_start":1,"column_end":80}},{"value":"/ deallocated. Note that it's crucial to create a [`Store`]-per-request to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":5761,"byte_end":5837,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/ ensure that memory usage doesn't balloon accidentally by keeping a [`Store`]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":5838,"byte_end":5918,"line_start":124,"line_end":124,"column_start":1,"column_end":81}},{"value":"/ alive indefinitely.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":5919,"byte_end":5942,"line_start":125,"line_end":125,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":5943,"byte_end":5946,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ ## Advanced Linking","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":5947,"byte_end":5970,"line_start":127,"line_end":127,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":5971,"byte_end":5974,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ Often WebAssembly modules are not entirely self-isolated. They might refer","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":5975,"byte_end":6053,"line_start":129,"line_end":129,"column_start":1,"column_end":79}},{"value":"/ to quite a few pieces of host functionality, WASI, or maybe even a number of","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":6054,"byte_end":6134,"line_start":130,"line_end":130,"column_start":1,"column_end":81}},{"value":"/ other wasm modules. To help juggling all this together this crate provides a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":6135,"byte_end":6215,"line_start":131,"line_end":131,"column_start":1,"column_end":81}},{"value":"/ [`Linker`] type which serves as an abstraction to assist in instantiating a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":6216,"byte_end":6295,"line_start":132,"line_end":132,"column_start":1,"column_end":80}},{"value":"/ module. The [`Linker`] type also transparently handles Commands and Reactors","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":6296,"byte_end":6376,"line_start":133,"line_end":133,"column_start":1,"column_end":81}},{"value":"/ as defined by WASI.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":6377,"byte_end":6400,"line_start":134,"line_end":134,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":6401,"byte_end":6404,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ ## WASI","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":6405,"byte_end":6416,"line_start":136,"line_end":136,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":6417,"byte_end":6420,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ The `wasmtime` crate does not natively provide support for WASI, but you can","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":6421,"byte_end":6501,"line_start":138,"line_end":138,"column_start":1,"column_end":81}},{"value":"/ use the `wasmtime-wasi` crate for that purpose. With `wasmtime-wasi` you can","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":6502,"byte_end":6582,"line_start":139,"line_end":139,"column_start":1,"column_end":81}},{"value":"/ create a \"wasi instance\" and then add all of its items into a [`Linker`],","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":6583,"byte_end":6660,"line_start":140,"line_end":140,"column_start":1,"column_end":78}},{"value":"/ which can then be used to instantiate a [`Module`] that uses WASI.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":6661,"byte_end":6731,"line_start":141,"line_end":141,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":6732,"byte_end":6735,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":6736,"byte_end":6751,"line_start":143,"line_end":143,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":6752,"byte_end":6755,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ In addition to the examples below be sure to check out the [online embedding","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":6756,"byte_end":6836,"line_start":145,"line_end":145,"column_start":1,"column_end":81}},{"value":"/ documentation][rustdocs] as well as the [online list of examples][examples]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":6837,"byte_end":6916,"line_start":146,"line_end":146,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":6917,"byte_end":6920,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ [rustdocs]: https://bytecodealliance.github.io/wasmtime/lang-rust.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":6921,"byte_end":6995,"line_start":148,"line_end":148,"column_start":1,"column_end":75}},{"value":"/ [examples]: https://bytecodealliance.github.io/wasmtime/examples-rust-embed.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":6996,"byte_end":7080,"line_start":149,"line_end":149,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":7081,"byte_end":7084,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ An example of using WASI looks like:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":7085,"byte_end":7125,"line_start":151,"line_end":151,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":7126,"byte_end":7129,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":7130,"byte_end":7143,"line_start":153,"line_end":153,"column_start":1,"column_end":14}},{"value":"/ # use anyhow::Result;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":7144,"byte_end":7169,"line_start":154,"line_end":154,"column_start":1,"column_end":26}},{"value":"/ # use wasmtime::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":7170,"byte_end":7192,"line_start":155,"line_end":155,"column_start":1,"column_end":23}},{"value":"/ use wasmtime_wasi::{Wasi, WasiCtx};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":7193,"byte_end":7232,"line_start":156,"line_end":156,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":7233,"byte_end":7236,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<()> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":7237,"byte_end":7268,"line_start":158,"line_end":158,"column_start":1,"column_end":32}},{"value":"/ let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":7269,"byte_end":7302,"line_start":159,"line_end":159,"column_start":1,"column_end":34}},{"value":"/ let mut linker = Linker::new(&store);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":7303,"byte_end":7344,"line_start":160,"line_end":160,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":7345,"byte_end":7348,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ // Create an instance of `Wasi` which contains a `WasiCtx`. Note that","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":7349,"byte_end":7422,"line_start":162,"line_end":162,"column_start":1,"column_end":74}},{"value":"/ // `WasiCtx` provides a number of ways to configure what the target program","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":7423,"byte_end":7502,"line_start":163,"line_end":163,"column_start":1,"column_end":80}},{"value":"/ // will have access to.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":7503,"byte_end":7530,"line_start":164,"line_end":164,"column_start":1,"column_end":28}},{"value":"/ let wasi = Wasi::new(&store, WasiCtx::new(std::env::args())?);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":7531,"byte_end":7597,"line_start":165,"line_end":165,"column_start":1,"column_end":67}},{"value":"/ wasi.add_to_linker(&mut linker)?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":7598,"byte_end":7635,"line_start":166,"line_end":166,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":7636,"byte_end":7639,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ // Instantiate our module with the imports we've created, and run it.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":7640,"byte_end":7713,"line_start":168,"line_end":168,"column_start":1,"column_end":74}},{"value":"/ let module = Module::from_file(store.engine(), \"foo.wasm\")?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":7714,"byte_end":7778,"line_start":169,"line_end":169,"column_start":1,"column_end":65}},{"value":"/ let instance = linker.instantiate(&module)?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":7779,"byte_end":7827,"line_start":170,"line_end":170,"column_start":1,"column_end":49}},{"value":"/ // ...","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":7828,"byte_end":7838,"line_start":171,"line_end":171,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":7839,"byte_end":7842,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":7843,"byte_end":7855,"line_start":173,"line_end":173,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":7856,"byte_end":7863,"line_start":174,"line_end":174,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":7864,"byte_end":7871,"line_start":175,"line_end":175,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":7872,"byte_end":7875,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ An example of reading a string from a wasm module:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":7876,"byte_end":7930,"line_start":177,"line_end":177,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":7931,"byte_end":7934,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":7935,"byte_end":7942,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"/ use std::str;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":7943,"byte_end":7960,"line_start":180,"line_end":180,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":7961,"byte_end":7964,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ # use wasmtime::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":7965,"byte_end":7987,"line_start":182,"line_end":182,"column_start":1,"column_end":23}},{"value":"/ # fn main() -> anyhow::Result<()> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":7988,"byte_end":8027,"line_start":183,"line_end":183,"column_start":1,"column_end":40}},{"value":"/ let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":8028,"byte_end":8061,"line_start":184,"line_end":184,"column_start":1,"column_end":34}},{"value":"/ let log_str = Func::wrap(&store, |caller: Caller<'_>, ptr: i32, len: i32| {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":8062,"byte_end":8141,"line_start":185,"line_end":185,"column_start":1,"column_end":80}},{"value":"/     let mem = match caller.get_export(\"memory\") {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":8142,"byte_end":8195,"line_start":186,"line_end":186,"column_start":1,"column_end":54}},{"value":"/         Some(Extern::Memory(mem)) => mem,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":8196,"byte_end":8241,"line_start":187,"line_end":187,"column_start":1,"column_end":46}},{"value":"/         _ => return Err(Trap::new(\"failed to find host memory\")),","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":8242,"byte_end":8311,"line_start":188,"line_end":188,"column_start":1,"column_end":70}},{"value":"/     };","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":8312,"byte_end":8322,"line_start":189,"line_end":189,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":8323,"byte_end":8326,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/     // We're reading raw wasm memory here so we need `unsafe`. Note","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":8327,"byte_end":8398,"line_start":191,"line_end":191,"column_start":1,"column_end":72}},{"value":"/     // though that this should be safe because we don't reenter wasm","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":8399,"byte_end":8471,"line_start":192,"line_end":192,"column_start":1,"column_end":73}},{"value":"/     // while we're reading wasm memory, nor should we clash with","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":8472,"byte_end":8540,"line_start":193,"line_end":193,"column_start":1,"column_end":69}},{"value":"/     // any other memory accessors (assuming they're well-behaved","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":8541,"byte_end":8609,"line_start":194,"line_end":194,"column_start":1,"column_end":69}},{"value":"/     // too).","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":8610,"byte_end":8626,"line_start":195,"line_end":195,"column_start":1,"column_end":17}},{"value":"/     unsafe {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":8627,"byte_end":8643,"line_start":196,"line_end":196,"column_start":1,"column_end":17}},{"value":"/         let data = mem.data_unchecked()","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":8644,"byte_end":8687,"line_start":197,"line_end":197,"column_start":1,"column_end":44}},{"value":"/             .get(ptr as u32 as usize..)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":8688,"byte_end":8731,"line_start":198,"line_end":198,"column_start":1,"column_end":44}},{"value":"/             .and_then(|arr| arr.get(..len as u32 as usize));","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":8732,"byte_end":8796,"line_start":199,"line_end":199,"column_start":1,"column_end":65}},{"value":"/         let string = match data {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":8797,"byte_end":8834,"line_start":200,"line_end":200,"column_start":1,"column_end":38}},{"value":"/             Some(data) => match str::from_utf8(data) {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":8835,"byte_end":8893,"line_start":201,"line_end":201,"column_start":1,"column_end":59}},{"value":"/                 Ok(s) => s,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":8894,"byte_end":8925,"line_start":202,"line_end":202,"column_start":1,"column_end":32}},{"value":"/                 Err(_) => return Err(Trap::new(\"invalid utf-8\")),","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":8926,"byte_end":8995,"line_start":203,"line_end":203,"column_start":1,"column_end":70}},{"value":"/             },","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":8996,"byte_end":9014,"line_start":204,"line_end":204,"column_start":1,"column_end":19}},{"value":"/             None => return Err(Trap::new(\"pointer/length out of bounds\")),","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":9015,"byte_end":9093,"line_start":205,"line_end":205,"column_start":1,"column_end":79}},{"value":"/         };","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":9094,"byte_end":9108,"line_start":206,"line_end":206,"column_start":1,"column_end":15}},{"value":"/         assert_eq!(string, \"Hello, world!\");","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":9109,"byte_end":9157,"line_start":207,"line_end":207,"column_start":1,"column_end":49}},{"value":"/         println!(\"{}\", string);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":9158,"byte_end":9193,"line_start":208,"line_end":208,"column_start":1,"column_end":36}},{"value":"/     }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":9194,"byte_end":9203,"line_start":209,"line_end":209,"column_start":1,"column_end":10}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":9204,"byte_end":9218,"line_start":210,"line_end":210,"column_start":1,"column_end":15}},{"value":"/ });","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":9219,"byte_end":9226,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ let module = Module::new(","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":9227,"byte_end":9256,"line_start":212,"line_end":212,"column_start":1,"column_end":30}},{"value":"/     store.engine(),","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":9257,"byte_end":9280,"line_start":213,"line_end":213,"column_start":1,"column_end":24}},{"value":"/     r#\"","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":9281,"byte_end":9292,"line_start":214,"line_end":214,"column_start":1,"column_end":12}},{"value":"/         (module","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":9293,"byte_end":9312,"line_start":215,"line_end":215,"column_start":1,"column_end":20}},{"value":"/             (import \"\" \"\" (func $log_str (param i32 i32)))","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":9313,"byte_end":9375,"line_start":216,"line_end":216,"column_start":1,"column_end":63}},{"value":"/             (func (export \"foo\")","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":9376,"byte_end":9412,"line_start":217,"line_end":217,"column_start":1,"column_end":37}},{"value":"/                 i32.const 4   ;; ptr","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":9413,"byte_end":9453,"line_start":218,"line_end":218,"column_start":1,"column_end":41}},{"value":"/                 i32.const 13  ;; len","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":9454,"byte_end":9494,"line_start":219,"line_end":219,"column_start":1,"column_end":41}},{"value":"/                 call $log_str)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":9495,"byte_end":9529,"line_start":220,"line_end":220,"column_start":1,"column_end":35}},{"value":"/             (memory (export \"memory\") 1)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":9530,"byte_end":9574,"line_start":221,"line_end":221,"column_start":1,"column_end":45}},{"value":"/             (data (i32.const 4) \"Hello, world!\"))","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":9575,"byte_end":9628,"line_start":222,"line_end":222,"column_start":1,"column_end":54}},{"value":"/     \"#,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":9629,"byte_end":9640,"line_start":223,"line_end":223,"column_start":1,"column_end":12}},{"value":"/ )?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":9641,"byte_end":9648,"line_start":224,"line_end":224,"column_start":1,"column_end":8}},{"value":"/ let instance = Instance::new(&store, &module, &[log_str.into()])?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":9649,"byte_end":9719,"line_start":225,"line_end":225,"column_start":1,"column_end":71}},{"value":"/ let foo = instance.get_func(\"foo\").unwrap().get0::<()>()?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":9720,"byte_end":9782,"line_start":226,"line_end":226,"column_start":1,"column_end":63}},{"value":"/ foo()?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":9783,"byte_end":9794,"line_start":227,"line_end":227,"column_start":1,"column_end":12}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":9795,"byte_end":9807,"line_start":228,"line_end":228,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":9808,"byte_end":9815,"line_start":229,"line_end":229,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":9816,"byte_end":9823,"line_start":230,"line_end":230,"column_start":1,"column_end":8}},{"value":"allow(unknown_lints)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":9825,"byte_end":9849,"line_start":232,"line_end":232,"column_start":1,"column_end":25}},{"value":"deny(missing_docs, broken_intra_doc_links)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":9850,"byte_end":9896,"line_start":233,"line_end":233,"column_start":1,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1743},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":11659,"byte_end":11663,"line_start":28,"line_end":28,"column_start":5,"column_end":9},"name":"Func","qualname":"::externals::Extern::Func","value":"Extern::Func(Func)","parent":{"krate":0,"index":1742},"children":[],"decl_id":null,"docs":" A WebAssembly `func` which can be called.\n","sig":null,"attributes":[{"value":"/ A WebAssembly `func` which can be called.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":11609,"byte_end":11654,"line_start":27,"line_end":27,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1746},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":11791,"byte_end":11797,"line_start":31,"line_end":31,"column_start":5,"column_end":11},"name":"Global","qualname":"::externals::Extern::Global","value":"Extern::Global(Global)","parent":{"krate":0,"index":1742},"children":[],"decl_id":null,"docs":" A WebAssembly `global` which acts like a `Cell<T>` of sorts, supporting\n `get` and `set` operations.\n","sig":null,"attributes":[{"value":"/ A WebAssembly `global` which acts like a `Cell<T>` of sorts, supporting","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":11675,"byte_end":11750,"line_start":29,"line_end":29,"column_start":5,"column_end":80}},{"value":"/ `get` and `set` operations.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":11755,"byte_end":11786,"line_start":30,"line_end":30,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1749},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":11875,"byte_end":11880,"line_start":33,"line_end":33,"column_start":5,"column_end":10},"name":"Table","qualname":"::externals::Extern::Table","value":"Extern::Table(Table)","parent":{"krate":0,"index":1742},"children":[],"decl_id":null,"docs":" A WebAssembly `table` which is an array of `Val` types.\n","sig":null,"attributes":[{"value":"/ A WebAssembly `table` which is an array of `Val` types.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":11811,"byte_end":11870,"line_start":32,"line_end":32,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1752},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":11930,"byte_end":11936,"line_start":35,"line_end":35,"column_start":5,"column_end":11},"name":"Memory","qualname":"::externals::Extern::Memory","value":"Extern::Memory(Memory)","parent":{"krate":0,"index":1742},"children":[],"decl_id":null,"docs":" A WebAssembly linear memory.\n","sig":null,"attributes":[{"value":"/ A WebAssembly linear memory.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":11893,"byte_end":11925,"line_start":34,"line_end":34,"column_start":5,"column_end":37}}]},{"kind":"Enum","id":{"krate":0,"index":1742},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":11596,"byte_end":11602,"line_start":26,"line_end":26,"column_start":10,"column_end":16},"name":"Extern","qualname":"::externals::Extern","value":"pub enum Extern { Func(Func), Global(Global), Table(Table), Memory(Memory), }","parent":null,"children":[{"krate":0,"index":1743},{"krate":0,"index":1746},{"krate":0,"index":1749},{"krate":0,"index":1752}],"decl_id":null,"docs":" An external item to a WebAssembly module, or a list of what can possibly be\n exported from a wasm module.","sig":null,"attributes":[{"value":"/ An external item to a WebAssembly module, or a list of what can possibly be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":11141,"byte_end":11220,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ exported from a wasm module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":11221,"byte_end":11253,"line_start":19,"line_end":19,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":11254,"byte_end":11257,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This is both returned from [`Instance::exports`](crate::Instance::exports)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":11258,"byte_end":11336,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ as well as required by [`Instance::new`](crate::Instance::new). In other","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":11337,"byte_end":11413,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"/ words, this is the type of extracted values from an instantiated module, and","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":11414,"byte_end":11494,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ it's also used to provide imported values when instantiating a module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":11495,"byte_end":11569,"line_start":24,"line_end":24,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":12103,"byte_end":12112,"line_start":42,"line_end":42,"column_start":12,"column_end":21},"name":"into_func","qualname":"<Extern>::into_func","value":"pub fn into_func(Self) -> Option<Func>","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying `Func`, if this external is a function.","sig":null,"attributes":[{"value":"/ Returns the underlying `Func`, if this external is a function.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":11967,"byte_end":12033,"line_start":39,"line_end":39,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":12038,"byte_end":12041,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if this is not a function.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":12046,"byte_end":12091,"line_start":41,"line_end":41,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":12382,"byte_end":12393,"line_start":52,"line_end":52,"column_start":12,"column_end":23},"name":"into_global","qualname":"<Extern>::into_global","value":"pub fn into_global(Self) -> Option<Global>","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying `Global`, if this external is a global.","sig":null,"attributes":[{"value":"/ Returns the underlying `Global`, if this external is a global.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":12248,"byte_end":12314,"line_start":49,"line_end":49,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":12319,"byte_end":12322,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if this is not a global.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":12327,"byte_end":12370,"line_start":51,"line_end":51,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":12668,"byte_end":12678,"line_start":62,"line_end":62,"column_start":12,"column_end":22},"name":"into_table","qualname":"<Extern>::into_table","value":"pub fn into_table(Self) -> Option<Table>","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying `Table`, if this external is a table.","sig":null,"attributes":[{"value":"/ Returns the underlying `Table`, if this external is a table.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":12537,"byte_end":12601,"line_start":59,"line_end":59,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":12606,"byte_end":12609,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if this is not a table.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":12614,"byte_end":12656,"line_start":61,"line_end":61,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":12952,"byte_end":12963,"line_start":72,"line_end":72,"column_start":12,"column_end":23},"name":"into_memory","qualname":"<Extern>::into_memory","value":"pub fn into_memory(Self) -> Option<Memory>","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying `Memory`, if this external is a memory.","sig":null,"attributes":[{"value":"/ Returns the underlying `Memory`, if this external is a memory.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":12818,"byte_end":12884,"line_start":69,"line_end":69,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":12889,"byte_end":12892,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if this is not a memory.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":12897,"byte_end":12940,"line_start":71,"line_end":71,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":13170,"byte_end":13172,"line_start":80,"line_end":80,"column_start":12,"column_end":14},"name":"ty","qualname":"<Extern>::ty","value":"pub fn ty(&Self) -> ExternType","parent":null,"children":[],"decl_id":null,"docs":" Returns the type associated with this `Extern`.\n","sig":null,"attributes":[{"value":"/ Returns the type associated with this `Extern`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":13107,"byte_end":13158,"line_start":79,"line_end":79,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1757},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":15983,"byte_end":15989,"line_start":169,"line_end":169,"column_start":12,"column_end":18},"name":"Global","qualname":"::externals::Global","value":"Global {  }","parent":null,"children":[{"krate":0,"index":1758},{"krate":0,"index":1759}],"decl_id":null,"docs":" A WebAssembly `global` value which can be read and written to.","sig":null,"attributes":[{"value":"/ A WebAssembly `global` value which can be read and written to.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":15242,"byte_end":15308,"line_start":153,"line_end":153,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":15309,"byte_end":15312,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ A `global` in WebAssembly is sort of like a global variable within an","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":15313,"byte_end":15386,"line_start":155,"line_end":155,"column_start":1,"column_end":74}},{"value":"/ [`Instance`](crate::Instance). The `global.get` and `global.set`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":15387,"byte_end":15455,"line_start":156,"line_end":156,"column_start":1,"column_end":69}},{"value":"/ instructions will modify and read global values in a wasm module. Globals","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":15456,"byte_end":15533,"line_start":157,"line_end":157,"column_start":1,"column_end":78}},{"value":"/ can either be imported or exported from wasm modules.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":15534,"byte_end":15591,"line_start":158,"line_end":158,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":15592,"byte_end":15595,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ If you're familiar with Rust already you can think of a `Global` as a sort","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":15596,"byte_end":15674,"line_start":160,"line_end":160,"column_start":1,"column_end":79}},{"value":"/ of `Rc<Cell<Val>>`, more or less.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":15675,"byte_end":15712,"line_start":161,"line_end":161,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":15713,"byte_end":15716,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ # `Global` and `Clone`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":15717,"byte_end":15743,"line_start":163,"line_end":163,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":15744,"byte_end":15747,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ Globals are internally reference counted so you can `clone` a `Global`. The","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":15748,"byte_end":15827,"line_start":165,"line_end":165,"column_start":1,"column_end":80}},{"value":"/ cloning process only performs a shallow clone, so two cloned `Global`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":15828,"byte_end":15901,"line_start":166,"line_end":166,"column_start":1,"column_end":74}},{"value":"/ instances are equivalent in their functionality.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":15902,"byte_end":15954,"line_start":167,"line_end":167,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":16539,"byte_end":16542,"line_start":186,"line_end":186,"column_start":12,"column_end":15},"name":"new","qualname":"<Global>::new","value":"pub fn new(&Store, GlobalType, Val) -> Result<Global>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new WebAssembly `global` value with the provide type `ty` and\n initial value `val`.","sig":null,"attributes":[{"value":"/ Creates a new WebAssembly `global` value with the provide type `ty` and","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":16101,"byte_end":16176,"line_start":175,"line_end":175,"column_start":5,"column_end":80}},{"value":"/ initial value `val`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":16181,"byte_end":16205,"line_start":176,"line_end":176,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":16210,"byte_end":16213,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ The `store` argument provided is used as a general global cache for","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":16218,"byte_end":16289,"line_start":178,"line_end":178,"column_start":5,"column_end":76}},{"value":"/ information, and otherwise the `ty` and `val` arguments are used to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":16294,"byte_end":16365,"line_start":179,"line_end":179,"column_start":5,"column_end":76}},{"value":"/ initialize the global.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":16370,"byte_end":16396,"line_start":180,"line_end":180,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":16401,"byte_end":16404,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":16409,"byte_end":16421,"line_start":182,"line_end":182,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":16426,"byte_end":16429,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the `ty` provided does not match the type of the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":16434,"byte_end":16506,"line_start":184,"line_end":184,"column_start":5,"column_end":77}},{"value":"/ value `val`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":16511,"byte_end":16527,"line_start":185,"line_end":185,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":17086,"byte_end":17088,"line_start":201,"line_end":201,"column_start":12,"column_end":14},"name":"ty","qualname":"<Global>::ty","value":"pub fn ty(&Self) -> GlobalType","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying type of this `global`.\n","sig":null,"attributes":[{"value":"/ Returns the underlying type of this `global`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":17025,"byte_end":17074,"line_start":200,"line_end":200,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":17402,"byte_end":17410,"line_start":208,"line_end":208,"column_start":12,"column_end":20},"name":"val_type","qualname":"<Global>::val_type","value":"pub fn val_type(&Self) -> ValType","parent":null,"children":[],"decl_id":null,"docs":" Returns the value type of this `global`.\n","sig":null,"attributes":[{"value":"/ Returns the value type of this `global`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":17346,"byte_end":17390,"line_start":207,"line_end":207,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":17579,"byte_end":17589,"line_start":213,"line_end":213,"column_start":12,"column_end":22},"name":"mutability","qualname":"<Global>::mutability","value":"pub fn mutability(&Self) -> Mutability","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying mutability of this `global`.\n","sig":null,"attributes":[{"value":"/ Returns the underlying mutability of this `global`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":17512,"byte_end":17567,"line_start":212,"line_end":212,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":17820,"byte_end":17823,"line_start":222,"line_end":222,"column_start":12,"column_end":15},"name":"get","qualname":"<Global>::get","value":"pub fn get(&Self) -> Val","parent":null,"children":[],"decl_id":null,"docs":" Returns the current [`Val`] of this global.\n","sig":null,"attributes":[{"value":"/ Returns the current [`Val`] of this global.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":17761,"byte_end":17808,"line_start":221,"line_end":221,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":18933,"byte_end":18936,"line_start":250,"line_end":250,"column_start":12,"column_end":15},"name":"set","qualname":"<Global>::set","value":"pub fn set(&Self, Val) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to set the current value of this global to [`Val`].","sig":null,"attributes":[{"value":"/ Attempts to set the current value of this global to [`Val`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":18710,"byte_end":18774,"line_start":244,"line_end":244,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":18779,"byte_end":18782,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":18787,"byte_end":18799,"line_start":246,"line_end":246,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":18804,"byte_end":18807,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ Returns an error if this global has a different type than `Val`, or if","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":18812,"byte_end":18886,"line_start":248,"line_end":248,"column_start":5,"column_end":79}},{"value":"/ it's not a mutable global.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":18891,"byte_end":18921,"line_start":249,"line_end":249,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":1762},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":21985,"byte_end":21990,"line_start":327,"line_end":327,"column_start":12,"column_end":17},"name":"Table","qualname":"::externals::Table","value":"Table {  }","parent":null,"children":[{"krate":0,"index":1763},{"krate":0,"index":1764}],"decl_id":null,"docs":" A WebAssembly `table`, or an array of values.","sig":null,"attributes":[{"value":"/ A WebAssembly `table`, or an array of values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":21243,"byte_end":21292,"line_start":311,"line_end":311,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":21293,"byte_end":21296,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ Like [`Memory`] a table is an indexed array of values, but unlike [`Memory`]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":21297,"byte_end":21377,"line_start":313,"line_end":313,"column_start":1,"column_end":81}},{"value":"/ it's an array of WebAssembly values rather than bytes. One of the most","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":21378,"byte_end":21452,"line_start":314,"line_end":314,"column_start":1,"column_end":75}},{"value":"/ common usages of a table is a function table for wasm modules, where each","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":21453,"byte_end":21530,"line_start":315,"line_end":315,"column_start":1,"column_end":78}},{"value":"/ element has the `Func` type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":21531,"byte_end":21563,"line_start":316,"line_end":316,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":21564,"byte_end":21567,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/ Tables, like globals, are not threadsafe and can only be used on one thread.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":21568,"byte_end":21648,"line_start":318,"line_end":318,"column_start":1,"column_end":81}},{"value":"/ Tables can be grown in size and each element can be read/written.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":21649,"byte_end":21718,"line_start":319,"line_end":319,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":21719,"byte_end":21722,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/ # `Table` and `Clone`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":21723,"byte_end":21748,"line_start":321,"line_end":321,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":21749,"byte_end":21752,"line_start":322,"line_end":322,"column_start":1,"column_end":4}},{"value":"/ Tables are internally reference counted so you can `clone` a `Table`. The","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":21753,"byte_end":21830,"line_start":323,"line_end":323,"column_start":1,"column_end":78}},{"value":"/ cloning process only performs a shallow clone, so two cloned `Table`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":21831,"byte_end":21903,"line_start":324,"line_end":324,"column_start":1,"column_end":73}},{"value":"/ instances are equivalent in their functionality.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":21904,"byte_end":21956,"line_start":325,"line_end":325,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":22902,"byte_end":22905,"line_start":355,"line_end":355,"column_start":12,"column_end":15},"name":"new","qualname":"<Table>::new","value":"pub fn new(&Store, TableType, Val) -> Result<Table>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Table` with the given parameters.","sig":null,"attributes":[{"value":"/ Creates a new `Table` with the given parameters.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":22398,"byte_end":22450,"line_start":344,"line_end":344,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":22455,"byte_end":22458,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ * `store` - a global cache to store information in","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":22463,"byte_end":22517,"line_start":346,"line_end":346,"column_start":5,"column_end":59}},{"value":"/ * `ty` - the type of this table, containing both the element type as","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":22522,"byte_end":22594,"line_start":347,"line_end":347,"column_start":5,"column_end":77}},{"value":"/   well as the initial size and maximum size, if any.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":22599,"byte_end":22655,"line_start":348,"line_end":348,"column_start":5,"column_end":61}},{"value":"/ * `init` - the initial value to fill all table entries with, if the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":22660,"byte_end":22731,"line_start":349,"line_end":349,"column_start":5,"column_end":76}},{"value":"/   table starts with an initial size.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":22736,"byte_end":22776,"line_start":350,"line_end":350,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":22781,"byte_end":22784,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":22789,"byte_end":22801,"line_start":352,"line_end":352,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":22806,"byte_end":22809,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ Returns an error if `init` does not match the element type of the table.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":22814,"byte_end":22890,"line_start":354,"line_end":354,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":24068,"byte_end":24070,"line_start":385,"line_end":385,"column_start":12,"column_end":14},"name":"ty","qualname":"<Table>::ty","value":"pub fn ty(&Self) -> TableType","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying type of this table, including its element type as\n well as the maximum/minimum lower bounds.\n","sig":null,"attributes":[{"value":"/ Returns the underlying type of this table, including its element type as","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":23930,"byte_end":24006,"line_start":383,"line_end":383,"column_start":5,"column_end":81}},{"value":"/ well as the maximum/minimum lower bounds.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":24011,"byte_end":24056,"line_start":384,"line_end":384,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":24448,"byte_end":24451,"line_start":396,"line_end":396,"column_start":12,"column_end":15},"name":"get","qualname":"<Table>::get","value":"pub fn get(&Self, u32) -> Option<Val>","parent":null,"children":[],"decl_id":null,"docs":" Returns the table element value at `index`.","sig":null,"attributes":[{"value":"/ Returns the table element value at `index`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":24329,"byte_end":24376,"line_start":393,"line_end":393,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":24381,"byte_end":24384,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `index` is out of bounds.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":24389,"byte_end":24436,"line_start":395,"line_end":395,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":25252,"byte_end":25255,"line_start":416,"line_end":416,"column_start":12,"column_end":15},"name":"set","qualname":"<Table>::set","value":"pub fn set(&Self, u32, Val) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes the `val` provided into `index` within this table.","sig":null,"attributes":[{"value":"/ Writes the `val` provided into `index` within this table.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":25016,"byte_end":25077,"line_start":410,"line_end":410,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":25082,"byte_end":25085,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":25090,"byte_end":25102,"line_start":412,"line_end":412,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":25107,"byte_end":25110,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ Returns an error if `index` is out of bounds or if `val` does not have","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":25115,"byte_end":25189,"line_start":414,"line_end":414,"column_start":5,"column_end":79}},{"value":"/ the right type to be stored in this table.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":25194,"byte_end":25240,"line_start":415,"line_end":415,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":25710,"byte_end":25714,"line_start":430,"line_end":430,"column_start":12,"column_end":16},"name":"size","qualname":"<Table>::size","value":"pub fn size(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the current size of this table.\n","sig":null,"attributes":[{"value":"/ Returns the current size of this table.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":25655,"byte_end":25698,"line_start":429,"line_end":429,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":26246,"byte_end":26250,"line_start":444,"line_end":444,"column_start":12,"column_end":16},"name":"grow","qualname":"<Table>::grow","value":"pub fn grow(&Self, u32, Val) -> Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Grows the size of this table by `delta` more elements, initialization\n all new elements to `init`.","sig":null,"attributes":[{"value":"/ Grows the size of this table by `delta` more elements, initialization","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":25813,"byte_end":25886,"line_start":434,"line_end":434,"column_start":5,"column_end":78}},{"value":"/ all new elements to `init`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":25891,"byte_end":25922,"line_start":435,"line_end":435,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":25927,"byte_end":25930,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ Returns the previous size of this table if successful.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":25935,"byte_end":25993,"line_start":437,"line_end":437,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":25998,"byte_end":26001,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":26006,"byte_end":26018,"line_start":439,"line_end":439,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":26023,"byte_end":26026,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the table cannot be grown by `delta`, for example","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":26031,"byte_end":26104,"line_start":441,"line_end":441,"column_start":5,"column_end":78}},{"value":"/ if it would cause the table to exceed its maximum size. Also returns an","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":26109,"byte_end":26184,"line_start":442,"line_end":442,"column_start":5,"column_end":80}},{"value":"/ error if `init` is not of the right type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":26189,"byte_end":26234,"line_start":443,"line_end":443,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":27575,"byte_end":27579,"line_start":479,"line_end":479,"column_start":12,"column_end":16},"name":"copy","qualname":"<Table>::copy","value":"pub fn copy(&Table, u32, &Table, u32, u32) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Copy `len` elements from `src_table[src_index..]` into\n `dst_table[dst_index..]`.","sig":null,"attributes":[{"value":"/ Copy `len` elements from `src_table[src_index..]` into","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":27331,"byte_end":27389,"line_start":472,"line_end":472,"column_start":5,"column_end":63}},{"value":"/ `dst_table[dst_index..]`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":27394,"byte_end":27423,"line_start":473,"line_end":473,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":27428,"byte_end":27431,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":27436,"byte_end":27448,"line_start":475,"line_end":475,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":27453,"byte_end":27456,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the range is out of bounds of either the source or","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":27461,"byte_end":27535,"line_start":477,"line_end":477,"column_start":5,"column_end":79}},{"value":"/ destination tables.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":27540,"byte_end":27563,"line_start":478,"line_end":478,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":28861,"byte_end":28865,"line_start":517,"line_end":517,"column_start":12,"column_end":16},"name":"fill","qualname":"<Table>::fill","value":"pub fn fill(&Self, u32, Val, u32) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Fill `table[dst..(dst + len)]` with the given value.","sig":null,"attributes":[{"value":"/ Fill `table[dst..(dst + len)]` with the given value.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":28509,"byte_end":28565,"line_start":505,"line_end":505,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":28570,"byte_end":28573,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":28578,"byte_end":28590,"line_start":507,"line_end":507,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":28595,"byte_end":28598,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ Returns an error if","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":28603,"byte_end":28626,"line_start":509,"line_end":509,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":28631,"byte_end":28634,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ * `val` is not of the same type as this table's","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":28639,"byte_end":28690,"line_start":511,"line_end":511,"column_start":5,"column_end":56}},{"value":"/   element type,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":28695,"byte_end":28714,"line_start":512,"line_end":512,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":28719,"byte_end":28722,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ * the region to be filled is out of bounds, or","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":28727,"byte_end":28777,"line_start":514,"line_end":514,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":28782,"byte_end":28785,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ * `val` comes from a different `Store` from this table.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":28790,"byte_end":28849,"line_start":516,"line_end":516,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":1767},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":40583,"byte_end":40589,"line_start":771,"line_end":771,"column_start":12,"column_end":18},"name":"Memory","qualname":"::externals::Memory","value":"Memory {  }","parent":null,"children":[{"krate":0,"index":1768},{"krate":0,"index":1769}],"decl_id":null,"docs":" A WebAssembly linear memory.","sig":null,"attributes":[{"value":"/ A WebAssembly linear memory.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":30335,"byte_end":30367,"line_start":564,"line_end":564,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":30368,"byte_end":30371,"line_start":565,"line_end":565,"column_start":1,"column_end":4}},{"value":"/ WebAssembly memories represent a contiguous array of bytes that have a size","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":30372,"byte_end":30451,"line_start":566,"line_end":566,"column_start":1,"column_end":80}},{"value":"/ that is always a multiple of the WebAssembly page size, currently 64","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":30452,"byte_end":30524,"line_start":567,"line_end":567,"column_start":1,"column_end":73}},{"value":"/ kilobytes.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":30525,"byte_end":30539,"line_start":568,"line_end":568,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":30540,"byte_end":30543,"line_start":569,"line_end":569,"column_start":1,"column_end":4}},{"value":"/ WebAssembly memory is used for global data, statics in C/C++/Rust, shadow","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":30544,"byte_end":30621,"line_start":570,"line_end":570,"column_start":1,"column_end":78}},{"value":"/ stack memory, etc. Accessing wasm memory is generally quite fast!","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":30622,"byte_end":30691,"line_start":571,"line_end":571,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":30692,"byte_end":30695,"line_start":572,"line_end":572,"column_start":1,"column_end":4}},{"value":"/ # `Memory` and `Clone`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":30696,"byte_end":30722,"line_start":573,"line_end":573,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":30723,"byte_end":30726,"line_start":574,"line_end":574,"column_start":1,"column_end":4}},{"value":"/ Memories are internally reference counted so you can `clone` a `Memory`. The","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":30727,"byte_end":30807,"line_start":575,"line_end":575,"column_start":1,"column_end":81}},{"value":"/ cloning process only performs a shallow clone, so two cloned `Memory`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":30808,"byte_end":30881,"line_start":576,"line_end":576,"column_start":1,"column_end":74}},{"value":"/ instances are equivalent in their functionality.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":30882,"byte_end":30934,"line_start":577,"line_end":577,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":30935,"byte_end":30938,"line_start":578,"line_end":578,"column_start":1,"column_end":4}},{"value":"/ # `Memory` and threads","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":30939,"byte_end":30965,"line_start":579,"line_end":579,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":30966,"byte_end":30969,"line_start":580,"line_end":580,"column_start":1,"column_end":4}},{"value":"/ It is intended that `Memory` is safe to share between threads. At this time","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":30970,"byte_end":31049,"line_start":581,"line_end":581,"column_start":1,"column_end":80}},{"value":"/ this is not implemented in `wasmtime`, however. This is planned to be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":31050,"byte_end":31123,"line_start":582,"line_end":582,"column_start":1,"column_end":74}},{"value":"/ implemented though!","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":31124,"byte_end":31147,"line_start":583,"line_end":583,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":31148,"byte_end":31151,"line_start":584,"line_end":584,"column_start":1,"column_end":4}},{"value":"/ # `Memory` and Safety","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":31152,"byte_end":31177,"line_start":585,"line_end":585,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":31178,"byte_end":31181,"line_start":586,"line_end":586,"column_start":1,"column_end":4}},{"value":"/ Linear memory is a lynchpin of safety for WebAssembly, but it turns out","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":31182,"byte_end":31257,"line_start":587,"line_end":587,"column_start":1,"column_end":76}},{"value":"/ there are very few ways to safely inspect the contents of a memory from the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":31258,"byte_end":31337,"line_start":588,"line_end":588,"column_start":1,"column_end":80}},{"value":"/ host (Rust). This is because memory safety is quite tricky when working with","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":31338,"byte_end":31418,"line_start":589,"line_end":589,"column_start":1,"column_end":81}},{"value":"/ a `Memory` and we're still working out the best idioms to encapsulate","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":31419,"byte_end":31492,"line_start":590,"line_end":590,"column_start":1,"column_end":74}},{"value":"/ everything safely where it's efficient and ergonomic. This section of","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":31493,"byte_end":31566,"line_start":591,"line_end":591,"column_start":1,"column_end":74}},{"value":"/ documentation, however, is intended to help educate a bit what is and isn't","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":31567,"byte_end":31646,"line_start":592,"line_end":592,"column_start":1,"column_end":80}},{"value":"/ safe when working with `Memory`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":31647,"byte_end":31683,"line_start":593,"line_end":593,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":31684,"byte_end":31687,"line_start":594,"line_end":594,"column_start":1,"column_end":4}},{"value":"/ For safety purposes you can think of a `Memory` as a glorified","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":31688,"byte_end":31754,"line_start":595,"line_end":595,"column_start":1,"column_end":67}},{"value":"/ `Rc<UnsafeCell<Vec<u8>>>`. There are a few consequences of this","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":31755,"byte_end":31822,"line_start":596,"line_end":596,"column_start":1,"column_end":68}},{"value":"/ interpretation:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":31823,"byte_end":31842,"line_start":597,"line_end":597,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":31843,"byte_end":31846,"line_start":598,"line_end":598,"column_start":1,"column_end":4}},{"value":"/ * At any time someone else may have access to the memory (hence the `Rc`).","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":31847,"byte_end":31925,"line_start":599,"line_end":599,"column_start":1,"column_end":79}},{"value":"/   This could be a wasm instance, other host code, or a set of wasm instances","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":31926,"byte_end":32006,"line_start":600,"line_end":600,"column_start":1,"column_end":81}},{"value":"/   which all reference a `Memory`. When in doubt assume someone else has a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":32007,"byte_end":32084,"line_start":601,"line_end":601,"column_start":1,"column_end":78}},{"value":"/   handle to your `Memory`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":32085,"byte_end":32115,"line_start":602,"line_end":602,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":32116,"byte_end":32119,"line_start":603,"line_end":603,"column_start":1,"column_end":4}},{"value":"/ * At any time, memory can be read from or written to (hence the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":32120,"byte_end":32187,"line_start":604,"line_end":604,"column_start":1,"column_end":68}},{"value":"/   `UnsafeCell`). Anyone with a handle to a wasm memory can read/write to it.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":32188,"byte_end":32268,"line_start":605,"line_end":605,"column_start":1,"column_end":81}},{"value":"/   Primarily other instances can execute the `load` and `store` family of","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":32269,"byte_end":32345,"line_start":606,"line_end":606,"column_start":1,"column_end":77}},{"value":"/   instructions, as well as any other which modifies or reads memory.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":32346,"byte_end":32418,"line_start":607,"line_end":607,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":32419,"byte_end":32422,"line_start":608,"line_end":608,"column_start":1,"column_end":4}},{"value":"/ * At any time memory may grow (hence the `Vec<..>`). Growth may relocate the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":32423,"byte_end":32503,"line_start":609,"line_end":609,"column_start":1,"column_end":81}},{"value":"/   base memory pointer (similar to how `vec.push(...)` can change the result","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":32504,"byte_end":32583,"line_start":610,"line_end":610,"column_start":1,"column_end":80}},{"value":"/   of `.as_ptr()`)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":32584,"byte_end":32605,"line_start":611,"line_end":611,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":32606,"byte_end":32609,"line_start":612,"line_end":612,"column_start":1,"column_end":4}},{"value":"/ So given that we're working roughly with `Rc<UnsafeCell<Vec<u8>>>` that's a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":32610,"byte_end":32689,"line_start":613,"line_end":613,"column_start":1,"column_end":80}},{"value":"/ lot to keep in mind! It's hopefully though sort of setting the stage as to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":32690,"byte_end":32768,"line_start":614,"line_end":614,"column_start":1,"column_end":79}},{"value":"/ what you can safely do with memories.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":32769,"byte_end":32810,"line_start":615,"line_end":615,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":32811,"byte_end":32814,"line_start":616,"line_end":616,"column_start":1,"column_end":4}},{"value":"/ Let's run through a few safe examples first of how you can use a `Memory`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":32815,"byte_end":32893,"line_start":617,"line_end":617,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":32894,"byte_end":32897,"line_start":618,"line_end":618,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":32898,"byte_end":32909,"line_start":619,"line_end":619,"column_start":1,"column_end":12}},{"value":"/ use wasmtime::Memory;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":32910,"byte_end":32935,"line_start":620,"line_end":620,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":32936,"byte_end":32939,"line_start":621,"line_end":621,"column_start":1,"column_end":4}},{"value":"/ fn safe_examples(mem: &Memory) {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":32940,"byte_end":32976,"line_start":622,"line_end":622,"column_start":1,"column_end":37}},{"value":"/     // Just like wasm, it's safe to read memory almost at any time. The","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":32977,"byte_end":33052,"line_start":623,"line_end":623,"column_start":1,"column_end":76}},{"value":"/     // gotcha here is that we need to be sure to load from the correct base","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":33053,"byte_end":33132,"line_start":624,"line_end":624,"column_start":1,"column_end":80}},{"value":"/     // pointer and perform the bounds check correctly. So long as this is","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":33133,"byte_end":33210,"line_start":625,"line_end":625,"column_start":1,"column_end":78}},{"value":"/     // all self contained here (e.g. not arbitrary code in the middle) we're","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":33211,"byte_end":33291,"line_start":626,"line_end":626,"column_start":1,"column_end":81}},{"value":"/     // good to go.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":33292,"byte_end":33314,"line_start":627,"line_end":627,"column_start":1,"column_end":23}},{"value":"/     let byte = unsafe { mem.data_unchecked()[0x123] };","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":33315,"byte_end":33373,"line_start":628,"line_end":628,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":33374,"byte_end":33377,"line_start":629,"line_end":629,"column_start":1,"column_end":4}},{"value":"/     // Short-lived borrows of memory are safe, but they must be scoped and","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":33378,"byte_end":33456,"line_start":630,"line_end":630,"column_start":1,"column_end":79}},{"value":"/     // not have code which modifies/etc `Memory` while the borrow is active.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":33457,"byte_end":33537,"line_start":631,"line_end":631,"column_start":1,"column_end":81}},{"value":"/     // For example if you want to read a string from memory it is safe to do","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":33538,"byte_end":33618,"line_start":632,"line_end":632,"column_start":1,"column_end":81}},{"value":"/     // so:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":33619,"byte_end":33633,"line_start":633,"line_end":633,"column_start":1,"column_end":15}},{"value":"/     let string_base = 0xdead;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":33634,"byte_end":33667,"line_start":634,"line_end":634,"column_start":1,"column_end":34}},{"value":"/     let string_len = 0xbeef;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":33668,"byte_end":33700,"line_start":635,"line_end":635,"column_start":1,"column_end":33}},{"value":"/     let string = unsafe {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":33701,"byte_end":33730,"line_start":636,"line_end":636,"column_start":1,"column_end":30}},{"value":"/         let bytes = &mem.data_unchecked()[string_base..][..string_len];","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":33731,"byte_end":33806,"line_start":637,"line_end":637,"column_start":1,"column_end":76}},{"value":"/         match std::str::from_utf8(bytes) {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":33807,"byte_end":33853,"line_start":638,"line_end":638,"column_start":1,"column_end":47}},{"value":"/             Ok(s) => s.to_string(), // copy out of wasm memory","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":33854,"byte_end":33920,"line_start":639,"line_end":639,"column_start":1,"column_end":67}},{"value":"/             Err(_) => panic!(\"not valid utf-8\"),","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":33921,"byte_end":33973,"line_start":640,"line_end":640,"column_start":1,"column_end":53}},{"value":"/         }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":33974,"byte_end":33987,"line_start":641,"line_end":641,"column_start":1,"column_end":14}},{"value":"/     };","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":33988,"byte_end":33998,"line_start":642,"line_end":642,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":33999,"byte_end":34002,"line_start":643,"line_end":643,"column_start":1,"column_end":4}},{"value":"/     // Additionally like wasm you can write to memory at any point in time,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":34003,"byte_end":34082,"line_start":644,"line_end":644,"column_start":1,"column_end":80}},{"value":"/     // again making sure that after you get the unchecked slice you don't","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":34083,"byte_end":34160,"line_start":645,"line_end":645,"column_start":1,"column_end":78}},{"value":"/     // execute code which could read/write/modify `Memory`:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":34161,"byte_end":34224,"line_start":646,"line_end":646,"column_start":1,"column_end":64}},{"value":"/     unsafe {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":34225,"byte_end":34241,"line_start":647,"line_end":647,"column_start":1,"column_end":17}},{"value":"/         mem.data_unchecked_mut()[0x123] = 3;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":34242,"byte_end":34290,"line_start":648,"line_end":648,"column_start":1,"column_end":49}},{"value":"/     }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":34291,"byte_end":34300,"line_start":649,"line_end":649,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":34301,"byte_end":34304,"line_start":650,"line_end":650,"column_start":1,"column_end":4}},{"value":"/     // When working with *borrows* that point directly into wasm memory you","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":34305,"byte_end":34384,"line_start":651,"line_end":651,"column_start":1,"column_end":80}},{"value":"/     // need to be extremely careful. Any functionality that operates on a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":34385,"byte_end":34462,"line_start":652,"line_end":652,"column_start":1,"column_end":78}},{"value":"/     // borrow into wasm memory needs to be thoroughly audited to effectively","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":34463,"byte_end":34543,"line_start":653,"line_end":653,"column_start":1,"column_end":81}},{"value":"/     // not touch the `Memory` at all","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":34544,"byte_end":34584,"line_start":654,"line_end":654,"column_start":1,"column_end":41}},{"value":"/     let data_base = 0xfeed;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":34585,"byte_end":34616,"line_start":655,"line_end":655,"column_start":1,"column_end":32}},{"value":"/     let data_len = 0xface;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":34617,"byte_end":34647,"line_start":656,"line_end":656,"column_start":1,"column_end":31}},{"value":"/     unsafe {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":34648,"byte_end":34664,"line_start":657,"line_end":657,"column_start":1,"column_end":17}},{"value":"/         let data = &mem.data_unchecked()[data_base..][..data_len];","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":34665,"byte_end":34735,"line_start":658,"line_end":658,"column_start":1,"column_end":71}},{"value":"/         host_function_that_doesnt_touch_memory(data);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":34736,"byte_end":34793,"line_start":659,"line_end":659,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":34794,"byte_end":34797,"line_start":660,"line_end":660,"column_start":1,"column_end":4}},{"value":"/         // effectively the same rules apply to mutable borrows","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":34798,"byte_end":34864,"line_start":661,"line_end":661,"column_start":1,"column_end":67}},{"value":"/         let data_mut = &mut mem.data_unchecked_mut()[data_base..][..data_len];","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":34865,"byte_end":34947,"line_start":662,"line_end":662,"column_start":1,"column_end":83}},{"value":"/         host_function_that_doesnt_touch_memory(data);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":34948,"byte_end":35005,"line_start":663,"line_end":663,"column_start":1,"column_end":58}},{"value":"/     }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":35006,"byte_end":35015,"line_start":664,"line_end":664,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":35016,"byte_end":35021,"line_start":665,"line_end":665,"column_start":1,"column_end":6}},{"value":"/ # fn host_function_that_doesnt_touch_memory(_: &[u8]){}","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":35022,"byte_end":35081,"line_start":666,"line_end":666,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":35082,"byte_end":35089,"line_start":667,"line_end":667,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":35090,"byte_end":35093,"line_start":668,"line_end":668,"column_start":1,"column_end":4}},{"value":"/ It's worth also, however, covering some examples of **incorrect**,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":35094,"byte_end":35164,"line_start":669,"line_end":669,"column_start":1,"column_end":71}},{"value":"/ **unsafe** usages of `Memory`. Do not do these things!","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":35165,"byte_end":35223,"line_start":670,"line_end":670,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":35224,"byte_end":35227,"line_start":671,"line_end":671,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":35228,"byte_end":35239,"line_start":672,"line_end":672,"column_start":1,"column_end":12}},{"value":"/ # use anyhow::Result;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":35240,"byte_end":35265,"line_start":673,"line_end":673,"column_start":1,"column_end":26}},{"value":"/ use wasmtime::Memory;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":35266,"byte_end":35291,"line_start":674,"line_end":674,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":35292,"byte_end":35295,"line_start":675,"line_end":675,"column_start":1,"column_end":4}},{"value":"/ // NOTE: All code in this function is not safe to execute and may cause","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":35296,"byte_end":35371,"line_start":676,"line_end":676,"column_start":1,"column_end":76}},{"value":"/ // segfaults/undefined behavior at runtime. Do not copy/paste these examples","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":35372,"byte_end":35452,"line_start":677,"line_end":677,"column_start":1,"column_end":81}},{"value":"/ // into production code!","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":35453,"byte_end":35481,"line_start":678,"line_end":678,"column_start":1,"column_end":29}},{"value":"/ unsafe fn unsafe_examples(mem: &Memory) -> Result<()> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":35482,"byte_end":35541,"line_start":679,"line_end":679,"column_start":1,"column_end":60}},{"value":"/     // First and foremost, any borrow can be invalidated at any time via the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":35542,"byte_end":35622,"line_start":680,"line_end":680,"column_start":1,"column_end":81}},{"value":"/     // `Memory::grow` function. This can relocate memory which causes any","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":35623,"byte_end":35700,"line_start":681,"line_end":681,"column_start":1,"column_end":78}},{"value":"/     // previous pointer to be possibly invalid now.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":35701,"byte_end":35756,"line_start":682,"line_end":682,"column_start":1,"column_end":56}},{"value":"/     let pointer: &u8 = &mem.data_unchecked()[0x100];","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":35757,"byte_end":35813,"line_start":683,"line_end":683,"column_start":1,"column_end":57}},{"value":"/     mem.grow(1)?; // invalidates `pointer`!","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":35814,"byte_end":35861,"line_start":684,"line_end":684,"column_start":1,"column_end":48}},{"value":"/     // println!(\"{}\", *pointer); // FATAL: use-after-free","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":35862,"byte_end":35923,"line_start":685,"line_end":685,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":35924,"byte_end":35927,"line_start":686,"line_end":686,"column_start":1,"column_end":4}},{"value":"/     // Note that the use-after-free also applies to slices, whether they're","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":35928,"byte_end":36007,"line_start":687,"line_end":687,"column_start":1,"column_end":80}},{"value":"/     // slices of bytes or strings.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":36008,"byte_end":36046,"line_start":688,"line_end":688,"column_start":1,"column_end":39}},{"value":"/     let slice: &[u8] = &mem.data_unchecked()[0x100..0x102];","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":36047,"byte_end":36110,"line_start":689,"line_end":689,"column_start":1,"column_end":64}},{"value":"/     mem.grow(1)?; // invalidates `slice`!","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":36111,"byte_end":36156,"line_start":690,"line_end":690,"column_start":1,"column_end":46}},{"value":"/     // println!(\"{:?}\", slice); // FATAL: use-after-free","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":36157,"byte_end":36217,"line_start":691,"line_end":691,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":36218,"byte_end":36221,"line_start":692,"line_end":692,"column_start":1,"column_end":4}},{"value":"/     // Due to the reference-counted nature of `Memory` note that literal","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":36222,"byte_end":36298,"line_start":693,"line_end":693,"column_start":1,"column_end":77}},{"value":"/     // calls to `Memory::grow` are not sufficient to audit for. You'll need","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":36299,"byte_end":36378,"line_start":694,"line_end":694,"column_start":1,"column_end":80}},{"value":"/     // to be careful that any mutation of `Memory` doesn't happen while","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":36379,"byte_end":36454,"line_start":695,"line_end":695,"column_start":1,"column_end":76}},{"value":"/     // you're holding an active borrow.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":36455,"byte_end":36498,"line_start":696,"line_end":696,"column_start":1,"column_end":44}},{"value":"/     let slice: &[u8] = &mem.data_unchecked()[0x100..0x102];","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":36499,"byte_end":36562,"line_start":697,"line_end":697,"column_start":1,"column_end":64}},{"value":"/     some_other_function(); // may invalidate `slice` through another `mem` reference","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":36563,"byte_end":36651,"line_start":698,"line_end":698,"column_start":1,"column_end":89}},{"value":"/     // println!(\"{:?}\", slice); // FATAL: maybe a use-after-free","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":36652,"byte_end":36720,"line_start":699,"line_end":699,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":36721,"byte_end":36724,"line_start":700,"line_end":700,"column_start":1,"column_end":4}},{"value":"/     // An especially subtle aspect of accessing a wasm instance's memory is","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":36725,"byte_end":36804,"line_start":701,"line_end":701,"column_start":1,"column_end":80}},{"value":"/     // that you need to be extremely careful about aliasing. Anyone at any","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":36805,"byte_end":36883,"line_start":702,"line_end":702,"column_start":1,"column_end":79}},{"value":"/     // time can call `data_unchecked()` or `data_unchecked_mut()`, which","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":36884,"byte_end":36960,"line_start":703,"line_end":703,"column_start":1,"column_end":77}},{"value":"/     // means you can easily have aliasing mutable references:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":36961,"byte_end":37026,"line_start":704,"line_end":704,"column_start":1,"column_end":66}},{"value":"/     let ref1: &u8 = &mem.data_unchecked()[0x100];","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":37027,"byte_end":37080,"line_start":705,"line_end":705,"column_start":1,"column_end":54}},{"value":"/     let ref2: &mut u8 = &mut mem.data_unchecked_mut()[0x100];","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":37081,"byte_end":37146,"line_start":706,"line_end":706,"column_start":1,"column_end":66}},{"value":"/     // *ref2 = *ref1; // FATAL: violates Rust's aliasing rules","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":37147,"byte_end":37213,"line_start":707,"line_end":707,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":37214,"byte_end":37217,"line_start":708,"line_end":708,"column_start":1,"column_end":4}},{"value":"/     // Note that aliasing applies to strings as well, for example this is","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":37218,"byte_end":37295,"line_start":709,"line_end":709,"column_start":1,"column_end":78}},{"value":"/     // not valid because the slices overlap.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":37296,"byte_end":37344,"line_start":710,"line_end":710,"column_start":1,"column_end":49}},{"value":"/     let slice1: &mut [u8] = &mut mem.data_unchecked_mut()[0x100..][..3];","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":37345,"byte_end":37421,"line_start":711,"line_end":711,"column_start":1,"column_end":77}},{"value":"/     let slice2: &mut [u8] = &mut mem.data_unchecked_mut()[0x102..][..4];","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":37422,"byte_end":37498,"line_start":712,"line_end":712,"column_start":1,"column_end":77}},{"value":"/     // println!(\"{:?} {:?}\", slice1, slice2); // FATAL: aliasing mutable pointers","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":37499,"byte_end":37584,"line_start":713,"line_end":713,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":37585,"byte_end":37588,"line_start":714,"line_end":714,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":37589,"byte_end":37603,"line_start":715,"line_end":715,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":37604,"byte_end":37609,"line_start":716,"line_end":716,"column_start":1,"column_end":6}},{"value":"/ # fn some_other_function() {}","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":37610,"byte_end":37643,"line_start":717,"line_end":717,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":37644,"byte_end":37651,"line_start":718,"line_end":718,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":37652,"byte_end":37655,"line_start":719,"line_end":719,"column_start":1,"column_end":4}},{"value":"/ Overall there's some general rules of thumb when working with `Memory` and","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":37656,"byte_end":37734,"line_start":720,"line_end":720,"column_start":1,"column_end":79}},{"value":"/ getting raw pointers inside of it:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":37735,"byte_end":37773,"line_start":721,"line_end":721,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":37774,"byte_end":37777,"line_start":722,"line_end":722,"column_start":1,"column_end":4}},{"value":"/ * If you never have a \"long lived\" pointer into memory, you're likely in the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":37778,"byte_end":37858,"line_start":723,"line_end":723,"column_start":1,"column_end":81}},{"value":"/   clear. Care still needs to be taken in threaded scenarios or when/where","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":37859,"byte_end":37936,"line_start":724,"line_end":724,"column_start":1,"column_end":78}},{"value":"/   data is read, but you'll be shielded from many classes of issues.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":37937,"byte_end":38008,"line_start":725,"line_end":725,"column_start":1,"column_end":72}},{"value":"/ * Long-lived pointers must always respect Rust'a aliasing rules. It's ok for","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":38009,"byte_end":38089,"line_start":726,"line_end":726,"column_start":1,"column_end":81}},{"value":"/   shared borrows to overlap with each other, but mutable borrows must","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":38090,"byte_end":38163,"line_start":727,"line_end":727,"column_start":1,"column_end":74}},{"value":"/   overlap with nothing.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":38164,"byte_end":38191,"line_start":728,"line_end":728,"column_start":1,"column_end":28}},{"value":"/ * Long-lived pointers are only valid if `Memory` isn't used in an unsafe way","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":38192,"byte_end":38272,"line_start":729,"line_end":729,"column_start":1,"column_end":81}},{"value":"/   while the pointer is valid. This includes both aliasing and growth.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":38273,"byte_end":38346,"line_start":730,"line_end":730,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":38347,"byte_end":38350,"line_start":731,"line_end":731,"column_start":1,"column_end":4}},{"value":"/ At this point it's worth reiterating again that working with `Memory` is","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":38351,"byte_end":38427,"line_start":732,"line_end":732,"column_start":1,"column_end":77}},{"value":"/ pretty tricky and that's not great! Proposals such as [interface types] are","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":38428,"byte_end":38507,"line_start":733,"line_end":733,"column_start":1,"column_end":80}},{"value":"/ intended to prevent wasm modules from even needing to import/export memory","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":38508,"byte_end":38586,"line_start":734,"line_end":734,"column_start":1,"column_end":79}},{"value":"/ in the first place, which obviates the need for all of these safety caveats!","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":38587,"byte_end":38667,"line_start":735,"line_end":735,"column_start":1,"column_end":81}},{"value":"/ Additionally over time we're still working out the best idioms to expose in","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":38668,"byte_end":38747,"line_start":736,"line_end":736,"column_start":1,"column_end":80}},{"value":"/ `wasmtime`, so if you've got ideas or questions please feel free to [open an","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":38748,"byte_end":38828,"line_start":737,"line_end":737,"column_start":1,"column_end":81}},{"value":"/ issue]!","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":38829,"byte_end":38840,"line_start":738,"line_end":738,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":38841,"byte_end":38844,"line_start":739,"line_end":739,"column_start":1,"column_end":4}},{"value":"/ ## `Memory` Safety and Threads","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":38845,"byte_end":38879,"line_start":740,"line_end":740,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":38880,"byte_end":38883,"line_start":741,"line_end":741,"column_start":1,"column_end":4}},{"value":"/ Currently the `wasmtime` crate does not implement the wasm threads proposal,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":38884,"byte_end":38964,"line_start":742,"line_end":742,"column_start":1,"column_end":81}},{"value":"/ but it is planned to do so. It's additionally worthwhile discussing how this","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":38965,"byte_end":39045,"line_start":743,"line_end":743,"column_start":1,"column_end":81}},{"value":"/ affects memory safety and what was previously just discussed as well.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":39046,"byte_end":39119,"line_start":744,"line_end":744,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":39120,"byte_end":39123,"line_start":745,"line_end":745,"column_start":1,"column_end":4}},{"value":"/ Once threads are added into the mix, all of the above rules still apply.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":39124,"byte_end":39200,"line_start":746,"line_end":746,"column_start":1,"column_end":77}},{"value":"/ There's an additional, rule, however, that all reads and writes can","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":39201,"byte_end":39272,"line_start":747,"line_end":747,"column_start":1,"column_end":72}},{"value":"/ happen *concurrently*. This effectively means that long-lived borrows into","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":39273,"byte_end":39351,"line_start":748,"line_end":748,"column_start":1,"column_end":79}},{"value":"/ wasm memory are virtually never safe to have.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":39352,"byte_end":39401,"line_start":749,"line_end":749,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":39402,"byte_end":39405,"line_start":750,"line_end":750,"column_start":1,"column_end":4}},{"value":"/ Mutable pointers are fundamentally unsafe to have in a concurrent scenario","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":39406,"byte_end":39484,"line_start":751,"line_end":751,"column_start":1,"column_end":79}},{"value":"/ in the face of arbitrary wasm code. Only if you dynamically know for sure","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":39485,"byte_end":39562,"line_start":752,"line_end":752,"column_start":1,"column_end":78}},{"value":"/ that wasm won't access a region would it be safe to construct a mutable","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":39563,"byte_end":39638,"line_start":753,"line_end":753,"column_start":1,"column_end":76}},{"value":"/ pointer. Additionally even shared pointers are largely unsafe because their","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":39639,"byte_end":39718,"line_start":754,"line_end":754,"column_start":1,"column_end":80}},{"value":"/ underlying contents may change, so unless `UnsafeCell` in one form or","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":39719,"byte_end":39792,"line_start":755,"line_end":755,"column_start":1,"column_end":74}},{"value":"/ another is used everywhere there's no safety.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":39793,"byte_end":39842,"line_start":756,"line_end":756,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":39843,"byte_end":39846,"line_start":757,"line_end":757,"column_start":1,"column_end":4}},{"value":"/ One important point about concurrency is that `Memory::grow` can indeed","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":39847,"byte_end":39922,"line_start":758,"line_end":758,"column_start":1,"column_end":76}},{"value":"/ happen concurrently. This, however, will never relocate the base pointer.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":39923,"byte_end":40000,"line_start":759,"line_end":759,"column_start":1,"column_end":78}},{"value":"/ Shared memories must always have a maximum size and they will be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":40001,"byte_end":40069,"line_start":760,"line_end":760,"column_start":1,"column_end":69}},{"value":"/ preallocated such that growth will never relocate the base pointer. The","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":40070,"byte_end":40145,"line_start":761,"line_end":761,"column_start":1,"column_end":76}},{"value":"/ maximum length of the memory, however, will change over time.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":40146,"byte_end":40211,"line_start":762,"line_end":762,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":40212,"byte_end":40215,"line_start":763,"line_end":763,"column_start":1,"column_end":4}},{"value":"/ Overall the general rule of thumb for shared memories is that you must","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":40216,"byte_end":40290,"line_start":764,"line_end":764,"column_start":1,"column_end":75}},{"value":"/ atomically read and write everything. Nothing can be borrowed and everything","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":40291,"byte_end":40371,"line_start":765,"line_end":765,"column_start":1,"column_end":81}},{"value":"/ must be eagerly copied out.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":40372,"byte_end":40403,"line_start":766,"line_end":766,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":40404,"byte_end":40407,"line_start":767,"line_end":767,"column_start":1,"column_end":4}},{"value":"/ [interface types]: https://github.com/webassembly/interface-types","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":40408,"byte_end":40477,"line_start":768,"line_end":768,"column_start":1,"column_end":70}},{"value":"/ [open an issue]: https://github.com/bytecodealliance/wasmtime/issues/new","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":40478,"byte_end":40554,"line_start":769,"line_end":769,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":41568,"byte_end":41571,"line_start":800,"line_end":800,"column_start":12,"column_end":15},"name":"new","qualname":"<Memory>::new","value":"pub fn new(&Store, MemoryType) -> Memory","parent":null,"children":[],"decl_id":null,"docs":" Creates a new WebAssembly memory given the configuration of `ty`.","sig":null,"attributes":[{"value":"/ Creates a new WebAssembly memory given the configuration of `ty`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":40701,"byte_end":40770,"line_start":777,"line_end":777,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":40775,"byte_end":40778,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ The `store` argument is a general location for cache information, and","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":40783,"byte_end":40856,"line_start":779,"line_end":779,"column_start":5,"column_end":78}},{"value":"/ otherwise the memory will immediately be allocated according to the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":40861,"byte_end":40932,"line_start":780,"line_end":780,"column_start":5,"column_end":76}},{"value":"/ type's configuration. All WebAssembly memory is initialized to zero.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":40937,"byte_end":41009,"line_start":781,"line_end":781,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":41014,"byte_end":41017,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":41022,"byte_end":41036,"line_start":783,"line_end":783,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":41041,"byte_end":41044,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":41049,"byte_end":41056,"line_start":785,"line_end":785,"column_start":5,"column_end":12}},{"value":"/ # use wasmtime::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":41061,"byte_end":41083,"line_start":786,"line_end":786,"column_start":5,"column_end":27}},{"value":"/ # fn main() -> anyhow::Result<()> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":41088,"byte_end":41127,"line_start":787,"line_end":787,"column_start":5,"column_end":44}},{"value":"/ let engine = Engine::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":41132,"byte_end":41167,"line_start":788,"line_end":788,"column_start":5,"column_end":40}},{"value":"/ let store = Store::new(&engine);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":41172,"byte_end":41208,"line_start":789,"line_end":789,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":41213,"byte_end":41216,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ let memory_ty = MemoryType::new(Limits::new(1, None));","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":41221,"byte_end":41279,"line_start":791,"line_end":791,"column_start":5,"column_end":63}},{"value":"/ let memory = Memory::new(&store, memory_ty);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":41284,"byte_end":41332,"line_start":792,"line_end":792,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":41337,"byte_end":41340,"line_start":793,"line_end":793,"column_start":5,"column_end":8}},{"value":"/ let module = Module::new(&engine, \"(module (memory (import \\\"\\\" \\\"\\\") 1))\")?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":41345,"byte_end":41426,"line_start":794,"line_end":794,"column_start":5,"column_end":86}},{"value":"/ let instance = Instance::new(&store, &module, &[memory.into()])?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":41431,"byte_end":41500,"line_start":795,"line_end":795,"column_start":5,"column_end":74}},{"value":"/ // ...","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":41505,"byte_end":41515,"line_start":796,"line_end":796,"column_start":5,"column_end":15}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":41520,"byte_end":41532,"line_start":797,"line_end":797,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":41537,"byte_end":41544,"line_start":798,"line_end":798,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":41549,"byte_end":41556,"line_start":799,"line_end":799,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":42395,"byte_end":42397,"line_start":826,"line_end":826,"column_start":12,"column_end":14},"name":"ty","qualname":"<Memory>::ty","value":"pub fn ty(&Self) -> MemoryType","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying type of this memory.","sig":null,"attributes":[{"value":"/ Returns the underlying type of this memory.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":41821,"byte_end":41868,"line_start":809,"line_end":809,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":41873,"byte_end":41876,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":41881,"byte_end":41895,"line_start":811,"line_end":811,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":41900,"byte_end":41903,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":41908,"byte_end":41915,"line_start":813,"line_end":813,"column_start":5,"column_end":12}},{"value":"/ # use wasmtime::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":41920,"byte_end":41942,"line_start":814,"line_end":814,"column_start":5,"column_end":27}},{"value":"/ # fn main() -> anyhow::Result<()> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":41947,"byte_end":41986,"line_start":815,"line_end":815,"column_start":5,"column_end":44}},{"value":"/ let engine = Engine::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":41991,"byte_end":42026,"line_start":816,"line_end":816,"column_start":5,"column_end":40}},{"value":"/ let store = Store::new(&engine);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":42031,"byte_end":42067,"line_start":817,"line_end":817,"column_start":5,"column_end":41}},{"value":"/ let module = Module::new(&engine, \"(module (memory (export \\\"mem\\\") 1))\")?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":42072,"byte_end":42151,"line_start":818,"line_end":818,"column_start":5,"column_end":84}},{"value":"/ let instance = Instance::new(&store, &module, &[])?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":42156,"byte_end":42212,"line_start":819,"line_end":819,"column_start":5,"column_end":61}},{"value":"/ let memory = instance.get_memory(\"mem\").unwrap();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":42217,"byte_end":42270,"line_start":820,"line_end":820,"column_start":5,"column_end":58}},{"value":"/ let ty = memory.ty();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":42275,"byte_end":42300,"line_start":821,"line_end":821,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(ty.limits().min(), 1);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":42305,"byte_end":42342,"line_start":822,"line_end":822,"column_start":5,"column_end":42}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":42347,"byte_end":42359,"line_start":823,"line_end":823,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":42364,"byte_end":42371,"line_start":824,"line_end":824,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":42376,"byte_end":42383,"line_start":825,"line_end":825,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":43849,"byte_end":43863,"line_start":857,"line_end":857,"column_start":19,"column_end":33},"name":"data_unchecked","qualname":"<Memory>::data_unchecked","value":"pub unsafe fn data_unchecked(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns this memory as a slice view that can be read natively in Rust.","sig":null,"attributes":[{"value":"/ Returns this memory as a slice view that can be read natively in Rust.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":42510,"byte_end":42584,"line_start":830,"line_end":830,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":42589,"byte_end":42592,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":42597,"byte_end":42609,"line_start":832,"line_end":832,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":42614,"byte_end":42617,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ This is an unsafe operation because there is no guarantee that the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":42622,"byte_end":42692,"line_start":834,"line_end":834,"column_start":5,"column_end":75}},{"value":"/ following operations do not happen concurrently while the slice is in","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":42697,"byte_end":42770,"line_start":835,"line_end":835,"column_start":5,"column_end":78}},{"value":"/ use:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":42775,"byte_end":42783,"line_start":836,"line_end":836,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":42788,"byte_end":42791,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ * Data could be modified by calling into a wasm module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":42796,"byte_end":42855,"line_start":838,"line_end":838,"column_start":5,"column_end":64}},{"value":"/ * Memory could be relocated through growth by calling into a wasm","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":42860,"byte_end":42929,"line_start":839,"line_end":839,"column_start":5,"column_end":74}},{"value":"/   module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":42934,"byte_end":42947,"line_start":840,"line_end":840,"column_start":5,"column_end":18}},{"value":"/ * When threads are supported, non-atomic reads will race with other","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":42952,"byte_end":43023,"line_start":841,"line_end":841,"column_start":5,"column_end":76}},{"value":"/   writes.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":43028,"byte_end":43041,"line_start":842,"line_end":842,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":43046,"byte_end":43049,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ Extreme care need be taken when the data of a `Memory` is read. The","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":43054,"byte_end":43125,"line_start":844,"line_end":844,"column_start":5,"column_end":76}},{"value":"/ above invariants all need to be upheld at a bare minimum, and in","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":43130,"byte_end":43198,"line_start":845,"line_end":845,"column_start":5,"column_end":73}},{"value":"/ general you'll need to ensure that while you're looking at slice you're","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":43203,"byte_end":43278,"line_start":846,"line_end":846,"column_start":5,"column_end":80}},{"value":"/ the only one who can possibly look at the slice and read/write it.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":43283,"byte_end":43353,"line_start":847,"line_end":847,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":43358,"byte_end":43361,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ Be sure to keep in mind that `Memory` is reference counted, meaning","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":43366,"byte_end":43437,"line_start":849,"line_end":849,"column_start":5,"column_end":76}},{"value":"/ that there may be other users of this `Memory` instance elsewhere in","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":43442,"byte_end":43514,"line_start":850,"line_end":850,"column_start":5,"column_end":77}},{"value":"/ your program. Additionally `Memory` can be shared and used in any number","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":43519,"byte_end":43595,"line_start":851,"line_end":851,"column_start":5,"column_end":81}},{"value":"/ of wasm instances, so calling any wasm code should be considered","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":43600,"byte_end":43668,"line_start":852,"line_end":852,"column_start":5,"column_end":73}},{"value":"/ dangerous while you're holding a slice of memory.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":43673,"byte_end":43726,"line_start":853,"line_end":853,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":43731,"byte_end":43734,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ For more information and examples see the documentation on the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":43739,"byte_end":43805,"line_start":855,"line_end":855,"column_start":5,"column_end":71}},{"value":"/ [`Memory`] type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":43810,"byte_end":43830,"line_start":856,"line_end":856,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":44669,"byte_end":44687,"line_start":876,"line_end":876,"column_start":19,"column_end":37},"name":"data_unchecked_mut","qualname":"<Memory>::data_unchecked_mut","value":"pub unsafe fn data_unchecked_mut(&Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns this memory as a slice view that can be read and written\n natively in Rust.","sig":null,"attributes":[{"value":"/ Returns this memory as a slice view that can be read and written","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":43927,"byte_end":43995,"line_start":861,"line_end":861,"column_start":5,"column_end":73}},{"value":"/ natively in Rust.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":44000,"byte_end":44021,"line_start":862,"line_end":862,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":44026,"byte_end":44029,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":44034,"byte_end":44046,"line_start":864,"line_end":864,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":44051,"byte_end":44054,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ All of the same safety caveats of [`Memory::data_unchecked`] apply","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":44059,"byte_end":44129,"line_start":866,"line_end":866,"column_start":5,"column_end":75}},{"value":"/ here, doubly so because this is returning a mutable slice! As a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":44134,"byte_end":44201,"line_start":867,"line_end":867,"column_start":5,"column_end":72}},{"value":"/ double-extra reminder, remember that `Memory` is reference counted, so","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":44206,"byte_end":44280,"line_start":868,"line_end":868,"column_start":5,"column_end":79}},{"value":"/ you can very easily acquire two mutable slices by simply calling this","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":44285,"byte_end":44358,"line_start":869,"line_end":869,"column_start":5,"column_end":78}},{"value":"/ function twice. Extreme caution should be used when using this method,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":44363,"byte_end":44437,"line_start":870,"line_end":870,"column_start":5,"column_end":79}},{"value":"/ and in general you probably want to result to unsafe accessors and the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":44442,"byte_end":44516,"line_start":871,"line_end":871,"column_start":5,"column_end":79}},{"value":"/ `data` methods below.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":44521,"byte_end":44546,"line_start":872,"line_end":872,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":44551,"byte_end":44554,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ For more information and examples see the documentation on the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":44559,"byte_end":44625,"line_start":874,"line_end":874,"column_start":5,"column_end":71}},{"value":"/ [`Memory`] type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":44630,"byte_end":44650,"line_start":875,"line_end":875,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":45261,"byte_end":45269,"line_start":890,"line_end":890,"column_start":12,"column_end":20},"name":"data_ptr","qualname":"<Memory>::data_ptr","value":"pub fn data_ptr(&Self) -> *mut u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the base pointer, in the host's address space, that the memory\n is located at.","sig":null,"attributes":[{"value":"/ Returns the base pointer, in the host's address space, that the memory","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":44859,"byte_end":44933,"line_start":881,"line_end":881,"column_start":5,"column_end":79}},{"value":"/ is located at.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":44938,"byte_end":44956,"line_start":882,"line_end":882,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":44961,"byte_end":44964,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ When reading and manipulating memory be sure to read up on the caveats","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":44969,"byte_end":45043,"line_start":884,"line_end":884,"column_start":5,"column_end":79}},{"value":"/ of [`Memory::data_unchecked`] to make sure that you can safely","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":45048,"byte_end":45114,"line_start":885,"line_end":885,"column_start":5,"column_end":71}},{"value":"/ read/write the memory.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":45119,"byte_end":45145,"line_start":886,"line_end":886,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":45150,"byte_end":45153,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ For more information and examples see the documentation on the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":45158,"byte_end":45224,"line_start":888,"line_end":888,"column_start":5,"column_end":71}},{"value":"/ [`Memory`] type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":45229,"byte_end":45249,"line_start":889,"line_end":889,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":45601,"byte_end":45610,"line_start":900,"line_end":900,"column_start":12,"column_end":21},"name":"data_size","qualname":"<Memory>::data_size","value":"pub fn data_size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the byte length of this memory.","sig":null,"attributes":[{"value":"/ Returns the byte length of this memory.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":45360,"byte_end":45403,"line_start":894,"line_end":894,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":45408,"byte_end":45411,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ The returned value will be a multiple of the wasm page size, 64k.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":45416,"byte_end":45485,"line_start":896,"line_end":896,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":45490,"byte_end":45493,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ For more information and examples see the documentation on the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":45498,"byte_end":45564,"line_start":898,"line_end":898,"column_start":5,"column_end":71}},{"value":"/ [`Memory`] type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":45569,"byte_end":45589,"line_start":899,"line_end":899,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":45773,"byte_end":45777,"line_start":905,"line_end":905,"column_start":12,"column_end":16},"name":"size","qualname":"<Memory>::size","value":"pub fn size(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the size, in pages, of this wasm memory.\n","sig":null,"attributes":[{"value":"/ Returns the size, in pages, of this wasm memory.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":45709,"byte_end":45761,"line_start":904,"line_end":904,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":47213,"byte_end":47217,"line_start":944,"line_end":944,"column_start":12,"column_end":16},"name":"grow","qualname":"<Memory>::grow","value":"pub fn grow(&Self, u32) -> Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Grows this WebAssembly memory by `delta` pages.","sig":null,"attributes":[{"value":"/ Grows this WebAssembly memory by `delta` pages.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":45883,"byte_end":45934,"line_start":909,"line_end":909,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":45939,"byte_end":45942,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ This will attempt to add `delta` more pages of memory on to the end of","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":45947,"byte_end":46021,"line_start":911,"line_end":911,"column_start":5,"column_end":79}},{"value":"/ this `Memory` instance. If successful this may relocate the memory and","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":46026,"byte_end":46100,"line_start":912,"line_end":912,"column_start":5,"column_end":79}},{"value":"/ cause [`Memory::data_ptr`] to return a new value. Additionally previous","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":46105,"byte_end":46180,"line_start":913,"line_end":913,"column_start":5,"column_end":80}},{"value":"/ slices into this memory may no longer be valid.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":46185,"byte_end":46236,"line_start":914,"line_end":914,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":46241,"byte_end":46244,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ On success returns the number of pages this memory previously had","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":46249,"byte_end":46318,"line_start":916,"line_end":916,"column_start":5,"column_end":74}},{"value":"/ before the growth succeeded.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":46323,"byte_end":46355,"line_start":917,"line_end":917,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":46360,"byte_end":46363,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":46368,"byte_end":46380,"line_start":919,"line_end":919,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":46385,"byte_end":46388,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ Returns an error if memory could not be grown, for example if it exceeds","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":46393,"byte_end":46469,"line_start":921,"line_end":921,"column_start":5,"column_end":81}},{"value":"/ the maximum limits of this memory.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":46474,"byte_end":46512,"line_start":922,"line_end":922,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":46517,"byte_end":46520,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":46525,"byte_end":46539,"line_start":924,"line_end":924,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":46544,"byte_end":46547,"line_start":925,"line_end":925,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":46552,"byte_end":46559,"line_start":926,"line_end":926,"column_start":5,"column_end":12}},{"value":"/ # use wasmtime::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":46564,"byte_end":46586,"line_start":927,"line_end":927,"column_start":5,"column_end":27}},{"value":"/ # fn main() -> anyhow::Result<()> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":46591,"byte_end":46630,"line_start":928,"line_end":928,"column_start":5,"column_end":44}},{"value":"/ let engine = Engine::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":46635,"byte_end":46670,"line_start":929,"line_end":929,"column_start":5,"column_end":40}},{"value":"/ let store = Store::new(&engine);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":46675,"byte_end":46711,"line_start":930,"line_end":930,"column_start":5,"column_end":41}},{"value":"/ let module = Module::new(&engine, \"(module (memory (export \\\"mem\\\") 1 2))\")?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":46716,"byte_end":46797,"line_start":931,"line_end":931,"column_start":5,"column_end":86}},{"value":"/ let instance = Instance::new(&store, &module, &[])?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":46802,"byte_end":46858,"line_start":932,"line_end":932,"column_start":5,"column_end":61}},{"value":"/ let memory = instance.get_memory(\"mem\").unwrap();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":46863,"byte_end":46916,"line_start":933,"line_end":933,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":46921,"byte_end":46924,"line_start":934,"line_end":934,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(memory.size(), 1);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":46929,"byte_end":46962,"line_start":935,"line_end":935,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(memory.grow(1)?, 1);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":46967,"byte_end":47002,"line_start":936,"line_end":936,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(memory.size(), 2);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":47007,"byte_end":47040,"line_start":937,"line_end":937,"column_start":5,"column_end":38}},{"value":"/ assert!(memory.grow(1).is_err());","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":47045,"byte_end":47082,"line_start":938,"line_end":938,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(memory.size(), 2);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":47087,"byte_end":47120,"line_start":939,"line_end":939,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(memory.grow(0)?, 2);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":47125,"byte_end":47160,"line_start":940,"line_end":940,"column_start":5,"column_end":40}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":47165,"byte_end":47177,"line_start":941,"line_end":941,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":47182,"byte_end":47189,"line_start":942,"line_end":942,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":47194,"byte_end":47201,"line_start":943,"line_end":943,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":147},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":49263,"byte_end":49275,"line_start":998,"line_end":998,"column_start":18,"column_end":30},"name":"LinearMemory","qualname":"::externals::LinearMemory","value":"LinearMemory","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150}],"decl_id":null,"docs":" A linear memory. This trait provides an interface for raw memory buffers which are used\n by wasmtime, e.g. inside ['Memory']. Such buffers are in principle not thread safe.\n By implementing this trait together with MemoryCreator,\n one can supply wasmtime with custom allocated host managed memory.","sig":null,"attributes":[{"value":"/ A linear memory. This trait provides an interface for raw memory buffers which are used","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":48503,"byte_end":48594,"line_start":985,"line_end":985,"column_start":1,"column_end":92}},{"value":"/ by wasmtime, e.g. inside ['Memory']. Such buffers are in principle not thread safe.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":48595,"byte_end":48682,"line_start":986,"line_end":986,"column_start":1,"column_end":88}},{"value":"/ By implementing this trait together with MemoryCreator,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":48683,"byte_end":48742,"line_start":987,"line_end":987,"column_start":1,"column_end":60}},{"value":"/ one can supply wasmtime with custom allocated host managed memory.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":48743,"byte_end":48813,"line_start":988,"line_end":988,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":48814,"byte_end":48817,"line_start":989,"line_end":989,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":48818,"byte_end":48830,"line_start":990,"line_end":990,"column_start":1,"column_end":13}},{"value":"/ The memory should be page aligned and a multiple of page size.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":48831,"byte_end":48897,"line_start":991,"line_end":991,"column_start":1,"column_end":67}},{"value":"/ To prevent possible silent overflows, the memory should be protected by a guard page.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":48898,"byte_end":48987,"line_start":992,"line_end":992,"column_start":1,"column_end":90}},{"value":"/ Additionally the safety concerns explained in ['Memory'], for accessing the memory","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":48988,"byte_end":49074,"line_start":993,"line_end":993,"column_start":1,"column_end":87}},{"value":"/ apply here as well.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":49075,"byte_end":49098,"line_start":994,"line_end":994,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":49099,"byte_end":49102,"line_start":995,"line_end":995,"column_start":1,"column_end":4}},{"value":"/ Note that this is a relatively new and experimental feature and it is recommended","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":49103,"byte_end":49188,"line_start":996,"line_end":996,"column_start":1,"column_end":86}},{"value":"/ to be familiar with wasmtime runtime code to use it.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":49189,"byte_end":49245,"line_start":997,"line_end":997,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":49337,"byte_end":49341,"line_start":1000,"line_end":1000,"column_start":8,"column_end":12},"name":"size","qualname":"::externals::LinearMemory::size","value":"pub fn size(&Self) -> u32","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":" Returns the number of allocated wasm pages.\n","sig":null,"attributes":[{"value":"/ Returns the number of allocated wasm pages.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":49282,"byte_end":49329,"line_start":999,"line_end":999,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":49527,"byte_end":49531,"line_start":1006,"line_end":1006,"column_start":8,"column_end":12},"name":"grow","qualname":"::externals::LinearMemory::grow","value":"pub fn grow(&Self, u32) -> Option<u32>","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":" Grow memory by the specified amount of wasm pages.","sig":null,"attributes":[{"value":"/ Grow memory by the specified amount of wasm pages.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":49362,"byte_end":49416,"line_start":1002,"line_end":1002,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":49421,"byte_end":49424,"line_start":1003,"line_end":1003,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if memory can't be grown by the specified amount","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":49429,"byte_end":49496,"line_start":1004,"line_end":1004,"column_start":5,"column_end":72}},{"value":"/ of wasm pages.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":49501,"byte_end":49519,"line_start":1005,"line_end":1005,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":49639,"byte_end":49645,"line_start":1009,"line_end":1009,"column_start":8,"column_end":14},"name":"as_ptr","qualname":"::externals::LinearMemory::as_ptr","value":"pub fn as_ptr(&Self) -> *mut u8","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":" Return the allocated memory as a mutable pointer to u8.\n","sig":null,"attributes":[{"value":"/ Return the allocated memory as a mutable pointer to u8.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":49572,"byte_end":49631,"line_start":1008,"line_end":1008,"column_start":5,"column_end":64}}]},{"kind":"Trait","id":{"krate":0,"index":151},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":50275,"byte_end":50288,"line_start":1023,"line_end":1023,"column_start":18,"column_end":31},"name":"MemoryCreator","qualname":"::externals::MemoryCreator","value":"MemoryCreator: Send + Sync","parent":null,"children":[{"krate":0,"index":152}],"decl_id":null,"docs":" A memory creator. Can be used to provide a memory creator\n to wasmtime which supplies host managed memory.","sig":null,"attributes":[{"value":"/ A memory creator. Can be used to provide a memory creator","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":49668,"byte_end":49729,"line_start":1012,"line_end":1012,"column_start":1,"column_end":62}},{"value":"/ to wasmtime which supplies host managed memory.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":49730,"byte_end":49781,"line_start":1013,"line_end":1013,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":49782,"byte_end":49785,"line_start":1014,"line_end":1014,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":49786,"byte_end":49798,"line_start":1015,"line_end":1015,"column_start":1,"column_end":13}},{"value":"/ This trait is unsafe, as the memory safety depends on proper implementation of","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":49799,"byte_end":49881,"line_start":1016,"line_end":1016,"column_start":1,"column_end":83}},{"value":"/ memory management. Memories created by the MemoryCreator should always be treated","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":49882,"byte_end":49967,"line_start":1017,"line_end":1017,"column_start":1,"column_end":86}},{"value":"/ as owned by wasmtime instance, and any modification of them outside of wasmtime","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":49968,"byte_end":50051,"line_start":1018,"line_end":1018,"column_start":1,"column_end":84}},{"value":"/ invoked routines is unsafe and may lead to corruption.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":50052,"byte_end":50110,"line_start":1019,"line_end":1019,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":50111,"byte_end":50114,"line_start":1020,"line_end":1020,"column_start":1,"column_end":4}},{"value":"/ Note that this is a relatively new and experimental feature and it is recommended","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":50115,"byte_end":50200,"line_start":1021,"line_end":1021,"column_start":1,"column_end":86}},{"value":"/ to be familiar with wasmtime runtime code to use it.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":50201,"byte_end":50257,"line_start":1022,"line_end":1022,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":51945,"byte_end":51955,"line_start":1049,"line_end":1049,"column_start":8,"column_end":18},"name":"new_memory","qualname":"::externals::MemoryCreator::new_memory","value":"pub fn new_memory(&Self, MemoryType, Option<u64>, u64)\n-> Result<Box<dyn LinearMemory>, String>","parent":{"krate":0,"index":151},"children":[],"decl_id":null,"docs":" Create a new `LinearMemory` object from the specified parameters.","sig":null,"attributes":[{"value":"/ Create a new `LinearMemory` object from the specified parameters.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":50308,"byte_end":50377,"line_start":1024,"line_end":1024,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":50382,"byte_end":50385,"line_start":1025,"line_end":1025,"column_start":5,"column_end":8}},{"value":"/ The type of memory being created is specified by `ty` which indicates","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":50390,"byte_end":50463,"line_start":1026,"line_end":1026,"column_start":5,"column_end":78}},{"value":"/ both the minimum and maximum size, in wasm pages.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":50468,"byte_end":50521,"line_start":1027,"line_end":1027,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":50526,"byte_end":50529,"line_start":1028,"line_end":1028,"column_start":5,"column_end":8}},{"value":"/ The `reserved_size_in_bytes` value indicates the expected size of the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":50534,"byte_end":50607,"line_start":1029,"line_end":1029,"column_start":5,"column_end":78}},{"value":"/ reservation that is to be made for this memory. If this value is `None`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":50612,"byte_end":50687,"line_start":1030,"line_end":1030,"column_start":5,"column_end":80}},{"value":"/ than the implementation is free to allocate memory as it sees fit. If","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":50692,"byte_end":50765,"line_start":1031,"line_end":1031,"column_start":5,"column_end":78}},{"value":"/ the value is `Some`, however, then the implementation is expected to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":50770,"byte_end":50842,"line_start":1032,"line_end":1032,"column_start":5,"column_end":77}},{"value":"/ reserve that many bytes for the memory's allocation, plus the guard","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":50847,"byte_end":50918,"line_start":1033,"line_end":1033,"column_start":5,"column_end":76}},{"value":"/ size at the end. Note that this reservation need only be a virtual","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":50923,"byte_end":50993,"line_start":1034,"line_end":1034,"column_start":5,"column_end":75}},{"value":"/ memory reservation, physical memory does not need to be allocated","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":50998,"byte_end":51067,"line_start":1035,"line_end":1035,"column_start":5,"column_end":74}},{"value":"/ immediately. In this case `grow` should never move the base pointer and","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":51072,"byte_end":51147,"line_start":1036,"line_end":1036,"column_start":5,"column_end":80}},{"value":"/ the maximum size of `ty` is guaranteed to fit within `reserved_size_in_bytes`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":51152,"byte_end":51234,"line_start":1037,"line_end":1037,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":51239,"byte_end":51242,"line_start":1038,"line_end":1038,"column_start":5,"column_end":8}},{"value":"/ The `guard_size_in_bytes` parameter indicates how many bytes of space, after the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":51247,"byte_end":51331,"line_start":1039,"line_end":1039,"column_start":5,"column_end":89}},{"value":"/ memory allocation, is expected to be unmapped. JIT code will elide","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":51336,"byte_end":51406,"line_start":1040,"line_end":1040,"column_start":5,"column_end":75}},{"value":"/ bounds checks based on the `guard_size_in_bytes` provided, so for JIT code to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":51411,"byte_end":51492,"line_start":1041,"line_end":1041,"column_start":5,"column_end":86}},{"value":"/ work correctly the memory returned will need to be properly guarded with","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":51497,"byte_end":51573,"line_start":1042,"line_end":1042,"column_start":5,"column_end":81}},{"value":"/ `guard_size_in_bytes` bytes left unmapped after the base allocation.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":51578,"byte_end":51650,"line_start":1043,"line_end":1043,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":51655,"byte_end":51658,"line_start":1044,"line_end":1044,"column_start":5,"column_end":8}},{"value":"/ Note that the `reserved_size_in_bytes` and `guard_size_in_bytes` options are tuned from","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":51663,"byte_end":51754,"line_start":1045,"line_end":1045,"column_start":5,"column_end":96}},{"value":"/ the various [`Config`](crate::Config) methods about memory","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":51759,"byte_end":51821,"line_start":1046,"line_end":1046,"column_start":5,"column_end":67}},{"value":"/ sizes/guards. Additionally these two values are guaranteed to be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":51826,"byte_end":51894,"line_start":1047,"line_end":1047,"column_start":5,"column_end":73}},{"value":"/ multiples of the system page size.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":51899,"byte_end":51937,"line_start":1048,"line_end":1048,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":1772},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":53101,"byte_end":53107,"line_start":1087,"line_end":1087,"column_start":12,"column_end":18},"name":"Export","qualname":"::externals::Export","value":"Export {  }","parent":null,"children":[{"krate":0,"index":1774},{"krate":0,"index":1775}],"decl_id":null,"docs":" An exported WebAssembly value.","sig":null,"attributes":[{"value":"/ An exported WebAssembly value.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":52854,"byte_end":52888,"line_start":1081,"line_end":1081,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":52889,"byte_end":52892,"line_start":1082,"line_end":1082,"column_start":1,"column_end":4}},{"value":"/ This type is primarily accessed from the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":52893,"byte_end":52937,"line_start":1083,"line_end":1083,"column_start":1,"column_end":45}},{"value":"/ [`Instance::exports`](crate::Instance::exports) accessor and describes what","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":52938,"byte_end":53017,"line_start":1084,"line_end":1084,"column_start":1,"column_end":80}},{"value":"/ names and items are exported from a wasm instance.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":53018,"byte_end":53072,"line_start":1085,"line_end":1085,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":53587,"byte_end":53591,"line_start":1103,"line_end":1103,"column_start":12,"column_end":16},"name":"name","qualname":"<Export>::name","value":"pub fn name(&Self) -> &'instance str","parent":null,"children":[],"decl_id":null,"docs":" Returns the name by which this export is known.\n","sig":null,"attributes":[{"value":"/ Returns the name by which this export is known.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":53524,"byte_end":53575,"line_start":1102,"line_end":1102,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":53703,"byte_end":53705,"line_start":1108,"line_end":1108,"column_start":12,"column_end":14},"name":"ty","qualname":"<Export>::ty","value":"pub fn ty(&Self) -> ExternType","parent":null,"children":[],"decl_id":null,"docs":" Return the `ExternType` of this export.\n","sig":null,"attributes":[{"value":"/ Return the `ExternType` of this export.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":53648,"byte_end":53691,"line_start":1107,"line_end":1107,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":53841,"byte_end":53852,"line_start":1113,"line_end":1113,"column_start":12,"column_end":23},"name":"into_extern","qualname":"<Export>::into_extern","value":"pub fn into_extern(Self) -> Extern","parent":null,"children":[],"decl_id":null,"docs":" Consume this `Export` and return the contained `Extern`.\n","sig":null,"attributes":[{"value":"/ Consume this `Export` and return the contained `Extern`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":53769,"byte_end":53829,"line_start":1112,"line_end":1112,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":54025,"byte_end":54034,"line_start":1119,"line_end":1119,"column_start":12,"column_end":21},"name":"into_func","qualname":"<Export>::into_func","value":"pub fn into_func(Self) -> Option<Func>","parent":null,"children":[],"decl_id":null,"docs":" Consume this `Export` and return the contained `Func`, if it's a function,\n or `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Consume this `Export` and return the contained `Func`, if it's a function,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":53906,"byte_end":53984,"line_start":1117,"line_end":1117,"column_start":5,"column_end":83}},{"value":"/ or `None` otherwise.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":53989,"byte_end":54013,"line_start":1118,"line_end":1118,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":54223,"byte_end":54233,"line_start":1125,"line_end":1125,"column_start":12,"column_end":22},"name":"into_table","qualname":"<Export>::into_table","value":"pub fn into_table(Self) -> Option<Table>","parent":null,"children":[],"decl_id":null,"docs":" Consume this `Export` and return the contained `Table`, if it's a table,\n or `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Consume this `Export` and return the contained `Table`, if it's a table,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":54106,"byte_end":54182,"line_start":1123,"line_end":1123,"column_start":5,"column_end":81}},{"value":"/ or `None` otherwise.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":54187,"byte_end":54211,"line_start":1124,"line_end":1124,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":54426,"byte_end":54437,"line_start":1131,"line_end":1131,"column_start":12,"column_end":23},"name":"into_memory","qualname":"<Export>::into_memory","value":"pub fn into_memory(Self) -> Option<Memory>","parent":null,"children":[],"decl_id":null,"docs":" Consume this `Export` and return the contained `Memory`, if it's a memory,\n or `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Consume this `Export` and return the contained `Memory`, if it's a memory,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":54307,"byte_end":54385,"line_start":1129,"line_end":1129,"column_start":5,"column_end":83}},{"value":"/ or `None` otherwise.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":54390,"byte_end":54414,"line_start":1130,"line_end":1130,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":54632,"byte_end":54643,"line_start":1137,"line_end":1137,"column_start":12,"column_end":23},"name":"into_global","qualname":"<Export>::into_global","value":"pub fn into_global(Self) -> Option<Global>","parent":null,"children":[],"decl_id":null,"docs":" Consume this `Export` and return the contained `Global`, if it's a global,\n or `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Consume this `Export` and return the contained `Global`, if it's a global,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":54513,"byte_end":54591,"line_start":1135,"line_end":1135,"column_start":5,"column_end":83}},{"value":"/ or `None` otherwise.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":54596,"byte_end":54620,"line_start":1136,"line_end":1136,"column_start":5,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":1794},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":62250,"byte_end":62259,"line_start":207,"line_end":207,"column_start":12,"column_end":21},"name":"FrameInfo","qualname":"::frame_info::FrameInfo","value":"FrameInfo {  }","parent":null,"children":[{"krate":0,"index":1795},{"krate":0,"index":1796},{"krate":0,"index":1797},{"krate":0,"index":1798},{"krate":0,"index":1799}],"decl_id":null,"docs":" Description of a frame in a backtrace for a [`Trap`].","sig":null,"attributes":[{"value":"/ Description of a frame in a backtrace for a [`Trap`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":61922,"byte_end":61979,"line_start":199,"line_end":199,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":61980,"byte_end":61983,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ Whenever a WebAssembly trap occurs an instance of [`Trap`] is created. Each","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":61984,"byte_end":62063,"line_start":201,"line_end":201,"column_start":1,"column_end":80}},{"value":"/ [`Trap`] has a backtrace of the WebAssembly frames that led to the trap, and","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":62064,"byte_end":62144,"line_start":202,"line_end":202,"column_start":1,"column_end":81}},{"value":"/ each frame is described by this structure.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":62145,"byte_end":62191,"line_start":203,"line_end":203,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":62192,"byte_end":62195,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ [`Trap`]: crate::Trap","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":62196,"byte_end":62221,"line_start":205,"line_end":205,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":62637,"byte_end":62647,"line_start":220,"line_end":220,"column_start":12,"column_end":22},"name":"func_index","qualname":"<FrameInfo>::func_index","value":"pub fn func_index(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the WebAssembly function index for this frame.","sig":null,"attributes":[{"value":"/ Returns the WebAssembly function index for this frame.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":62428,"byte_end":62486,"line_start":216,"line_end":216,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":62491,"byte_end":62494,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ This function index is the index in the function index space of the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":62499,"byte_end":62570,"line_start":218,"line_end":218,"column_start":5,"column_end":76}},{"value":"/ WebAssembly module that this frame comes from.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":62575,"byte_end":62625,"line_start":219,"line_end":219,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":63239,"byte_end":63250,"line_start":233,"line_end":233,"column_start":12,"column_end":23},"name":"module_name","qualname":"<FrameInfo>::module_name","value":"pub fn module_name(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the identifer of the module that this frame is for.","sig":null,"attributes":[{"value":"/ Returns the identifer of the module that this frame is for.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":62699,"byte_end":62762,"line_start":224,"line_end":224,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":62767,"byte_end":62770,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ Module identifiers are present in the `name` section of a WebAssembly","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":62775,"byte_end":62848,"line_start":226,"line_end":226,"column_start":5,"column_end":78}},{"value":"/ binary, but this may not return the exact item in the `name` section.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":62853,"byte_end":62926,"line_start":227,"line_end":227,"column_start":5,"column_end":78}},{"value":"/ Module names can be overwritten at construction time or perhaps inferred","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":62931,"byte_end":63007,"line_start":228,"line_end":228,"column_start":5,"column_end":81}},{"value":"/ from file names. The primary purpose of this function is to assist in","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":63012,"byte_end":63085,"line_start":229,"line_end":229,"column_start":5,"column_end":78}},{"value":"/ debugging and therefore may be tweaked over time.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":63090,"byte_end":63143,"line_start":230,"line_end":230,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":63148,"byte_end":63151,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ This function returns `None` when no name can be found or inferred.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":63156,"byte_end":63227,"line_start":232,"line_end":232,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":64079,"byte_end":64088,"line_start":251,"line_end":251,"column_start":12,"column_end":21},"name":"func_name","qualname":"<FrameInfo>::func_name","value":"pub fn func_name(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns a descriptive name of the function for this frame, if one is\n available.","sig":null,"attributes":[{"value":"/ Returns a descriptive name of the function for this frame, if one is","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":63323,"byte_end":63395,"line_start":237,"line_end":237,"column_start":5,"column_end":77}},{"value":"/ available.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":63400,"byte_end":63414,"line_start":238,"line_end":238,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":63419,"byte_end":63422,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ The name of this function may come from the `name` section of the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":63427,"byte_end":63496,"line_start":240,"line_end":240,"column_start":5,"column_end":74}},{"value":"/ WebAssembly binary, or wasmtime may try to infer a better name for it if","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":63501,"byte_end":63577,"line_start":241,"line_end":241,"column_start":5,"column_end":81}},{"value":"/ not available, for example the name of the export if it's exported.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":63582,"byte_end":63653,"line_start":242,"line_end":242,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":63658,"byte_end":63661,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ This return value is primarily used for debugging and human-readable","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":63666,"byte_end":63738,"line_start":244,"line_end":244,"column_start":5,"column_end":77}},{"value":"/ purposes for things like traps. Note that the exact return value may be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":63743,"byte_end":63818,"line_start":245,"line_end":245,"column_start":5,"column_end":80}},{"value":"/ tweaked over time here and isn't guaranteed to be something in","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":63823,"byte_end":63889,"line_start":246,"line_end":246,"column_start":5,"column_end":71}},{"value":"/ particular about a wasm module due to its primary purpose of assisting","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":63894,"byte_end":63968,"line_start":247,"line_end":247,"column_start":5,"column_end":79}},{"value":"/ in debugging.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":63973,"byte_end":63990,"line_start":248,"line_end":248,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":63995,"byte_end":63998,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ This function returns `None` when no name could be inferred.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":64003,"byte_end":64067,"line_start":250,"line_end":250,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":64417,"byte_end":64430,"line_start":260,"line_end":260,"column_start":12,"column_end":25},"name":"module_offset","qualname":"<FrameInfo>::module_offset","value":"pub fn module_offset(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the offset within the original wasm module this frame's program\n counter was at.","sig":null,"attributes":[{"value":"/ Returns the offset within the original wasm module this frame's program","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":64159,"byte_end":64234,"line_start":255,"line_end":255,"column_start":5,"column_end":80}},{"value":"/ counter was at.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":64239,"byte_end":64258,"line_start":256,"line_end":256,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":64263,"byte_end":64266,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ The offset here is the offset from the beginning of the original wasm","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":64271,"byte_end":64344,"line_start":258,"line_end":258,"column_start":5,"column_end":78}},{"value":"/ module to the instruction that this frame points to.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":64349,"byte_end":64405,"line_start":259,"line_end":259,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":64797,"byte_end":64808,"line_start":270,"line_end":270,"column_start":12,"column_end":23},"name":"func_offset","qualname":"<FrameInfo>::func_offset","value":"pub fn func_offset(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the offset from the original wasm module's function to this\n frame's program counter.","sig":null,"attributes":[{"value":"/ Returns the offset from the original wasm module's function to this","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":64495,"byte_end":64566,"line_start":264,"line_end":264,"column_start":5,"column_end":76}},{"value":"/ frame's program counter.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":64571,"byte_end":64599,"line_start":265,"line_end":265,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":64604,"byte_end":64607,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ The offset here is the offset from the beginning of the defining","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":64612,"byte_end":64680,"line_start":267,"line_end":267,"column_start":5,"column_end":73}},{"value":"/ function of this frame (within the wasm module) to the instruction this","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":64685,"byte_end":64760,"line_start":268,"line_end":268,"column_start":5,"column_end":80}},{"value":"/ frame points to.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":64765,"byte_end":64785,"line_start":269,"line_end":269,"column_start":5,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":1802},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":69477,"byte_end":69481,"line_start":144,"line_end":144,"column_start":12,"column_end":16},"name":"Func","qualname":"::func::Func","value":"Func {  }","parent":null,"children":[{"krate":0,"index":1803},{"krate":0,"index":1804},{"krate":0,"index":1805}],"decl_id":null,"docs":" A WebAssembly function which can be called.","sig":null,"attributes":[{"value":"/ A WebAssembly function which can be called.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":65418,"byte_end":65465,"line_start":17,"line_end":17,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":65466,"byte_end":65469,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This type can represent a number of callable items, such as:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":65470,"byte_end":65534,"line_start":19,"line_end":19,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":65535,"byte_end":65538,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ * An exported function from a WebAssembly module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":65539,"byte_end":65592,"line_start":21,"line_end":21,"column_start":1,"column_end":54}},{"value":"/ * A user-defined function used to satisfy an import.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":65593,"byte_end":65649,"line_start":22,"line_end":22,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":65650,"byte_end":65653,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ These types of callable items are all wrapped up in this `Func` and can be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":65654,"byte_end":65732,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/ used to both instantiate an [`Instance`] as well as be extracted from an","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":65733,"byte_end":65809,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/ [`Instance`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":65810,"byte_end":65827,"line_start":26,"line_end":26,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":65828,"byte_end":65831,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [`Instance`]: crate::Instance","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":65832,"byte_end":65865,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":65866,"byte_end":65869,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # `Func` and `Clone`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":65870,"byte_end":65894,"line_start":30,"line_end":30,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":65895,"byte_end":65898,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Functions are internally reference counted so you can `clone` a `Func`. The","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":65899,"byte_end":65978,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ cloning process only performs a shallow clone, so two cloned `Func`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":65979,"byte_end":66050,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"/ instances are equivalent in their functionality.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":66051,"byte_end":66103,"line_start":34,"line_end":34,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":66104,"byte_end":66107,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":66108,"byte_end":66122,"line_start":36,"line_end":36,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":66123,"byte_end":66126,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ One way to get a `Func` is from an [`Instance`] after you've instantiated","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":66127,"byte_end":66204,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ it:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":66205,"byte_end":66212,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":66213,"byte_end":66216,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":66217,"byte_end":66224,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ # use wasmtime::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":66225,"byte_end":66247,"line_start":42,"line_end":42,"column_start":1,"column_end":23}},{"value":"/ # fn main() -> anyhow::Result<()> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":66248,"byte_end":66287,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/ let engine = Engine::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":66288,"byte_end":66323,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/ let store = Store::new(&engine);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":66324,"byte_end":66360,"line_start":45,"line_end":45,"column_start":1,"column_end":37}},{"value":"/ let module = Module::new(&engine, r#\"(module (func (export \"foo\")))\"#)?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":66361,"byte_end":66437,"line_start":46,"line_end":46,"column_start":1,"column_end":77}},{"value":"/ let instance = Instance::new(&store, &module, &[])?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":66438,"byte_end":66494,"line_start":47,"line_end":47,"column_start":1,"column_end":57}},{"value":"/ let foo = instance.get_func(\"foo\").expect(\"export wasn't a function\");","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":66495,"byte_end":66569,"line_start":48,"line_end":48,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":66570,"byte_end":66573,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // Work with `foo` as a `Func` at this point, such as calling it","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":66574,"byte_end":66642,"line_start":50,"line_end":50,"column_start":1,"column_end":69}},{"value":"/ // dynamically...","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":66643,"byte_end":66664,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/ match foo.call(&[]) {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":66665,"byte_end":66690,"line_start":52,"line_end":52,"column_start":1,"column_end":26}},{"value":"/     Ok(result) => { /* ... */ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":66691,"byte_end":66726,"line_start":53,"line_end":53,"column_start":1,"column_end":36}},{"value":"/     Err(trap) => {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":66727,"byte_end":66749,"line_start":54,"line_end":54,"column_start":1,"column_end":23}},{"value":"/         panic!(\"execution of `foo` resulted in a wasm trap: {}\", trap);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":66750,"byte_end":66825,"line_start":55,"line_end":55,"column_start":1,"column_end":76}},{"value":"/     }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":66826,"byte_end":66835,"line_start":56,"line_end":56,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":66836,"byte_end":66841,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ foo.call(&[])?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":66842,"byte_end":66861,"line_start":58,"line_end":58,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":66862,"byte_end":66865,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ // ... or we can make a static assertion about its signature and call it.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":66866,"byte_end":66943,"line_start":60,"line_end":60,"column_start":1,"column_end":78}},{"value":"/ // Our first call here can fail if the signatures don't match, and then the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":66944,"byte_end":67023,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ // second call can fail if the function traps (like the `match` above).","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":67024,"byte_end":67099,"line_start":62,"line_end":62,"column_start":1,"column_end":76}},{"value":"/ let foo = foo.get0::<()>()?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":67100,"byte_end":67132,"line_start":63,"line_end":63,"column_start":1,"column_end":33}},{"value":"/ foo()?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":67133,"byte_end":67144,"line_start":64,"line_end":64,"column_start":1,"column_end":12}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":67145,"byte_end":67157,"line_start":65,"line_end":65,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":67158,"byte_end":67165,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":67166,"byte_end":67173,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":67174,"byte_end":67177,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ You can also use the [`wrap` function](Func::wrap) to create a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":67178,"byte_end":67244,"line_start":69,"line_end":69,"column_start":1,"column_end":67}},{"value":"/ `Func`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":67245,"byte_end":67255,"line_start":70,"line_end":70,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":67256,"byte_end":67259,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":67260,"byte_end":67267,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/ # use wasmtime::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":67268,"byte_end":67290,"line_start":73,"line_end":73,"column_start":1,"column_end":23}},{"value":"/ # fn main() -> anyhow::Result<()> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":67291,"byte_end":67330,"line_start":74,"line_end":74,"column_start":1,"column_end":40}},{"value":"/ let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":67331,"byte_end":67364,"line_start":75,"line_end":75,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":67365,"byte_end":67368,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ // Create a custom `Func` which can execute arbitrary code inside of the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":67369,"byte_end":67445,"line_start":77,"line_end":77,"column_start":1,"column_end":77}},{"value":"/ // closure.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":67446,"byte_end":67461,"line_start":78,"line_end":78,"column_start":1,"column_end":16}},{"value":"/ let add = Func::wrap(&store, |a: i32, b: i32| -> i32 { a + b });","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":67462,"byte_end":67530,"line_start":79,"line_end":79,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":67531,"byte_end":67534,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ // Next we can hook that up to a wasm module which uses it.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":67535,"byte_end":67598,"line_start":81,"line_end":81,"column_start":1,"column_end":64}},{"value":"/ let module = Module::new(","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":67599,"byte_end":67628,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"/     store.engine(),","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":67629,"byte_end":67652,"line_start":83,"line_end":83,"column_start":1,"column_end":24}},{"value":"/     r#\"","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":67653,"byte_end":67664,"line_start":84,"line_end":84,"column_start":1,"column_end":12}},{"value":"/         (module","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":67665,"byte_end":67684,"line_start":85,"line_end":85,"column_start":1,"column_end":20}},{"value":"/             (import \"\" \"\" (func $add (param i32 i32) (result i32)))","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":67685,"byte_end":67756,"line_start":86,"line_end":86,"column_start":1,"column_end":72}},{"value":"/             (func (export \"call_add_twice\") (result i32)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":67757,"byte_end":67817,"line_start":87,"line_end":87,"column_start":1,"column_end":61}},{"value":"/                 i32.const 1","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":67818,"byte_end":67849,"line_start":88,"line_end":88,"column_start":1,"column_end":32}},{"value":"/                 i32.const 2","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":67850,"byte_end":67881,"line_start":89,"line_end":89,"column_start":1,"column_end":32}},{"value":"/                 call $add","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":67882,"byte_end":67911,"line_start":90,"line_end":90,"column_start":1,"column_end":30}},{"value":"/                 i32.const 3","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":67912,"byte_end":67943,"line_start":91,"line_end":91,"column_start":1,"column_end":32}},{"value":"/                 i32.const 4","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":67944,"byte_end":67975,"line_start":92,"line_end":92,"column_start":1,"column_end":32}},{"value":"/                 call $add","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":67976,"byte_end":68005,"line_start":93,"line_end":93,"column_start":1,"column_end":30}},{"value":"/                 i32.add))","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":68006,"byte_end":68035,"line_start":94,"line_end":94,"column_start":1,"column_end":30}},{"value":"/     \"#,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":68036,"byte_end":68047,"line_start":95,"line_end":95,"column_start":1,"column_end":12}},{"value":"/ )?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":68048,"byte_end":68055,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"/ let instance = Instance::new(&store, &module, &[add.into()])?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":68056,"byte_end":68122,"line_start":97,"line_end":97,"column_start":1,"column_end":67}},{"value":"/ let call_add_twice = instance.get_func(\"call_add_twice\").expect(\"export wasn't a function\");","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":68123,"byte_end":68219,"line_start":98,"line_end":98,"column_start":1,"column_end":97}},{"value":"/ let call_add_twice = call_add_twice.get0::<i32>()?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":68220,"byte_end":68275,"line_start":99,"line_end":99,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":68276,"byte_end":68279,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(call_add_twice()?, 10);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":68280,"byte_end":68318,"line_start":101,"line_end":101,"column_start":1,"column_end":39}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":68319,"byte_end":68331,"line_start":102,"line_end":102,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":68332,"byte_end":68339,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":68340,"byte_end":68347,"line_start":104,"line_end":104,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":68348,"byte_end":68351,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ Or you could also create an entirely dynamic `Func`!","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":68352,"byte_end":68408,"line_start":106,"line_end":106,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":68409,"byte_end":68412,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":68413,"byte_end":68420,"line_start":108,"line_end":108,"column_start":1,"column_end":8}},{"value":"/ # use wasmtime::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":68421,"byte_end":68443,"line_start":109,"line_end":109,"column_start":1,"column_end":23}},{"value":"/ # fn main() -> anyhow::Result<()> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":68444,"byte_end":68483,"line_start":110,"line_end":110,"column_start":1,"column_end":40}},{"value":"/ let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":68484,"byte_end":68517,"line_start":111,"line_end":111,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":68518,"byte_end":68521,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ // Here we need to define the type signature of our `Double` function and","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":68522,"byte_end":68599,"line_start":113,"line_end":113,"column_start":1,"column_end":78}},{"value":"/ // then wrap it up in a `Func`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":68600,"byte_end":68634,"line_start":114,"line_end":114,"column_start":1,"column_end":35}},{"value":"/ let double_type = wasmtime::FuncType::new(","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":68635,"byte_end":68681,"line_start":115,"line_end":115,"column_start":1,"column_end":47}},{"value":"/     Box::new([wasmtime::ValType::I32]),","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":68682,"byte_end":68725,"line_start":116,"line_end":116,"column_start":1,"column_end":44}},{"value":"/     Box::new([wasmtime::ValType::I32])","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":68726,"byte_end":68768,"line_start":117,"line_end":117,"column_start":1,"column_end":43}},{"value":"/ );","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":68769,"byte_end":68775,"line_start":118,"line_end":118,"column_start":1,"column_end":7}},{"value":"/ let double = Func::new(&store, double_type, |_, params, results| {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":68776,"byte_end":68846,"line_start":119,"line_end":119,"column_start":1,"column_end":71}},{"value":"/     let mut value = params[0].unwrap_i32();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":68847,"byte_end":68894,"line_start":120,"line_end":120,"column_start":1,"column_end":48}},{"value":"/     value *= 2;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":68895,"byte_end":68914,"line_start":121,"line_end":121,"column_start":1,"column_end":20}},{"value":"/     results[0] = value.into();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":68915,"byte_end":68949,"line_start":122,"line_end":122,"column_start":1,"column_end":35}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":68950,"byte_end":68964,"line_start":123,"line_end":123,"column_start":1,"column_end":15}},{"value":"/ });","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":68965,"byte_end":68972,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":68973,"byte_end":68976,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ let module = Module::new(","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":68977,"byte_end":69006,"line_start":126,"line_end":126,"column_start":1,"column_end":30}},{"value":"/     store.engine(),","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":69007,"byte_end":69030,"line_start":127,"line_end":127,"column_start":1,"column_end":24}},{"value":"/     r#\"","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":69031,"byte_end":69042,"line_start":128,"line_end":128,"column_start":1,"column_end":12}},{"value":"/         (module","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":69043,"byte_end":69062,"line_start":129,"line_end":129,"column_start":1,"column_end":20}},{"value":"/             (import \"\" \"\" (func $double (param i32) (result i32)))","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":69063,"byte_end":69133,"line_start":130,"line_end":130,"column_start":1,"column_end":71}},{"value":"/             (func $start","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":69134,"byte_end":69162,"line_start":131,"line_end":131,"column_start":1,"column_end":29}},{"value":"/                 i32.const 1","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":69163,"byte_end":69194,"line_start":132,"line_end":132,"column_start":1,"column_end":32}},{"value":"/                 call $double","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":69195,"byte_end":69227,"line_start":133,"line_end":133,"column_start":1,"column_end":33}},{"value":"/                 drop)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":69228,"byte_end":69253,"line_start":134,"line_end":134,"column_start":1,"column_end":26}},{"value":"/             (start $start))","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":69254,"byte_end":69285,"line_start":135,"line_end":135,"column_start":1,"column_end":32}},{"value":"/     \"#,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":69286,"byte_end":69297,"line_start":136,"line_end":136,"column_start":1,"column_end":12}},{"value":"/ )?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":69298,"byte_end":69305,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"/ let instance = Instance::new(&store, &module, &[double.into()])?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":69306,"byte_end":69375,"line_start":138,"line_end":138,"column_start":1,"column_end":70}},{"value":"/ // .. work with `instance` if necessary","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":69376,"byte_end":69419,"line_start":139,"line_end":139,"column_start":1,"column_end":44}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":69420,"byte_end":69432,"line_start":140,"line_end":140,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":69433,"byte_end":69440,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":69441,"byte_end":69448,"line_start":142,"line_end":142,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":74164,"byte_end":74167,"line_start":257,"line_end":257,"column_start":12,"column_end":15},"name":"new","qualname":"<Func>::new","value":"pub fn new<impl Fn(Caller<'_>, &[Val], &mut [Val]) -> Result<(), Trap> + 'static: Fn(Caller,\n                                                                                     &[Val],\n                                                                                     &mut [Val])\n           -> Result<(), Trap> +\n           'static>(&Store, FuncType,\n                    impl Fn(Caller<'_>, &[Val], &mut [Val]) -> Result<(), Trap> + 'static)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Func` with the given arguments, typically to create a\n user-defined function to pass as an import to a module.","sig":null,"attributes":[{"value":"/ Creates a new `Func` with the given arguments, typically to create a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":72905,"byte_end":72977,"line_start":234,"line_end":234,"column_start":5,"column_end":77}},{"value":"/ user-defined function to pass as an import to a module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":72982,"byte_end":73041,"line_start":235,"line_end":235,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":73046,"byte_end":73049,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ * `store` - a cache of data where information is stored, typically","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":73054,"byte_end":73124,"line_start":237,"line_end":237,"column_start":5,"column_end":75}},{"value":"/   shared with a [`Module`](crate::Module).","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":73129,"byte_end":73175,"line_start":238,"line_end":238,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":73180,"byte_end":73183,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ * `ty` - the signature of this function, used to indicate what the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":73188,"byte_end":73258,"line_start":240,"line_end":240,"column_start":5,"column_end":75}},{"value":"/   inputs and outputs are, which must be WebAssembly types.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":73263,"byte_end":73325,"line_start":241,"line_end":241,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":73330,"byte_end":73333,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ * `func` - the native code invoked whenever this `Func` will be called.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":73338,"byte_end":73413,"line_start":243,"line_end":243,"column_start":5,"column_end":80}},{"value":"/   This closure is provided a [`Caller`] as its first argument to learn","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":73418,"byte_end":73492,"line_start":244,"line_end":244,"column_start":5,"column_end":79}},{"value":"/   information about the caller, and then it's passed a list of","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":73497,"byte_end":73563,"line_start":245,"line_end":245,"column_start":5,"column_end":71}},{"value":"/   parameters as a slice along with a mutable slice of where to write","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":73568,"byte_end":73640,"line_start":246,"line_end":246,"column_start":5,"column_end":77}},{"value":"/   results.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":73645,"byte_end":73659,"line_start":247,"line_end":247,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":73664,"byte_end":73667,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ Note that the implementation of `func` must adhere to the `ty`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":73672,"byte_end":73738,"line_start":249,"line_end":249,"column_start":5,"column_end":71}},{"value":"/ signature given, error or traps may occur if it does not respect the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":73743,"byte_end":73815,"line_start":250,"line_end":250,"column_start":5,"column_end":77}},{"value":"/ `ty` signature.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":73820,"byte_end":73839,"line_start":251,"line_end":251,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":73844,"byte_end":73847,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ Additionally note that this is quite a dynamic function since signatures","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":73852,"byte_end":73928,"line_start":253,"line_end":253,"column_start":5,"column_end":81}},{"value":"/ are not statically known. For a more performant `Func` it's recommended","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":73933,"byte_end":74008,"line_start":254,"line_end":254,"column_start":5,"column_end":80}},{"value":"/ to use [`Func::wrap`] if you can because with statically known","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":74013,"byte_end":74079,"line_start":255,"line_end":255,"column_start":5,"column_end":71}},{"value":"/ signatures the engine can optimize the implementation much more.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":74084,"byte_end":74152,"line_start":256,"line_end":256,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":85059,"byte_end":85063,"line_start":531,"line_end":531,"column_start":12,"column_end":16},"name":"wrap","qualname":"<Func>::wrap","value":"pub fn wrap<Params, Results,\n            impl IntoFunc<Params, Results>: IntoFunc<Params,\n                                                     Results>>(&Store,\n                                                               impl IntoFunc<Params, Results>)\n-> Func","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Func` from the given Rust closure.","sig":null,"attributes":[{"value":"/ Creates a new `Func` from the given Rust closure.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":77371,"byte_end":77424,"line_start":337,"line_end":337,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":77429,"byte_end":77432,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ This function will create a new `Func` which, when called, will","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":77437,"byte_end":77504,"line_start":339,"line_end":339,"column_start":5,"column_end":72}},{"value":"/ execute the given Rust closure. Unlike [`Func::new`] the target","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":77509,"byte_end":77576,"line_start":340,"line_end":340,"column_start":5,"column_end":72}},{"value":"/ function being called is known statically so the type signature can","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":77581,"byte_end":77652,"line_start":341,"line_end":341,"column_start":5,"column_end":76}},{"value":"/ be inferred. Rust types will map to WebAssembly types as follows:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":77657,"byte_end":77726,"line_start":342,"line_end":342,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":77731,"byte_end":77734,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ | Rust Argument Type  | WebAssembly Type |","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":77739,"byte_end":77785,"line_start":344,"line_end":344,"column_start":5,"column_end":51}},{"value":"/ |---------------------|------------------|","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":77790,"byte_end":77836,"line_start":345,"line_end":345,"column_start":5,"column_end":51}},{"value":"/ | `i32`               | `i32`            |","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":77841,"byte_end":77887,"line_start":346,"line_end":346,"column_start":5,"column_end":51}},{"value":"/ | `u32`               | `i32`            |","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":77892,"byte_end":77938,"line_start":347,"line_end":347,"column_start":5,"column_end":51}},{"value":"/ | `i64`               | `i64`            |","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":77943,"byte_end":77989,"line_start":348,"line_end":348,"column_start":5,"column_end":51}},{"value":"/ | `u64`               | `i64`            |","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":77994,"byte_end":78040,"line_start":349,"line_end":349,"column_start":5,"column_end":51}},{"value":"/ | `f32`               | `f32`            |","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":78045,"byte_end":78091,"line_start":350,"line_end":350,"column_start":5,"column_end":51}},{"value":"/ | `f64`               | `f64`            |","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":78096,"byte_end":78142,"line_start":351,"line_end":351,"column_start":5,"column_end":51}},{"value":"/ | (not supported)     | `v128`           |","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":78147,"byte_end":78193,"line_start":352,"line_end":352,"column_start":5,"column_end":51}},{"value":"/ | `Option<Func>`      | `funcref`        |","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":78198,"byte_end":78244,"line_start":353,"line_end":353,"column_start":5,"column_end":51}},{"value":"/ | `Option<ExternRef>` | `externref`      |","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":78249,"byte_end":78295,"line_start":354,"line_end":354,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":78300,"byte_end":78303,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ Any of the Rust types can be returned from the closure as well, in","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":78308,"byte_end":78378,"line_start":356,"line_end":356,"column_start":5,"column_end":75}},{"value":"/ addition to some extra types","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":78383,"byte_end":78415,"line_start":357,"line_end":357,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":78420,"byte_end":78423,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ | Rust Return Type  | WebAssembly Return Type | Meaning           |","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":78428,"byte_end":78499,"line_start":359,"line_end":359,"column_start":5,"column_end":76}},{"value":"/ |-------------------|-------------------------|-------------------|","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":78504,"byte_end":78575,"line_start":360,"line_end":360,"column_start":5,"column_end":76}},{"value":"/ | `()`              | nothing                 | no return value   |","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":78580,"byte_end":78651,"line_start":361,"line_end":361,"column_start":5,"column_end":76}},{"value":"/ | `Result<T, Trap>` | `T`                     | function may trap |","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":78656,"byte_end":78727,"line_start":362,"line_end":362,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":78732,"byte_end":78735,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ At this time multi-value returns are not supported, and supporting this","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":78740,"byte_end":78815,"line_start":364,"line_end":364,"column_start":5,"column_end":80}},{"value":"/ is the subject of [#1178].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":78820,"byte_end":78850,"line_start":365,"line_end":365,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":78855,"byte_end":78858,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ [#1178]: https://github.com/bytecodealliance/wasmtime/issues/1178","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":78863,"byte_end":78932,"line_start":367,"line_end":367,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":78937,"byte_end":78940,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ Finally you can also optionally take [`Caller`] as the first argument of","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":78945,"byte_end":79021,"line_start":369,"line_end":369,"column_start":5,"column_end":81}},{"value":"/ your closure. If inserted then you're able to inspect the caller's","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":79026,"byte_end":79096,"line_start":370,"line_end":370,"column_start":5,"column_end":75}},{"value":"/ state, for example the [`Memory`] it has exported so you can read what","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":79101,"byte_end":79175,"line_start":371,"line_end":371,"column_start":5,"column_end":79}},{"value":"/ pointers point to.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":79180,"byte_end":79202,"line_start":372,"line_end":372,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":79207,"byte_end":79210,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ Note that when using this API, the intention is to create as thin of a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":79215,"byte_end":79289,"line_start":374,"line_end":374,"column_start":5,"column_end":79}},{"value":"/ layer as possible for when WebAssembly calls the function provided. With","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":79294,"byte_end":79370,"line_start":375,"line_end":375,"column_start":5,"column_end":81}},{"value":"/ sufficient inlining and optimization the WebAssembly will call straight","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":79375,"byte_end":79450,"line_start":376,"line_end":376,"column_start":5,"column_end":80}},{"value":"/ into `func` provided, with no extra fluff entailed.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":79455,"byte_end":79510,"line_start":377,"line_end":377,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":79515,"byte_end":79518,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":79523,"byte_end":79537,"line_start":379,"line_end":379,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":79542,"byte_end":79545,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ First up we can see how simple wasm imports can be implemented, such","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":79550,"byte_end":79622,"line_start":381,"line_end":381,"column_start":5,"column_end":77}},{"value":"/ as a function that adds its two arguments and returns the result.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":79627,"byte_end":79696,"line_start":382,"line_end":382,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":79701,"byte_end":79704,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":79709,"byte_end":79716,"line_start":384,"line_end":384,"column_start":5,"column_end":12}},{"value":"/ # use wasmtime::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":79721,"byte_end":79743,"line_start":385,"line_end":385,"column_start":5,"column_end":27}},{"value":"/ # fn main() -> anyhow::Result<()> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":79748,"byte_end":79787,"line_start":386,"line_end":386,"column_start":5,"column_end":44}},{"value":"/ # let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":79792,"byte_end":79827,"line_start":387,"line_end":387,"column_start":5,"column_end":40}},{"value":"/ let add = Func::wrap(&store, |a: i32, b: i32| a + b);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":79832,"byte_end":79889,"line_start":388,"line_end":388,"column_start":5,"column_end":62}},{"value":"/ let module = Module::new(","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":79894,"byte_end":79923,"line_start":389,"line_end":389,"column_start":5,"column_end":34}},{"value":"/     store.engine(),","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":79928,"byte_end":79951,"line_start":390,"line_end":390,"column_start":5,"column_end":28}},{"value":"/     r#\"","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":79956,"byte_end":79967,"line_start":391,"line_end":391,"column_start":5,"column_end":16}},{"value":"/         (module","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":79972,"byte_end":79991,"line_start":392,"line_end":392,"column_start":5,"column_end":24}},{"value":"/             (import \"\" \"\" (func $add (param i32 i32) (result i32)))","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":79996,"byte_end":80067,"line_start":393,"line_end":393,"column_start":5,"column_end":76}},{"value":"/             (func (export \"foo\") (param i32 i32) (result i32)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":80072,"byte_end":80137,"line_start":394,"line_end":394,"column_start":5,"column_end":70}},{"value":"/                 local.get 0","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":80142,"byte_end":80173,"line_start":395,"line_end":395,"column_start":5,"column_end":36}},{"value":"/                 local.get 1","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":80178,"byte_end":80209,"line_start":396,"line_end":396,"column_start":5,"column_end":36}},{"value":"/                 call $add))","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":80214,"byte_end":80245,"line_start":397,"line_end":397,"column_start":5,"column_end":36}},{"value":"/     \"#,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":80250,"byte_end":80261,"line_start":398,"line_end":398,"column_start":5,"column_end":16}},{"value":"/ )?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":80266,"byte_end":80273,"line_start":399,"line_end":399,"column_start":5,"column_end":12}},{"value":"/ let instance = Instance::new(&store, &module, &[add.into()])?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":80278,"byte_end":80344,"line_start":400,"line_end":400,"column_start":5,"column_end":71}},{"value":"/ let foo = instance.get_func(\"foo\").unwrap().get2::<i32, i32, i32>()?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":80349,"byte_end":80422,"line_start":401,"line_end":401,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(foo(1, 2)?, 3);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":80427,"byte_end":80457,"line_start":402,"line_end":402,"column_start":5,"column_end":35}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":80462,"byte_end":80474,"line_start":403,"line_end":403,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":80479,"byte_end":80486,"line_start":404,"line_end":404,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":80491,"byte_end":80498,"line_start":405,"line_end":405,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":80503,"byte_end":80506,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ We can also do the same thing, but generate a trap if the addition","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":80511,"byte_end":80581,"line_start":407,"line_end":407,"column_start":5,"column_end":75}},{"value":"/ overflows:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":80586,"byte_end":80600,"line_start":408,"line_end":408,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":80605,"byte_end":80608,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":80613,"byte_end":80620,"line_start":410,"line_end":410,"column_start":5,"column_end":12}},{"value":"/ # use wasmtime::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":80625,"byte_end":80647,"line_start":411,"line_end":411,"column_start":5,"column_end":27}},{"value":"/ # fn main() -> anyhow::Result<()> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":80652,"byte_end":80691,"line_start":412,"line_end":412,"column_start":5,"column_end":44}},{"value":"/ # let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":80696,"byte_end":80731,"line_start":413,"line_end":413,"column_start":5,"column_end":40}},{"value":"/ let add = Func::wrap(&store, |a: i32, b: i32| {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":80736,"byte_end":80787,"line_start":414,"line_end":414,"column_start":5,"column_end":56}},{"value":"/     match a.checked_add(b) {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":80792,"byte_end":80824,"line_start":415,"line_end":415,"column_start":5,"column_end":37}},{"value":"/         Some(i) => Ok(i),","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":80829,"byte_end":80858,"line_start":416,"line_end":416,"column_start":5,"column_end":34}},{"value":"/         None => Err(Trap::new(\"overflow\")),","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":80863,"byte_end":80910,"line_start":417,"line_end":417,"column_start":5,"column_end":52}},{"value":"/     }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":80915,"byte_end":80924,"line_start":418,"line_end":418,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":80929,"byte_end":80936,"line_start":419,"line_end":419,"column_start":5,"column_end":12}},{"value":"/ let module = Module::new(","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":80941,"byte_end":80970,"line_start":420,"line_end":420,"column_start":5,"column_end":34}},{"value":"/     store.engine(),","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":80975,"byte_end":80998,"line_start":421,"line_end":421,"column_start":5,"column_end":28}},{"value":"/     r#\"","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":81003,"byte_end":81014,"line_start":422,"line_end":422,"column_start":5,"column_end":16}},{"value":"/         (module","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":81019,"byte_end":81038,"line_start":423,"line_end":423,"column_start":5,"column_end":24}},{"value":"/             (import \"\" \"\" (func $add (param i32 i32) (result i32)))","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":81043,"byte_end":81114,"line_start":424,"line_end":424,"column_start":5,"column_end":76}},{"value":"/             (func (export \"foo\") (param i32 i32) (result i32)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":81119,"byte_end":81184,"line_start":425,"line_end":425,"column_start":5,"column_end":70}},{"value":"/                 local.get 0","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":81189,"byte_end":81220,"line_start":426,"line_end":426,"column_start":5,"column_end":36}},{"value":"/                 local.get 1","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":81225,"byte_end":81256,"line_start":427,"line_end":427,"column_start":5,"column_end":36}},{"value":"/                 call $add))","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":81261,"byte_end":81292,"line_start":428,"line_end":428,"column_start":5,"column_end":36}},{"value":"/     \"#,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":81297,"byte_end":81308,"line_start":429,"line_end":429,"column_start":5,"column_end":16}},{"value":"/ )?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":81313,"byte_end":81320,"line_start":430,"line_end":430,"column_start":5,"column_end":12}},{"value":"/ let instance = Instance::new(&store, &module, &[add.into()])?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":81325,"byte_end":81391,"line_start":431,"line_end":431,"column_start":5,"column_end":71}},{"value":"/ let foo = instance.get_func(\"foo\").unwrap().get2::<i32, i32, i32>()?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":81396,"byte_end":81469,"line_start":432,"line_end":432,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(foo(1, 2)?, 3);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":81474,"byte_end":81504,"line_start":433,"line_end":433,"column_start":5,"column_end":35}},{"value":"/ assert!(foo(i32::max_value(), 1).is_err());","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":81509,"byte_end":81556,"line_start":434,"line_end":434,"column_start":5,"column_end":52}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":81561,"byte_end":81573,"line_start":435,"line_end":435,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":81578,"byte_end":81585,"line_start":436,"line_end":436,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":81590,"byte_end":81597,"line_start":437,"line_end":437,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":81602,"byte_end":81605,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ And don't forget all the wasm types are supported!","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":81610,"byte_end":81664,"line_start":439,"line_end":439,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":81669,"byte_end":81672,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":81677,"byte_end":81684,"line_start":441,"line_end":441,"column_start":5,"column_end":12}},{"value":"/ # use wasmtime::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":81689,"byte_end":81711,"line_start":442,"line_end":442,"column_start":5,"column_end":27}},{"value":"/ # fn main() -> anyhow::Result<()> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":81716,"byte_end":81755,"line_start":443,"line_end":443,"column_start":5,"column_end":44}},{"value":"/ # let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":81760,"byte_end":81795,"line_start":444,"line_end":444,"column_start":5,"column_end":40}},{"value":"/ let debug = Func::wrap(&store, |a: i32, b: u32, c: f32, d: i64, e: u64, f: f64| {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":81800,"byte_end":81885,"line_start":445,"line_end":445,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":81890,"byte_end":81893,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/     println!(\"a={}\", a);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":81898,"byte_end":81926,"line_start":447,"line_end":447,"column_start":5,"column_end":33}},{"value":"/     println!(\"b={}\", b);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":81931,"byte_end":81959,"line_start":448,"line_end":448,"column_start":5,"column_end":33}},{"value":"/     println!(\"c={}\", c);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":81964,"byte_end":81992,"line_start":449,"line_end":449,"column_start":5,"column_end":33}},{"value":"/     println!(\"d={}\", d);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":81997,"byte_end":82025,"line_start":450,"line_end":450,"column_start":5,"column_end":33}},{"value":"/     println!(\"e={}\", e);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":82030,"byte_end":82058,"line_start":451,"line_end":451,"column_start":5,"column_end":33}},{"value":"/     println!(\"f={}\", f);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":82063,"byte_end":82091,"line_start":452,"line_end":452,"column_start":5,"column_end":33}},{"value":"/ });","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":82096,"byte_end":82103,"line_start":453,"line_end":453,"column_start":5,"column_end":12}},{"value":"/ let module = Module::new(","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":82108,"byte_end":82137,"line_start":454,"line_end":454,"column_start":5,"column_end":34}},{"value":"/     store.engine(),","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":82142,"byte_end":82165,"line_start":455,"line_end":455,"column_start":5,"column_end":28}},{"value":"/     r#\"","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":82170,"byte_end":82181,"line_start":456,"line_end":456,"column_start":5,"column_end":16}},{"value":"/         (module","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":82186,"byte_end":82205,"line_start":457,"line_end":457,"column_start":5,"column_end":24}},{"value":"/             (import \"\" \"\" (func $debug (param i32 i32 f32 i64 i64 f64)))","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":82210,"byte_end":82286,"line_start":458,"line_end":458,"column_start":5,"column_end":81}},{"value":"/             (func (export \"foo\")","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":82291,"byte_end":82327,"line_start":459,"line_end":459,"column_start":5,"column_end":41}},{"value":"/                 i32.const -1","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":82332,"byte_end":82364,"line_start":460,"line_end":460,"column_start":5,"column_end":37}},{"value":"/                 i32.const 1","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":82369,"byte_end":82400,"line_start":461,"line_end":461,"column_start":5,"column_end":36}},{"value":"/                 f32.const 2","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":82405,"byte_end":82436,"line_start":462,"line_end":462,"column_start":5,"column_end":36}},{"value":"/                 i64.const -3","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":82441,"byte_end":82473,"line_start":463,"line_end":463,"column_start":5,"column_end":37}},{"value":"/                 i64.const 3","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":82478,"byte_end":82509,"line_start":464,"line_end":464,"column_start":5,"column_end":36}},{"value":"/                 f64.const 4","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":82514,"byte_end":82545,"line_start":465,"line_end":465,"column_start":5,"column_end":36}},{"value":"/                 call $debug))","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":82550,"byte_end":82583,"line_start":466,"line_end":466,"column_start":5,"column_end":38}},{"value":"/     \"#,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":82588,"byte_end":82599,"line_start":467,"line_end":467,"column_start":5,"column_end":16}},{"value":"/ )?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":82604,"byte_end":82611,"line_start":468,"line_end":468,"column_start":5,"column_end":12}},{"value":"/ let instance = Instance::new(&store, &module, &[debug.into()])?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":82616,"byte_end":82684,"line_start":469,"line_end":469,"column_start":5,"column_end":73}},{"value":"/ let foo = instance.get_func(\"foo\").unwrap().get0::<()>()?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":82689,"byte_end":82751,"line_start":470,"line_end":470,"column_start":5,"column_end":67}},{"value":"/ foo()?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":82756,"byte_end":82767,"line_start":471,"line_end":471,"column_start":5,"column_end":16}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":82772,"byte_end":82784,"line_start":472,"line_end":472,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":82789,"byte_end":82796,"line_start":473,"line_end":473,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":82801,"byte_end":82808,"line_start":474,"line_end":474,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":82813,"byte_end":82816,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ Finally if you want to get really fancy you can also implement","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":82821,"byte_end":82887,"line_start":476,"line_end":476,"column_start":5,"column_end":71}},{"value":"/ imports that read/write wasm module's memory","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":82892,"byte_end":82940,"line_start":477,"line_end":477,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":82945,"byte_end":82948,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":82953,"byte_end":82960,"line_start":479,"line_end":479,"column_start":5,"column_end":12}},{"value":"/ use std::str;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":82965,"byte_end":82982,"line_start":480,"line_end":480,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":82987,"byte_end":82990,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ # use wasmtime::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":82995,"byte_end":83017,"line_start":482,"line_end":482,"column_start":5,"column_end":27}},{"value":"/ # fn main() -> anyhow::Result<()> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":83022,"byte_end":83061,"line_start":483,"line_end":483,"column_start":5,"column_end":44}},{"value":"/ # let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":83066,"byte_end":83101,"line_start":484,"line_end":484,"column_start":5,"column_end":40}},{"value":"/ let log_str = Func::wrap(&store, |caller: Caller<'_>, ptr: i32, len: i32| {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":83106,"byte_end":83185,"line_start":485,"line_end":485,"column_start":5,"column_end":84}},{"value":"/     let mem = match caller.get_export(\"memory\") {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":83190,"byte_end":83243,"line_start":486,"line_end":486,"column_start":5,"column_end":58}},{"value":"/         Some(Extern::Memory(mem)) => mem,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":83248,"byte_end":83293,"line_start":487,"line_end":487,"column_start":5,"column_end":50}},{"value":"/         _ => return Err(Trap::new(\"failed to find host memory\")),","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":83298,"byte_end":83367,"line_start":488,"line_end":488,"column_start":5,"column_end":74}},{"value":"/     };","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":83372,"byte_end":83382,"line_start":489,"line_end":489,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":83387,"byte_end":83390,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/     // We're reading raw wasm memory here so we need `unsafe`. Note","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":83395,"byte_end":83466,"line_start":491,"line_end":491,"column_start":5,"column_end":76}},{"value":"/     // though that this should be safe because we don't reenter wasm","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":83471,"byte_end":83543,"line_start":492,"line_end":492,"column_start":5,"column_end":77}},{"value":"/     // while we're reading wasm memory, nor should we clash with","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":83548,"byte_end":83616,"line_start":493,"line_end":493,"column_start":5,"column_end":73}},{"value":"/     // any other memory accessors (assuming they're well-behaved","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":83621,"byte_end":83689,"line_start":494,"line_end":494,"column_start":5,"column_end":73}},{"value":"/     // too).","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":83694,"byte_end":83710,"line_start":495,"line_end":495,"column_start":5,"column_end":21}},{"value":"/     unsafe {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":83715,"byte_end":83731,"line_start":496,"line_end":496,"column_start":5,"column_end":21}},{"value":"/         let data = mem.data_unchecked()","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":83736,"byte_end":83779,"line_start":497,"line_end":497,"column_start":5,"column_end":48}},{"value":"/             .get(ptr as u32 as usize..)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":83784,"byte_end":83827,"line_start":498,"line_end":498,"column_start":5,"column_end":48}},{"value":"/             .and_then(|arr| arr.get(..len as u32 as usize));","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":83832,"byte_end":83896,"line_start":499,"line_end":499,"column_start":5,"column_end":69}},{"value":"/         let string = match data {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":83901,"byte_end":83938,"line_start":500,"line_end":500,"column_start":5,"column_end":42}},{"value":"/             Some(data) => match str::from_utf8(data) {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":83943,"byte_end":84001,"line_start":501,"line_end":501,"column_start":5,"column_end":63}},{"value":"/                 Ok(s) => s,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":84006,"byte_end":84037,"line_start":502,"line_end":502,"column_start":5,"column_end":36}},{"value":"/                 Err(_) => return Err(Trap::new(\"invalid utf-8\")),","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":84042,"byte_end":84111,"line_start":503,"line_end":503,"column_start":5,"column_end":74}},{"value":"/             },","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":84116,"byte_end":84134,"line_start":504,"line_end":504,"column_start":5,"column_end":23}},{"value":"/             None => return Err(Trap::new(\"pointer/length out of bounds\")),","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":84139,"byte_end":84217,"line_start":505,"line_end":505,"column_start":5,"column_end":83}},{"value":"/         };","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":84222,"byte_end":84236,"line_start":506,"line_end":506,"column_start":5,"column_end":19}},{"value":"/         assert_eq!(string, \"Hello, world!\");","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":84241,"byte_end":84289,"line_start":507,"line_end":507,"column_start":5,"column_end":53}},{"value":"/         println!(\"{}\", string);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":84294,"byte_end":84329,"line_start":508,"line_end":508,"column_start":5,"column_end":40}},{"value":"/     }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":84334,"byte_end":84343,"line_start":509,"line_end":509,"column_start":5,"column_end":14}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":84348,"byte_end":84362,"line_start":510,"line_end":510,"column_start":5,"column_end":19}},{"value":"/ });","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":84367,"byte_end":84374,"line_start":511,"line_end":511,"column_start":5,"column_end":12}},{"value":"/ let module = Module::new(","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":84379,"byte_end":84408,"line_start":512,"line_end":512,"column_start":5,"column_end":34}},{"value":"/     store.engine(),","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":84413,"byte_end":84436,"line_start":513,"line_end":513,"column_start":5,"column_end":28}},{"value":"/     r#\"","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":84441,"byte_end":84452,"line_start":514,"line_end":514,"column_start":5,"column_end":16}},{"value":"/         (module","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":84457,"byte_end":84476,"line_start":515,"line_end":515,"column_start":5,"column_end":24}},{"value":"/             (import \"\" \"\" (func $log_str (param i32 i32)))","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":84481,"byte_end":84543,"line_start":516,"line_end":516,"column_start":5,"column_end":67}},{"value":"/             (func (export \"foo\")","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":84548,"byte_end":84584,"line_start":517,"line_end":517,"column_start":5,"column_end":41}},{"value":"/                 i32.const 4   ;; ptr","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":84589,"byte_end":84629,"line_start":518,"line_end":518,"column_start":5,"column_end":45}},{"value":"/                 i32.const 13  ;; len","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":84634,"byte_end":84674,"line_start":519,"line_end":519,"column_start":5,"column_end":45}},{"value":"/                 call $log_str)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":84679,"byte_end":84713,"line_start":520,"line_end":520,"column_start":5,"column_end":39}},{"value":"/             (memory (export \"memory\") 1)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":84718,"byte_end":84762,"line_start":521,"line_end":521,"column_start":5,"column_end":49}},{"value":"/             (data (i32.const 4) \"Hello, world!\"))","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":84767,"byte_end":84820,"line_start":522,"line_end":522,"column_start":5,"column_end":58}},{"value":"/     \"#,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":84825,"byte_end":84836,"line_start":523,"line_end":523,"column_start":5,"column_end":16}},{"value":"/ )?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":84841,"byte_end":84848,"line_start":524,"line_end":524,"column_start":5,"column_end":12}},{"value":"/ let instance = Instance::new(&store, &module, &[log_str.into()])?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":84853,"byte_end":84923,"line_start":525,"line_end":525,"column_start":5,"column_end":75}},{"value":"/ let foo = instance.get_func(\"foo\").unwrap().get0::<()>()?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":84928,"byte_end":84990,"line_start":526,"line_end":526,"column_start":5,"column_end":67}},{"value":"/ foo()?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":84995,"byte_end":85006,"line_start":527,"line_end":527,"column_start":5,"column_end":16}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":85011,"byte_end":85023,"line_start":528,"line_end":528,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":85028,"byte_end":85035,"line_start":529,"line_end":529,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":85040,"byte_end":85047,"line_start":530,"line_end":530,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":85384,"byte_end":85386,"line_start":540,"line_end":540,"column_start":12,"column_end":14},"name":"ty","qualname":"<Func>::ty","value":"pub fn ty(&Self) -> FuncType","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying wasm type that this `Func` has.\n","sig":null,"attributes":[{"value":"/ Returns the underlying wasm type that this `Func` has.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":85314,"byte_end":85372,"line_start":539,"line_end":539,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":85963,"byte_end":85974,"line_start":552,"line_end":552,"column_start":12,"column_end":23},"name":"param_arity","qualname":"<Func>::param_arity","value":"pub fn param_arity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of parameters that this function takes.\n","sig":null,"attributes":[{"value":"/ Returns the number of parameters that this function takes.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":85889,"byte_end":85951,"line_start":551,"line_end":551,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":86245,"byte_end":86257,"line_start":561,"line_end":561,"column_start":12,"column_end":24},"name":"result_arity","qualname":"<Func>::result_arity","value":"pub fn result_arity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of results this function produces.\n","sig":null,"attributes":[{"value":"/ Returns the number of results this function produces.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":86176,"byte_end":86233,"line_start":560,"line_end":560,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":86894,"byte_end":86898,"line_start":578,"line_end":578,"column_start":12,"column_end":16},"name":"call","qualname":"<Func>::call","value":"pub fn call(&Self, &[Val]) -> Result<Box<[Val]>>","parent":null,"children":[],"decl_id":null,"docs":" Invokes this function with the `params` given, returning the results and\n any trap, if one occurs.","sig":null,"attributes":[{"value":"/ Invokes this function with the `params` given, returning the results and","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":86460,"byte_end":86536,"line_start":569,"line_end":569,"column_start":5,"column_end":81}},{"value":"/ any trap, if one occurs.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":86541,"byte_end":86569,"line_start":570,"line_end":570,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":86574,"byte_end":86577,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ The `params` here must match the type signature of this `Func`, or a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":86582,"byte_end":86654,"line_start":572,"line_end":572,"column_start":5,"column_end":77}},{"value":"/ trap will occur. If a trap occurs while executing this function, then a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":86659,"byte_end":86734,"line_start":573,"line_end":573,"column_start":5,"column_end":80}},{"value":"/ trap will also be returned.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":86739,"byte_end":86770,"line_start":574,"line_end":574,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":86775,"byte_end":86778,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ This function should not panic unless the underlying function itself","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":86783,"byte_end":86855,"line_start":576,"line_end":576,"column_start":5,"column_end":77}},{"value":"/ initiates a panic.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":86860,"byte_end":86882,"line_start":577,"line_end":577,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1808},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":90101,"byte_end":90105,"line_start":667,"line_end":667,"column_start":10,"column_end":14},"name":"get0","qualname":"<Func>::get0","value":"pub fn get0<R>(&Self) -> anyhow::Result</*impl Trait*/> where R: WasmTy","parent":null,"children":[],"decl_id":null,"docs":" Extracts a natively-callable object from this `Func`, if the\n signature matches.","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":69736,"byte_end":69760,"line_start":156,"line_end":156,"column_start":9,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1813},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":91671,"byte_end":91675,"line_start":697,"line_end":697,"column_start":10,"column_end":14},"name":"get1","qualname":"<Func>::get1","value":"pub fn get1<A1, R>(&Self) -> anyhow::Result</*impl Trait*/> where A1: WasmTy,\nR: WasmTy","parent":null,"children":[],"decl_id":null,"docs":" Extracts a natively-callable object from this `Func`, if the\n signature matches.","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":69736,"byte_end":69760,"line_start":156,"line_end":156,"column_start":9,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1820},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":91873,"byte_end":91877,"line_start":703,"line_end":703,"column_start":10,"column_end":14},"name":"get2","qualname":"<Func>::get2","value":"pub fn get2<A1, A2, R>(&Self) -> anyhow::Result</*impl Trait*/> where\nA1: WasmTy, A2: WasmTy, R: WasmTy","parent":null,"children":[],"decl_id":null,"docs":" Extracts a natively-callable object from this `Func`, if the\n signature matches.","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":69736,"byte_end":69760,"line_start":156,"line_end":156,"column_start":9,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1829},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":92079,"byte_end":92083,"line_start":709,"line_end":709,"column_start":10,"column_end":14},"name":"get3","qualname":"<Func>::get3","value":"pub fn get3<A1, A2, A3, R>(&Self) -> anyhow::Result</*impl Trait*/> where\nA1: WasmTy, A2: WasmTy, A3: WasmTy, R: WasmTy","parent":null,"children":[],"decl_id":null,"docs":" Extracts a natively-callable object from this `Func`, if the\n signature matches.","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":69736,"byte_end":69760,"line_start":156,"line_end":156,"column_start":9,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1840},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":92289,"byte_end":92293,"line_start":715,"line_end":715,"column_start":10,"column_end":14},"name":"get4","qualname":"<Func>::get4","value":"pub fn get4<A1, A2, A3, A4, R>(&Self) -> anyhow::Result</*impl Trait*/> where\nA1: WasmTy, A2: WasmTy, A3: WasmTy, A4: WasmTy, R: WasmTy","parent":null,"children":[],"decl_id":null,"docs":" Extracts a natively-callable object from this `Func`, if the\n signature matches.","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":69736,"byte_end":69760,"line_start":156,"line_end":156,"column_start":9,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1853},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":92503,"byte_end":92507,"line_start":721,"line_end":721,"column_start":10,"column_end":14},"name":"get5","qualname":"<Func>::get5","value":"pub fn get5<A1, A2, A3, A4, A5, R>(&Self) -> anyhow::Result</*impl Trait*/>\nwhere A1: WasmTy, A2: WasmTy, A3: WasmTy, A4: WasmTy, A5: WasmTy, R: WasmTy","parent":null,"children":[],"decl_id":null,"docs":" Extracts a natively-callable object from this `Func`, if the\n signature matches.","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":69736,"byte_end":69760,"line_start":156,"line_end":156,"column_start":9,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1868},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":92721,"byte_end":92725,"line_start":727,"line_end":727,"column_start":10,"column_end":14},"name":"get6","qualname":"<Func>::get6","value":"pub fn get6<A1, A2, A3, A4, A5, A6, R>(&Self)\n-> anyhow::Result</*impl Trait*/> where A1: WasmTy, A2: WasmTy, A3: WasmTy,\nA4: WasmTy, A5: WasmTy, A6: WasmTy, R: WasmTy","parent":null,"children":[],"decl_id":null,"docs":" Extracts a natively-callable object from this `Func`, if the\n signature matches.","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":69736,"byte_end":69760,"line_start":156,"line_end":156,"column_start":9,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1885},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":92943,"byte_end":92947,"line_start":733,"line_end":733,"column_start":10,"column_end":14},"name":"get7","qualname":"<Func>::get7","value":"pub fn get7<A1, A2, A3, A4, A5, A6, A7, R>(&Self)\n-> anyhow::Result</*impl Trait*/> where A1: WasmTy, A2: WasmTy, A3: WasmTy,\nA4: WasmTy, A5: WasmTy, A6: WasmTy, A7: WasmTy, R: WasmTy","parent":null,"children":[],"decl_id":null,"docs":" Extracts a natively-callable object from this `Func`, if the\n signature matches.","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":69736,"byte_end":69760,"line_start":156,"line_end":156,"column_start":9,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1904},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":93169,"byte_end":93173,"line_start":739,"line_end":739,"column_start":10,"column_end":14},"name":"get8","qualname":"<Func>::get8","value":"pub fn get8<A1, A2, A3, A4, A5, A6, A7, A8, R>(&Self)\n-> anyhow::Result</*impl Trait*/> where A1: WasmTy, A2: WasmTy, A3: WasmTy,\nA4: WasmTy, A5: WasmTy, A6: WasmTy, A7: WasmTy, A8: WasmTy, R: WasmTy","parent":null,"children":[],"decl_id":null,"docs":" Extracts a natively-callable object from this `Func`, if the\n signature matches.","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":69736,"byte_end":69760,"line_start":156,"line_end":156,"column_start":9,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1925},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":93399,"byte_end":93403,"line_start":745,"line_end":745,"column_start":10,"column_end":14},"name":"get9","qualname":"<Func>::get9","value":"pub fn get9<A1, A2, A3, A4, A5, A6, A7, A8, A9, R>(&Self)\n-> anyhow::Result</*impl Trait*/> where A1: WasmTy, A2: WasmTy, A3: WasmTy,\nA4: WasmTy, A5: WasmTy, A6: WasmTy, A7: WasmTy, A8: WasmTy, A9: WasmTy,\nR: WasmTy","parent":null,"children":[],"decl_id":null,"docs":" Extracts a natively-callable object from this `Func`, if the\n signature matches.","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":69736,"byte_end":69760,"line_start":156,"line_end":156,"column_start":9,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1948},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":93633,"byte_end":93638,"line_start":751,"line_end":751,"column_start":10,"column_end":15},"name":"get10","qualname":"<Func>::get10","value":"pub fn get10<A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, R>(&Self)\n-> anyhow::Result</*impl Trait*/> where A1: WasmTy, A2: WasmTy, A3: WasmTy,\nA4: WasmTy, A5: WasmTy, A6: WasmTy, A7: WasmTy, A8: WasmTy, A9: WasmTy,\nA10: WasmTy, R: WasmTy","parent":null,"children":[],"decl_id":null,"docs":" Extracts a natively-callable object from this `Func`, if the\n signature matches.","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":69736,"byte_end":69760,"line_start":156,"line_end":156,"column_start":9,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1973},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":93873,"byte_end":93878,"line_start":757,"line_end":757,"column_start":10,"column_end":15},"name":"get11","qualname":"<Func>::get11","value":"pub fn get11<A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, R>(&Self)\n-> anyhow::Result</*impl Trait*/> where A1: WasmTy, A2: WasmTy, A3: WasmTy,\nA4: WasmTy, A5: WasmTy, A6: WasmTy, A7: WasmTy, A8: WasmTy, A9: WasmTy,\nA10: WasmTy, A11: WasmTy, R: WasmTy","parent":null,"children":[],"decl_id":null,"docs":" Extracts a natively-callable object from this `Func`, if the\n signature matches.","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":69736,"byte_end":69760,"line_start":156,"line_end":156,"column_start":9,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2000},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":94118,"byte_end":94123,"line_start":763,"line_end":763,"column_start":10,"column_end":15},"name":"get12","qualname":"<Func>::get12","value":"pub fn get12<A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, R>(&Self)\n-> anyhow::Result</*impl Trait*/> where A1: WasmTy, A2: WasmTy, A3: WasmTy,\nA4: WasmTy, A5: WasmTy, A6: WasmTy, A7: WasmTy, A8: WasmTy, A9: WasmTy,\nA10: WasmTy, A11: WasmTy, A12: WasmTy, R: WasmTy","parent":null,"children":[],"decl_id":null,"docs":" Extracts a natively-callable object from this `Func`, if the\n signature matches.","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":69736,"byte_end":69760,"line_start":156,"line_end":156,"column_start":9,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2029},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":94368,"byte_end":94373,"line_start":769,"line_end":769,"column_start":10,"column_end":15},"name":"get13","qualname":"<Func>::get13","value":"pub fn get13<A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, R>(&Self)\n-> anyhow::Result</*impl Trait*/> where A1: WasmTy, A2: WasmTy, A3: WasmTy,\nA4: WasmTy, A5: WasmTy, A6: WasmTy, A7: WasmTy, A8: WasmTy, A9: WasmTy,\nA10: WasmTy, A11: WasmTy, A12: WasmTy, A13: WasmTy, R: WasmTy","parent":null,"children":[],"decl_id":null,"docs":" Extracts a natively-callable object from this `Func`, if the\n signature matches.","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":69736,"byte_end":69760,"line_start":156,"line_end":156,"column_start":9,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2060},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":94623,"byte_end":94628,"line_start":775,"line_end":775,"column_start":10,"column_end":15},"name":"get14","qualname":"<Func>::get14","value":"pub fn get14<A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14,\n             R>(&Self) -> anyhow::Result</*impl Trait*/> where A1: WasmTy,\nA2: WasmTy, A3: WasmTy, A4: WasmTy, A5: WasmTy, A6: WasmTy, A7: WasmTy,\nA8: WasmTy, A9: WasmTy, A10: WasmTy, A11: WasmTy, A12: WasmTy, A13: WasmTy,\nA14: WasmTy, R: WasmTy","parent":null,"children":[],"decl_id":null,"docs":" Extracts a natively-callable object from this `Func`, if the\n signature matches.","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":69736,"byte_end":69760,"line_start":156,"line_end":156,"column_start":9,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2093},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":94883,"byte_end":94888,"line_start":781,"line_end":781,"column_start":10,"column_end":15},"name":"get15","qualname":"<Func>::get15","value":"pub fn get15<A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15,\n             R>(&Self) -> anyhow::Result</*impl Trait*/> where A1: WasmTy,\nA2: WasmTy, A3: WasmTy, A4: WasmTy, A5: WasmTy, A6: WasmTy, A7: WasmTy,\nA8: WasmTy, A9: WasmTy, A10: WasmTy, A11: WasmTy, A12: WasmTy, A13: WasmTy,\nA14: WasmTy, A15: WasmTy, R: WasmTy","parent":null,"children":[],"decl_id":null,"docs":" Extracts a natively-callable object from this `Func`, if the\n signature matches.","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":69736,"byte_end":69760,"line_start":156,"line_end":156,"column_start":9,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":95024,"byte_end":95029,"line_start":785,"line_end":785,"column_start":12,"column_end":17},"name":"store","qualname":"<Func>::store","value":"pub fn store(&Self) -> &Store","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this function's store.\n","sig":null,"attributes":[{"value":"/ Get a reference to this function's store.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":94967,"byte_end":95012,"line_start":784,"line_end":784,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":2128},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":96439,"byte_end":96448,"line_start":837,"line_end":837,"column_start":12,"column_end":21},"name":"WeakStore","qualname":"::func::WeakStore","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":356},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":96836,"byte_end":96842,"line_start":847,"line_end":847,"column_start":18,"column_end":24},"name":"WasmTy","qualname":"::func::WasmTy","value":"WasmTy","parent":null,"children":[{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":360},{"krate":0,"index":362},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":367},{"krate":0,"index":368}],"decl_id":null,"docs":" A trait implemented for types which can be arguments to closures passed to\n [`Func::wrap`] and friends.","sig":null,"attributes":[{"value":"/ A trait implemented for types which can be arguments to closures passed to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":96477,"byte_end":96555,"line_start":839,"line_end":839,"column_start":1,"column_end":79}},{"value":"/ [`Func::wrap`] and friends.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":96556,"byte_end":96587,"line_start":840,"line_end":840,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":96588,"byte_end":96591,"line_start":841,"line_end":841,"column_start":1,"column_end":4}},{"value":"/ This trait should not be implemented by user types. This trait may change at","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":96592,"byte_end":96672,"line_start":842,"line_end":842,"column_start":1,"column_end":81}},{"value":"/ any time internally. The types which implement this trait, however, are","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":96673,"byte_end":96748,"line_start":843,"line_end":843,"column_start":1,"column_end":76}},{"value":"/ stable over time.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":96749,"byte_end":96770,"line_start":844,"line_end":844,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":96771,"byte_end":96774,"line_start":845,"line_end":845,"column_start":1,"column_end":4}},{"value":"/ For more information see [`Func::wrap`]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":96775,"byte_end":96818,"line_start":846,"line_end":846,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":357},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":96933,"byte_end":96936,"line_start":850,"line_end":850,"column_start":10,"column_end":13},"name":"Abi","qualname":"::func::WasmTy::Abi","value":"type Abi: Copy;","parent":{"krate":0,"index":356},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":97025,"byte_end":97046,"line_start":854,"line_end":854,"column_start":8,"column_end":29},"name":"compatible_with_store","qualname":"::func::WasmTy::compatible_with_store","value":"pub fn compatible_with_store<'a>(&Self, WeakStore) -> bool","parent":{"krate":0,"index":356},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":97225,"byte_end":97241,"line_start":859,"line_end":859,"column_start":8,"column_end":24},"name":"into_abi_for_arg","qualname":"::func::WasmTy::into_abi_for_arg","value":"pub fn into_abi_for_arg<'a>(Self, WeakStore) -> Self::Abi","parent":{"krate":0,"index":356},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":97618,"byte_end":97626,"line_start":868,"line_end":868,"column_start":15,"column_end":23},"name":"from_abi","qualname":"::func::WasmTy::from_abi","value":"pub unsafe fn from_abi<'a>(Self::Abi, WeakStore) -> Self","parent":{"krate":0,"index":356},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":97765,"byte_end":97769,"line_start":872,"line_end":872,"column_start":8,"column_end":12},"name":"push","qualname":"::func::WasmTy::push","value":"pub fn push(&mut Vec<ValType>)","parent":{"krate":0,"index":356},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":97871,"byte_end":97878,"line_start":876,"line_end":876,"column_start":8,"column_end":15},"name":"matches","qualname":"::func::WasmTy::matches","value":"pub fn matches<impl Iterator<Item = ValType>: Iterator<Item =\n               ValType>>(impl Iterator<Item = ValType>) -> anyhow::Result<()>","parent":{"krate":0,"index":356},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":98039,"byte_end":98053,"line_start":880,"line_end":880,"column_start":15,"column_end":29},"name":"load_from_args","qualname":"::func::WasmTy::load_from_args","value":"pub unsafe fn load_from_args(&mut *const u128) -> Self::Abi","parent":{"krate":0,"index":356},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":98193,"byte_end":98206,"line_start":884,"line_end":884,"column_start":15,"column_end":28},"name":"store_to_args","qualname":"::func::WasmTy::store_to_args","value":"pub unsafe fn store_to_args(Self::Abi, *mut u128)","parent":{"krate":0,"index":356},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":369},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":98603,"byte_end":98610,"line_start":895,"line_end":895,"column_start":18,"column_end":25},"name":"WasmRet","qualname":"::func::WasmRet","value":"WasmRet","parent":null,"children":[{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":373},{"krate":0,"index":375},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":380},{"krate":0,"index":381}],"decl_id":null,"docs":" A trait implemented for types which can be returned from closures passed to\n [`Func::wrap`] and friends.","sig":null,"attributes":[{"value":"/ A trait implemented for types which can be returned from closures passed to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":98243,"byte_end":98322,"line_start":887,"line_end":887,"column_start":1,"column_end":80}},{"value":"/ [`Func::wrap`] and friends.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":98323,"byte_end":98354,"line_start":888,"line_end":888,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":98355,"byte_end":98358,"line_start":889,"line_end":889,"column_start":1,"column_end":4}},{"value":"/ This trait should not be implemented by user types. This trait may change at","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":98359,"byte_end":98439,"line_start":890,"line_end":890,"column_start":1,"column_end":81}},{"value":"/ any time internally. The types which implement this trait, however, are","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":98440,"byte_end":98515,"line_start":891,"line_end":891,"column_start":1,"column_end":76}},{"value":"/ stable over time.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":98516,"byte_end":98537,"line_start":892,"line_end":892,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":98538,"byte_end":98541,"line_start":893,"line_end":893,"column_start":1,"column_end":4}},{"value":"/ For more information see [`Func::wrap`]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":98542,"byte_end":98585,"line_start":894,"line_end":894,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":370},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":98671,"byte_end":98674,"line_start":898,"line_end":898,"column_start":10,"column_end":13},"name":"Abi","qualname":"::func::WasmRet::Abi","value":"type Abi: Copy;","parent":{"krate":0,"index":369},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":98757,"byte_end":98778,"line_start":902,"line_end":902,"column_start":8,"column_end":29},"name":"compatible_with_store","qualname":"::func::WasmRet::compatible_with_store","value":"pub fn compatible_with_store<'a>(&Self, WeakStore) -> bool","parent":{"krate":0,"index":369},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":99247,"byte_end":99263,"line_start":911,"line_end":911,"column_start":15,"column_end":31},"name":"into_abi_for_ret","qualname":"::func::WasmRet::into_abi_for_ret","value":"pub unsafe fn into_abi_for_ret<'a>(Self, WeakStore) -> Self::Abi","parent":{"krate":0,"index":369},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":99379,"byte_end":99387,"line_start":915,"line_end":915,"column_start":15,"column_end":23},"name":"from_abi","qualname":"::func::WasmRet::from_abi","value":"pub unsafe fn from_abi<'a>(Self::Abi, WeakStore) -> Self","parent":{"krate":0,"index":369},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":99497,"byte_end":99501,"line_start":919,"line_end":919,"column_start":8,"column_end":12},"name":"push","qualname":"::func::WasmRet::push","value":"pub fn push(&mut Vec<ValType>)","parent":{"krate":0,"index":369},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":99588,"byte_end":99595,"line_start":923,"line_end":923,"column_start":8,"column_end":15},"name":"matches","qualname":"::func::WasmRet::matches","value":"pub fn matches<impl Iterator<Item = ValType>: Iterator<Item =\n               ValType>>(impl Iterator<Item = ValType>) -> anyhow::Result<()>","parent":{"krate":0,"index":369},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":99730,"byte_end":99744,"line_start":927,"line_end":927,"column_start":15,"column_end":29},"name":"load_from_args","qualname":"::func::WasmRet::load_from_args","value":"pub unsafe fn load_from_args(&mut *const u128) -> Self::Abi","parent":{"krate":0,"index":369},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":99856,"byte_end":99869,"line_start":931,"line_end":931,"column_start":15,"column_end":28},"name":"store_to_args","qualname":"::func::WasmRet::store_to_args","value":"pub unsafe fn store_to_args(Self::Abi, *mut u128)","parent":{"krate":0,"index":369},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":528},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":111965,"byte_end":111973,"line_start":1425,"line_end":1425,"column_start":11,"column_end":19},"name":"IntoFunc","qualname":"::func::IntoFunc","value":"IntoFunc<Params, Results>","parent":null,"children":[{"krate":0,"index":531}],"decl_id":null,"docs":" Internal trait implemented for all arguments that can be passed to\n [`Func::wrap`].","sig":null,"attributes":[{"value":"/ Internal trait implemented for all arguments that can be passed to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":111734,"byte_end":111804,"line_start":1420,"line_end":1420,"column_start":1,"column_end":71}},{"value":"/ [`Func::wrap`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":111805,"byte_end":111824,"line_start":1421,"line_end":1421,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":111825,"byte_end":111828,"line_start":1422,"line_end":1422,"column_start":1,"column_end":4}},{"value":"/ This trait should not be implemented by external users, it's only intended","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":111829,"byte_end":111907,"line_start":1423,"line_end":1423,"column_start":1,"column_end":79}},{"value":"/ as an implementation detail of this crate.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":111908,"byte_end":111954,"line_start":1424,"line_end":1424,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":112019,"byte_end":112028,"line_start":1427,"line_end":1427,"column_start":8,"column_end":17},"name":"into_func","qualname":"::func::IntoFunc::into_func","value":"pub fn into_func(Self, &Store) -> Func","parent":{"krate":0,"index":528},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":532},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":113271,"byte_end":113277,"line_start":1449,"line_end":1449,"column_start":12,"column_end":18},"name":"Caller","qualname":"::func::Caller","value":"Caller {  }","parent":null,"children":[{"krate":0,"index":534},{"krate":0,"index":535}],"decl_id":null,"docs":" A structure representing the *caller's* context when creating a function\n via [`Func::wrap`].","sig":null,"attributes":[{"value":"/ A structure representing the *caller's* context when creating a function","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":112062,"byte_end":112138,"line_start":1430,"line_end":1430,"column_start":1,"column_end":77}},{"value":"/ via [`Func::wrap`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":112139,"byte_end":112162,"line_start":1431,"line_end":1431,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":112163,"byte_end":112166,"line_start":1432,"line_end":1432,"column_start":1,"column_end":4}},{"value":"/ This structure can be taken as the first parameter of a closure passed to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":112167,"byte_end":112244,"line_start":1433,"line_end":1433,"column_start":1,"column_end":78}},{"value":"/ [Func::wrap], and it can be used to learn information about the caller of","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":112245,"byte_end":112322,"line_start":1434,"line_end":1434,"column_start":1,"column_end":78}},{"value":"/ the function, such as the calling module's memory, exports, etc.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":112323,"byte_end":112391,"line_start":1435,"line_end":1435,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":112392,"byte_end":112395,"line_start":1436,"line_end":1436,"column_start":1,"column_end":4}},{"value":"/ The primary purpose of this structure is to provide access to the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":112396,"byte_end":112465,"line_start":1437,"line_end":1437,"column_start":1,"column_end":70}},{"value":"/ caller's information, namely it's exported memory and exported functions. This","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":112466,"byte_end":112548,"line_start":1438,"line_end":1438,"column_start":1,"column_end":83}},{"value":"/ allows functions which take pointers as arguments to easily read the memory the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":112549,"byte_end":112632,"line_start":1439,"line_end":1439,"column_start":1,"column_end":84}},{"value":"/ pointers point into, or if a function is expected to call malloc in the wasm","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":112633,"byte_end":112713,"line_start":1440,"line_end":1440,"column_start":1,"column_end":81}},{"value":"/ module to reserve space for the output you can do that.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":112714,"byte_end":112773,"line_start":1441,"line_end":1441,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":112774,"byte_end":112777,"line_start":1442,"line_end":1442,"column_start":1,"column_end":4}},{"value":"/ Note that this Caller type a pretty temporary mechanism for accessing the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":112778,"byte_end":112855,"line_start":1443,"line_end":1443,"column_start":1,"column_end":78}},{"value":"/ caller's information until interface types has been fully standardized and","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":112856,"byte_end":112934,"line_start":1444,"line_end":1444,"column_start":1,"column_end":79}},{"value":"/ implemented. The interface types proposal will obsolete this type and this will","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":112935,"byte_end":113018,"line_start":1445,"line_end":1445,"column_start":1,"column_end":84}},{"value":"/ be removed in the future at some point after interface types is implemented. If","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":113019,"byte_end":113102,"line_start":1446,"line_end":1446,"column_start":1,"column_end":84}},{"value":"/ you're relying on this Caller type it's recommended to become familiar with","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":113103,"byte_end":113182,"line_start":1447,"line_end":1447,"column_start":1,"column_end":80}},{"value":"/ interface types to ensure that your use case is covered by the proposal.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":113183,"byte_end":113259,"line_start":1448,"line_end":1448,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":537},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":115362,"byte_end":115372,"line_start":1494,"line_end":1494,"column_start":12,"column_end":22},"name":"get_export","qualname":"<Caller>::get_export","value":"pub fn get_export(&Self, &str) -> Option<Extern>","parent":null,"children":[],"decl_id":null,"docs":" Looks up an export from the caller's module by the `name` given.","sig":null,"attributes":[{"value":"/ Looks up an export from the caller's module by the `name` given.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":114244,"byte_end":114312,"line_start":1471,"line_end":1471,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":114317,"byte_end":114320,"line_start":1472,"line_end":1472,"column_start":5,"column_end":8}},{"value":"/ Note that this function is only implemented for the `Extern::Memory`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":114325,"byte_end":114397,"line_start":1473,"line_end":1473,"column_start":5,"column_end":77}},{"value":"/ and the `Extern::Func` types currently. No other exported structures","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":114402,"byte_end":114474,"line_start":1474,"line_end":1474,"column_start":5,"column_end":77}},{"value":"/ can be acquired through this just yet, but this may be implemented","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":114479,"byte_end":114549,"line_start":1475,"line_end":1475,"column_start":5,"column_end":75}},{"value":"/ in the future!","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":114554,"byte_end":114572,"line_start":1476,"line_end":1476,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":114577,"byte_end":114580,"line_start":1477,"line_end":1477,"column_start":5,"column_end":8}},{"value":"/ Note that when accessing and calling exported functions, one should adhere","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":114585,"byte_end":114663,"line_start":1478,"line_end":1478,"column_start":5,"column_end":83}},{"value":"/ to the guidlines of the interface types proposal.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":114668,"byte_end":114721,"line_start":1479,"line_end":1479,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":114726,"byte_end":114729,"line_start":1480,"line_end":1480,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":114734,"byte_end":114746,"line_start":1481,"line_end":1481,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":114751,"byte_end":114754,"line_start":1482,"line_end":1482,"column_start":5,"column_end":8}},{"value":"/ If a memory or function export with the `name` provided was found, then it is","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":114759,"byte_end":114840,"line_start":1483,"line_end":1483,"column_start":5,"column_end":86}},{"value":"/ returned as a `Memory`. There are a number of situations, however, where","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":114845,"byte_end":114921,"line_start":1484,"line_end":1484,"column_start":5,"column_end":81}},{"value":"/ the memory or function may not be available:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":114926,"byte_end":114974,"line_start":1485,"line_end":1485,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":114979,"byte_end":114982,"line_start":1486,"line_end":1486,"column_start":5,"column_end":8}},{"value":"/ * The caller instance may not have an export named `name`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":114987,"byte_end":115048,"line_start":1487,"line_end":1487,"column_start":5,"column_end":66}},{"value":"/ * The export named `name` may not be an exported memory","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":115053,"byte_end":115112,"line_start":1488,"line_end":1488,"column_start":5,"column_end":64}},{"value":"/ * There may not be a caller available, for example if `Func` was called","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":115117,"byte_end":115192,"line_start":1489,"line_end":1489,"column_start":5,"column_end":80}},{"value":"/   directly from host code.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":115197,"byte_end":115227,"line_start":1490,"line_end":1490,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":115232,"byte_end":115235,"line_start":1491,"line_end":1491,"column_start":5,"column_end":8}},{"value":"/ It's recommended to take care when calling this API and gracefully","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":115240,"byte_end":115310,"line_start":1492,"line_end":1492,"column_start":5,"column_end":75}},{"value":"/ handling a `None` return value.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":115315,"byte_end":115350,"line_start":1493,"line_end":1493,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":538},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":116470,"byte_end":116475,"line_start":1517,"line_end":1517,"column_start":12,"column_end":17},"name":"store","qualname":"<Caller>::store","value":"pub fn store(&Self) -> Store","parent":null,"children":[],"decl_id":null,"docs":" Get a handle to this caller's store.\n","sig":null,"attributes":[{"value":"/ Get a handle to this caller's store.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":116418,"byte_end":116458,"line_start":1516,"line_end":1516,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":2940},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":129301,"byte_end":129309,"line_start":99,"line_end":99,"column_start":12,"column_end":20},"name":"Instance","qualname":"::instance::Instance","value":"Instance {  }","parent":null,"children":[{"krate":0,"index":2941},{"krate":0,"index":2942},{"krate":0,"index":2943}],"decl_id":null,"docs":" An instantiated WebAssembly module.","sig":null,"attributes":[{"value":"/ An instantiated WebAssembly module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":128414,"byte_end":128453,"line_start":82,"line_end":82,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":128454,"byte_end":128457,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ This type represents the instantiation of a [`Module`]. Once instantiated","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":128458,"byte_end":128535,"line_start":84,"line_end":84,"column_start":1,"column_end":78}},{"value":"/ you can access the [`exports`](Instance::exports) which are of type","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":128536,"byte_end":128607,"line_start":85,"line_end":85,"column_start":1,"column_end":72}},{"value":"/ [`Extern`] and provide the ability to call functions, set globals, read","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":128608,"byte_end":128683,"line_start":86,"line_end":86,"column_start":1,"column_end":76}},{"value":"/ memory, etc. This is where all the fun stuff happens!","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":128684,"byte_end":128741,"line_start":87,"line_end":87,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":128742,"byte_end":128745,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ An [`Instance`] is created from two inputs, a [`Module`] and a list of","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":128746,"byte_end":128820,"line_start":89,"line_end":89,"column_start":1,"column_end":75}},{"value":"/ imports, provided as a list of [`Extern`] values. The [`Module`] is the wasm","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":128821,"byte_end":128901,"line_start":90,"line_end":90,"column_start":1,"column_end":81}},{"value":"/ code that was compiled and we're instantiating, and the [`Extern`] imports","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":128902,"byte_end":128980,"line_start":91,"line_end":91,"column_start":1,"column_end":79}},{"value":"/ are how we're satisfying the imports of the module provided. On successful","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":128981,"byte_end":129059,"line_start":92,"line_end":92,"column_start":1,"column_end":79}},{"value":"/ instantiation an [`Instance`] will automatically invoke the wasm `start`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":129060,"byte_end":129136,"line_start":93,"line_end":93,"column_start":1,"column_end":77}},{"value":"/ function.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":129137,"byte_end":129150,"line_start":94,"line_end":94,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":129151,"byte_end":129154,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ When interacting with any wasm code you'll want to make an [`Instance`] to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":129155,"byte_end":129233,"line_start":96,"line_end":96,"column_start":1,"column_end":79}},{"value":"/ call any code or execute anything!","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":129234,"byte_end":129272,"line_start":97,"line_end":97,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":132222,"byte_end":132225,"line_start":159,"line_end":159,"column_start":12,"column_end":15},"name":"new","qualname":"<Instance>::new","value":"pub fn new(&Store, &Module, &[Extern]) -> Result<Instance, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Instance`] from the previously compiled [`Module`] and\n list of `imports` specified.","sig":null,"attributes":[{"value":"/ Creates a new [`Instance`] from the previously compiled [`Module`] and","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":129417,"byte_end":129491,"line_start":106,"line_end":106,"column_start":5,"column_end":79}},{"value":"/ list of `imports` specified.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":129496,"byte_end":129528,"line_start":107,"line_end":107,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":129533,"byte_end":129536,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ This method instantiates the `module` provided with the `imports`,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":129541,"byte_end":129611,"line_start":109,"line_end":109,"column_start":5,"column_end":75}},{"value":"/ following the procedure in the [core specification][inst] to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":129616,"byte_end":129680,"line_start":110,"line_end":110,"column_start":5,"column_end":69}},{"value":"/ instantiate. Instantiation can fail for a number of reasons (many","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":129685,"byte_end":129754,"line_start":111,"line_end":111,"column_start":5,"column_end":74}},{"value":"/ specified below), but if successful the `start` function will be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":129759,"byte_end":129827,"line_start":112,"line_end":112,"column_start":5,"column_end":73}},{"value":"/ automatically run (if provided) and then the [`Instance`] will be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":129832,"byte_end":129901,"line_start":113,"line_end":113,"column_start":5,"column_end":74}},{"value":"/ returned.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":129906,"byte_end":129919,"line_start":114,"line_end":114,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":129924,"byte_end":129927,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ Per the WebAssembly spec, instantiation includes running the module's","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":129932,"byte_end":130005,"line_start":116,"line_end":116,"column_start":5,"column_end":78}},{"value":"/ start function, if it has one (not to be confused with the `_start`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":130010,"byte_end":130081,"line_start":117,"line_end":117,"column_start":5,"column_end":76}},{"value":"/ function, which is not run).","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":130086,"byte_end":130118,"line_start":118,"line_end":118,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":130123,"byte_end":130126,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Note that this is a low-level function that just performance an","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":130131,"byte_end":130198,"line_start":120,"line_end":120,"column_start":5,"column_end":72}},{"value":"/ instantiation. See the `Linker` struct for an API which provides a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":130203,"byte_end":130273,"line_start":121,"line_end":121,"column_start":5,"column_end":75}},{"value":"/ convenient way to link imports and provides automatic Command and Reactor","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":130278,"byte_end":130355,"line_start":122,"line_end":122,"column_start":5,"column_end":82}},{"value":"/ behavior.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":130360,"byte_end":130373,"line_start":123,"line_end":123,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":130378,"byte_end":130381,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ## Providing Imports","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":130386,"byte_end":130410,"line_start":125,"line_end":125,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":130415,"byte_end":130418,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ The `imports` array here is a bit tricky. The entries in the list of","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":130423,"byte_end":130495,"line_start":127,"line_end":127,"column_start":5,"column_end":77}},{"value":"/ `imports` are intended to correspond 1:1 with the list of imports","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":130500,"byte_end":130569,"line_start":128,"line_end":128,"column_start":5,"column_end":74}},{"value":"/ returned by [`Module::imports`]. Before calling [`Instance::new`] you'll","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":130574,"byte_end":130650,"line_start":129,"line_end":129,"column_start":5,"column_end":81}},{"value":"/ want to inspect the return value of [`Module::imports`] and, for each","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":130655,"byte_end":130728,"line_start":130,"line_end":130,"column_start":5,"column_end":78}},{"value":"/ import type, create an [`Extern`] which corresponds to that type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":130733,"byte_end":130802,"line_start":131,"line_end":131,"column_start":5,"column_end":74}},{"value":"/ These [`Extern`] values are all then collected into a list and passed to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":130807,"byte_end":130883,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ this function.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":130888,"byte_end":130906,"line_start":133,"line_end":133,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":130911,"byte_end":130914,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Note that this function is intentionally relatively low level. It is the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":130919,"byte_end":130995,"line_start":135,"line_end":135,"column_start":5,"column_end":81}},{"value":"/ intention that we'll soon provide a [higher level API][issue] which will","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":131000,"byte_end":131076,"line_start":136,"line_end":136,"column_start":5,"column_end":81}},{"value":"/ be much more ergonomic for instantiating modules. If you need the full","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":131081,"byte_end":131155,"line_start":137,"line_end":137,"column_start":5,"column_end":79}},{"value":"/ power of customization of imports, though, this is the method for you!","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":131160,"byte_end":131234,"line_start":138,"line_end":138,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":131239,"byte_end":131242,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ ## Errors","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":131247,"byte_end":131260,"line_start":140,"line_end":140,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":131265,"byte_end":131268,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ This function can fail for a number of reasons, including, but not","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":131273,"byte_end":131343,"line_start":142,"line_end":142,"column_start":5,"column_end":75}},{"value":"/ limited to:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":131348,"byte_end":131363,"line_start":143,"line_end":143,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":131368,"byte_end":131371,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ * The number of `imports` provided doesn't match the number of imports","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":131376,"byte_end":131450,"line_start":145,"line_end":145,"column_start":5,"column_end":79}},{"value":"/   returned by the `module`'s [`Module::imports`] method.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":131455,"byte_end":131515,"line_start":146,"line_end":146,"column_start":5,"column_end":65}},{"value":"/ * The type of any [`Extern`] doesn't match the corresponding","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":131520,"byte_end":131584,"line_start":147,"line_end":147,"column_start":5,"column_end":69}},{"value":"/   [`ExternType`] entry that it maps to.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":131589,"byte_end":131632,"line_start":148,"line_end":148,"column_start":5,"column_end":48}},{"value":"/ * The `start` function in the instance, if present, traps.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":131637,"byte_end":131699,"line_start":149,"line_end":149,"column_start":5,"column_end":67}},{"value":"/ * Module/instance resource limits are exceeded.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":131704,"byte_end":131755,"line_start":150,"line_end":150,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":131760,"byte_end":131763,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ When instantiation fails it's recommended to inspect the return value to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":131768,"byte_end":131844,"line_start":152,"line_end":152,"column_start":5,"column_end":81}},{"value":"/ see why it failed, or bubble it upwards. If you'd like to specifically","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":131849,"byte_end":131923,"line_start":153,"line_end":153,"column_start":5,"column_end":79}},{"value":"/ check for trap errors, you can use `error.downcast::<Trap>()`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":131928,"byte_end":131994,"line_start":154,"line_end":154,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":131999,"byte_end":132002,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ [inst]: https://webassembly.github.io/spec/core/exec/modules.html#exec-instantiation","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":132007,"byte_end":132095,"line_start":156,"line_end":156,"column_start":5,"column_end":93}},{"value":"/ [issue]: https://github.com/bytecodealliance/wasmtime/issues/727","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":132100,"byte_end":132168,"line_start":157,"line_end":157,"column_start":5,"column_end":73}},{"value":"/ [`ExternType`]: crate::ExternType","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":132173,"byte_end":132210,"line_start":158,"line_end":158,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":133272,"byte_end":133277,"line_start":186,"line_end":186,"column_start":12,"column_end":17},"name":"store","qualname":"<Instance>::store","value":"pub fn store(&Self) -> &Store","parent":null,"children":[],"decl_id":null,"docs":" Returns the associated [`Store`] that this `Instance` is compiled into.","sig":null,"attributes":[{"value":"/ Returns the associated [`Store`] that this `Instance` is compiled into.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":133054,"byte_end":133129,"line_start":182,"line_end":182,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":133134,"byte_end":133137,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ This is the [`Store`] that generally serves as a sort of global cache","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":133142,"byte_end":133215,"line_start":184,"line_end":184,"column_start":5,"column_end":78}},{"value":"/ for various instance-related things.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":133220,"byte_end":133260,"line_start":185,"line_end":185,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":133402,"byte_end":133409,"line_start":191,"line_end":191,"column_start":12,"column_end":19},"name":"exports","qualname":"<Instance>::exports","value":"pub fn exports<'instance>(&'instance Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the list of exported items from this [`Instance`].\n","sig":null,"attributes":[{"value":"/ Returns the list of exported items from this [`Instance`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":133328,"byte_end":133390,"line_start":190,"line_end":190,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":638},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":134051,"byte_end":134061,"line_start":207,"line_end":207,"column_start":12,"column_end":22},"name":"get_export","qualname":"<Instance>::get_export","value":"pub fn get_export(&Self, &str) -> Option<Extern>","parent":null,"children":[],"decl_id":null,"docs":" Looks up an exported [`Extern`] value by name.","sig":null,"attributes":[{"value":"/ Looks up an exported [`Extern`] value by name.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":133803,"byte_end":133853,"line_start":201,"line_end":201,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":133858,"byte_end":133861,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ This method will search the module for an export named `name` and return","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":133866,"byte_end":133942,"line_start":203,"line_end":203,"column_start":5,"column_end":81}},{"value":"/ the value, if found.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":133947,"byte_end":133971,"line_start":204,"line_end":204,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":133976,"byte_end":133979,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if there was no export named `name`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":133984,"byte_end":134039,"line_start":206,"line_end":206,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":134411,"byte_end":134419,"line_start":216,"line_end":216,"column_start":12,"column_end":20},"name":"get_func","qualname":"<Instance>::get_func","value":"pub fn get_func(&Self, &str) -> Option<Func>","parent":null,"children":[],"decl_id":null,"docs":" Looks up an exported [`Func`] value by name.","sig":null,"attributes":[{"value":"/ Looks up an exported [`Func`] value by name.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":134233,"byte_end":134281,"line_start":212,"line_end":212,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":134286,"byte_end":134289,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if there was no export named `name`, or if there was but","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":134294,"byte_end":134369,"line_start":214,"line_end":214,"column_start":5,"column_end":80}},{"value":"/ it wasn't a function.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":134374,"byte_end":134399,"line_start":215,"line_end":215,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":134687,"byte_end":134696,"line_start":224,"line_end":224,"column_start":12,"column_end":21},"name":"get_table","qualname":"<Instance>::get_table","value":"pub fn get_table(&Self, &str) -> Option<Table>","parent":null,"children":[],"decl_id":null,"docs":" Looks up an exported [`Table`] value by name.","sig":null,"attributes":[{"value":"/ Looks up an exported [`Table`] value by name.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":134511,"byte_end":134560,"line_start":220,"line_end":220,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":134565,"byte_end":134568,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if there was no export named `name`, or if there was but","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":134573,"byte_end":134648,"line_start":222,"line_end":222,"column_start":5,"column_end":80}},{"value":"/ it wasn't a table.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":134653,"byte_end":134675,"line_start":223,"line_end":223,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":134968,"byte_end":134978,"line_start":232,"line_end":232,"column_start":12,"column_end":22},"name":"get_memory","qualname":"<Instance>::get_memory","value":"pub fn get_memory(&Self, &str) -> Option<Memory>","parent":null,"children":[],"decl_id":null,"docs":" Looks up an exported [`Memory`] value by name.","sig":null,"attributes":[{"value":"/ Looks up an exported [`Memory`] value by name.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":134790,"byte_end":134840,"line_start":228,"line_end":228,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":134845,"byte_end":134848,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if there was no export named `name`, or if there was but","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":134853,"byte_end":134928,"line_start":230,"line_end":230,"column_start":5,"column_end":80}},{"value":"/ it wasn't a memory.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":134933,"byte_end":134956,"line_start":231,"line_end":231,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":135252,"byte_end":135262,"line_start":240,"line_end":240,"column_start":12,"column_end":22},"name":"get_global","qualname":"<Instance>::get_global","value":"pub fn get_global(&Self, &str) -> Option<Global>","parent":null,"children":[],"decl_id":null,"docs":" Looks up an exported [`Global`] value by name.","sig":null,"attributes":[{"value":"/ Looks up an exported [`Global`] value by name.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":135074,"byte_end":135124,"line_start":236,"line_end":236,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":135129,"byte_end":135132,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if there was no export named `name`, or if there was but","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":135137,"byte_end":135212,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ it wasn't a global.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":135217,"byte_end":135240,"line_start":239,"line_end":239,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":713},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":140471,"byte_end":140477,"line_start":40,"line_end":40,"column_start":12,"column_end":18},"name":"Linker","qualname":"::linker::Linker","value":"Linker {  }","parent":null,"children":[{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718}],"decl_id":null,"docs":" Structure used to link wasm modules/instances together.","sig":null,"attributes":[{"value":"/ Structure used to link wasm modules/instances together.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":138736,"byte_end":138795,"line_start":10,"line_end":10,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":138796,"byte_end":138799,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This structure is used to assist in instantiating a [`Module`]. A `Linker`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":138800,"byte_end":138878,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ is a way of performing name resolution to make instantiating a module easier","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":138879,"byte_end":138959,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ (as opposed to calling [`Instance::new`]). `Linker` is a name-based resolver","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":138960,"byte_end":139040,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ where names are dynamically defined and then used to instantiate a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":139041,"byte_end":139111,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ [`Module`]. The goal of a `Linker` is to have a one-argument method,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":139112,"byte_end":139184,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/ [`Linker::instantiate`], which takes a [`Module`] and produces an","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":139185,"byte_end":139254,"line_start":17,"line_end":17,"column_start":1,"column_end":70}},{"value":"/ [`Instance`].  This method will automatically select all the right imports","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":139255,"byte_end":139333,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ for the [`Module`] to be instantiated, and will otherwise return an error","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":139334,"byte_end":139411,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ if an import isn't satisfied.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":139412,"byte_end":139445,"line_start":20,"line_end":20,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":139446,"byte_end":139449,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ## Name Resolution","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":139450,"byte_end":139472,"line_start":22,"line_end":22,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":139473,"byte_end":139476,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ As mentioned previously, `Linker` is a form of name resolver. It will be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":139477,"byte_end":139553,"line_start":24,"line_end":24,"column_start":1,"column_end":77}},{"value":"/ using the string-based names of imports on a module to attempt to select a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":139554,"byte_end":139632,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ matching item to hook up to it. This name resolution has two-levels of","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":139633,"byte_end":139707,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ namespaces, a module level and a name level. Each item is defined within a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":139708,"byte_end":139786,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ module and then has its own name. This basically follows the wasm standard","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":139787,"byte_end":139865,"line_start":28,"line_end":28,"column_start":1,"column_end":79}},{"value":"/ for modularization.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":139866,"byte_end":139889,"line_start":29,"line_end":29,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":139890,"byte_end":139893,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Names in a `Linker` can be defined twice, but only for different signatures","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":139894,"byte_end":139973,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ of items. This means that every item defined in a `Linker` has a unique","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":139974,"byte_end":140049,"line_start":32,"line_end":32,"column_start":1,"column_end":76}},{"value":"/ name/type pair. For example you can define two functions with the module","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":140050,"byte_end":140126,"line_start":33,"line_end":33,"column_start":1,"column_end":77}},{"value":"/ name `foo` and item name `bar`, so long as they have different function","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":140127,"byte_end":140202,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/ signatures. Currently duplicate memories and tables are not allowed, only","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":140203,"byte_end":140280,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/ one-per-name is allowed.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":140281,"byte_end":140309,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":140310,"byte_end":140313,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Note that allowing duplicates by shadowing the previous definition can be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":140314,"byte_end":140391,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ controlled with the [`Linker::allow_shadowing`] method as well.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":140392,"byte_end":140459,"line_start":39,"line_end":39,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":141387,"byte_end":141390,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"new","qualname":"<Linker>::new","value":"pub fn new(&Store) -> Linker","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Linker`].","sig":null,"attributes":[{"value":"/ Creates a new [`Linker`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":140888,"byte_end":140917,"line_start":64,"line_end":64,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":140922,"byte_end":140925,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ This function will create a new [`Linker`] which is ready to start","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":140930,"byte_end":141000,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ linking modules. All items defined in this linker and produced by this","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":141005,"byte_end":141079,"line_start":67,"line_end":67,"column_start":5,"column_end":79}},{"value":"/ linker will be connected with `store` and must come from the same","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":141084,"byte_end":141153,"line_start":68,"line_end":68,"column_start":5,"column_end":74}},{"value":"/ `store`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":141158,"byte_end":141170,"line_start":69,"line_end":69,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":141175,"byte_end":141178,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":141183,"byte_end":141197,"line_start":71,"line_end":71,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":141202,"byte_end":141205,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":141210,"byte_end":141217,"line_start":73,"line_end":73,"column_start":5,"column_end":12}},{"value":"/ use wasmtime::{Linker, Store};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":141222,"byte_end":141256,"line_start":74,"line_end":74,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":141261,"byte_end":141264,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":141269,"byte_end":141302,"line_start":76,"line_end":76,"column_start":5,"column_end":38}},{"value":"/ let mut linker = Linker::new(&store);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":141307,"byte_end":141348,"line_start":77,"line_end":77,"column_start":5,"column_end":46}},{"value":"/ // ...","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":141353,"byte_end":141363,"line_start":78,"line_end":78,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":141368,"byte_end":141375,"line_start":79,"line_end":79,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":721},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":142543,"byte_end":142558,"line_start":115,"line_end":115,"column_start":12,"column_end":27},"name":"allow_shadowing","qualname":"<Linker>::allow_shadowing","value":"pub fn allow_shadowing(&mut Self, bool) -> &mut Linker","parent":null,"children":[],"decl_id":null,"docs":" Configures whether this [`Linker`] will shadow previous duplicate\n definitions of the same signature.","sig":null,"attributes":[{"value":"/ Configures whether this [`Linker`] will shadow previous duplicate","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":141632,"byte_end":141701,"line_start":90,"line_end":90,"column_start":5,"column_end":74}},{"value":"/ definitions of the same signature.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":141706,"byte_end":141744,"line_start":91,"line_end":91,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":141749,"byte_end":141752,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ By default a [`Linker`] will disallow duplicate definitions of the same","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":141757,"byte_end":141832,"line_start":93,"line_end":93,"column_start":5,"column_end":80}},{"value":"/ signature. This method, however, can be used to instead allow duplicates","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":141837,"byte_end":141913,"line_start":94,"line_end":94,"column_start":5,"column_end":81}},{"value":"/ and have the latest definition take precedence when linking modules.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":141918,"byte_end":141990,"line_start":95,"line_end":95,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":141995,"byte_end":141998,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":142003,"byte_end":142017,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":142022,"byte_end":142025,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":142030,"byte_end":142037,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ # use wasmtime::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":142042,"byte_end":142064,"line_start":100,"line_end":100,"column_start":5,"column_end":27}},{"value":"/ # fn main() -> anyhow::Result<()> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":142069,"byte_end":142108,"line_start":101,"line_end":101,"column_start":5,"column_end":44}},{"value":"/ # let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":142113,"byte_end":142148,"line_start":102,"line_end":102,"column_start":5,"column_end":40}},{"value":"/ let mut linker = Linker::new(&store);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":142153,"byte_end":142194,"line_start":103,"line_end":103,"column_start":5,"column_end":46}},{"value":"/ linker.func(\"\", \"\", || {})?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":142199,"byte_end":142231,"line_start":104,"line_end":104,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":142236,"byte_end":142239,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ // by default, duplicates are disallowed","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":142244,"byte_end":142288,"line_start":106,"line_end":106,"column_start":5,"column_end":49}},{"value":"/ assert!(linker.func(\"\", \"\", || {}).is_err());","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":142293,"byte_end":142342,"line_start":107,"line_end":107,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":142347,"byte_end":142350,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ // but shadowing can be configured to be allowed as well","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":142355,"byte_end":142415,"line_start":109,"line_end":109,"column_start":5,"column_end":65}},{"value":"/ linker.allow_shadowing(true);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":142420,"byte_end":142453,"line_start":110,"line_end":110,"column_start":5,"column_end":38}},{"value":"/ linker.func(\"\", \"\", || {})?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":142458,"byte_end":142490,"line_start":111,"line_end":111,"column_start":5,"column_end":37}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":142495,"byte_end":142507,"line_start":112,"line_end":112,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":142512,"byte_end":142519,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":142524,"byte_end":142531,"line_start":114,"line_end":114,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":143992,"byte_end":143998,"line_start":158,"line_end":158,"column_start":12,"column_end":18},"name":"define","qualname":"<Linker>::define","value":"pub fn define<impl Into<Extern>: Into<Extern>>(&mut Self, &str, &str,\n                                               impl Into<Extern>)\n-> Result<&mut Self>","parent":null,"children":[],"decl_id":null,"docs":" Defines a new item in this [`Linker`].","sig":null,"attributes":[{"value":"/ Defines a new item in this [`Linker`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":142662,"byte_end":142704,"line_start":120,"line_end":120,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":142709,"byte_end":142712,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ This method will add a new definition, by name, to this instance of","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":142717,"byte_end":142788,"line_start":122,"line_end":122,"column_start":5,"column_end":76}},{"value":"/ [`Linker`]. The `module` and `name` provided are what to name the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":142793,"byte_end":142862,"line_start":123,"line_end":123,"column_start":5,"column_end":74}},{"value":"/ `item`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":142867,"byte_end":142878,"line_start":124,"line_end":124,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":142883,"byte_end":142886,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":142891,"byte_end":142903,"line_start":126,"line_end":126,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":142908,"byte_end":142911,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the `module` and `name` already identify an item","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":142916,"byte_end":142988,"line_start":128,"line_end":128,"column_start":5,"column_end":77}},{"value":"/ of the same type as the `item` provided and if shadowing is disallowed.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":142993,"byte_end":143068,"line_start":129,"line_end":129,"column_start":5,"column_end":80}},{"value":"/ For more information see the documentation on [`Linker`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":143073,"byte_end":143134,"line_start":130,"line_end":130,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":143139,"byte_end":143142,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ Also returns an error if `item` comes from a different store than this","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":143147,"byte_end":143221,"line_start":132,"line_end":132,"column_start":5,"column_end":79}},{"value":"/ [`Linker`] was created with.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":143226,"byte_end":143258,"line_start":133,"line_end":133,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":143263,"byte_end":143266,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":143271,"byte_end":143285,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":143290,"byte_end":143293,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":143298,"byte_end":143305,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ # use wasmtime::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":143310,"byte_end":143332,"line_start":138,"line_end":138,"column_start":5,"column_end":27}},{"value":"/ # fn main() -> anyhow::Result<()> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":143337,"byte_end":143376,"line_start":139,"line_end":139,"column_start":5,"column_end":44}},{"value":"/ # let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":143381,"byte_end":143416,"line_start":140,"line_end":140,"column_start":5,"column_end":40}},{"value":"/ let mut linker = Linker::new(&store);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":143421,"byte_end":143462,"line_start":141,"line_end":141,"column_start":5,"column_end":46}},{"value":"/ let ty = GlobalType::new(ValType::I32, Mutability::Const);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":143467,"byte_end":143529,"line_start":142,"line_end":142,"column_start":5,"column_end":67}},{"value":"/ let global = Global::new(&store, ty, Val::I32(0x1234))?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":143534,"byte_end":143594,"line_start":143,"line_end":143,"column_start":5,"column_end":65}},{"value":"/ linker.define(\"host\", \"offset\", global)?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":143599,"byte_end":143644,"line_start":144,"line_end":144,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":143649,"byte_end":143652,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ let wat = r#\"","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":143657,"byte_end":143674,"line_start":146,"line_end":146,"column_start":5,"column_end":22}},{"value":"/     (module","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":143679,"byte_end":143694,"line_start":147,"line_end":147,"column_start":5,"column_end":20}},{"value":"/         (import \"host\" \"offset\" (global i32))","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":143699,"byte_end":143748,"line_start":148,"line_end":148,"column_start":5,"column_end":54}},{"value":"/         (memory 1)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":143753,"byte_end":143775,"line_start":149,"line_end":149,"column_start":5,"column_end":27}},{"value":"/         (data (global.get 0) \"foo\")","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":143780,"byte_end":143819,"line_start":150,"line_end":150,"column_start":5,"column_end":44}},{"value":"/     )","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":143824,"byte_end":143833,"line_start":151,"line_end":151,"column_start":5,"column_end":14}},{"value":"/ \"#;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":143838,"byte_end":143845,"line_start":152,"line_end":152,"column_start":5,"column_end":12}},{"value":"/ let module = Module::new(store.engine(), wat)?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":143850,"byte_end":143901,"line_start":153,"line_end":153,"column_start":5,"column_end":56}},{"value":"/ linker.instantiate(&module)?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":143906,"byte_end":143939,"line_start":154,"line_end":154,"column_start":5,"column_end":38}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":143944,"byte_end":143956,"line_start":155,"line_end":155,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":143961,"byte_end":143968,"line_start":156,"line_end":156,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":143973,"byte_end":143980,"line_start":157,"line_end":157,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":145770,"byte_end":145774,"line_start":211,"line_end":211,"column_start":12,"column_end":16},"name":"func","qualname":"<Linker>::func","value":"pub fn func<Params, Args,\n            impl IntoFunc<Params, Args>: IntoFunc<Params,\n                                                  Args>>(&mut Self, &str,\n                                                         &str,\n                                                         impl IntoFunc<Params, Args>)\n-> Result<&mut Self>","parent":null,"children":[],"decl_id":null,"docs":" Convenience wrapper to define a function import.","sig":null,"attributes":[{"value":"/ Convenience wrapper to define a function import.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":144468,"byte_end":144520,"line_start":175,"line_end":175,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":144525,"byte_end":144528,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ This method is a convenience wrapper around [`Linker::define`] which","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":144533,"byte_end":144605,"line_start":177,"line_end":177,"column_start":5,"column_end":77}},{"value":"/ internally delegates to [`Func::wrap`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":144610,"byte_end":144653,"line_start":178,"line_end":178,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":144658,"byte_end":144661,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":144666,"byte_end":144678,"line_start":180,"line_end":180,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":144683,"byte_end":144686,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the `module` and `name` already identify an item","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":144691,"byte_end":144763,"line_start":182,"line_end":182,"column_start":5,"column_end":77}},{"value":"/ of the same type as the `item` provided and if shadowing is disallowed.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":144768,"byte_end":144843,"line_start":183,"line_end":183,"column_start":5,"column_end":80}},{"value":"/ For more information see the documentation on [`Linker`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":144848,"byte_end":144909,"line_start":184,"line_end":184,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":144914,"byte_end":144917,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":144922,"byte_end":144936,"line_start":186,"line_end":186,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":144941,"byte_end":144944,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":144949,"byte_end":144956,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/ # use wasmtime::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":144961,"byte_end":144983,"line_start":189,"line_end":189,"column_start":5,"column_end":27}},{"value":"/ # fn main() -> anyhow::Result<()> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":144988,"byte_end":145027,"line_start":190,"line_end":190,"column_start":5,"column_end":44}},{"value":"/ # let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":145032,"byte_end":145067,"line_start":191,"line_end":191,"column_start":5,"column_end":40}},{"value":"/ let mut linker = Linker::new(&store);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":145072,"byte_end":145113,"line_start":192,"line_end":192,"column_start":5,"column_end":46}},{"value":"/ linker.func(\"host\", \"double\", |x: i32| x * 2)?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":145118,"byte_end":145169,"line_start":193,"line_end":193,"column_start":5,"column_end":56}},{"value":"/ linker.func(\"host\", \"log_i32\", |x: i32| println!(\"{}\", x))?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":145174,"byte_end":145238,"line_start":194,"line_end":194,"column_start":5,"column_end":69}},{"value":"/ linker.func(\"host\", \"log_str\", |caller: Caller, ptr: i32, len: i32| {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":145243,"byte_end":145316,"line_start":195,"line_end":195,"column_start":5,"column_end":78}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":145321,"byte_end":145335,"line_start":196,"line_end":196,"column_start":5,"column_end":19}},{"value":"/ })?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":145340,"byte_end":145348,"line_start":197,"line_end":197,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":145353,"byte_end":145356,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ let wat = r#\"","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":145361,"byte_end":145378,"line_start":199,"line_end":199,"column_start":5,"column_end":22}},{"value":"/     (module","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":145383,"byte_end":145398,"line_start":200,"line_end":200,"column_start":5,"column_end":20}},{"value":"/         (import \"host\" \"double\" (func (param i32) (result i32)))","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":145403,"byte_end":145471,"line_start":201,"line_end":201,"column_start":5,"column_end":73}},{"value":"/         (import \"host\" \"log_i32\" (func (param i32)))","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":145476,"byte_end":145532,"line_start":202,"line_end":202,"column_start":5,"column_end":61}},{"value":"/         (import \"host\" \"log_str\" (func (param i32 i32)))","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":145537,"byte_end":145597,"line_start":203,"line_end":203,"column_start":5,"column_end":65}},{"value":"/     )","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":145602,"byte_end":145611,"line_start":204,"line_end":204,"column_start":5,"column_end":14}},{"value":"/ \"#;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":145616,"byte_end":145623,"line_start":205,"line_end":205,"column_start":5,"column_end":12}},{"value":"/ let module = Module::new(store.engine(), wat)?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":145628,"byte_end":145679,"line_start":206,"line_end":206,"column_start":5,"column_end":56}},{"value":"/ linker.instantiate(&module)?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":145684,"byte_end":145717,"line_start":207,"line_end":207,"column_start":5,"column_end":38}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":145722,"byte_end":145734,"line_start":208,"line_end":208,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":145739,"byte_end":145746,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":145751,"byte_end":145758,"line_start":210,"line_end":210,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":729},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":147728,"byte_end":147736,"line_start":265,"line_end":265,"column_start":12,"column_end":20},"name":"instance","qualname":"<Linker>::instance","value":"pub fn instance(&mut Self, &str, &Instance) -> Result<&mut Self>","parent":null,"children":[],"decl_id":null,"docs":" Convenience wrapper to define an entire [`Instance`] in this linker.","sig":null,"attributes":[{"value":"/ Convenience wrapper to define an entire [`Instance`] in this linker.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":146007,"byte_end":146079,"line_start":220,"line_end":220,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":146084,"byte_end":146087,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ This function is a convenience wrapper around [`Linker::define`] which","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":146092,"byte_end":146166,"line_start":222,"line_end":222,"column_start":5,"column_end":79}},{"value":"/ will define all exports on `instance` into this linker. The module name","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":146171,"byte_end":146246,"line_start":223,"line_end":223,"column_start":5,"column_end":80}},{"value":"/ for each export is `module_name`, and the name for each export is the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":146251,"byte_end":146324,"line_start":224,"line_end":224,"column_start":5,"column_end":78}},{"value":"/ name in the instance itself.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":146329,"byte_end":146361,"line_start":225,"line_end":225,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":146366,"byte_end":146369,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":146374,"byte_end":146386,"line_start":227,"line_end":227,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":146391,"byte_end":146394,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the any item is redefined twice in this linker (for","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":146399,"byte_end":146474,"line_start":229,"line_end":229,"column_start":5,"column_end":80}},{"value":"/ example the same `module_name` was already defined) and shadowing is","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":146479,"byte_end":146551,"line_start":230,"line_end":230,"column_start":5,"column_end":77}},{"value":"/ disallowed, or if `instance` comes from a different [`Store`] than this","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":146556,"byte_end":146631,"line_start":231,"line_end":231,"column_start":5,"column_end":80}},{"value":"/ [`Linker`] originally was created with.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":146636,"byte_end":146679,"line_start":232,"line_end":232,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":146684,"byte_end":146687,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":146692,"byte_end":146706,"line_start":234,"line_end":234,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":146711,"byte_end":146714,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":146719,"byte_end":146726,"line_start":236,"line_end":236,"column_start":5,"column_end":12}},{"value":"/ # use wasmtime::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":146731,"byte_end":146753,"line_start":237,"line_end":237,"column_start":5,"column_end":27}},{"value":"/ # fn main() -> anyhow::Result<()> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":146758,"byte_end":146797,"line_start":238,"line_end":238,"column_start":5,"column_end":44}},{"value":"/ # let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":146802,"byte_end":146837,"line_start":239,"line_end":239,"column_start":5,"column_end":40}},{"value":"/ let mut linker = Linker::new(&store);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":146842,"byte_end":146883,"line_start":240,"line_end":240,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":146888,"byte_end":146891,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ // Instantiate a small instance...","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":146896,"byte_end":146934,"line_start":242,"line_end":242,"column_start":5,"column_end":43}},{"value":"/ let wat = r#\"(module (func (export \"run\") ))\"#;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":146939,"byte_end":146990,"line_start":243,"line_end":243,"column_start":5,"column_end":56}},{"value":"/ let module = Module::new(store.engine(), wat)?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":146995,"byte_end":147046,"line_start":244,"line_end":244,"column_start":5,"column_end":56}},{"value":"/ let instance = linker.instantiate(&module)?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":147051,"byte_end":147099,"line_start":245,"line_end":245,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":147104,"byte_end":147107,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ // ... and inform the linker that the name of this instance is","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":147112,"byte_end":147178,"line_start":247,"line_end":247,"column_start":5,"column_end":71}},{"value":"/ // `instance1`. This defines the `instance1::run` name for our next","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":147183,"byte_end":147254,"line_start":248,"line_end":248,"column_start":5,"column_end":76}},{"value":"/ // module to use.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":147259,"byte_end":147280,"line_start":249,"line_end":249,"column_start":5,"column_end":26}},{"value":"/ linker.instance(\"instance1\", &instance)?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":147285,"byte_end":147330,"line_start":250,"line_end":250,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":147335,"byte_end":147338,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ let wat = r#\"","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":147343,"byte_end":147360,"line_start":252,"line_end":252,"column_start":5,"column_end":22}},{"value":"/     (module","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":147365,"byte_end":147380,"line_start":253,"line_end":253,"column_start":5,"column_end":20}},{"value":"/         (import \"instance1\" \"run\" (func $instance1_run))","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":147385,"byte_end":147445,"line_start":254,"line_end":254,"column_start":5,"column_end":65}},{"value":"/         (func (export \"run\")","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":147450,"byte_end":147482,"line_start":255,"line_end":255,"column_start":5,"column_end":37}},{"value":"/             call $instance1_run","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":147487,"byte_end":147522,"line_start":256,"line_end":256,"column_start":5,"column_end":40}},{"value":"/         )","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":147527,"byte_end":147540,"line_start":257,"line_end":257,"column_start":5,"column_end":18}},{"value":"/     )","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":147545,"byte_end":147554,"line_start":258,"line_end":258,"column_start":5,"column_end":14}},{"value":"/ \"#;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":147559,"byte_end":147566,"line_start":259,"line_end":259,"column_start":5,"column_end":12}},{"value":"/ let module = Module::new(store.engine(), wat)?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":147571,"byte_end":147622,"line_start":260,"line_end":260,"column_start":5,"column_end":56}},{"value":"/ let instance = linker.instantiate(&module)?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":147627,"byte_end":147675,"line_start":261,"line_end":261,"column_start":5,"column_end":53}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":147680,"byte_end":147692,"line_start":262,"line_end":262,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":147697,"byte_end":147704,"line_start":263,"line_end":263,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":147709,"byte_end":147716,"line_start":264,"line_end":264,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":152306,"byte_end":152312,"line_start":380,"line_end":380,"column_start":12,"column_end":18},"name":"module","qualname":"<Linker>::module","value":"pub fn module(&mut Self, &str, &Module) -> Result<&mut Self>","parent":null,"children":[],"decl_id":null,"docs":" Define automatic instantiations of a [`Module`] in this linker.","sig":null,"attributes":[{"value":"/ Define automatic instantiations of a [`Module`] in this linker.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":148102,"byte_end":148169,"line_start":275,"line_end":275,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":148174,"byte_end":148177,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ This automatically handles [Commands and Reactors] instantiation and","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":148182,"byte_end":148254,"line_start":277,"line_end":277,"column_start":5,"column_end":77}},{"value":"/ initialization.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":148259,"byte_end":148278,"line_start":278,"line_end":278,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":148283,"byte_end":148286,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ Exported functions of a Command module may be called directly, however","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":148291,"byte_end":148365,"line_start":280,"line_end":280,"column_start":5,"column_end":79}},{"value":"/ instead of having a single instance which is reused for each call,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":148370,"byte_end":148440,"line_start":281,"line_end":281,"column_start":5,"column_end":75}},{"value":"/ each call creates a new instance, which lives for the duration of the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":148445,"byte_end":148518,"line_start":282,"line_end":282,"column_start":5,"column_end":78}},{"value":"/ call. The imports of the Command are resolved once, and reused for","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":148523,"byte_end":148593,"line_start":283,"line_end":283,"column_start":5,"column_end":75}},{"value":"/ each instantiation, so all dependencies need to be present at the time","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":148598,"byte_end":148672,"line_start":284,"line_end":284,"column_start":5,"column_end":79}},{"value":"/ when `Linker::module` is called.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":148677,"byte_end":148713,"line_start":285,"line_end":285,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":148718,"byte_end":148721,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ For Reactors, a single instance is created, and an initialization","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":148726,"byte_end":148795,"line_start":287,"line_end":287,"column_start":5,"column_end":74}},{"value":"/ function is called, and then its exports may be called.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":148800,"byte_end":148859,"line_start":288,"line_end":288,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":148864,"byte_end":148867,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ Ordinary modules which don't declare themselves to be either Commands","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":148872,"byte_end":148945,"line_start":290,"line_end":290,"column_start":5,"column_end":78}},{"value":"/ or Reactors are treated as Reactors without any initialization calls.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":148950,"byte_end":149023,"line_start":291,"line_end":291,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":149028,"byte_end":149031,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ [Commands and Reactors]: https://github.com/WebAssembly/WASI/blob/master/design/application-abi.md#current-unstable-abi","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":149036,"byte_end":149159,"line_start":293,"line_end":293,"column_start":5,"column_end":128}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":149164,"byte_end":149167,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":149172,"byte_end":149184,"line_start":295,"line_end":295,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":149189,"byte_end":149192,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the any item is redefined twice in this linker (for","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":149197,"byte_end":149272,"line_start":297,"line_end":297,"column_start":5,"column_end":80}},{"value":"/ example the same `module_name` was already defined) and shadowing is","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":149277,"byte_end":149349,"line_start":298,"line_end":298,"column_start":5,"column_end":77}},{"value":"/ disallowed, if `instance` comes from a different [`Store`] than this","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":149354,"byte_end":149426,"line_start":299,"line_end":299,"column_start":5,"column_end":77}},{"value":"/ [`Linker`] originally was created with, or if a Reactor initialization","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":149431,"byte_end":149505,"line_start":300,"line_end":300,"column_start":5,"column_end":79}},{"value":"/ function traps.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":149510,"byte_end":149529,"line_start":301,"line_end":301,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":149534,"byte_end":149537,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":149542,"byte_end":149556,"line_start":303,"line_end":303,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":149561,"byte_end":149564,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":149569,"byte_end":149576,"line_start":305,"line_end":305,"column_start":5,"column_end":12}},{"value":"/ # use wasmtime::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":149581,"byte_end":149603,"line_start":306,"line_end":306,"column_start":5,"column_end":27}},{"value":"/ # fn main() -> anyhow::Result<()> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":149608,"byte_end":149647,"line_start":307,"line_end":307,"column_start":5,"column_end":44}},{"value":"/ # let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":149652,"byte_end":149687,"line_start":308,"line_end":308,"column_start":5,"column_end":40}},{"value":"/ let mut linker = Linker::new(&store);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":149692,"byte_end":149733,"line_start":309,"line_end":309,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":149738,"byte_end":149741,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ // Instantiate a small instance and inform the linker that the name of","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":149746,"byte_end":149820,"line_start":311,"line_end":311,"column_start":5,"column_end":79}},{"value":"/ // this instance is `instance1`. This defines the `instance1::run` name","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":149825,"byte_end":149900,"line_start":312,"line_end":312,"column_start":5,"column_end":80}},{"value":"/ // for our next module to use.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":149905,"byte_end":149939,"line_start":313,"line_end":313,"column_start":5,"column_end":39}},{"value":"/ let wat = r#\"(module (func (export \"run\") ))\"#;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":149944,"byte_end":149995,"line_start":314,"line_end":314,"column_start":5,"column_end":56}},{"value":"/ let module = Module::new(store.engine(), wat)?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":150000,"byte_end":150051,"line_start":315,"line_end":315,"column_start":5,"column_end":56}},{"value":"/ linker.module(\"instance1\", &module)?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":150056,"byte_end":150097,"line_start":316,"line_end":316,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":150102,"byte_end":150105,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ let wat = r#\"","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":150110,"byte_end":150127,"line_start":318,"line_end":318,"column_start":5,"column_end":22}},{"value":"/     (module","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":150132,"byte_end":150147,"line_start":319,"line_end":319,"column_start":5,"column_end":20}},{"value":"/         (import \"instance1\" \"run\" (func $instance1_run))","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":150152,"byte_end":150212,"line_start":320,"line_end":320,"column_start":5,"column_end":65}},{"value":"/         (func (export \"run\")","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":150217,"byte_end":150249,"line_start":321,"line_end":321,"column_start":5,"column_end":37}},{"value":"/             call $instance1_run","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":150254,"byte_end":150289,"line_start":322,"line_end":322,"column_start":5,"column_end":40}},{"value":"/         )","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":150294,"byte_end":150307,"line_start":323,"line_end":323,"column_start":5,"column_end":18}},{"value":"/     )","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":150312,"byte_end":150321,"line_start":324,"line_end":324,"column_start":5,"column_end":14}},{"value":"/ \"#;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":150326,"byte_end":150333,"line_start":325,"line_end":325,"column_start":5,"column_end":12}},{"value":"/ let module = Module::new(store.engine(), wat)?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":150338,"byte_end":150389,"line_start":326,"line_end":326,"column_start":5,"column_end":56}},{"value":"/ let instance = linker.instantiate(&module)?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":150394,"byte_end":150442,"line_start":327,"line_end":327,"column_start":5,"column_end":53}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":150447,"byte_end":150459,"line_start":328,"line_end":328,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":150464,"byte_end":150471,"line_start":329,"line_end":329,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":150476,"byte_end":150483,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":150488,"byte_end":150491,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ For a Command, a new instance is created for each call.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":150496,"byte_end":150555,"line_start":332,"line_end":332,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":150560,"byte_end":150563,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":150568,"byte_end":150575,"line_start":334,"line_end":334,"column_start":5,"column_end":12}},{"value":"/ # use wasmtime::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":150580,"byte_end":150602,"line_start":335,"line_end":335,"column_start":5,"column_end":27}},{"value":"/ # fn main() -> anyhow::Result<()> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":150607,"byte_end":150646,"line_start":336,"line_end":336,"column_start":5,"column_end":44}},{"value":"/ # let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":150651,"byte_end":150686,"line_start":337,"line_end":337,"column_start":5,"column_end":40}},{"value":"/ let mut linker = Linker::new(&store);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":150691,"byte_end":150732,"line_start":338,"line_end":338,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":150737,"byte_end":150740,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ // Create a Command that attempts to count the number of times it is run, but is","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":150745,"byte_end":150829,"line_start":340,"line_end":340,"column_start":5,"column_end":89}},{"value":"/ // foiled by each call getting a new instance.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":150834,"byte_end":150884,"line_start":341,"line_end":341,"column_start":5,"column_end":55}},{"value":"/ let wat = r#\"","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":150889,"byte_end":150906,"line_start":342,"line_end":342,"column_start":5,"column_end":22}},{"value":"/     (module","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":150911,"byte_end":150926,"line_start":343,"line_end":343,"column_start":5,"column_end":20}},{"value":"/         (global $counter (mut i32) (i32.const 0))","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":150931,"byte_end":150984,"line_start":344,"line_end":344,"column_start":5,"column_end":58}},{"value":"/         (func (export \"_start\")","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":150989,"byte_end":151024,"line_start":345,"line_end":345,"column_start":5,"column_end":40}},{"value":"/             (global.set $counter (i32.add (global.get $counter) (i32.const 1)))","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":151029,"byte_end":151112,"line_start":346,"line_end":346,"column_start":5,"column_end":88}},{"value":"/         )","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":151117,"byte_end":151130,"line_start":347,"line_end":347,"column_start":5,"column_end":18}},{"value":"/         (func (export \"read_counter\") (result i32)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":151135,"byte_end":151189,"line_start":348,"line_end":348,"column_start":5,"column_end":59}},{"value":"/             (global.get $counter)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":151194,"byte_end":151231,"line_start":349,"line_end":349,"column_start":5,"column_end":42}},{"value":"/         )","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":151236,"byte_end":151249,"line_start":350,"line_end":350,"column_start":5,"column_end":18}},{"value":"/     )","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":151254,"byte_end":151263,"line_start":351,"line_end":351,"column_start":5,"column_end":14}},{"value":"/ \"#;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":151268,"byte_end":151275,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"/ let module = Module::new(store.engine(), wat)?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":151280,"byte_end":151331,"line_start":353,"line_end":353,"column_start":5,"column_end":56}},{"value":"/ linker.module(\"commander\", &module)?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":151336,"byte_end":151377,"line_start":354,"line_end":354,"column_start":5,"column_end":46}},{"value":"/ let run = linker.get_default(\"\")?.get0::<()>()?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":151382,"byte_end":151434,"line_start":355,"line_end":355,"column_start":5,"column_end":57}},{"value":"/ run()?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":151439,"byte_end":151450,"line_start":356,"line_end":356,"column_start":5,"column_end":16}},{"value":"/ run()?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":151455,"byte_end":151466,"line_start":357,"line_end":357,"column_start":5,"column_end":16}},{"value":"/ run()?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":151471,"byte_end":151482,"line_start":358,"line_end":358,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":151487,"byte_end":151490,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ let wat = r#\"","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":151495,"byte_end":151512,"line_start":360,"line_end":360,"column_start":5,"column_end":22}},{"value":"/     (module","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":151517,"byte_end":151532,"line_start":361,"line_end":361,"column_start":5,"column_end":20}},{"value":"/         (import \"commander\" \"_start\" (func $commander_start))","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":151537,"byte_end":151602,"line_start":362,"line_end":362,"column_start":5,"column_end":70}},{"value":"/         (import \"commander\" \"read_counter\" (func $commander_read_counter (result i32)))","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":151607,"byte_end":151698,"line_start":363,"line_end":363,"column_start":5,"column_end":96}},{"value":"/         (func (export \"run\") (result i32)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":151703,"byte_end":151748,"line_start":364,"line_end":364,"column_start":5,"column_end":50}},{"value":"/             call $commander_start","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":151753,"byte_end":151790,"line_start":365,"line_end":365,"column_start":5,"column_end":42}},{"value":"/             call $commander_start","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":151795,"byte_end":151832,"line_start":366,"line_end":366,"column_start":5,"column_end":42}},{"value":"/             call $commander_start","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":151837,"byte_end":151874,"line_start":367,"line_end":367,"column_start":5,"column_end":42}},{"value":"/             call $commander_read_counter","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":151879,"byte_end":151923,"line_start":368,"line_end":368,"column_start":5,"column_end":49}},{"value":"/         )","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":151928,"byte_end":151941,"line_start":369,"line_end":369,"column_start":5,"column_end":18}},{"value":"/     )","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":151946,"byte_end":151955,"line_start":370,"line_end":370,"column_start":5,"column_end":14}},{"value":"/ \"#;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":151960,"byte_end":151967,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"/ let module = Module::new(store.engine(), wat)?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":151972,"byte_end":152023,"line_start":372,"line_end":372,"column_start":5,"column_end":56}},{"value":"/ linker.module(\"\", &module)?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":152028,"byte_end":152060,"line_start":373,"line_end":373,"column_start":5,"column_end":37}},{"value":"/ let count = linker.get_one_by_name(\"\", \"run\")?.into_func().unwrap().get0::<i32>()?()?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":152065,"byte_end":152155,"line_start":374,"line_end":374,"column_start":5,"column_end":95}},{"value":"/ assert_eq!(count, 0, \"a Command should get a fresh instance on each invocation\");","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":152160,"byte_end":152245,"line_start":375,"line_end":375,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":152250,"byte_end":152253,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":152258,"byte_end":152270,"line_start":377,"line_end":377,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":152275,"byte_end":152282,"line_start":378,"line_end":378,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":152287,"byte_end":152294,"line_start":379,"line_end":379,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":157110,"byte_end":157115,"line_start":474,"line_end":474,"column_start":12,"column_end":17},"name":"alias","qualname":"<Linker>::alias","value":"pub fn alias(&mut Self, &str, &str) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Aliases one module's name as another.","sig":null,"attributes":[{"value":"/ Aliases one module's name as another.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":156795,"byte_end":156836,"line_start":465,"line_end":465,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":156841,"byte_end":156844,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ This method will alias all currently defined under `module` to also be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":156849,"byte_end":156923,"line_start":467,"line_end":467,"column_start":5,"column_end":79}},{"value":"/ defined under the name `as_module` too.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":156928,"byte_end":156971,"line_start":468,"line_end":468,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":156976,"byte_end":156979,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":156984,"byte_end":156996,"line_start":470,"line_end":470,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":157001,"byte_end":157004,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ Returns an error if any shadowing violations happen while defining new","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":157009,"byte_end":157083,"line_start":472,"line_end":472,"column_start":5,"column_end":79}},{"value":"/ items.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":157088,"byte_end":157098,"line_start":473,"line_end":473,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":742},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":160578,"byte_end":160589,"line_start":574,"line_end":574,"column_start":12,"column_end":23},"name":"instantiate","qualname":"<Linker>::instantiate","value":"pub fn instantiate(&Self, &Module) -> Result<Instance>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to instantiate the `module` provided.","sig":null,"attributes":[{"value":"/ Attempts to instantiate the `module` provided.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":158988,"byte_end":159038,"line_start":533,"line_end":533,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":159043,"byte_end":159046,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ This method will attempt to assemble a list of imports that correspond","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":159051,"byte_end":159125,"line_start":535,"line_end":535,"column_start":5,"column_end":79}},{"value":"/ to the imports required by the [`Module`] provided. This list","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":159130,"byte_end":159195,"line_start":536,"line_end":536,"column_start":5,"column_end":70}},{"value":"/ of imports is then passed to [`Instance::new`] to continue the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":159200,"byte_end":159266,"line_start":537,"line_end":537,"column_start":5,"column_end":71}},{"value":"/ instantiation process.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":159271,"byte_end":159297,"line_start":538,"line_end":538,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":159302,"byte_end":159305,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ Each import of `module` will be looked up in this [`Linker`] and must","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":159310,"byte_end":159383,"line_start":540,"line_end":540,"column_start":5,"column_end":78}},{"value":"/ have previously been defined. If it was previously defined with an","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":159388,"byte_end":159458,"line_start":541,"line_end":541,"column_start":5,"column_end":75}},{"value":"/ incorrect signature or if it was not previously defined then an error","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":159463,"byte_end":159536,"line_start":542,"line_end":542,"column_start":5,"column_end":78}},{"value":"/ will be returned because the import can not be satisfied.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":159541,"byte_end":159602,"line_start":543,"line_end":543,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":159607,"byte_end":159610,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ Per the WebAssembly spec, instantiation includes running the module's","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":159615,"byte_end":159688,"line_start":545,"line_end":545,"column_start":5,"column_end":78}},{"value":"/ start function, if it has one (not to be confused with the `_start`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":159693,"byte_end":159764,"line_start":546,"line_end":546,"column_start":5,"column_end":76}},{"value":"/ function, which is not run).","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":159769,"byte_end":159801,"line_start":547,"line_end":547,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":159806,"byte_end":159809,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":159814,"byte_end":159826,"line_start":549,"line_end":549,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":159831,"byte_end":159834,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ This method can fail because an import may not be found, or because","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":159839,"byte_end":159910,"line_start":551,"line_end":551,"column_start":5,"column_end":76}},{"value":"/ instantiation itself may fail. For information on instantiation","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":159915,"byte_end":159982,"line_start":552,"line_end":552,"column_start":5,"column_end":72}},{"value":"/ failures see [`Instance::new`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":159987,"byte_end":160022,"line_start":553,"line_end":553,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":160027,"byte_end":160030,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":160035,"byte_end":160049,"line_start":555,"line_end":555,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":160054,"byte_end":160057,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":160062,"byte_end":160069,"line_start":557,"line_end":557,"column_start":5,"column_end":12}},{"value":"/ # use wasmtime::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":160074,"byte_end":160096,"line_start":558,"line_end":558,"column_start":5,"column_end":27}},{"value":"/ # fn main() -> anyhow::Result<()> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":160101,"byte_end":160140,"line_start":559,"line_end":559,"column_start":5,"column_end":44}},{"value":"/ # let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":160145,"byte_end":160180,"line_start":560,"line_end":560,"column_start":5,"column_end":40}},{"value":"/ let mut linker = Linker::new(&store);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":160185,"byte_end":160226,"line_start":561,"line_end":561,"column_start":5,"column_end":46}},{"value":"/ linker.func(\"host\", \"double\", |x: i32| x * 2)?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":160231,"byte_end":160282,"line_start":562,"line_end":562,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":160287,"byte_end":160290,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ let wat = r#\"","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":160295,"byte_end":160312,"line_start":564,"line_end":564,"column_start":5,"column_end":22}},{"value":"/     (module","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":160317,"byte_end":160332,"line_start":565,"line_end":565,"column_start":5,"column_end":20}},{"value":"/         (import \"host\" \"double\" (func (param i32) (result i32)))","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":160337,"byte_end":160405,"line_start":566,"line_end":566,"column_start":5,"column_end":73}},{"value":"/     )","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":160410,"byte_end":160419,"line_start":567,"line_end":567,"column_start":5,"column_end":14}},{"value":"/ \"#;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":160424,"byte_end":160431,"line_start":568,"line_end":568,"column_start":5,"column_end":12}},{"value":"/ let module = Module::new(store.engine(), wat)?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":160436,"byte_end":160487,"line_start":569,"line_end":569,"column_start":5,"column_end":56}},{"value":"/ linker.instantiate(&module)?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":160492,"byte_end":160525,"line_start":570,"line_end":570,"column_start":5,"column_end":38}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":160530,"byte_end":160542,"line_start":571,"line_end":571,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":160547,"byte_end":160554,"line_start":572,"line_end":572,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":160559,"byte_end":160566,"line_start":573,"line_end":573,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":747},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":161962,"byte_end":161967,"line_start":619,"line_end":619,"column_start":12,"column_end":17},"name":"store","qualname":"<Linker>::store","value":"pub fn store(&Self) -> &Store","parent":null,"children":[],"decl_id":null,"docs":" Returns the [`Store`] that this linker is connected to.\n","sig":null,"attributes":[{"value":"/ Returns the [`Store`] that this linker is connected to.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":161891,"byte_end":161950,"line_start":618,"line_end":618,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":748},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":162433,"byte_end":162437,"line_start":631,"line_end":631,"column_start":12,"column_end":16},"name":"iter","qualname":"<Linker>::iter","value":"pub fn iter(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over all items defined in this `Linker`, in arbitrary order.","sig":null,"attributes":[{"value":"/ Returns an iterator over all items defined in this `Linker`, in arbitrary order.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":162018,"byte_end":162102,"line_start":623,"line_end":623,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":162107,"byte_end":162110,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ The iterator returned will yield 3-tuples where the first two elements","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":162115,"byte_end":162189,"line_start":625,"line_end":625,"column_start":5,"column_end":79}},{"value":"/ are the module name and item name for the external item, and the third","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":162194,"byte_end":162268,"line_start":626,"line_end":626,"column_start":5,"column_end":79}},{"value":"/ item is the item itself that is defined.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":162273,"byte_end":162317,"line_start":627,"line_end":627,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":162322,"byte_end":162325,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ Note that multiple `Extern` items may be defined for the same","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":162330,"byte_end":162395,"line_start":629,"line_end":629,"column_start":5,"column_end":70}},{"value":"/ module/name pair.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":162400,"byte_end":162421,"line_start":630,"line_end":630,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":162861,"byte_end":162864,"line_start":645,"line_end":645,"column_start":12,"column_end":15},"name":"get","qualname":"<Linker>::get","value":"pub fn get(&Self, &ImportType) -> Option<Extern>","parent":null,"children":[],"decl_id":null,"docs":" Looks up a value in this `Linker` which matches the `import` type\n provided.","sig":null,"attributes":[{"value":"/ Looks up a value in this `Linker` which matches the `import` type","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":162708,"byte_end":162777,"line_start":641,"line_end":641,"column_start":5,"column_end":74}},{"value":"/ provided.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":162782,"byte_end":162795,"line_start":642,"line_end":642,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":162800,"byte_end":162803,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if no match was found.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":162808,"byte_end":162849,"line_start":644,"line_end":644,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":752},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":163382,"byte_end":163393,"line_start":658,"line_end":658,"column_start":12,"column_end":23},"name":"get_by_name","qualname":"<Linker>::get_by_name","value":"pub fn get_by_name<'a:'p, 'p>(&'a Self, &'p str, &'p str) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns all items defined for the `module` and `name` pair.","sig":null,"attributes":[{"value":"/ Returns all items defined for the `module` and `name` pair.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":163166,"byte_end":163229,"line_start":654,"line_end":654,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":163234,"byte_end":163237,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ This may return an empty iterator, but it may also return multiple items","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":163242,"byte_end":163318,"line_start":656,"line_end":656,"column_start":5,"column_end":81}},{"value":"/ if the module/name have been defined twice.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":163323,"byte_end":163370,"line_start":657,"line_end":657,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":758},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":164156,"byte_end":164171,"line_start":677,"line_end":677,"column_start":12,"column_end":27},"name":"get_one_by_name","qualname":"<Linker>::get_one_by_name","value":"pub fn get_one_by_name(&Self, &str, &str) -> Result<Extern>","parent":null,"children":[],"decl_id":null,"docs":" Returns the single item defined for the `module` and `name` pair.","sig":null,"attributes":[{"value":"/ Returns the single item defined for the `module` and `name` pair.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":163751,"byte_end":163820,"line_start":671,"line_end":671,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":163825,"byte_end":163828,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ Unlike the similar [`Linker::get_by_name`] method this function returns","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":163833,"byte_end":163908,"line_start":673,"line_end":673,"column_start":5,"column_end":80}},{"value":"/ a single `Extern` item. If the `module` and `name` pair isn't defined","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":163913,"byte_end":163986,"line_start":674,"line_end":674,"column_start":5,"column_end":78}},{"value":"/ in this linker then an error is returned. If more than one value exists","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":163991,"byte_end":164066,"line_start":675,"line_end":675,"column_start":5,"column_end":80}},{"value":"/ for the `module` and `name` pairs, then an error is returned as well.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":164071,"byte_end":164144,"line_start":676,"line_end":676,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":760},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":164757,"byte_end":164768,"line_start":692,"line_end":692,"column_start":12,"column_end":23},"name":"get_default","qualname":"<Linker>::get_default","value":"pub fn get_default(&Self, &str) -> Result<Func>","parent":null,"children":[],"decl_id":null,"docs":" Returns the \"default export\" of a module.","sig":null,"attributes":[{"value":"/ Returns the \"default export\" of a module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":164558,"byte_end":164603,"line_start":688,"line_end":688,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":164608,"byte_end":164611,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ An export with an empty string is considered to be a \"default export\".","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":164616,"byte_end":164690,"line_start":690,"line_end":690,"column_start":5,"column_end":79}},{"value":"/ \"_start\" is also recognized for compatibility.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":164695,"byte_end":164745,"line_start":691,"line_end":691,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":2983},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":170428,"byte_end":170434,"line_start":80,"line_end":80,"column_start":12,"column_end":18},"name":"Module","qualname":"::module::Module","value":"Module {  }","parent":null,"children":[{"krate":0,"index":2984},{"krate":0,"index":2985},{"krate":0,"index":2986}],"decl_id":null,"docs":" A compiled WebAssembly module, ready to be instantiated.","sig":null,"attributes":[{"value":"/ A compiled WebAssembly module, ready to be instantiated.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":167954,"byte_end":168014,"line_start":11,"line_end":11,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":168015,"byte_end":168018,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ A `Module` is a compiled in-memory representation of an input WebAssembly","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":168019,"byte_end":168096,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ binary. A `Module` is then used to create an [`Instance`](crate::Instance)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":168097,"byte_end":168175,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ through an instantiation process. You cannot call functions or fetch","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":168176,"byte_end":168248,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ globals, for example, on a `Module` because it's purely a code","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":168249,"byte_end":168315,"line_start":16,"line_end":16,"column_start":1,"column_end":67}},{"value":"/ representation. Instead you'll need to create an","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":168316,"byte_end":168368,"line_start":17,"line_end":17,"column_start":1,"column_end":53}},{"value":"/ [`Instance`](crate::Instance) to interact with the wasm module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":168369,"byte_end":168436,"line_start":18,"line_end":18,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":168437,"byte_end":168440,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Creating a `Module` currently involves compiling code, meaning that it can","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":168441,"byte_end":168519,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ be an expensive operation. All `Module` instances are compiled according to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":168520,"byte_end":168599,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ the configuration in [`Config`], but typically they're JIT-compiled. If","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":168600,"byte_end":168675,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"/ you'd like to instantiate a module multiple times you can do so with","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":168676,"byte_end":168748,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"/ compiling the original wasm module only once with a single [`Module`]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":168749,"byte_end":168822,"line_start":24,"line_end":24,"column_start":1,"column_end":74}},{"value":"/ instance.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":168823,"byte_end":168836,"line_start":25,"line_end":25,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":168837,"byte_end":168840,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ The `Module` is threadsafe and safe to share accross threads.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":168841,"byte_end":168906,"line_start":27,"line_end":27,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":168907,"byte_end":168910,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## Modules and `Clone`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":168911,"byte_end":168937,"line_start":29,"line_end":29,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":168938,"byte_end":168941,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Using `clone` on a `Module` is a cheap operation. It will not create an","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":168942,"byte_end":169017,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ entirely new module, but rather just a new reference to the existing module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":169018,"byte_end":169098,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/ In other words it's a shallow copy, not a deep copy.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":169099,"byte_end":169155,"line_start":33,"line_end":33,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":169156,"byte_end":169159,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":169160,"byte_end":169175,"line_start":35,"line_end":35,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":169176,"byte_end":169179,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ There are a number of ways you can create a `Module`, for example pulling","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":169180,"byte_end":169257,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"/ the bytes from a number of locations. One example is loading a module from","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":169258,"byte_end":169336,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/ the filesystem:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":169337,"byte_end":169356,"line_start":39,"line_end":39,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":169357,"byte_end":169360,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":169361,"byte_end":169374,"line_start":41,"line_end":41,"column_start":1,"column_end":14}},{"value":"/ # use wasmtime::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":169375,"byte_end":169397,"line_start":42,"line_end":42,"column_start":1,"column_end":23}},{"value":"/ # fn main() -> anyhow::Result<()> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":169398,"byte_end":169437,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/ let engine = Engine::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":169438,"byte_end":169473,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/ let module = Module::from_file(&engine, \"path/to/foo.wasm\")?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":169474,"byte_end":169539,"line_start":45,"line_end":45,"column_start":1,"column_end":66}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":169540,"byte_end":169552,"line_start":46,"line_end":46,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":169553,"byte_end":169560,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":169561,"byte_end":169568,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":169569,"byte_end":169572,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ You can also load the wasm text format if more convenient too:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":169573,"byte_end":169639,"line_start":50,"line_end":50,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":169640,"byte_end":169643,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":169644,"byte_end":169657,"line_start":52,"line_end":52,"column_start":1,"column_end":14}},{"value":"/ # use wasmtime::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":169658,"byte_end":169680,"line_start":53,"line_end":53,"column_start":1,"column_end":23}},{"value":"/ # fn main() -> anyhow::Result<()> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":169681,"byte_end":169720,"line_start":54,"line_end":54,"column_start":1,"column_end":40}},{"value":"/ let engine = Engine::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":169721,"byte_end":169756,"line_start":55,"line_end":55,"column_start":1,"column_end":36}},{"value":"/ // Now we're using the WebAssembly text extension: `.wat`!","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":169757,"byte_end":169819,"line_start":56,"line_end":56,"column_start":1,"column_end":63}},{"value":"/ let module = Module::from_file(&engine, \"path/to/foo.wat\")?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":169820,"byte_end":169884,"line_start":57,"line_end":57,"column_start":1,"column_end":65}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":169885,"byte_end":169897,"line_start":58,"line_end":58,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":169898,"byte_end":169905,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":169906,"byte_end":169913,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":169914,"byte_end":169917,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ And if you've already got the bytes in-memory you can use the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":169918,"byte_end":169983,"line_start":62,"line_end":62,"column_start":1,"column_end":66}},{"value":"/ [`Module::new`] constructor:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":169984,"byte_end":170016,"line_start":63,"line_end":63,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":170017,"byte_end":170020,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":170021,"byte_end":170034,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/ # use wasmtime::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":170035,"byte_end":170057,"line_start":66,"line_end":66,"column_start":1,"column_end":23}},{"value":"/ # fn main() -> anyhow::Result<()> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":170058,"byte_end":170097,"line_start":67,"line_end":67,"column_start":1,"column_end":40}},{"value":"/ let engine = Engine::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":170098,"byte_end":170133,"line_start":68,"line_end":68,"column_start":1,"column_end":36}},{"value":"/ # let wasm_bytes: Vec<u8> = Vec::new();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":170134,"byte_end":170177,"line_start":69,"line_end":69,"column_start":1,"column_end":44}},{"value":"/ let module = Module::new(&engine, &wasm_bytes)?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":170178,"byte_end":170230,"line_start":70,"line_end":70,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":170231,"byte_end":170234,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ // It also works with the text format!","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":170235,"byte_end":170277,"line_start":72,"line_end":72,"column_start":1,"column_end":43}},{"value":"/ let module = Module::new(&engine, \"(module (func))\")?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":170278,"byte_end":170336,"line_start":73,"line_end":73,"column_start":1,"column_end":59}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":170337,"byte_end":170349,"line_start":74,"line_end":74,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":170350,"byte_end":170357,"line_start":75,"line_end":75,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":170358,"byte_end":170365,"line_start":76,"line_end":76,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":170366,"byte_end":170369,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ [`Config`]: crate::Config","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":170370,"byte_end":170399,"line_start":78,"line_end":78,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":821},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":173306,"byte_end":173309,"line_start":153,"line_end":153,"column_start":12,"column_end":15},"name":"new","qualname":"<Module>::new","value":"pub fn new<impl AsRef<[u8]>: AsRef<[u8]>>(&Engine, impl AsRef<[u8]>)\n-> Result<Module>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new WebAssembly `Module` from the given in-memory `bytes`.","sig":null,"attributes":[{"value":"/ Creates a new WebAssembly `Module` from the given in-memory `bytes`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":170604,"byte_end":170676,"line_start":87,"line_end":87,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":170681,"byte_end":170684,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ The `bytes` provided must be in one of two formats:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":170689,"byte_end":170744,"line_start":89,"line_end":89,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":170749,"byte_end":170752,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ * It can be a [binary-encoded][binary] WebAssembly module. This","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":170757,"byte_end":170824,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/   is always supported.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":170829,"byte_end":170855,"line_start":92,"line_end":92,"column_start":5,"column_end":31}},{"value":"/ * It may also be a [text-encoded][text] instance of the WebAssembly","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":170860,"byte_end":170931,"line_start":93,"line_end":93,"column_start":5,"column_end":76}},{"value":"/   text format. This is only supported when the `wat` feature of this","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":170936,"byte_end":171008,"line_start":94,"line_end":94,"column_start":5,"column_end":77}},{"value":"/   crate is enabled. If this is supplied then the text format will be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":171013,"byte_end":171085,"line_start":95,"line_end":95,"column_start":5,"column_end":77}},{"value":"/   parsed before validation. Note that the `wat` feature is enabled by","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":171090,"byte_end":171163,"line_start":96,"line_end":96,"column_start":5,"column_end":78}},{"value":"/   default.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":171168,"byte_end":171182,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":171187,"byte_end":171190,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ The data for the wasm module must be loaded in-memory if it's present","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":171195,"byte_end":171268,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ elsewhere, for example on disk. This requires that the entire binary is","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":171273,"byte_end":171348,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/ loaded into memory all at once, this API does not support streaming","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":171353,"byte_end":171424,"line_start":101,"line_end":101,"column_start":5,"column_end":76}},{"value":"/ compilation of a module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":171429,"byte_end":171457,"line_start":102,"line_end":102,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":171462,"byte_end":171465,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ The WebAssembly binary will be decoded and validated. It will also be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":171470,"byte_end":171543,"line_start":104,"line_end":104,"column_start":5,"column_end":78}},{"value":"/ compiled according to the configuration of the provided `engine`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":171548,"byte_end":171617,"line_start":105,"line_end":105,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":171622,"byte_end":171625,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":171630,"byte_end":171642,"line_start":107,"line_end":107,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":171647,"byte_end":171650,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ This function may fail and return an error. Errors may include","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":171655,"byte_end":171721,"line_start":109,"line_end":109,"column_start":5,"column_end":71}},{"value":"/ situations such as:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":171726,"byte_end":171749,"line_start":110,"line_end":110,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":171754,"byte_end":171757,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ * The binary provided could not be decoded because it's not a valid","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":171762,"byte_end":171833,"line_start":112,"line_end":112,"column_start":5,"column_end":76}},{"value":"/   WebAssembly binary","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":171838,"byte_end":171862,"line_start":113,"line_end":113,"column_start":5,"column_end":29}},{"value":"/ * The WebAssembly binary may not validate (e.g. contains type errors)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":171867,"byte_end":171940,"line_start":114,"line_end":114,"column_start":5,"column_end":78}},{"value":"/ * Implementation-specific limits were exceeded with a valid binary (for","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":171945,"byte_end":172020,"line_start":115,"line_end":115,"column_start":5,"column_end":80}},{"value":"/   example too many locals)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":172025,"byte_end":172055,"line_start":116,"line_end":116,"column_start":5,"column_end":35}},{"value":"/ * The wasm binary may use features that are not enabled in the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":172060,"byte_end":172126,"line_start":117,"line_end":117,"column_start":5,"column_end":71}},{"value":"/   configuration of `enging`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":172131,"byte_end":172162,"line_start":118,"line_end":118,"column_start":5,"column_end":36}},{"value":"/ * If the `wat` feature is enabled and the input is text, then it may be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":172167,"byte_end":172242,"line_start":119,"line_end":119,"column_start":5,"column_end":80}},{"value":"/   rejected if it fails to parse.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":172247,"byte_end":172283,"line_start":120,"line_end":120,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":172288,"byte_end":172291,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ The error returned should contain full information about why module","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":172296,"byte_end":172367,"line_start":122,"line_end":122,"column_start":5,"column_end":76}},{"value":"/ creation failed if one is returned.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":172372,"byte_end":172411,"line_start":123,"line_end":123,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":172416,"byte_end":172419,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ [binary]: https://webassembly.github.io/spec/core/binary/index.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":172424,"byte_end":172495,"line_start":125,"line_end":125,"column_start":5,"column_end":76}},{"value":"/ [text]: https://webassembly.github.io/spec/core/text/index.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":172500,"byte_end":172567,"line_start":126,"line_end":126,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":172572,"byte_end":172575,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":172580,"byte_end":172594,"line_start":128,"line_end":128,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":172599,"byte_end":172602,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ The `new` function can be invoked with a in-memory array of bytes:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":172607,"byte_end":172677,"line_start":130,"line_end":130,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":172682,"byte_end":172685,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":172690,"byte_end":172703,"line_start":132,"line_end":132,"column_start":5,"column_end":18}},{"value":"/ # use wasmtime::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":172708,"byte_end":172730,"line_start":133,"line_end":133,"column_start":5,"column_end":27}},{"value":"/ # fn main() -> anyhow::Result<()> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":172735,"byte_end":172774,"line_start":134,"line_end":134,"column_start":5,"column_end":44}},{"value":"/ # let engine = Engine::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":172779,"byte_end":172816,"line_start":135,"line_end":135,"column_start":5,"column_end":42}},{"value":"/ # let wasm_bytes: Vec<u8> = Vec::new();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":172821,"byte_end":172864,"line_start":136,"line_end":136,"column_start":5,"column_end":48}},{"value":"/ let module = Module::new(&engine, &wasm_bytes)?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":172869,"byte_end":172921,"line_start":137,"line_end":137,"column_start":5,"column_end":57}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":172926,"byte_end":172938,"line_start":138,"line_end":138,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":172943,"byte_end":172950,"line_start":139,"line_end":139,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":172955,"byte_end":172962,"line_start":140,"line_end":140,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":172967,"byte_end":172970,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ Or you can also pass in a string to be parsed as the wasm text","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":172975,"byte_end":173041,"line_start":142,"line_end":142,"column_start":5,"column_end":71}},{"value":"/ format:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":173046,"byte_end":173057,"line_start":143,"line_end":143,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":173062,"byte_end":173065,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":173070,"byte_end":173077,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/ # use wasmtime::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":173082,"byte_end":173104,"line_start":146,"line_end":146,"column_start":5,"column_end":27}},{"value":"/ # fn main() -> anyhow::Result<()> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":173109,"byte_end":173148,"line_start":147,"line_end":147,"column_start":5,"column_end":44}},{"value":"/ # let engine = Engine::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":173153,"byte_end":173190,"line_start":148,"line_end":148,"column_start":5,"column_end":42}},{"value":"/ let module = Module::new(&engine, \"(module (func))\")?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":173195,"byte_end":173253,"line_start":149,"line_end":149,"column_start":5,"column_end":63}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":173258,"byte_end":173270,"line_start":150,"line_end":150,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":173275,"byte_end":173282,"line_start":151,"line_end":151,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":173287,"byte_end":173294,"line_start":152,"line_end":152,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":823},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":173736,"byte_end":173749,"line_start":163,"line_end":163,"column_start":12,"column_end":25},"name":"new_with_name","qualname":"<Module>::new_with_name","value":"pub fn new_with_name<impl AsRef<[u8]>: AsRef<[u8]>>(&Engine, impl AsRef<[u8]>,\n                                                    &str) -> Result<Module>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new WebAssembly `Module` from the given in-memory `binary`\n data. The provided `name` will be used in traps/backtrace details.","sig":null,"attributes":[{"value":"/ Creates a new WebAssembly `Module` from the given in-memory `binary`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":173522,"byte_end":173594,"line_start":159,"line_end":159,"column_start":5,"column_end":77}},{"value":"/ data. The provided `name` will be used in traps/backtrace details.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":173599,"byte_end":173669,"line_start":160,"line_end":160,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":173674,"byte_end":173677,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ See [`Module::new`] for other details.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":173682,"byte_end":173724,"line_start":162,"line_end":162,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":825},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":174972,"byte_end":174981,"line_start":201,"line_end":201,"column_start":12,"column_end":21},"name":"from_file","qualname":"<Module>::from_file","value":"pub fn from_file<impl AsRef<Path>: AsRef<Path>>(&Engine, impl AsRef<Path>)\n-> Result<Module>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new WebAssembly `Module` from the contents of the given\n `file` on disk.","sig":null,"attributes":[{"value":"/ Creates a new WebAssembly `Module` from the contents of the given","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":174090,"byte_end":174159,"line_start":173,"line_end":173,"column_start":5,"column_end":74}},{"value":"/ `file` on disk.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":174164,"byte_end":174183,"line_start":174,"line_end":174,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":174188,"byte_end":174191,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that will read the `file` provided and","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":174196,"byte_end":174269,"line_start":176,"line_end":176,"column_start":5,"column_end":78}},{"value":"/ pass the bytes to the [`Module::new`] function. For more information","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":174274,"byte_end":174346,"line_start":177,"line_end":177,"column_start":5,"column_end":77}},{"value":"/ see [`Module::new`]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":174351,"byte_end":174374,"line_start":178,"line_end":178,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":174379,"byte_end":174382,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":174387,"byte_end":174401,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":174406,"byte_end":174409,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":174414,"byte_end":174427,"line_start":182,"line_end":182,"column_start":5,"column_end":18}},{"value":"/ # use wasmtime::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":174432,"byte_end":174454,"line_start":183,"line_end":183,"column_start":5,"column_end":27}},{"value":"/ # fn main() -> anyhow::Result<()> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":174459,"byte_end":174498,"line_start":184,"line_end":184,"column_start":5,"column_end":44}},{"value":"/ let engine = Engine::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":174503,"byte_end":174538,"line_start":185,"line_end":185,"column_start":5,"column_end":40}},{"value":"/ let module = Module::from_file(&engine, \"./path/to/foo.wasm\")?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":174543,"byte_end":174610,"line_start":186,"line_end":186,"column_start":5,"column_end":72}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":174615,"byte_end":174627,"line_start":187,"line_end":187,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":174632,"byte_end":174639,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":174644,"byte_end":174651,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":174656,"byte_end":174659,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ The `.wat` text format is also supported:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":174664,"byte_end":174709,"line_start":191,"line_end":191,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":174714,"byte_end":174717,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":174722,"byte_end":174735,"line_start":193,"line_end":193,"column_start":5,"column_end":18}},{"value":"/ # use wasmtime::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":174740,"byte_end":174762,"line_start":194,"line_end":194,"column_start":5,"column_end":27}},{"value":"/ # fn main() -> anyhow::Result<()> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":174767,"byte_end":174806,"line_start":195,"line_end":195,"column_start":5,"column_end":44}},{"value":"/ # let engine = Engine::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":174811,"byte_end":174848,"line_start":196,"line_end":196,"column_start":5,"column_end":42}},{"value":"/ let module = Module::from_file(&engine, \"./path/to/foo.wat\")?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":174853,"byte_end":174919,"line_start":197,"line_end":197,"column_start":5,"column_end":71}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":174924,"byte_end":174936,"line_start":198,"line_end":198,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":174941,"byte_end":174948,"line_start":199,"line_end":199,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":174953,"byte_end":174960,"line_start":200,"line_end":200,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":827},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":176306,"byte_end":176317,"line_start":240,"line_end":240,"column_start":12,"column_end":23},"name":"from_binary","qualname":"<Module>::from_binary","value":"pub fn from_binary(&Engine, &[u8]) -> Result<Module>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new WebAssembly `Module` from the given in-memory `binary`\n data.","sig":null,"attributes":[{"value":"/ Creates a new WebAssembly `Module` from the given in-memory `binary`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":175242,"byte_end":175314,"line_start":209,"line_end":209,"column_start":5,"column_end":77}},{"value":"/ data.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":175319,"byte_end":175328,"line_start":210,"line_end":210,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":175333,"byte_end":175336,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ This is similar to [`Module::new`] except that it requires that the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":175341,"byte_end":175412,"line_start":212,"line_end":212,"column_start":5,"column_end":76}},{"value":"/ `binary` input is a WebAssembly binary, the text format is not supported","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":175417,"byte_end":175493,"line_start":213,"line_end":213,"column_start":5,"column_end":81}},{"value":"/ by this function. It's generally recommended to use [`Module::new`],","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":175498,"byte_end":175570,"line_start":214,"line_end":214,"column_start":5,"column_end":77}},{"value":"/ but if it's required to not support the text format this function can be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":175575,"byte_end":175651,"line_start":215,"line_end":215,"column_start":5,"column_end":81}},{"value":"/ used instead.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":175656,"byte_end":175673,"line_start":216,"line_end":216,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":175678,"byte_end":175681,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":175686,"byte_end":175700,"line_start":218,"line_end":218,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":175705,"byte_end":175708,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":175713,"byte_end":175720,"line_start":220,"line_end":220,"column_start":5,"column_end":12}},{"value":"/ # use wasmtime::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":175725,"byte_end":175747,"line_start":221,"line_end":221,"column_start":5,"column_end":27}},{"value":"/ # fn main() -> anyhow::Result<()> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":175752,"byte_end":175791,"line_start":222,"line_end":222,"column_start":5,"column_end":44}},{"value":"/ # let engine = Engine::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":175796,"byte_end":175833,"line_start":223,"line_end":223,"column_start":5,"column_end":42}},{"value":"/ let wasm = b\"\\0asm\\x01\\0\\0\\0\";","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":175838,"byte_end":175872,"line_start":224,"line_end":224,"column_start":5,"column_end":39}},{"value":"/ let module = Module::from_binary(&engine, wasm)?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":175877,"byte_end":175930,"line_start":225,"line_end":225,"column_start":5,"column_end":58}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":175935,"byte_end":175947,"line_start":226,"line_end":226,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":175952,"byte_end":175959,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":175964,"byte_end":175971,"line_start":228,"line_end":228,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":175976,"byte_end":175979,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ Note that the text format is **not** accepted by this function:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":175984,"byte_end":176051,"line_start":230,"line_end":230,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":176056,"byte_end":176059,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":176064,"byte_end":176071,"line_start":232,"line_end":232,"column_start":5,"column_end":12}},{"value":"/ # use wasmtime::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":176076,"byte_end":176098,"line_start":233,"line_end":233,"column_start":5,"column_end":27}},{"value":"/ # fn main() -> anyhow::Result<()> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":176103,"byte_end":176142,"line_start":234,"line_end":234,"column_start":5,"column_end":44}},{"value":"/ # let engine = Engine::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":176147,"byte_end":176184,"line_start":235,"line_end":235,"column_start":5,"column_end":42}},{"value":"/ assert!(Module::from_binary(&engine, b\"(module)\").is_err());","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":176189,"byte_end":176253,"line_start":236,"line_end":236,"column_start":5,"column_end":69}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":176258,"byte_end":176270,"line_start":237,"line_end":237,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":176275,"byte_end":176282,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":176287,"byte_end":176294,"line_start":239,"line_end":239,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":828},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":178016,"byte_end":178037,"line_start":275,"line_end":275,"column_start":19,"column_end":40},"name":"from_binary_unchecked","qualname":"<Module>::from_binary_unchecked","value":"pub unsafe fn from_binary_unchecked(&Engine, &[u8]) -> Result<Module>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new WebAssembly `Module` from the given in-memory `binary`\n data, skipping validation and asserting that `binary` is a valid\n WebAssembly module.","sig":null,"attributes":[{"value":"/ Creates a new WebAssembly `Module` from the given in-memory `binary`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":176692,"byte_end":176764,"line_start":248,"line_end":248,"column_start":5,"column_end":77}},{"value":"/ data, skipping validation and asserting that `binary` is a valid","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":176769,"byte_end":176837,"line_start":249,"line_end":249,"column_start":5,"column_end":73}},{"value":"/ WebAssembly module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":176842,"byte_end":176865,"line_start":250,"line_end":250,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":176870,"byte_end":176873,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ This function is the same as [`Module::new`] except that it skips the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":176878,"byte_end":176951,"line_start":252,"line_end":252,"column_start":5,"column_end":78}},{"value":"/ call to [`Module::validate`] and it does not support the text format of","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":176956,"byte_end":177031,"line_start":253,"line_end":253,"column_start":5,"column_end":80}},{"value":"/ WebAssembly. The WebAssembly binary is not validated for","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":177036,"byte_end":177096,"line_start":254,"line_end":254,"column_start":5,"column_end":65}},{"value":"/ correctness and it is simply assumed as valid.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":177101,"byte_end":177151,"line_start":255,"line_end":255,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":177156,"byte_end":177159,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ For more information about creation of a module and the `engine` argument","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":177164,"byte_end":177241,"line_start":257,"line_end":257,"column_start":5,"column_end":82}},{"value":"/ see the documentation of [`Module::new`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":177246,"byte_end":177291,"line_start":258,"line_end":258,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":177296,"byte_end":177299,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ # Unsafety","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":177304,"byte_end":177318,"line_start":260,"line_end":260,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":177323,"byte_end":177326,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ This function is `unsafe` due to the unchecked assumption that the input","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":177331,"byte_end":177407,"line_start":262,"line_end":262,"column_start":5,"column_end":81}},{"value":"/ `binary` is valid. If the `binary` is not actually a valid wasm binary it","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":177412,"byte_end":177489,"line_start":263,"line_end":263,"column_start":5,"column_end":82}},{"value":"/ may cause invalid machine code to get generated, cause panics, etc.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":177494,"byte_end":177565,"line_start":264,"line_end":264,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":177570,"byte_end":177573,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ It is only safe to call this method if [`Module::validate`] succeeds on","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":177578,"byte_end":177653,"line_start":266,"line_end":266,"column_start":5,"column_end":80}},{"value":"/ the same arguments passed to this function.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":177658,"byte_end":177705,"line_start":267,"line_end":267,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":177710,"byte_end":177713,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":177718,"byte_end":177730,"line_start":269,"line_end":269,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":177735,"byte_end":177738,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ This function may fail for many of the same reasons as [`Module::new`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":177743,"byte_end":177818,"line_start":271,"line_end":271,"column_start":5,"column_end":80}},{"value":"/ While this assumes that the binary is valid it still needs to actually","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":177823,"byte_end":177897,"line_start":272,"line_end":272,"column_start":5,"column_end":79}},{"value":"/ be somewhat valid for decoding purposes, and the basics of decoding can","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":177902,"byte_end":177977,"line_start":273,"line_end":273,"column_start":5,"column_end":80}},{"value":"/ still fail.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":177982,"byte_end":177997,"line_start":274,"line_end":274,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":829},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":179184,"byte_end":179192,"line_start":299,"line_end":299,"column_start":12,"column_end":20},"name":"validate","qualname":"<Module>::validate","value":"pub fn validate(&Engine, &[u8]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Validates `binary` input data as a WebAssembly binary given the\n configuration in `engine`.","sig":null,"attributes":[{"value":"/ Validates `binary` input data as a WebAssembly binary given the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":178141,"byte_end":178208,"line_start":279,"line_end":279,"column_start":5,"column_end":72}},{"value":"/ configuration in `engine`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":178213,"byte_end":178243,"line_start":280,"line_end":280,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":178248,"byte_end":178251,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ This function will perform a speedy validation of the `binary` input","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":178256,"byte_end":178328,"line_start":282,"line_end":282,"column_start":5,"column_end":77}},{"value":"/ WebAssembly module (which is in [binary form][binary], the text format","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":178333,"byte_end":178407,"line_start":283,"line_end":283,"column_start":5,"column_end":79}},{"value":"/ is not accepted by this function) and return either `Ok` or `Err`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":178412,"byte_end":178481,"line_start":284,"line_end":284,"column_start":5,"column_end":74}},{"value":"/ depending on the results of validation. The `engine` argument indicates","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":178486,"byte_end":178561,"line_start":285,"line_end":285,"column_start":5,"column_end":80}},{"value":"/ configuration for WebAssembly features, for example, which are used to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":178566,"byte_end":178640,"line_start":286,"line_end":286,"column_start":5,"column_end":79}},{"value":"/ indicate what should be valid and what shouldn't be.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":178645,"byte_end":178701,"line_start":287,"line_end":287,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":178706,"byte_end":178709,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ Validation automatically happens as part of [`Module::new`], but is a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":178714,"byte_end":178787,"line_start":289,"line_end":289,"column_start":5,"column_end":78}},{"value":"/ requirement for [`Module::from_binary_unchecked`] to be safe.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":178792,"byte_end":178857,"line_start":290,"line_end":290,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":178862,"byte_end":178865,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":178870,"byte_end":178882,"line_start":292,"line_end":292,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":178887,"byte_end":178890,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ If validation fails for any reason (type check error, usage of a feature","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":178895,"byte_end":178971,"line_start":294,"line_end":294,"column_start":5,"column_end":81}},{"value":"/ that wasn't enabled, etc) then an error with a description of the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":178976,"byte_end":179045,"line_start":295,"line_end":295,"column_start":5,"column_end":74}},{"value":"/ validation issue will be returned.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":179050,"byte_end":179088,"line_start":296,"line_end":296,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":179093,"byte_end":179096,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ [binary]: https://webassembly.github.io/spec/core/binary/index.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":179101,"byte_end":179172,"line_start":298,"line_end":298,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":831},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":180221,"byte_end":180230,"line_start":327,"line_end":327,"column_start":12,"column_end":21},"name":"serialize","qualname":"<Module>::serialize","value":"pub fn serialize(&Self) -> Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Serialize compilation artifacts to the buffer. See also `deseriaize`.\n","sig":null,"attributes":[{"value":"/ Serialize compilation artifacts to the buffer. See also `deseriaize`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":180136,"byte_end":180209,"line_start":326,"line_end":326,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":832},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":181077,"byte_end":181088,"line_start":348,"line_end":348,"column_start":12,"column_end":23},"name":"deserialize","qualname":"<Module>::deserialize","value":"pub fn deserialize(&Engine, &[u8]) -> Result<Module>","parent":null,"children":[],"decl_id":null,"docs":" Deserializes and creates a module from the compilatio nartifacts.\n The `serialize` saves the compilation artifacts along with the host\n fingerprint, which consists of target, compiler flags, and wasmtime\n package version.","sig":null,"attributes":[{"value":"/ Deserializes and creates a module from the compilatio nartifacts.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":180534,"byte_end":180603,"line_start":339,"line_end":339,"column_start":5,"column_end":74}},{"value":"/ The `serialize` saves the compilation artifacts along with the host","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":180608,"byte_end":180679,"line_start":340,"line_end":340,"column_start":5,"column_end":76}},{"value":"/ fingerprint, which consists of target, compiler flags, and wasmtime","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":180684,"byte_end":180755,"line_start":341,"line_end":341,"column_start":5,"column_end":76}},{"value":"/ package version.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":180760,"byte_end":180780,"line_start":342,"line_end":342,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":180785,"byte_end":180788,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ The method will fail if fingerprints of current host and serialized","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":180793,"byte_end":180864,"line_start":344,"line_end":344,"column_start":5,"column_end":76}},{"value":"/ one are different. The method does not verify the serialized artifacts","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":180869,"byte_end":180943,"line_start":345,"line_end":345,"column_start":5,"column_end":79}},{"value":"/ for modifications or curruptions. All responsibily of signing and its","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":180948,"byte_end":181021,"line_start":346,"line_end":346,"column_start":5,"column_end":78}},{"value":"/ verification falls on the embedder.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":181026,"byte_end":181065,"line_start":347,"line_end":347,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":834},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":182812,"byte_end":182816,"line_start":399,"line_end":399,"column_start":12,"column_end":16},"name":"name","qualname":"<Module>::name","value":"pub fn name(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns identifier/name that this [`Module`] has. This name\n is used in traps/backtrace details.","sig":null,"attributes":[{"value":"/ Returns identifier/name that this [`Module`] has. This name","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":181968,"byte_end":182031,"line_start":375,"line_end":375,"column_start":5,"column_end":68}},{"value":"/ is used in traps/backtrace details.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":182036,"byte_end":182075,"line_start":376,"line_end":376,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":182080,"byte_end":182083,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ Note that most LLVM/clang/Rust-produced modules do not have a name","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":182088,"byte_end":182158,"line_start":378,"line_end":378,"column_start":5,"column_end":75}},{"value":"/ associated with them, but other wasm tooling can be used to inject or","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":182163,"byte_end":182236,"line_start":379,"line_end":379,"column_start":5,"column_end":78}},{"value":"/ add a name.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":182241,"byte_end":182256,"line_start":380,"line_end":380,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":182261,"byte_end":182264,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":182269,"byte_end":182283,"line_start":382,"line_end":382,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":182288,"byte_end":182291,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":182296,"byte_end":182303,"line_start":384,"line_end":384,"column_start":5,"column_end":12}},{"value":"/ # use wasmtime::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":182308,"byte_end":182330,"line_start":385,"line_end":385,"column_start":5,"column_end":27}},{"value":"/ # fn main() -> anyhow::Result<()> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":182335,"byte_end":182374,"line_start":386,"line_end":386,"column_start":5,"column_end":44}},{"value":"/ # let engine = Engine::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":182379,"byte_end":182416,"line_start":387,"line_end":387,"column_start":5,"column_end":42}},{"value":"/ let module = Module::new(&engine, \"(module $foo)\")?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":182421,"byte_end":182477,"line_start":388,"line_end":388,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(module.name(), Some(\"foo\"));","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":182482,"byte_end":182525,"line_start":389,"line_end":389,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":182530,"byte_end":182533,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ let module = Module::new(&engine, \"(module)\")?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":182538,"byte_end":182589,"line_start":391,"line_end":391,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(module.name(), None);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":182594,"byte_end":182630,"line_start":392,"line_end":392,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":182635,"byte_end":182638,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ let module = Module::new_with_name(&engine, \"(module)\", \"bar\")?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":182643,"byte_end":182711,"line_start":394,"line_end":394,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(module.name(), Some(\"bar\"));","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":182716,"byte_end":182759,"line_start":395,"line_end":395,"column_start":5,"column_end":48}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":182764,"byte_end":182776,"line_start":396,"line_end":396,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":182781,"byte_end":182788,"line_start":397,"line_end":397,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":182793,"byte_end":182800,"line_start":398,"line_end":398,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":835},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":184622,"byte_end":184629,"line_start":452,"line_end":452,"column_start":12,"column_end":19},"name":"imports","qualname":"<Module>::imports","value":"pub fn imports<'module>(&'module Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the list of imports that this [`Module`] has and must be\n satisfied.","sig":null,"attributes":[{"value":"/ Returns the list of imports that this [`Module`] has and must be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":182900,"byte_end":182968,"line_start":403,"line_end":403,"column_start":5,"column_end":73}},{"value":"/ satisfied.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":182973,"byte_end":182987,"line_start":404,"line_end":404,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":182992,"byte_end":182995,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ This function returns the list of imports that the wasm module has, but","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":183000,"byte_end":183075,"line_start":406,"line_end":406,"column_start":5,"column_end":80}},{"value":"/ only the types of each import. The type of each import is used to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":183080,"byte_end":183149,"line_start":407,"line_end":407,"column_start":5,"column_end":74}},{"value":"/ typecheck the [`Instance::new`](crate::Instance::new) method's `imports`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":183154,"byte_end":183230,"line_start":408,"line_end":408,"column_start":5,"column_end":81}},{"value":"/ argument. The arguments to that function must match up 1-to-1 with the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":183235,"byte_end":183309,"line_start":409,"line_end":409,"column_start":5,"column_end":79}},{"value":"/ entries in the array returned here.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":183314,"byte_end":183353,"line_start":410,"line_end":410,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":183358,"byte_end":183361,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ The imports returned reflect the order of the imports in the wasm module","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":183366,"byte_end":183442,"line_start":412,"line_end":412,"column_start":5,"column_end":81}},{"value":"/ itself, and note that no form of deduplication happens.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":183447,"byte_end":183506,"line_start":413,"line_end":413,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":183511,"byte_end":183514,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":183519,"byte_end":183533,"line_start":415,"line_end":415,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":183538,"byte_end":183541,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ Modules with no imports return an empty list here:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":183546,"byte_end":183600,"line_start":417,"line_end":417,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":183605,"byte_end":183608,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":183613,"byte_end":183620,"line_start":419,"line_end":419,"column_start":5,"column_end":12}},{"value":"/ # use wasmtime::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":183625,"byte_end":183647,"line_start":420,"line_end":420,"column_start":5,"column_end":27}},{"value":"/ # fn main() -> anyhow::Result<()> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":183652,"byte_end":183691,"line_start":421,"line_end":421,"column_start":5,"column_end":44}},{"value":"/ # let engine = Engine::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":183696,"byte_end":183733,"line_start":422,"line_end":422,"column_start":5,"column_end":42}},{"value":"/ let module = Module::new(&engine, \"(module)\")?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":183738,"byte_end":183789,"line_start":423,"line_end":423,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(module.imports().len(), 0);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":183794,"byte_end":183836,"line_start":424,"line_end":424,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":183841,"byte_end":183853,"line_start":425,"line_end":425,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":183858,"byte_end":183865,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":183870,"byte_end":183877,"line_start":427,"line_end":427,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":183882,"byte_end":183885,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ and modules with imports will have a non-empty list:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":183890,"byte_end":183946,"line_start":429,"line_end":429,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":183951,"byte_end":183954,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":183959,"byte_end":183966,"line_start":431,"line_end":431,"column_start":5,"column_end":12}},{"value":"/ # use wasmtime::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":183971,"byte_end":183993,"line_start":432,"line_end":432,"column_start":5,"column_end":27}},{"value":"/ # fn main() -> anyhow::Result<()> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":183998,"byte_end":184037,"line_start":433,"line_end":433,"column_start":5,"column_end":44}},{"value":"/ # let engine = Engine::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":184042,"byte_end":184079,"line_start":434,"line_end":434,"column_start":5,"column_end":42}},{"value":"/ let wat = r#\"","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":184084,"byte_end":184101,"line_start":435,"line_end":435,"column_start":5,"column_end":22}},{"value":"/     (module","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":184106,"byte_end":184121,"line_start":436,"line_end":436,"column_start":5,"column_end":20}},{"value":"/         (import \"host\" \"foo\" (func))","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":184126,"byte_end":184166,"line_start":437,"line_end":437,"column_start":5,"column_end":45}},{"value":"/     )","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":184171,"byte_end":184180,"line_start":438,"line_end":438,"column_start":5,"column_end":14}},{"value":"/ \"#;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":184185,"byte_end":184192,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"/ let module = Module::new(&engine, wat)?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":184197,"byte_end":184241,"line_start":440,"line_end":440,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(module.imports().len(), 1);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":184246,"byte_end":184288,"line_start":441,"line_end":441,"column_start":5,"column_end":47}},{"value":"/ let import = module.imports().next().unwrap();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":184293,"byte_end":184343,"line_start":442,"line_end":442,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(import.module(), \"host\");","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":184348,"byte_end":184388,"line_start":443,"line_end":443,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(import.name(), \"foo\");","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":184393,"byte_end":184430,"line_start":444,"line_end":444,"column_start":5,"column_end":42}},{"value":"/ match import.ty() {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":184435,"byte_end":184458,"line_start":445,"line_end":445,"column_start":5,"column_end":28}},{"value":"/     ExternType::Func(_) => { /* ... */ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":184463,"byte_end":184507,"line_start":446,"line_end":446,"column_start":5,"column_end":49}},{"value":"/     _ => panic!(\"unexpected import type!\"),","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":184512,"byte_end":184559,"line_start":447,"line_end":447,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":184564,"byte_end":184569,"line_start":448,"line_end":448,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":184574,"byte_end":184586,"line_start":449,"line_end":449,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":184591,"byte_end":184598,"line_start":450,"line_end":450,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":184603,"byte_end":184610,"line_start":451,"line_end":451,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":839},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":186853,"byte_end":186860,"line_start":519,"line_end":519,"column_start":12,"column_end":19},"name":"exports","qualname":"<Module>::exports","value":"pub fn exports<'module>(&'module Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the list of exports that this [`Module`] has and will be\n available after instantiation.","sig":null,"attributes":[{"value":"/ Returns the list of exports that this [`Module`] has and will be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":185049,"byte_end":185117,"line_start":465,"line_end":465,"column_start":5,"column_end":73}},{"value":"/ available after instantiation.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":185122,"byte_end":185156,"line_start":466,"line_end":466,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":185161,"byte_end":185164,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ This function will return the type of each item that will be returned","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":185169,"byte_end":185242,"line_start":468,"line_end":468,"column_start":5,"column_end":78}},{"value":"/ from [`Instance::exports`](crate::Instance::exports). Each entry in this","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":185247,"byte_end":185323,"line_start":469,"line_end":469,"column_start":5,"column_end":81}},{"value":"/ list corresponds 1-to-1 with that list, and the entries here will","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":185328,"byte_end":185397,"line_start":470,"line_end":470,"column_start":5,"column_end":74}},{"value":"/ indicate the name of the export along with the type of the export.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":185402,"byte_end":185472,"line_start":471,"line_end":471,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":185477,"byte_end":185480,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":185485,"byte_end":185499,"line_start":473,"line_end":473,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":185504,"byte_end":185507,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ Modules might not have any exports:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":185512,"byte_end":185551,"line_start":475,"line_end":475,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":185556,"byte_end":185559,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":185564,"byte_end":185571,"line_start":477,"line_end":477,"column_start":5,"column_end":12}},{"value":"/ # use wasmtime::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":185576,"byte_end":185598,"line_start":478,"line_end":478,"column_start":5,"column_end":27}},{"value":"/ # fn main() -> anyhow::Result<()> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":185603,"byte_end":185642,"line_start":479,"line_end":479,"column_start":5,"column_end":44}},{"value":"/ # let engine = Engine::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":185647,"byte_end":185684,"line_start":480,"line_end":480,"column_start":5,"column_end":42}},{"value":"/ let module = Module::new(&engine, \"(module)\")?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":185689,"byte_end":185740,"line_start":481,"line_end":481,"column_start":5,"column_end":56}},{"value":"/ assert!(module.exports().next().is_none());","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":185745,"byte_end":185792,"line_start":482,"line_end":482,"column_start":5,"column_end":52}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":185797,"byte_end":185809,"line_start":483,"line_end":483,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":185814,"byte_end":185821,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":185826,"byte_end":185833,"line_start":485,"line_end":485,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":185838,"byte_end":185841,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ When the exports are not empty, you can inspect each export:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":185846,"byte_end":185910,"line_start":487,"line_end":487,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":185915,"byte_end":185918,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":185923,"byte_end":185930,"line_start":489,"line_end":489,"column_start":5,"column_end":12}},{"value":"/ # use wasmtime::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":185935,"byte_end":185957,"line_start":490,"line_end":490,"column_start":5,"column_end":27}},{"value":"/ # fn main() -> anyhow::Result<()> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":185962,"byte_end":186001,"line_start":491,"line_end":491,"column_start":5,"column_end":44}},{"value":"/ # let engine = Engine::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":186006,"byte_end":186043,"line_start":492,"line_end":492,"column_start":5,"column_end":42}},{"value":"/ let wat = r#\"","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":186048,"byte_end":186065,"line_start":493,"line_end":493,"column_start":5,"column_end":22}},{"value":"/     (module","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":186070,"byte_end":186085,"line_start":494,"line_end":494,"column_start":5,"column_end":20}},{"value":"/         (func (export \"foo\"))","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":186090,"byte_end":186123,"line_start":495,"line_end":495,"column_start":5,"column_end":38}},{"value":"/         (memory (export \"memory\") 1)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":186128,"byte_end":186168,"line_start":496,"line_end":496,"column_start":5,"column_end":45}},{"value":"/     )","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":186173,"byte_end":186182,"line_start":497,"line_end":497,"column_start":5,"column_end":14}},{"value":"/ \"#;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":186187,"byte_end":186194,"line_start":498,"line_end":498,"column_start":5,"column_end":12}},{"value":"/ let module = Module::new(&engine, wat)?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":186199,"byte_end":186243,"line_start":499,"line_end":499,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(module.exports().len(), 2);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":186248,"byte_end":186290,"line_start":500,"line_end":500,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":186295,"byte_end":186298,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ let mut exports = module.exports();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":186303,"byte_end":186342,"line_start":502,"line_end":502,"column_start":5,"column_end":44}},{"value":"/ let foo = exports.next().unwrap();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":186347,"byte_end":186385,"line_start":503,"line_end":503,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(foo.name(), \"foo\");","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":186390,"byte_end":186424,"line_start":504,"line_end":504,"column_start":5,"column_end":39}},{"value":"/ match foo.ty() {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":186429,"byte_end":186449,"line_start":505,"line_end":505,"column_start":5,"column_end":25}},{"value":"/     ExternType::Func(_) => { /* ... */ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":186454,"byte_end":186498,"line_start":506,"line_end":506,"column_start":5,"column_end":49}},{"value":"/     _ => panic!(\"unexpected export type!\"),","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":186503,"byte_end":186550,"line_start":507,"line_end":507,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":186555,"byte_end":186560,"line_start":508,"line_end":508,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":186565,"byte_end":186568,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ let memory = exports.next().unwrap();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":186573,"byte_end":186614,"line_start":510,"line_end":510,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(memory.name(), \"memory\");","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":186619,"byte_end":186659,"line_start":511,"line_end":511,"column_start":5,"column_end":45}},{"value":"/ match memory.ty() {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":186664,"byte_end":186687,"line_start":512,"line_end":512,"column_start":5,"column_end":28}},{"value":"/     ExternType::Memory(_) => { /* ... */ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":186692,"byte_end":186738,"line_start":513,"line_end":513,"column_start":5,"column_end":51}},{"value":"/     _ => panic!(\"unexpected export type!\"),","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":186743,"byte_end":186790,"line_start":514,"line_end":514,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":186795,"byte_end":186800,"line_start":515,"line_end":515,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":186805,"byte_end":186817,"line_start":516,"line_end":516,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":186822,"byte_end":186829,"line_start":517,"line_end":517,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":186834,"byte_end":186841,"line_start":518,"line_end":518,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":843},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":188416,"byte_end":188426,"line_start":572,"line_end":572,"column_start":12,"column_end":22},"name":"get_export","qualname":"<Module>::get_export","value":"pub fn get_export<'module>(&'module Self, &'module str) -> Option<ExternType>","parent":null,"children":[],"decl_id":null,"docs":" Looks up an export in this [`Module`] by name.","sig":null,"attributes":[{"value":"/ Looks up an export in this [`Module`] by name.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":187203,"byte_end":187253,"line_start":529,"line_end":529,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":187258,"byte_end":187261,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ This function will return the type of an export with the given name.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":187266,"byte_end":187338,"line_start":531,"line_end":531,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":187343,"byte_end":187346,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":187351,"byte_end":187365,"line_start":533,"line_end":533,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":187370,"byte_end":187373,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ There may be no export with that name:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":187378,"byte_end":187420,"line_start":535,"line_end":535,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":187425,"byte_end":187428,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":187433,"byte_end":187440,"line_start":537,"line_end":537,"column_start":5,"column_end":12}},{"value":"/ # use wasmtime::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":187445,"byte_end":187467,"line_start":538,"line_end":538,"column_start":5,"column_end":27}},{"value":"/ # fn main() -> anyhow::Result<()> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":187472,"byte_end":187511,"line_start":539,"line_end":539,"column_start":5,"column_end":44}},{"value":"/ # let engine = Engine::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":187516,"byte_end":187553,"line_start":540,"line_end":540,"column_start":5,"column_end":42}},{"value":"/ let module = Module::new(&engine, \"(module)\")?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":187558,"byte_end":187609,"line_start":541,"line_end":541,"column_start":5,"column_end":56}},{"value":"/ assert!(module.get_export(\"foo\").is_none());","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":187614,"byte_end":187662,"line_start":542,"line_end":542,"column_start":5,"column_end":53}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":187667,"byte_end":187679,"line_start":543,"line_end":543,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":187684,"byte_end":187691,"line_start":544,"line_end":544,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":187696,"byte_end":187703,"line_start":545,"line_end":545,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":187708,"byte_end":187711,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ When there is an export with that name, it is returned:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":187716,"byte_end":187775,"line_start":547,"line_end":547,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":187780,"byte_end":187783,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":187788,"byte_end":187795,"line_start":549,"line_end":549,"column_start":5,"column_end":12}},{"value":"/ # use wasmtime::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":187800,"byte_end":187822,"line_start":550,"line_end":550,"column_start":5,"column_end":27}},{"value":"/ # fn main() -> anyhow::Result<()> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":187827,"byte_end":187866,"line_start":551,"line_end":551,"column_start":5,"column_end":44}},{"value":"/ # let engine = Engine::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":187871,"byte_end":187908,"line_start":552,"line_end":552,"column_start":5,"column_end":42}},{"value":"/ let wat = r#\"","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":187913,"byte_end":187930,"line_start":553,"line_end":553,"column_start":5,"column_end":22}},{"value":"/     (module","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":187935,"byte_end":187950,"line_start":554,"line_end":554,"column_start":5,"column_end":20}},{"value":"/         (func (export \"foo\"))","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":187955,"byte_end":187988,"line_start":555,"line_end":555,"column_start":5,"column_end":38}},{"value":"/         (memory (export \"memory\") 1)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":187993,"byte_end":188033,"line_start":556,"line_end":556,"column_start":5,"column_end":45}},{"value":"/     )","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":188038,"byte_end":188047,"line_start":557,"line_end":557,"column_start":5,"column_end":14}},{"value":"/ \"#;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":188052,"byte_end":188059,"line_start":558,"line_end":558,"column_start":5,"column_end":12}},{"value":"/ let module = Module::new(&engine, wat)?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":188064,"byte_end":188108,"line_start":559,"line_end":559,"column_start":5,"column_end":49}},{"value":"/ let foo = module.get_export(\"foo\");","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":188113,"byte_end":188152,"line_start":560,"line_end":560,"column_start":5,"column_end":44}},{"value":"/ assert!(foo.is_some());","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":188157,"byte_end":188184,"line_start":561,"line_end":561,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":188189,"byte_end":188192,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ let foo = foo.unwrap();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":188197,"byte_end":188224,"line_start":563,"line_end":563,"column_start":5,"column_end":32}},{"value":"/ match foo {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":188229,"byte_end":188244,"line_start":564,"line_end":564,"column_start":5,"column_end":20}},{"value":"/     ExternType::Func(_) => { /* ... */ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":188249,"byte_end":188293,"line_start":565,"line_end":565,"column_start":5,"column_end":49}},{"value":"/     _ => panic!(\"unexpected export type!\"),","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":188298,"byte_end":188345,"line_start":566,"line_end":566,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":188350,"byte_end":188355,"line_start":567,"line_end":567,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":188360,"byte_end":188363,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":188368,"byte_end":188380,"line_start":569,"line_end":569,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":188385,"byte_end":188392,"line_start":570,"line_end":570,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":188397,"byte_end":188404,"line_start":571,"line_end":571,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":845},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":188747,"byte_end":188753,"line_start":579,"line_end":579,"column_start":12,"column_end":18},"name":"engine","qualname":"<Module>::engine","value":"pub fn engine(&Self) -> &Engine","parent":null,"children":[],"decl_id":null,"docs":" Returns the [`Engine`] that this [`Module`] was compiled by.\n","sig":null,"attributes":[{"value":"/ Returns the [`Engine`] that this [`Module`] was compiled by.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":188671,"byte_end":188735,"line_start":578,"line_end":578,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":2989},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\ref.rs","byte_start":189837,"byte_end":189846,"line_start":8,"line_end":8,"column_start":12,"column_end":21},"name":"ExternRef","qualname":"::r#ref::ExternRef","value":"ExternRef {  }","parent":null,"children":[{"krate":0,"index":2990}],"decl_id":null,"docs":" Represents an opaque reference to any data within WebAssembly.\n","sig":null,"attributes":[{"value":"/ Represents an opaque reference to any data within WebAssembly.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\ref.rs","byte_start":189735,"byte_end":189801,"line_start":6,"line_end":6,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\ref.rs","byte_start":189987,"byte_end":189990,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"new","qualname":"<ExternRef>::new","value":"pub fn new<T>(T) -> ExternRef where T: 'static + Any","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of `ExternRef` wrapping the given value.\n","sig":null,"attributes":[{"value":"/ Creates a new instance of `ExternRef` wrapping the given value.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\ref.rs","byte_start":189908,"byte_end":189975,"line_start":13,"line_end":13,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\ref.rs","byte_start":190204,"byte_end":190208,"line_start":23,"line_end":23,"column_start":12,"column_end":16},"name":"data","qualname":"<ExternRef>::data","value":"pub fn data(&Self) -> &dyn Any","parent":null,"children":[],"decl_id":null,"docs":" Get the underlying data for this `ExternRef`.\n","sig":null,"attributes":[{"value":"/ Get the underlying data for this `ExternRef`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\ref.rs","byte_start":190143,"byte_end":190192,"line_start":22,"line_end":22,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":865},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\ref.rs","byte_start":190330,"byte_end":190342,"line_start":28,"line_end":28,"column_start":12,"column_end":24},"name":"strong_count","qualname":"<ExternRef>::strong_count","value":"pub fn strong_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the strong reference count for this `ExternRef`.\n","sig":null,"attributes":[{"value":"/ Get the strong reference count for this `ExternRef`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\ref.rs","byte_start":190262,"byte_end":190318,"line_start":27,"line_end":27,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":866},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\ref.rs","byte_start":190601,"byte_end":190607,"line_start":36,"line_end":36,"column_start":12,"column_end":18},"name":"ptr_eq","qualname":"<ExternRef>::ptr_eq","value":"pub fn ptr_eq(&Self, &ExternRef) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Does this `ExternRef` point to the same inner value as `other`?0","sig":null,"attributes":[{"value":"/ Does this `ExternRef` point to the same inner value as `other`?0","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\ref.rs","byte_start":190406,"byte_end":190474,"line_start":32,"line_end":32,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\ref.rs","byte_start":190479,"byte_end":190482,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This is *only* pointer equality, and does *not* run any inner value's","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\ref.rs","byte_start":190487,"byte_end":190560,"line_start":34,"line_end":34,"column_start":5,"column_end":78}},{"value":"/ `Eq` implementation.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\ref.rs","byte_start":190565,"byte_end":190589,"line_start":35,"line_end":35,"column_start":5,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":2995},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":191942,"byte_end":191948,"line_start":38,"line_end":38,"column_start":12,"column_end":18},"name":"Config","qualname":"::runtime::Config","value":"Config {  }","parent":null,"children":[{"krate":0,"index":2996},{"krate":0,"index":2997},{"krate":0,"index":2998},{"krate":0,"index":2999},{"krate":0,"index":3000},{"krate":0,"index":3001},{"krate":0,"index":3002},{"krate":0,"index":3003},{"krate":0,"index":3004},{"krate":0,"index":3005},{"krate":0,"index":3006},{"krate":0,"index":3007}],"decl_id":null,"docs":" Global configuration options used to create an [`Engine`] and customize its\n behavior.","sig":null,"attributes":[{"value":"/ Global configuration options used to create an [`Engine`] and customize its","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":191713,"byte_end":191792,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ behavior.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":191793,"byte_end":191806,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":191807,"byte_end":191810,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ This structure exposed a builder-like interface and is primarily consumed by","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":191811,"byte_end":191891,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/ [`Engine::new()`]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":191892,"byte_end":191913,"line_start":36,"line_end":36,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1004},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":192597,"byte_end":192600,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"new","qualname":"<Config>::new","value":"pub fn new() -> Config","parent":null,"children":[],"decl_id":null,"docs":" Creates a new configuration object with the default configuration\n specified.\n","sig":null,"attributes":[{"value":"/ Creates a new configuration object with the default configuration","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":192497,"byte_end":192566,"line_start":56,"line_end":56,"column_start":5,"column_end":74}},{"value":"/ specified.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":192571,"byte_end":192585,"line_start":57,"line_end":57,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1005},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":194560,"byte_end":194570,"line_start":113,"line_end":113,"column_start":12,"column_end":22},"name":"debug_info","qualname":"<Config>::debug_info","value":"pub fn debug_info(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Configures whether DWARF debug information will be emitted during\n compilation.","sig":null,"attributes":[{"value":"/ Configures whether DWARF debug information will be emitted during","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":194407,"byte_end":194476,"line_start":109,"line_end":109,"column_start":5,"column_end":74}},{"value":"/ compilation.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":194481,"byte_end":194497,"line_start":110,"line_end":110,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":194502,"byte_end":194505,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ By default this option is `false`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":194510,"byte_end":194548,"line_start":112,"line_end":112,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1006},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":194956,"byte_end":194969,"line_start":125,"line_end":125,"column_start":12,"column_end":25},"name":"interruptable","qualname":"<Config>::interruptable","value":"pub fn interruptable(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Configures whether functions and loops will be interruptable via the\n [`Store::interrupt_handle`] method.","sig":null,"attributes":[{"value":"/ Configures whether functions and loops will be interruptable via the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":194678,"byte_end":194750,"line_start":118,"line_end":118,"column_start":5,"column_end":77}},{"value":"/ [`Store::interrupt_handle`] method.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":194755,"byte_end":194794,"line_start":119,"line_end":119,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":194799,"byte_end":194802,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ For more information see the documentation on","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":194807,"byte_end":194856,"line_start":121,"line_end":121,"column_start":5,"column_end":54}},{"value":"/ [`Store::interrupt_handle`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":194861,"byte_end":194893,"line_start":122,"line_end":122,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":194898,"byte_end":194901,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ By default this option is `false`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":194906,"byte_end":194944,"line_start":124,"line_end":124,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1007},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":195865,"byte_end":195879,"line_start":144,"line_end":144,"column_start":12,"column_end":26},"name":"max_wasm_stack","qualname":"<Config>::max_wasm_stack","value":"pub fn max_wasm_stack(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Configures the maximum amount of native stack space available to\n executing WebAssembly code.","sig":null,"attributes":[{"value":"/ Configures the maximum amount of native stack space available to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":195080,"byte_end":195148,"line_start":130,"line_end":130,"column_start":5,"column_end":73}},{"value":"/ executing WebAssembly code.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":195153,"byte_end":195184,"line_start":131,"line_end":131,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":195189,"byte_end":195192,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ WebAssembly code currently executes on the native call stack for its own","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":195197,"byte_end":195273,"line_start":133,"line_end":133,"column_start":5,"column_end":81}},{"value":"/ call frames. WebAssembly, however, also has well-defined semantics on","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":195278,"byte_end":195351,"line_start":134,"line_end":134,"column_start":5,"column_end":78}},{"value":"/ stack overflow. This is intended to be a knob which can help configure","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":195356,"byte_end":195430,"line_start":135,"line_end":135,"column_start":5,"column_end":79}},{"value":"/ how much native stack space a wasm module is allowed to consume. Note","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":195435,"byte_end":195508,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ that the number here is not super-precise, but rather wasm will take at","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":195513,"byte_end":195588,"line_start":137,"line_end":137,"column_start":5,"column_end":80}},{"value":"/ most \"pretty close to this much\" stack space.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":195593,"byte_end":195642,"line_start":138,"line_end":138,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":195647,"byte_end":195650,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ If a wasm call (or series of nested wasm calls) take more stack space","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":195655,"byte_end":195728,"line_start":140,"line_end":140,"column_start":5,"column_end":78}},{"value":"/ than the `size` specified then a stack overflow trap will be raised.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":195733,"byte_end":195805,"line_start":141,"line_end":141,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":195810,"byte_end":195813,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ By default this option is 1 MB.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":195818,"byte_end":195853,"line_start":143,"line_end":143,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":196954,"byte_end":196966,"line_start":169,"line_end":169,"column_start":12,"column_end":24},"name":"wasm_threads","qualname":"<Config>::wasm_threads","value":"pub fn wasm_threads(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Configures whether the WebAssembly threads proposal will be enabled for\n compilation.","sig":null,"attributes":[{"value":"/ Configures whether the WebAssembly threads proposal will be enabled for","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":195979,"byte_end":196054,"line_start":149,"line_end":149,"column_start":5,"column_end":80}},{"value":"/ compilation.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":196059,"byte_end":196075,"line_start":150,"line_end":150,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":196080,"byte_end":196083,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ The [WebAssembly threads proposal][threads] is not currently fully","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":196088,"byte_end":196158,"line_start":152,"line_end":152,"column_start":5,"column_end":75}},{"value":"/ standardized and is undergoing development. Additionally the support in","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":196163,"byte_end":196238,"line_start":153,"line_end":153,"column_start":5,"column_end":80}},{"value":"/ wasmtime itself is still being worked on. Support for this feature can","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":196243,"byte_end":196317,"line_start":154,"line_end":154,"column_start":5,"column_end":79}},{"value":"/ be enabled through this method for appropriate wasm modules.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":196322,"byte_end":196386,"line_start":155,"line_end":155,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":196391,"byte_end":196394,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This feature gates items such as shared memories and atomic","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":196399,"byte_end":196462,"line_start":157,"line_end":157,"column_start":5,"column_end":68}},{"value":"/ instructions. Note that enabling the threads feature will","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":196467,"byte_end":196528,"line_start":158,"line_end":158,"column_start":5,"column_end":66}},{"value":"/ also enable the bulk memory feature.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":196533,"byte_end":196573,"line_start":159,"line_end":159,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":196578,"byte_end":196581,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ This is `false` by default.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":196586,"byte_end":196617,"line_start":161,"line_end":161,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":196622,"byte_end":196625,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ > **Note**: Wasmtime does not implement everything for the wasm threads","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":196630,"byte_end":196705,"line_start":163,"line_end":163,"column_start":5,"column_end":80}},{"value":"/ > spec at this time, so bugs, panics, and possibly segfaults should be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":196710,"byte_end":196784,"line_start":164,"line_end":164,"column_start":5,"column_end":79}},{"value":"/ > expected. This should not be enabled in a production setting right","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":196789,"byte_end":196861,"line_start":165,"line_end":165,"column_start":5,"column_end":77}},{"value":"/ > now.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":196866,"byte_end":196876,"line_start":166,"line_end":166,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":196881,"byte_end":196884,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ [threads]: https://github.com/webassembly/threads","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":196889,"byte_end":196942,"line_start":168,"line_end":168,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1009},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":197779,"byte_end":197799,"line_start":191,"line_end":191,"column_start":12,"column_end":32},"name":"wasm_reference_types","qualname":"<Config>::wasm_reference_types","value":"pub fn wasm_reference_types(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Configures whether the [WebAssembly reference types proposal][proposal]\n will be enabled for compilation.","sig":null,"attributes":[{"value":"/ Configures whether the [WebAssembly reference types proposal][proposal]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":197206,"byte_end":197281,"line_start":178,"line_end":178,"column_start":5,"column_end":80}},{"value":"/ will be enabled for compilation.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":197286,"byte_end":197322,"line_start":179,"line_end":179,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":197327,"byte_end":197330,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ This feature gates items such as the `externref` and `funcref` types as","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":197335,"byte_end":197410,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ well as allowing a module to define multiple tables.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":197415,"byte_end":197471,"line_start":182,"line_end":182,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":197476,"byte_end":197479,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ Note that enabling the reference types feature will also enable the bulk","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":197484,"byte_end":197560,"line_start":184,"line_end":184,"column_start":5,"column_end":81}},{"value":"/ memory feature.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":197565,"byte_end":197584,"line_start":185,"line_end":185,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":197589,"byte_end":197592,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ This is `true` by default on x86-64, and `false` by default on other","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":197597,"byte_end":197669,"line_start":187,"line_end":187,"column_start":5,"column_end":77}},{"value":"/ architectures.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":197674,"byte_end":197692,"line_start":188,"line_end":188,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":197697,"byte_end":197700,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ [proposal]: https://github.com/webassembly/reference-types","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":197705,"byte_end":197767,"line_start":190,"line_end":190,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1010},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":199081,"byte_end":199090,"line_start":226,"line_end":226,"column_start":12,"column_end":21},"name":"wasm_simd","qualname":"<Config>::wasm_simd","value":"pub fn wasm_simd(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Configures whether the WebAssembly SIMD proposal will be\n enabled for compilation.","sig":null,"attributes":[{"value":"/ Configures whether the WebAssembly SIMD proposal will be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":198178,"byte_end":198238,"line_start":206,"line_end":206,"column_start":5,"column_end":65}},{"value":"/ enabled for compilation.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":198243,"byte_end":198271,"line_start":207,"line_end":207,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":198276,"byte_end":198279,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ The [WebAssembly SIMD proposal][proposal] is not currently","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":198284,"byte_end":198346,"line_start":209,"line_end":209,"column_start":5,"column_end":67}},{"value":"/ fully standardized and is undergoing development. Additionally the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":198351,"byte_end":198421,"line_start":210,"line_end":210,"column_start":5,"column_end":75}},{"value":"/ support in wasmtime itself is still being worked on. Support for this","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":198426,"byte_end":198499,"line_start":211,"line_end":211,"column_start":5,"column_end":78}},{"value":"/ feature can be enabled through this method for appropriate wasm","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":198504,"byte_end":198571,"line_start":212,"line_end":212,"column_start":5,"column_end":72}},{"value":"/ modules.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":198576,"byte_end":198588,"line_start":213,"line_end":213,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":198593,"byte_end":198596,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ This feature gates items such as the `v128` type and all of its","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":198601,"byte_end":198668,"line_start":215,"line_end":215,"column_start":5,"column_end":72}},{"value":"/ operators being in a module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":198673,"byte_end":198705,"line_start":216,"line_end":216,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":198710,"byte_end":198713,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ This is `false` by default.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":198718,"byte_end":198749,"line_start":218,"line_end":218,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":198754,"byte_end":198757,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ > **Note**: Wasmtime does not implement everything for the wasm simd","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":198762,"byte_end":198834,"line_start":220,"line_end":220,"column_start":5,"column_end":77}},{"value":"/ > spec at this time, so bugs, panics, and possibly segfaults should be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":198839,"byte_end":198913,"line_start":221,"line_end":221,"column_start":5,"column_end":79}},{"value":"/ > expected. This should not be enabled in a production setting right","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":198918,"byte_end":198990,"line_start":222,"line_end":222,"column_start":5,"column_end":77}},{"value":"/ > now.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":198995,"byte_end":199005,"line_start":223,"line_end":223,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":199010,"byte_end":199013,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ [proposal]: https://github.com/webassembly/simd","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":199018,"byte_end":199069,"line_start":225,"line_end":225,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1011},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":199747,"byte_end":199763,"line_start":244,"line_end":244,"column_start":12,"column_end":28},"name":"wasm_bulk_memory","qualname":"<Config>::wasm_bulk_memory","value":"pub fn wasm_bulk_memory(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Configures whether the [WebAssembly bulk memory operations\n proposal][proposal] will be enabled for compilation.","sig":null,"attributes":[{"value":"/ Configures whether the [WebAssembly bulk memory operations","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":199346,"byte_end":199408,"line_start":235,"line_end":235,"column_start":5,"column_end":67}},{"value":"/ proposal][proposal] will be enabled for compilation.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":199413,"byte_end":199469,"line_start":236,"line_end":236,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":199474,"byte_end":199477,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ This feature gates items such as the `memory.copy` instruction, passive","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":199482,"byte_end":199557,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ data/table segments, etc, being in a module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":199562,"byte_end":199610,"line_start":239,"line_end":239,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":199615,"byte_end":199618,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ This is `true` by default.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":199623,"byte_end":199653,"line_start":241,"line_end":241,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":199658,"byte_end":199661,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ [proposal]: https://github.com/webassembly/bulk-memory-operations","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":199666,"byte_end":199735,"line_start":243,"line_end":243,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":200210,"byte_end":200226,"line_start":258,"line_end":258,"column_start":12,"column_end":28},"name":"wasm_multi_value","qualname":"<Config>::wasm_multi_value","value":"pub fn wasm_multi_value(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Configures whether the WebAssembly multi-value proposal will\n be enabled for compilation.","sig":null,"attributes":[{"value":"/ Configures whether the WebAssembly multi-value proposal will","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":199868,"byte_end":199932,"line_start":249,"line_end":249,"column_start":5,"column_end":69}},{"value":"/ be enabled for compilation.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":199937,"byte_end":199968,"line_start":250,"line_end":250,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":199973,"byte_end":199976,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ This feature gates functions and blocks returning multiple values in a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":199981,"byte_end":200055,"line_start":252,"line_end":252,"column_start":5,"column_end":79}},{"value":"/ module, for example.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":200060,"byte_end":200084,"line_start":253,"line_end":253,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":200089,"byte_end":200092,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ This is `true` by default.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":200097,"byte_end":200127,"line_start":255,"line_end":255,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":200132,"byte_end":200135,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ [proposal]: https://github.com/webassembly/multi-value","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":200140,"byte_end":200198,"line_start":257,"line_end":257,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1013},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":200912,"byte_end":200920,"line_start":276,"line_end":276,"column_start":12,"column_end":20},"name":"strategy","qualname":"<Config>::strategy","value":"pub fn strategy(&mut Self, Strategy) -> Result<&mut Self>","parent":null,"children":[],"decl_id":null,"docs":" Configures which compilation strategy will be used for wasm modules.","sig":null,"attributes":[{"value":"/ Configures which compilation strategy will be used for wasm modules.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":200331,"byte_end":200403,"line_start":263,"line_end":263,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":200408,"byte_end":200411,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ This method can be used to configure which compiler is used for wasm","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":200416,"byte_end":200488,"line_start":265,"line_end":265,"column_start":5,"column_end":77}},{"value":"/ modules, and for more documentation consult the [`Strategy`] enumeration","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":200493,"byte_end":200569,"line_start":266,"line_end":266,"column_start":5,"column_end":81}},{"value":"/ and its documentation.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":200574,"byte_end":200600,"line_start":267,"line_end":267,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":200605,"byte_end":200608,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ The default value for this is `Strategy::Auto`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":200613,"byte_end":200664,"line_start":269,"line_end":269,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":200669,"byte_end":200672,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":200677,"byte_end":200689,"line_start":271,"line_end":271,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":200694,"byte_end":200697,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ Some compilation strategies require compile-time options of `wasmtime`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":200702,"byte_end":200776,"line_start":273,"line_end":273,"column_start":5,"column_end":79}},{"value":"/ itself to be set, but if they're not set and the strategy is specified","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":200781,"byte_end":200855,"line_start":274,"line_end":274,"column_start":5,"column_end":79}},{"value":"/ here then an error will be returned.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":200860,"byte_end":200900,"line_start":275,"line_end":275,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":201721,"byte_end":201729,"line_start":294,"line_end":294,"column_start":12,"column_end":20},"name":"profiler","qualname":"<Config>::profiler","value":"pub fn profiler(&mut Self, ProfilingStrategy) -> Result<&mut Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a default profiler based on the profiling strategy choosen","sig":null,"attributes":[{"value":"/ Creates a default profiler based on the profiling strategy choosen","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":201482,"byte_end":201552,"line_start":290,"line_end":290,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":201557,"byte_end":201560,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ Profiler creation calls the type's default initializer where the purpose is","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":201565,"byte_end":201644,"line_start":292,"line_end":292,"column_start":5,"column_end":84}},{"value":"/ really just to put in place the type used for profiling.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":201649,"byte_end":201709,"line_start":293,"line_end":293,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":202557,"byte_end":202581,"line_start":311,"line_end":311,"column_start":12,"column_end":36},"name":"cranelift_debug_verifier","qualname":"<Config>::cranelift_debug_verifier","value":"pub fn cranelift_debug_verifier(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Configures whether the debug verifier of Cranelift is enabled or not.","sig":null,"attributes":[{"value":"/ Configures whether the debug verifier of Cranelift is enabled or not.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":202137,"byte_end":202210,"line_start":303,"line_end":303,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":202215,"byte_end":202218,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ When Cranelift is used as a code generation backend this will configure","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":202223,"byte_end":202298,"line_start":305,"line_end":305,"column_start":5,"column_end":80}},{"value":"/ it to have the `enable_verifier` flag which will enable a number of debug","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":202303,"byte_end":202380,"line_start":306,"line_end":306,"column_start":5,"column_end":82}},{"value":"/ checks inside of Cranelift. This is largely only useful for the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":202385,"byte_end":202452,"line_start":307,"line_end":307,"column_start":5,"column_end":72}},{"value":"/ developers of wasmtime itself.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":202457,"byte_end":202491,"line_start":308,"line_end":308,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":202496,"byte_end":202499,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ The default value for this is `false`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":202504,"byte_end":202545,"line_start":310,"line_end":310,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":203169,"byte_end":203188,"line_start":326,"line_end":326,"column_start":12,"column_end":31},"name":"cranelift_opt_level","qualname":"<Config>::cranelift_opt_level","value":"pub fn cranelift_opt_level(&mut Self, OptLevel) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Configures the Cranelift code generator optimization level.","sig":null,"attributes":[{"value":"/ Configures the Cranelift code generator optimization level.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":202808,"byte_end":202871,"line_start":319,"line_end":319,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":202876,"byte_end":202879,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ When the Cranelift code generator is used you can configure the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":202884,"byte_end":202951,"line_start":321,"line_end":321,"column_start":5,"column_end":72}},{"value":"/ optimization level used for generated code in a few various ways. For","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":202956,"byte_end":203029,"line_start":322,"line_end":322,"column_start":5,"column_end":78}},{"value":"/ more information see the documentation of [`OptLevel`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":203034,"byte_end":203093,"line_start":323,"line_end":323,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":203098,"byte_end":203101,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ The default value for this is `OptLevel::None`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":203106,"byte_end":203157,"line_start":325,"line_end":325,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1017},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":203998,"byte_end":204028,"line_start":346,"line_end":346,"column_start":12,"column_end":42},"name":"cranelift_nan_canonicalization","qualname":"<Config>::cranelift_nan_canonicalization","value":"pub fn cranelift_nan_canonicalization(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Configures whether Cranelift should perform a NaN-canonicalization pass.","sig":null,"attributes":[{"value":"/ Configures whether Cranelift should perform a NaN-canonicalization pass.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":203532,"byte_end":203608,"line_start":338,"line_end":338,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":203613,"byte_end":203616,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ When Cranelift is used as a code generation backend this will configure","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":203621,"byte_end":203696,"line_start":340,"line_end":340,"column_start":5,"column_end":80}},{"value":"/ it to replace NaNs with a single canonical value. This is useful for users","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":203701,"byte_end":203779,"line_start":341,"line_end":341,"column_start":5,"column_end":83}},{"value":"/ requiring entirely deterministic WebAssembly computation.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":203784,"byte_end":203845,"line_start":342,"line_end":342,"column_start":5,"column_end":66}},{"value":"/ This is not required by the WebAssembly spec, so it is not enabled by default.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":203850,"byte_end":203932,"line_start":343,"line_end":343,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":203937,"byte_end":203940,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ The default value for this is `false`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":203945,"byte_end":203986,"line_start":345,"line_end":345,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1018},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":204901,"byte_end":204921,"line_start":367,"line_end":367,"column_start":19,"column_end":39},"name":"cranelift_other_flag","qualname":"<Config>::cranelift_other_flag","value":"pub unsafe fn cranelift_other_flag(&mut Self, &str, &str) -> Result<&mut Self>","parent":null,"children":[],"decl_id":null,"docs":" Allows settings another Cranelift flag defined by a flag name and value. This allows\n fine-tuning of Cranelift settings.","sig":null,"attributes":[{"value":"/ Allows settings another Cranelift flag defined by a flag name and value. This allows","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":204267,"byte_end":204355,"line_start":354,"line_end":354,"column_start":5,"column_end":93}},{"value":"/ fine-tuning of Cranelift settings.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":204360,"byte_end":204398,"line_start":355,"line_end":355,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":204403,"byte_end":204406,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ Since Cranelift flags may be unstable, this method should not be considered to be stable","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":204411,"byte_end":204503,"line_start":357,"line_end":357,"column_start":5,"column_end":97}},{"value":"/ either; other `Config` functions should be preferred for stability.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":204508,"byte_end":204579,"line_start":358,"line_end":358,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":204584,"byte_end":204587,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ Note that this is marked as unsafe, because setting the wrong flag might break invariants,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":204592,"byte_end":204686,"line_start":360,"line_end":360,"column_start":5,"column_end":99}},{"value":"/ resulting in execution hazards.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":204691,"byte_end":204726,"line_start":361,"line_end":361,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":204731,"byte_end":204734,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":204739,"byte_end":204751,"line_start":363,"line_end":363,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":204756,"byte_end":204759,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ This method can fail if the flag's name does not exist, or the value is not appropriate for","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":204764,"byte_end":204859,"line_start":365,"line_end":365,"column_start":5,"column_end":100}},{"value":"/ the flag type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":204864,"byte_end":204882,"line_start":366,"line_end":366,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1019},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":207578,"byte_end":207594,"line_start":432,"line_end":432,"column_start":12,"column_end":28},"name":"with_host_memory","qualname":"<Config>::with_host_memory","value":"pub fn with_host_memory(&mut Self, Arc<dyn MemoryCreator>) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a custom memory creator\n","sig":null,"attributes":[{"value":"/ Sets a custom memory creator","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":207534,"byte_end":207566,"line_start":431,"line_end":431,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1020},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":212306,"byte_end":212332,"line_start":515,"line_end":515,"column_start":12,"column_end":38},"name":"static_memory_maximum_size","qualname":"<Config>::static_memory_maximum_size","value":"pub fn static_memory_maximum_size(&mut Self, u64) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Configures the maximum size, in bytes, where a linear memory is\n considered static, above which it'll be considered dynamic.","sig":null,"attributes":[{"value":"/ Configures the maximum size, in bytes, where a linear memory is","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":207754,"byte_end":207821,"line_start":437,"line_end":437,"column_start":5,"column_end":72}},{"value":"/ considered static, above which it'll be considered dynamic.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":207826,"byte_end":207889,"line_start":438,"line_end":438,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":207894,"byte_end":207897,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ This function configures the threshold for wasm memories whether they're","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":207902,"byte_end":207978,"line_start":440,"line_end":440,"column_start":5,"column_end":81}},{"value":"/ implemented as a dynamically relocatable chunk of memory or a statically","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":207983,"byte_end":208059,"line_start":441,"line_end":441,"column_start":5,"column_end":81}},{"value":"/ located chunk of memory. The `max_size` parameter here is the size, in","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":208064,"byte_end":208138,"line_start":442,"line_end":442,"column_start":5,"column_end":79}},{"value":"/ bytes, where if the maximum size of a linear memory is below `max_size`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":208143,"byte_end":208218,"line_start":443,"line_end":443,"column_start":5,"column_end":80}},{"value":"/ then it will be statically allocated with enough space to never have to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":208223,"byte_end":208298,"line_start":444,"line_end":444,"column_start":5,"column_end":80}},{"value":"/ move. If the maximum size of a linear memory is larger than `max_size`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":208303,"byte_end":208377,"line_start":445,"line_end":445,"column_start":5,"column_end":79}},{"value":"/ then wasm memory will be dynamically located and may move in memory","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":208382,"byte_end":208453,"line_start":446,"line_end":446,"column_start":5,"column_end":76}},{"value":"/ through growth operations.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":208458,"byte_end":208488,"line_start":447,"line_end":447,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":208493,"byte_end":208496,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ Specifying a `max_size` of 0 means that all memories will be dynamic and","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":208501,"byte_end":208577,"line_start":449,"line_end":449,"column_start":5,"column_end":81}},{"value":"/ may be relocated through `memory.grow`. Also note that if any wasm","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":208582,"byte_end":208652,"line_start":450,"line_end":450,"column_start":5,"column_end":75}},{"value":"/ memory's maximum size is below `max_size` then it will still reserve","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":208657,"byte_end":208729,"line_start":451,"line_end":451,"column_start":5,"column_end":77}},{"value":"/ `max_size` bytes in the virtual memory space.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":208734,"byte_end":208783,"line_start":452,"line_end":452,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":208788,"byte_end":208791,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ ## Static vs Dynamic Memory","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":208796,"byte_end":208827,"line_start":454,"line_end":454,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":208832,"byte_end":208835,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ Linear memories represent contiguous arrays of bytes, but they can also","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":208840,"byte_end":208915,"line_start":456,"line_end":456,"column_start":5,"column_end":80}},{"value":"/ be grown through the API and wasm instructions. When memory is grown if","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":208920,"byte_end":208995,"line_start":457,"line_end":457,"column_start":5,"column_end":80}},{"value":"/ space hasn't been preallocated then growth may involve relocating the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":209000,"byte_end":209073,"line_start":458,"line_end":458,"column_start":5,"column_end":78}},{"value":"/ base pointer in memory. Memories in Wasmtime are classified in two","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":209078,"byte_end":209148,"line_start":459,"line_end":459,"column_start":5,"column_end":75}},{"value":"/ different ways:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":209153,"byte_end":209172,"line_start":460,"line_end":460,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":209177,"byte_end":209180,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ * **static** - these memories preallocate all space necessary they'll","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":209185,"byte_end":209258,"line_start":462,"line_end":462,"column_start":5,"column_end":78}},{"value":"/   ever need, meaning that the base pointer of these memories is never","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":209263,"byte_end":209336,"line_start":463,"line_end":463,"column_start":5,"column_end":78}},{"value":"/   moved. Static memories may take more virtual memory space because of","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":209341,"byte_end":209415,"line_start":464,"line_end":464,"column_start":5,"column_end":79}},{"value":"/   pre-reserving space for memories.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":209420,"byte_end":209459,"line_start":465,"line_end":465,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":209464,"byte_end":209467,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ * **dynamic** - these memories are not preallocated and may move during","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":209472,"byte_end":209547,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/   growth operations. Dynamic memories consume less virtual memory space","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":209552,"byte_end":209627,"line_start":468,"line_end":468,"column_start":5,"column_end":80}},{"value":"/   because they don't need to preallocate space for future growth.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":209632,"byte_end":209701,"line_start":469,"line_end":469,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":209706,"byte_end":209709,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ Static memories can be optimized better in JIT code because once the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":209714,"byte_end":209786,"line_start":471,"line_end":471,"column_start":5,"column_end":77}},{"value":"/ base address is loaded in a function it's known that we never need to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":209791,"byte_end":209864,"line_start":472,"line_end":472,"column_start":5,"column_end":78}},{"value":"/ reload it because it never changes, `memory.grow` is generally a pretty","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":209869,"byte_end":209944,"line_start":473,"line_end":473,"column_start":5,"column_end":80}},{"value":"/ fast operation because the wasm memory is never relocated, and under","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":209949,"byte_end":210021,"line_start":474,"line_end":474,"column_start":5,"column_end":77}},{"value":"/ some conditions bounds checks can be elided on memory accesses.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":210026,"byte_end":210093,"line_start":475,"line_end":475,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":210098,"byte_end":210101,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ Dynamic memories can't be quite as heavily optimized because the base","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":210106,"byte_end":210179,"line_start":477,"line_end":477,"column_start":5,"column_end":78}},{"value":"/ address may need to be reloaded more often, they may require relocating","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":210184,"byte_end":210259,"line_start":478,"line_end":478,"column_start":5,"column_end":80}},{"value":"/ lots of data on `memory.grow`, and dynamic memories require","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":210264,"byte_end":210327,"line_start":479,"line_end":479,"column_start":5,"column_end":68}},{"value":"/ unconditional bounds checks on all memory accesses.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":210332,"byte_end":210387,"line_start":480,"line_end":480,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":210392,"byte_end":210395,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ ## Should you use static or dynamic memory?","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":210400,"byte_end":210447,"line_start":482,"line_end":482,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":210452,"byte_end":210455,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ In general you probably don't need to change the value of this property.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":210460,"byte_end":210536,"line_start":484,"line_end":484,"column_start":5,"column_end":81}},{"value":"/ The defaults here are optimized for each target platform to consume a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":210541,"byte_end":210614,"line_start":485,"line_end":485,"column_start":5,"column_end":78}},{"value":"/ reasonable amount of physical memory while also generating speedy","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":210619,"byte_end":210688,"line_start":486,"line_end":486,"column_start":5,"column_end":74}},{"value":"/ machine code.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":210693,"byte_end":210710,"line_start":487,"line_end":487,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":210715,"byte_end":210718,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ One of the main reasons you may want to configure this today is if your","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":210723,"byte_end":210798,"line_start":489,"line_end":489,"column_start":5,"column_end":80}},{"value":"/ environment can't reserve virtual memory space for each wasm linear","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":210803,"byte_end":210874,"line_start":490,"line_end":490,"column_start":5,"column_end":76}},{"value":"/ memory. On 64-bit platforms wasm memories require a 6GB reservation by","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":210879,"byte_end":210953,"line_start":491,"line_end":491,"column_start":5,"column_end":79}},{"value":"/ default, and system limits may prevent this in some scenarios. In this","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":210958,"byte_end":211032,"line_start":492,"line_end":492,"column_start":5,"column_end":79}},{"value":"/ case you may wish to force memories to be allocated dynamically meaning","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":211037,"byte_end":211112,"line_start":493,"line_end":493,"column_start":5,"column_end":80}},{"value":"/ that the virtual memory footprint of creating a wasm memory should be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":211117,"byte_end":211190,"line_start":494,"line_end":494,"column_start":5,"column_end":78}},{"value":"/ exactly what's used by the wasm itself.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":211195,"byte_end":211238,"line_start":495,"line_end":495,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":211243,"byte_end":211246,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ For 32-bit memories a static memory must contain at least 4GB of","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":211251,"byte_end":211319,"line_start":497,"line_end":497,"column_start":5,"column_end":73}},{"value":"/ reserved address space plus a guard page to elide any bounds checks at","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":211324,"byte_end":211398,"line_start":498,"line_end":498,"column_start":5,"column_end":79}},{"value":"/ all. Smaller static memories will use similar bounds checks as dynamic","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":211403,"byte_end":211477,"line_start":499,"line_end":499,"column_start":5,"column_end":79}},{"value":"/ memories.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":211482,"byte_end":211495,"line_start":500,"line_end":500,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":211500,"byte_end":211503,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ ## Default","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":211508,"byte_end":211522,"line_start":502,"line_end":502,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":211527,"byte_end":211530,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ The default value for this property depends on the host platform. For","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":211535,"byte_end":211608,"line_start":504,"line_end":504,"column_start":5,"column_end":78}},{"value":"/ 64-bit platforms there's lots of address space available, so the default","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":211613,"byte_end":211689,"line_start":505,"line_end":505,"column_start":5,"column_end":81}},{"value":"/ configured here is 4GB. WebAssembly linear memories currently max out at","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":211694,"byte_end":211770,"line_start":506,"line_end":506,"column_start":5,"column_end":81}},{"value":"/ 4GB which means that on 64-bit platforms Wasmtime by default always uses","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":211775,"byte_end":211851,"line_start":507,"line_end":507,"column_start":5,"column_end":81}},{"value":"/ a static memory. This, coupled with a sufficiently sized guard region,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":211856,"byte_end":211930,"line_start":508,"line_end":508,"column_start":5,"column_end":79}},{"value":"/ should produce the fastest JIT code on 64-bit platforms, but does","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":211935,"byte_end":212004,"line_start":509,"line_end":509,"column_start":5,"column_end":74}},{"value":"/ require a large address space reservation for each wasm memory.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":212009,"byte_end":212076,"line_start":510,"line_end":510,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":212081,"byte_end":212084,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ For 32-bit platforms this value defaults to 1GB. This means that wasm","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":212089,"byte_end":212162,"line_start":512,"line_end":512,"column_start":5,"column_end":78}},{"value":"/ memories whose maximum size is less than 1GB will be allocated","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":212167,"byte_end":212233,"line_start":513,"line_end":513,"column_start":5,"column_end":71}},{"value":"/ statically, otherwise they'll be considered dynamic.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":212238,"byte_end":212294,"line_start":514,"line_end":514,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1021},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":215140,"byte_end":215164,"line_start":569,"line_end":569,"column_start":12,"column_end":36},"name":"static_memory_guard_size","qualname":"<Config>::static_memory_guard_size","value":"pub fn static_memory_guard_size(&mut Self, u64) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Configures the size, in bytes, of the guard region used at the end of a\n static memory's address space reservation.","sig":null,"attributes":[{"value":"/ Configures the size, in bytes, of the guard region used at the end of a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":212576,"byte_end":212651,"line_start":521,"line_end":521,"column_start":5,"column_end":80}},{"value":"/ static memory's address space reservation.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":212656,"byte_end":212702,"line_start":522,"line_end":522,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":212707,"byte_end":212710,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ All WebAssembly loads/stores are bounds-checked and generate a trap if","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":212715,"byte_end":212789,"line_start":524,"line_end":524,"column_start":5,"column_end":79}},{"value":"/ they're out-of-bounds. Loads and stores are often very performance","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":212794,"byte_end":212864,"line_start":525,"line_end":525,"column_start":5,"column_end":75}},{"value":"/ critical, so we want the bounds check to be as fast as possible!","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":212869,"byte_end":212937,"line_start":526,"line_end":526,"column_start":5,"column_end":73}},{"value":"/ Accelerating these memory accesses is the motivation for a guard after a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":212942,"byte_end":213018,"line_start":527,"line_end":527,"column_start":5,"column_end":81}},{"value":"/ memory allocation.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":213023,"byte_end":213045,"line_start":528,"line_end":528,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":213050,"byte_end":213053,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ Memories (both static and dynamic) can be configured with a guard at the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":213058,"byte_end":213134,"line_start":530,"line_end":530,"column_start":5,"column_end":81}},{"value":"/ end of them which consists of unmapped virtual memory. This unmapped","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":213139,"byte_end":213211,"line_start":531,"line_end":531,"column_start":5,"column_end":77}},{"value":"/ memory will trigger a memory access violation (e.g. segfault) if","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":213216,"byte_end":213284,"line_start":532,"line_end":532,"column_start":5,"column_end":73}},{"value":"/ accessed. This allows JIT code to elide bounds checks if it can prove","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":213289,"byte_end":213362,"line_start":533,"line_end":533,"column_start":5,"column_end":78}},{"value":"/ that an access, if out of bounds, would hit the guard region. This means","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":213367,"byte_end":213443,"line_start":534,"line_end":534,"column_start":5,"column_end":81}},{"value":"/ that having such a guard of unmapped memory can remove the need for","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":213448,"byte_end":213519,"line_start":535,"line_end":535,"column_start":5,"column_end":76}},{"value":"/ bounds checks in JIT code.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":213524,"byte_end":213554,"line_start":536,"line_end":536,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":213559,"byte_end":213562,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ For the difference between static and dynamic memories, see the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":213567,"byte_end":213634,"line_start":538,"line_end":538,"column_start":5,"column_end":72}},{"value":"/ [`Config::static_memory_maximum_size`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":213639,"byte_end":213682,"line_start":539,"line_end":539,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":213687,"byte_end":213690,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ ## How big should the guard be?","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":213695,"byte_end":213730,"line_start":541,"line_end":541,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":213735,"byte_end":213738,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ In general, like with configuring `static_memory_maximum_size`, you","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":213743,"byte_end":213814,"line_start":543,"line_end":543,"column_start":5,"column_end":76}},{"value":"/ probably don't want to change this value from the defaults. Otherwise,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":213819,"byte_end":213893,"line_start":544,"line_end":544,"column_start":5,"column_end":79}},{"value":"/ though, the size of the guard region affects the number of bounds checks","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":213898,"byte_end":213974,"line_start":545,"line_end":545,"column_start":5,"column_end":81}},{"value":"/ needed for generated wasm code. More specifically, loads/stores with","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":213979,"byte_end":214051,"line_start":546,"line_end":546,"column_start":5,"column_end":77}},{"value":"/ immediate offsets will generate bounds checks based on how big the guard","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":214056,"byte_end":214132,"line_start":547,"line_end":547,"column_start":5,"column_end":81}},{"value":"/ page is.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":214137,"byte_end":214149,"line_start":548,"line_end":548,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":214154,"byte_end":214157,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ For 32-bit memories a 4GB static memory is required to even start","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":214162,"byte_end":214231,"line_start":550,"line_end":550,"column_start":5,"column_end":74}},{"value":"/ removing bounds checks. A 4GB guard size will guarantee that the module","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":214236,"byte_end":214311,"line_start":551,"line_end":551,"column_start":5,"column_end":80}},{"value":"/ has zero bounds checks for memory accesses. A 2GB guard size will","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":214316,"byte_end":214385,"line_start":552,"line_end":552,"column_start":5,"column_end":74}},{"value":"/ eliminate all bounds checks with an immediate offset less than 2GB. A","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":214390,"byte_end":214463,"line_start":553,"line_end":553,"column_start":5,"column_end":78}},{"value":"/ guard size of zero means that all memory accesses will still have bounds","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":214468,"byte_end":214544,"line_start":554,"line_end":554,"column_start":5,"column_end":81}},{"value":"/ checks.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":214549,"byte_end":214560,"line_start":555,"line_end":555,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":214565,"byte_end":214568,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ ## Default","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":214573,"byte_end":214587,"line_start":557,"line_end":557,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":214592,"byte_end":214595,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ The default value for this property is 2GB on 64-bit platforms. This","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":214600,"byte_end":214672,"line_start":559,"line_end":559,"column_start":5,"column_end":77}},{"value":"/ allows eliminating almost all bounds checks on loads/stores with an","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":214677,"byte_end":214748,"line_start":560,"line_end":560,"column_start":5,"column_end":76}},{"value":"/ immediate offset of less than 2GB. On 32-bit platforms this defaults to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":214753,"byte_end":214828,"line_start":561,"line_end":561,"column_start":5,"column_end":80}},{"value":"/ 64KB.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":214833,"byte_end":214842,"line_start":562,"line_end":562,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":214847,"byte_end":214850,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ ## Static vs Dynamic Guard Size","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":214855,"byte_end":214890,"line_start":564,"line_end":564,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":214895,"byte_end":214898,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ Note that for now the static memory guard size must be at least as large","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":214903,"byte_end":214979,"line_start":566,"line_end":566,"column_start":5,"column_end":81}},{"value":"/ as the dynamic memory guard size, so configuring this property to be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":214984,"byte_end":215056,"line_start":567,"line_end":567,"column_start":5,"column_end":77}},{"value":"/ smaller than the dynamic memory guard size will have no effect.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":215061,"byte_end":215128,"line_start":568,"line_end":568,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1022},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":216479,"byte_end":216504,"line_start":598,"line_end":598,"column_start":12,"column_end":37},"name":"dynamic_memory_guard_size","qualname":"<Config>::dynamic_memory_guard_size","value":"pub fn dynamic_memory_guard_size(&mut Self, u64) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Configures the size, in bytes, of the guard region used at the end of a\n dynamic memory's address space reservation.","sig":null,"attributes":[{"value":"/ Configures the size, in bytes, of the guard region used at the end of a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":215451,"byte_end":215526,"line_start":576,"line_end":576,"column_start":5,"column_end":80}},{"value":"/ dynamic memory's address space reservation.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":215531,"byte_end":215578,"line_start":577,"line_end":577,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":215583,"byte_end":215586,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ For the difference between static and dynamic memories, see the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":215591,"byte_end":215658,"line_start":579,"line_end":579,"column_start":5,"column_end":72}},{"value":"/ [`Config::static_memory_maximum_size`]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":215663,"byte_end":215705,"line_start":580,"line_end":580,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":215710,"byte_end":215713,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ For more information about what a guard is, see the documentation on","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":215718,"byte_end":215790,"line_start":582,"line_end":582,"column_start":5,"column_end":77}},{"value":"/ [`Config::static_memory_guard_size`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":215795,"byte_end":215836,"line_start":583,"line_end":583,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":215841,"byte_end":215844,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ Note that the size of the guard region for dynamic memories is not super","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":215849,"byte_end":215925,"line_start":585,"line_end":585,"column_start":5,"column_end":81}},{"value":"/ critical for performance. Making it reasonably-sized can improve","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":215930,"byte_end":215998,"line_start":586,"line_end":586,"column_start":5,"column_end":73}},{"value":"/ generated code slightly, but for maximum performance you'll want to lean","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":216003,"byte_end":216079,"line_start":587,"line_end":587,"column_start":5,"column_end":81}},{"value":"/ towards static memories rather than dynamic anyway.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":216084,"byte_end":216139,"line_start":588,"line_end":588,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":216144,"byte_end":216147,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ Also note that the dynamic memory guard size must be smaller than the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":216152,"byte_end":216225,"line_start":590,"line_end":590,"column_start":5,"column_end":78}},{"value":"/ static memory guard size, so if a large dynamic memory guard is","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":216230,"byte_end":216297,"line_start":591,"line_end":591,"column_start":5,"column_end":72}},{"value":"/ specified then the static memory guard size will also be automatically","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":216302,"byte_end":216376,"line_start":592,"line_end":592,"column_start":5,"column_end":79}},{"value":"/ increased.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":216381,"byte_end":216395,"line_start":593,"line_end":593,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":216400,"byte_end":216403,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ ## Default","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":216408,"byte_end":216422,"line_start":595,"line_end":595,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":216427,"byte_end":216430,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ This value defaults to 64KB.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":216435,"byte_end":216467,"line_start":597,"line_end":597,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3012},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":219907,"byte_end":219911,"line_start":697,"line_end":697,"column_start":5,"column_end":9},"name":"Auto","qualname":"::runtime::Strategy::Auto","value":"Strategy::Auto","parent":{"krate":0,"index":3011},"children":[],"decl_id":null,"docs":" An indicator that the compilation strategy should be automatically\n selected.","sig":null,"attributes":[{"value":"/ An indicator that the compilation strategy should be automatically","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":219489,"byte_end":219559,"line_start":688,"line_end":688,"column_start":5,"column_end":75}},{"value":"/ selected.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":219564,"byte_end":219577,"line_start":689,"line_end":689,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":219582,"byte_end":219585,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ This is generally what you want for most projects and indicates that the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":219590,"byte_end":219666,"line_start":691,"line_end":691,"column_start":5,"column_end":81}},{"value":"/ `wasmtime` crate itself should make the decision about what the best","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":219671,"byte_end":219743,"line_start":692,"line_end":692,"column_start":5,"column_end":77}},{"value":"/ code generator for a wasm module is.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":219748,"byte_end":219788,"line_start":693,"line_end":693,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":219793,"byte_end":219796,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ Currently this always defaults to Cranelift, but the default value will","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":219801,"byte_end":219876,"line_start":695,"line_end":695,"column_start":5,"column_end":80}},{"value":"/ change over time.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":219881,"byte_end":219902,"line_start":696,"line_end":696,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3014},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":220062,"byte_end":220071,"line_start":701,"line_end":701,"column_start":5,"column_end":14},"name":"Cranelift","qualname":"::runtime::Strategy::Cranelift","value":"Strategy::Cranelift","parent":{"krate":0,"index":3011},"children":[],"decl_id":null,"docs":" Currently the default backend, Cranelift aims to be a reasonably fast\n code generator which generates high quality machine code.\n","sig":null,"attributes":[{"value":"/ Currently the default backend, Cranelift aims to be a reasonably fast","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":219918,"byte_end":219991,"line_start":699,"line_end":699,"column_start":5,"column_end":78}},{"value":"/ code generator which generates high quality machine code.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":219996,"byte_end":220057,"line_start":700,"line_end":700,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3016},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":220333,"byte_end":220342,"line_start":708,"line_end":708,"column_start":5,"column_end":14},"name":"Lightbeam","qualname":"::runtime::Strategy::Lightbeam","value":"Strategy::Lightbeam","parent":{"krate":0,"index":3011},"children":[],"decl_id":null,"docs":" A single-pass code generator that is faster than Cranelift but doesn't\n produce as high-quality code.","sig":null,"attributes":[{"value":"/ A single-pass code generator that is faster than Cranelift but doesn't","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":220078,"byte_end":220152,"line_start":703,"line_end":703,"column_start":5,"column_end":79}},{"value":"/ produce as high-quality code.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":220157,"byte_end":220190,"line_start":704,"line_end":704,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":220195,"byte_end":220198,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ To successfully pass this argument to [`Config::strategy`] the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":220203,"byte_end":220269,"line_start":706,"line_end":706,"column_start":5,"column_end":71}},{"value":"/ `lightbeam` feature of this crate must be enabled.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":220274,"byte_end":220328,"line_start":707,"line_end":707,"column_start":5,"column_end":59}}]},{"kind":"Enum","id":{"krate":0,"index":3011},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":219474,"byte_end":219482,"line_start":687,"line_end":687,"column_start":10,"column_end":18},"name":"Strategy","qualname":"::runtime::Strategy","value":"pub enum Strategy { Auto, Cranelift, Lightbeam, }","parent":null,"children":[{"krate":0,"index":3012},{"krate":0,"index":3014},{"krate":0,"index":3016}],"decl_id":null,"docs":" Possible Compilation strategies for a wasm module.","sig":null,"attributes":[{"value":"/ Possible Compilation strategies for a wasm module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":219296,"byte_end":219350,"line_start":682,"line_end":682,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":219351,"byte_end":219354,"line_start":683,"line_end":683,"column_start":1,"column_end":4}},{"value":"/ This is used as an argument to the [`Config::strategy`] method.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":219355,"byte_end":219422,"line_start":684,"line_end":684,"column_start":1,"column_end":68}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":219423,"byte_end":219440,"line_start":685,"line_end":685,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3023},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":220585,"byte_end":220589,"line_start":717,"line_end":717,"column_start":5,"column_end":9},"name":"None","qualname":"::runtime::OptLevel::None","value":"OptLevel::None","parent":{"krate":0,"index":3022},"children":[],"decl_id":null,"docs":" No optimizations performed, minimizes compilation time by disabling most\n optimizations.\n","sig":null,"attributes":[{"value":"/ No optimizations performed, minimizes compilation time by disabling most","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":220481,"byte_end":220557,"line_start":715,"line_end":715,"column_start":5,"column_end":81}},{"value":"/ optimizations.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":220562,"byte_end":220580,"line_start":716,"line_end":716,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3025},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":220661,"byte_end":220666,"line_start":719,"line_end":719,"column_start":5,"column_end":10},"name":"Speed","qualname":"::runtime::OptLevel::Speed","value":"OptLevel::Speed","parent":{"krate":0,"index":3022},"children":[],"decl_id":null,"docs":" Generates the fastest possible code, but may take longer.\n","sig":null,"attributes":[{"value":"/ Generates the fastest possible code, but may take longer.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":220595,"byte_end":220656,"line_start":718,"line_end":718,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3027},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":220771,"byte_end":220783,"line_start":722,"line_end":722,"column_start":5,"column_end":17},"name":"SpeedAndSize","qualname":"::runtime::OptLevel::SpeedAndSize","value":"OptLevel::SpeedAndSize","parent":{"krate":0,"index":3022},"children":[],"decl_id":null,"docs":" Similar to `speed`, but also performs transformations aimed at reducing\n code size.\n","sig":null,"attributes":[{"value":"/ Similar to `speed`, but also performs transformations aimed at reducing","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":220672,"byte_end":220747,"line_start":720,"line_end":720,"column_start":5,"column_end":80}},{"value":"/ code size.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":220752,"byte_end":220766,"line_start":721,"line_end":721,"column_start":5,"column_end":19}}]},{"kind":"Enum","id":{"krate":0,"index":3022},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":220466,"byte_end":220474,"line_start":714,"line_end":714,"column_start":10,"column_end":18},"name":"OptLevel","qualname":"::runtime::OptLevel","value":"pub enum OptLevel { None, Speed, SpeedAndSize, }","parent":null,"children":[{"krate":0,"index":3023},{"krate":0,"index":3025},{"krate":0,"index":3027}],"decl_id":null,"docs":" Possible optimization levels for the Cranelift codegen backend.\n","sig":null,"attributes":[{"value":"/ Possible optimization levels for the Cranelift codegen backend.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":220347,"byte_end":220414,"line_start":711,"line_end":711,"column_start":1,"column_end":68}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":220415,"byte_end":220432,"line_start":712,"line_end":712,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3034},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":220929,"byte_end":220933,"line_start":729,"line_end":729,"column_start":5,"column_end":9},"name":"None","qualname":"::runtime::ProfilingStrategy::None","value":"ProfilingStrategy::None","parent":{"krate":0,"index":3033},"children":[],"decl_id":null,"docs":" No profiler support.\n","sig":null,"attributes":[{"value":"/ No profiler support.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":220900,"byte_end":220924,"line_start":728,"line_end":728,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3036},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":221033,"byte_end":221040,"line_start":733,"line_end":733,"column_start":5,"column_end":12},"name":"JitDump","qualname":"::runtime::ProfilingStrategy::JitDump","value":"ProfilingStrategy::JitDump","parent":{"krate":0,"index":3033},"children":[],"decl_id":null,"docs":" Collect profiling info for \"jitdump\" file format, used with `perf` on\n Linux.\n","sig":null,"attributes":[{"value":"/ Collect profiling info for \"jitdump\" file format, used with `perf` on","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":220940,"byte_end":221013,"line_start":731,"line_end":731,"column_start":5,"column_end":78}},{"value":"/ Linux.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":221018,"byte_end":221028,"line_start":732,"line_end":732,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3038},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":221126,"byte_end":221131,"line_start":736,"line_end":736,"column_start":5,"column_end":10},"name":"VTune","qualname":"::runtime::ProfilingStrategy::VTune","value":"ProfilingStrategy::VTune","parent":{"krate":0,"index":3033},"children":[],"decl_id":null,"docs":" Collect profiling info using the \"ittapi\", used with `VTune` on Linux.\n","sig":null,"attributes":[{"value":"/ Collect profiling info using the \"ittapi\", used with `VTune` on Linux.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":221047,"byte_end":221121,"line_start":735,"line_end":735,"column_start":5,"column_end":79}}]},{"kind":"Enum","id":{"krate":0,"index":3033},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":220876,"byte_end":220893,"line_start":727,"line_end":727,"column_start":10,"column_end":27},"name":"ProfilingStrategy","qualname":"::runtime::ProfilingStrategy","value":"pub enum ProfilingStrategy { None, JitDump, VTune, }","parent":null,"children":[{"krate":0,"index":3034},{"krate":0,"index":3036},{"krate":0,"index":3038}],"decl_id":null,"docs":" Select which profiling technique to support.\n","sig":null,"attributes":[{"value":"/ Select which profiling technique to support.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":220788,"byte_end":220836,"line_start":725,"line_end":725,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3045},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":222100,"byte_end":222106,"line_start":764,"line_end":764,"column_start":12,"column_end":18},"name":"Engine","qualname":"::runtime::Engine","value":"Engine {  }","parent":null,"children":[{"krate":0,"index":3046}],"decl_id":null,"docs":" An `Engine` which is a global context for compilation and management of wasm\n modules.","sig":null,"attributes":[{"value":"/ An `Engine` which is a global context for compilation and management of wasm","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":221147,"byte_end":221227,"line_start":741,"line_end":741,"column_start":1,"column_end":81}},{"value":"/ modules.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":221228,"byte_end":221240,"line_start":742,"line_end":742,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":221241,"byte_end":221244,"line_start":743,"line_end":743,"column_start":1,"column_end":4}},{"value":"/ An engine can be safely shared across threads and is a cheap cloneable","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":221245,"byte_end":221319,"line_start":744,"line_end":744,"column_start":1,"column_end":75}},{"value":"/ handle to the actual engine. The engine itself will be deallocate once all","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":221320,"byte_end":221398,"line_start":745,"line_end":745,"column_start":1,"column_end":79}},{"value":"/ references to it have gone away.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":221399,"byte_end":221435,"line_start":746,"line_end":746,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":221436,"byte_end":221439,"line_start":747,"line_end":747,"column_start":1,"column_end":4}},{"value":"/ Engines store global configuration preferences such as compilation settings,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":221440,"byte_end":221520,"line_start":748,"line_end":748,"column_start":1,"column_end":81}},{"value":"/ enabled features, etc. You'll likely only need at most one of these for a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":221521,"byte_end":221598,"line_start":749,"line_end":749,"column_start":1,"column_end":78}},{"value":"/ program.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":221599,"byte_end":221611,"line_start":750,"line_end":750,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":221612,"byte_end":221615,"line_start":751,"line_end":751,"column_start":1,"column_end":4}},{"value":"/ ## Engines and `Clone`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":221616,"byte_end":221642,"line_start":752,"line_end":752,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":221643,"byte_end":221646,"line_start":753,"line_end":753,"column_start":1,"column_end":4}},{"value":"/ Using `clone` on an `Engine` is a cheap operation. It will not create an","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":221647,"byte_end":221723,"line_start":754,"line_end":754,"column_start":1,"column_end":77}},{"value":"/ entirely new engine, but rather just a new reference to the existing engine.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":221724,"byte_end":221804,"line_start":755,"line_end":755,"column_start":1,"column_end":81}},{"value":"/ In other words it's a shallow copy, not a deep copy.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":221805,"byte_end":221861,"line_start":756,"line_end":756,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":221862,"byte_end":221865,"line_start":757,"line_end":757,"column_start":1,"column_end":4}},{"value":"/ ## Engines and `Default`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":221866,"byte_end":221894,"line_start":758,"line_end":758,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":221895,"byte_end":221898,"line_start":759,"line_end":759,"column_start":1,"column_end":4}},{"value":"/ You can create an engine with default configuration settings using","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":221899,"byte_end":221969,"line_start":760,"line_end":760,"column_start":1,"column_end":71}},{"value":"/ `Engine::default()`. Be sure to consult the documentation of [`Config`] for","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":221970,"byte_end":222049,"line_start":761,"line_end":761,"column_start":1,"column_end":80}},{"value":"/ default settings.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":222050,"byte_end":222071,"line_start":762,"line_end":762,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1039},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":222334,"byte_end":222337,"line_start":776,"line_end":776,"column_start":12,"column_end":15},"name":"new","qualname":"<Engine>::new","value":"pub fn new(&Config) -> Engine","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Engine`] with the specified compilation and\n configuration settings.\n","sig":null,"attributes":[{"value":"/ Creates a new [`Engine`] with the specified compilation and","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":222227,"byte_end":222290,"line_start":774,"line_end":774,"column_start":5,"column_end":68}},{"value":"/ configuration settings.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":222295,"byte_end":222322,"line_start":775,"line_end":775,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1040},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":222674,"byte_end":222680,"line_start":787,"line_end":787,"column_start":12,"column_end":18},"name":"config","qualname":"<Engine>::config","value":"pub fn config(&Self) -> &Config","parent":null,"children":[],"decl_id":null,"docs":" Returns the configuration settings that this engine is using.\n","sig":null,"attributes":[{"value":"/ Returns the configuration settings that this engine is using.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":222597,"byte_end":222662,"line_start":786,"line_end":786,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1042},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":223040,"byte_end":223044,"line_start":801,"line_end":801,"column_start":12,"column_end":16},"name":"same","qualname":"<Engine>::same","value":"pub fn same(&Engine, &Engine) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the engine `a` and `b` refer to the same configuration.\n","sig":null,"attributes":[{"value":"/ Returns whether the engine `a` and `b` refer to the same configuration.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":222953,"byte_end":223028,"line_start":800,"line_end":800,"column_start":5,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":3049},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":224893,"byte_end":224898,"line_start":846,"line_end":846,"column_start":12,"column_end":17},"name":"Store","qualname":"::runtime::Store","value":"Store {  }","parent":null,"children":[{"krate":0,"index":3050}],"decl_id":null,"docs":" A `Store` is a collection of WebAssembly instances and host-defined items.","sig":null,"attributes":[{"value":"/ A `Store` is a collection of WebAssembly instances and host-defined items.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":223242,"byte_end":223320,"line_start":814,"line_end":814,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":223321,"byte_end":223324,"line_start":815,"line_end":815,"column_start":1,"column_end":4}},{"value":"/ All WebAssembly instances and items will be attached to and refer to a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":223325,"byte_end":223399,"line_start":816,"line_end":816,"column_start":1,"column_end":75}},{"value":"/ `Store`. For example instances, functions, globals, and tables are all","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":223400,"byte_end":223474,"line_start":817,"line_end":817,"column_start":1,"column_end":75}},{"value":"/ attached to a `Store`. Instances are created by instantiating a [`Module`]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":223475,"byte_end":223553,"line_start":818,"line_end":818,"column_start":1,"column_end":79}},{"value":"/ within a `Store`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":223554,"byte_end":223575,"line_start":819,"line_end":819,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":223576,"byte_end":223579,"line_start":820,"line_end":820,"column_start":1,"column_end":4}},{"value":"/ `Store` is not thread-safe and cannot be sent to other threads. All items","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":223580,"byte_end":223657,"line_start":821,"line_end":821,"column_start":1,"column_end":78}},{"value":"/ which refer to a `Store` additionally are not threadsafe and can only be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":223658,"byte_end":223734,"line_start":822,"line_end":822,"column_start":1,"column_end":77}},{"value":"/ used on the original thread that they were created on.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":223735,"byte_end":223793,"line_start":823,"line_end":823,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":223794,"byte_end":223797,"line_start":824,"line_end":824,"column_start":1,"column_end":4}},{"value":"/ A `Store` is not intended to be a long-lived object in a program. No form of","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":223798,"byte_end":223878,"line_start":825,"line_end":825,"column_start":1,"column_end":81}},{"value":"/ GC is implemented at this time so once an instance is created within a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":223879,"byte_end":223953,"line_start":826,"line_end":826,"column_start":1,"column_end":75}},{"value":"/ `Store` it will not be deallocated until all references to the `Store` have","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":223954,"byte_end":224033,"line_start":827,"line_end":827,"column_start":1,"column_end":80}},{"value":"/ gone away (this includes all references to items in the store). This makes","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":224034,"byte_end":224112,"line_start":828,"line_end":828,"column_start":1,"column_end":79}},{"value":"/ `Store` unsuitable for creating an unbounded number of instances in it","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":224113,"byte_end":224187,"line_start":829,"line_end":829,"column_start":1,"column_end":75}},{"value":"/ because `Store` will never release this memory. It's instead recommended to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":224188,"byte_end":224267,"line_start":830,"line_end":830,"column_start":1,"column_end":80}},{"value":"/ have a long-lived [`Engine`] and instead create a `Store` for a more scoped","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":224268,"byte_end":224347,"line_start":831,"line_end":831,"column_start":1,"column_end":80}},{"value":"/ portion of your application.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":224348,"byte_end":224380,"line_start":832,"line_end":832,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":224381,"byte_end":224384,"line_start":833,"line_end":833,"column_start":1,"column_end":4}},{"value":"/ # Stores and `Clone`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":224385,"byte_end":224409,"line_start":834,"line_end":834,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":224410,"byte_end":224413,"line_start":835,"line_end":835,"column_start":1,"column_end":4}},{"value":"/ Using `clone` on a `Store` is a cheap operation. It will not create an","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":224414,"byte_end":224488,"line_start":836,"line_end":836,"column_start":1,"column_end":75}},{"value":"/ entirely new store, but rather just a new reference to the existing object.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":224489,"byte_end":224568,"line_start":837,"line_end":837,"column_start":1,"column_end":80}},{"value":"/ In other words it's a shallow copy, not a deep copy.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":224569,"byte_end":224625,"line_start":838,"line_end":838,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":224626,"byte_end":224629,"line_start":839,"line_end":839,"column_start":1,"column_end":4}},{"value":"/ ## Stores and `Default`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":224630,"byte_end":224657,"line_start":840,"line_end":840,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":224658,"byte_end":224661,"line_start":841,"line_end":841,"column_start":1,"column_end":4}},{"value":"/ You can create a store with default configuration settings using","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":224662,"byte_end":224730,"line_start":842,"line_end":842,"column_start":1,"column_end":69}},{"value":"/ `Store::default()`. This will create a brand new [`Engine`] with default","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":224731,"byte_end":224807,"line_start":843,"line_end":843,"column_start":1,"column_end":77}},{"value":"/ ocnfiguration (see [`Config`] for more information).","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":224808,"byte_end":224864,"line_start":844,"line_end":844,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1064},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":225764,"byte_end":225767,"line_start":882,"line_end":882,"column_start":12,"column_end":15},"name":"new","qualname":"<Store>::new","value":"pub fn new(&Engine) -> Store","parent":null,"children":[],"decl_id":null,"docs":" Creates a new store to be associated with the given [`Engine`].\n","sig":null,"attributes":[{"value":"/ Creates a new store to be associated with the given [`Engine`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":225685,"byte_end":225752,"line_start":881,"line_end":881,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1066},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":226933,"byte_end":226939,"line_start":909,"line_end":909,"column_start":12,"column_end":18},"name":"engine","qualname":"<Store>::engine","value":"pub fn engine(&Self) -> &Engine","parent":null,"children":[],"decl_id":null,"docs":" Returns the [`Engine`] that this store is associated with.\n","sig":null,"attributes":[{"value":"/ Returns the [`Engine`] that this store is associated with.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":226859,"byte_end":226921,"line_start":908,"line_end":908,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1086},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":231431,"byte_end":231435,"line_start":1046,"line_end":1046,"column_start":12,"column_end":16},"name":"same","qualname":"<Store>::same","value":"pub fn same(&Store, &Store) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the stores `a` and `b` refer to the same underlying\n `Store`.","sig":null,"attributes":[{"value":"/ Returns whether the stores `a` and `b` refer to the same underlying","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":231114,"byte_end":231185,"line_start":1040,"line_end":1040,"column_start":5,"column_end":76}},{"value":"/ `Store`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":231190,"byte_end":231202,"line_start":1041,"line_end":1041,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":231207,"byte_end":231210,"line_start":1042,"line_end":1042,"column_start":5,"column_end":8}},{"value":"/ Because the `Store` type is reference counted multiple clones may point","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":231215,"byte_end":231290,"line_start":1043,"line_end":1043,"column_start":5,"column_end":80}},{"value":"/ to the same underlying storage, and this method can be used to determine","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":231295,"byte_end":231371,"line_start":1044,"line_end":1044,"column_start":5,"column_end":81}},{"value":"/ whether two stores are indeed the same.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":231376,"byte_end":231419,"line_start":1045,"line_end":1045,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1087},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":235270,"byte_end":235286,"line_start":1131,"line_end":1131,"column_start":12,"column_end":28},"name":"interrupt_handle","qualname":"<Store>::interrupt_handle","value":"pub fn interrupt_handle(&Self) -> Result<InterruptHandle>","parent":null,"children":[],"decl_id":null,"docs":" Creates an [`InterruptHandle`] which can be used to interrupt the\n execution of instances within this `Store`.","sig":null,"attributes":[{"value":"/ Creates an [`InterruptHandle`] which can be used to interrupt the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":231518,"byte_end":231587,"line_start":1050,"line_end":1050,"column_start":5,"column_end":74}},{"value":"/ execution of instances within this `Store`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":231592,"byte_end":231639,"line_start":1051,"line_end":1051,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":231644,"byte_end":231647,"line_start":1052,"line_end":1052,"column_start":5,"column_end":8}},{"value":"/ An [`InterruptHandle`] handle is a mechanism of ensuring that guest code","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":231652,"byte_end":231728,"line_start":1053,"line_end":1053,"column_start":5,"column_end":81}},{"value":"/ doesn't execute for too long. For example it's used to prevent wasm","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":231733,"byte_end":231804,"line_start":1054,"line_end":1054,"column_start":5,"column_end":76}},{"value":"/ programs for executing infinitely in infinite loops or recursive call","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":231809,"byte_end":231882,"line_start":1055,"line_end":1055,"column_start":5,"column_end":78}},{"value":"/ chains.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":231887,"byte_end":231898,"line_start":1056,"line_end":1056,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":231903,"byte_end":231906,"line_start":1057,"line_end":1057,"column_start":5,"column_end":8}},{"value":"/ The [`InterruptHandle`] type is sendable to other threads so you can","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":231911,"byte_end":231983,"line_start":1058,"line_end":1058,"column_start":5,"column_end":77}},{"value":"/ interact with it even while the thread with this `Store` is executing","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":231988,"byte_end":232061,"line_start":1059,"line_end":1059,"column_start":5,"column_end":78}},{"value":"/ wasm code.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":232066,"byte_end":232080,"line_start":1060,"line_end":1060,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":232085,"byte_end":232088,"line_start":1061,"line_end":1061,"column_start":5,"column_end":8}},{"value":"/ There's one method on an interrupt handle:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":232093,"byte_end":232139,"line_start":1062,"line_end":1062,"column_start":5,"column_end":51}},{"value":"/ [`InterruptHandle::interrupt`]. This method is used to generate an","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":232144,"byte_end":232214,"line_start":1063,"line_end":1063,"column_start":5,"column_end":75}},{"value":"/ interrupt and cause wasm code to exit \"soon\".","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":232219,"byte_end":232268,"line_start":1064,"line_end":1064,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":232273,"byte_end":232276,"line_start":1065,"line_end":1065,"column_start":5,"column_end":8}},{"value":"/ ## When are interrupts delivered?","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":232281,"byte_end":232318,"line_start":1066,"line_end":1066,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":232323,"byte_end":232326,"line_start":1067,"line_end":1067,"column_start":5,"column_end":8}},{"value":"/ The term \"interrupt\" here refers to one of two different behaviors that","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":232331,"byte_end":232406,"line_start":1068,"line_end":1068,"column_start":5,"column_end":80}},{"value":"/ are interrupted in wasm:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":232411,"byte_end":232439,"line_start":1069,"line_end":1069,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":232444,"byte_end":232447,"line_start":1070,"line_end":1070,"column_start":5,"column_end":8}},{"value":"/ * The head of every loop in wasm has a check to see if it's interrupted.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":232452,"byte_end":232528,"line_start":1071,"line_end":1071,"column_start":5,"column_end":81}},{"value":"/ * The prologue of every function has a check to see if it's interrupted.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":232533,"byte_end":232609,"line_start":1072,"line_end":1072,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":232614,"byte_end":232617,"line_start":1073,"line_end":1073,"column_start":5,"column_end":8}},{"value":"/ This interrupt mechanism makes no attempt to signal interrupts to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":232622,"byte_end":232691,"line_start":1074,"line_end":1074,"column_start":5,"column_end":74}},{"value":"/ native code. For example if a host function is blocked, then sending","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":232696,"byte_end":232768,"line_start":1075,"line_end":1075,"column_start":5,"column_end":77}},{"value":"/ an interrupt will not interrupt that operation.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":232773,"byte_end":232824,"line_start":1076,"line_end":1076,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":232829,"byte_end":232832,"line_start":1077,"line_end":1077,"column_start":5,"column_end":8}},{"value":"/ Interrupts are consumed as soon as possible when wasm itself starts","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":232837,"byte_end":232908,"line_start":1078,"line_end":1078,"column_start":5,"column_end":76}},{"value":"/ executing. This means that if you interrupt wasm code then it basically","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":232913,"byte_end":232988,"line_start":1079,"line_end":1079,"column_start":5,"column_end":80}},{"value":"/ guarantees that the next time wasm is executing on the target thread it","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":232993,"byte_end":233068,"line_start":1080,"line_end":1080,"column_start":5,"column_end":80}},{"value":"/ will return quickly (either normally if it were already in the process","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":233073,"byte_end":233147,"line_start":1081,"line_end":1081,"column_start":5,"column_end":79}},{"value":"/ of returning or with a trap from the interrupt). Once an interrupt","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":233152,"byte_end":233222,"line_start":1082,"line_end":1082,"column_start":5,"column_end":75}},{"value":"/ trap is generated then an interrupt is consumed, and further execution","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":233227,"byte_end":233301,"line_start":1083,"line_end":1083,"column_start":5,"column_end":79}},{"value":"/ will not be interrupted (unless another interrupt is set).","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":233306,"byte_end":233368,"line_start":1084,"line_end":1084,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":233373,"byte_end":233376,"line_start":1085,"line_end":1085,"column_start":5,"column_end":8}},{"value":"/ When implementing interrupts you'll want to ensure that the delivery of","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":233381,"byte_end":233456,"line_start":1086,"line_end":1086,"column_start":5,"column_end":80}},{"value":"/ interrupts into wasm code is also handled in your host imports and","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":233461,"byte_end":233531,"line_start":1087,"line_end":1087,"column_start":5,"column_end":75}},{"value":"/ functionality. Host functions need to either execute for bounded amounts","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":233536,"byte_end":233612,"line_start":1088,"line_end":1088,"column_start":5,"column_end":81}},{"value":"/ of time or you'll need to arrange for them to be interrupted as well.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":233617,"byte_end":233690,"line_start":1089,"line_end":1089,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":233695,"byte_end":233698,"line_start":1090,"line_end":1090,"column_start":5,"column_end":8}},{"value":"/ ## Return Value","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":233703,"byte_end":233722,"line_start":1091,"line_end":1091,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":233727,"byte_end":233730,"line_start":1092,"line_end":1092,"column_start":5,"column_end":8}},{"value":"/ This function returns a `Result` since interrupts are not always","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":233735,"byte_end":233803,"line_start":1093,"line_end":1093,"column_start":5,"column_end":73}},{"value":"/ enabled. Interrupts are enabled via the [`Config::interruptable`]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":233808,"byte_end":233877,"line_start":1094,"line_end":1094,"column_start":5,"column_end":74}},{"value":"/ method, and if this store's [`Config`] hasn't been configured to enable","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":233882,"byte_end":233957,"line_start":1095,"line_end":1095,"column_start":5,"column_end":80}},{"value":"/ interrupts then an error is returned.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":233962,"byte_end":234003,"line_start":1096,"line_end":1096,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":234008,"byte_end":234011,"line_start":1097,"line_end":1097,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":234016,"byte_end":234031,"line_start":1098,"line_end":1098,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":234036,"byte_end":234039,"line_start":1099,"line_end":1099,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":234044,"byte_end":234051,"line_start":1100,"line_end":1100,"column_start":5,"column_end":12}},{"value":"/ # use anyhow::Result;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":234056,"byte_end":234081,"line_start":1101,"line_end":1101,"column_start":5,"column_end":30}},{"value":"/ # use wasmtime::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":234086,"byte_end":234108,"line_start":1102,"line_end":1102,"column_start":5,"column_end":27}},{"value":"/ # fn main() -> Result<()> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":234113,"byte_end":234144,"line_start":1103,"line_end":1103,"column_start":5,"column_end":36}},{"value":"/ // Enable interruptable code via `Config` and then create an interrupt","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":234149,"byte_end":234223,"line_start":1104,"line_end":1104,"column_start":5,"column_end":79}},{"value":"/ // handle which we'll use later to interrupt running code.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":234228,"byte_end":234290,"line_start":1105,"line_end":1105,"column_start":5,"column_end":67}},{"value":"/ let engine = Engine::new(Config::new().interruptable(true));","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":234295,"byte_end":234359,"line_start":1106,"line_end":1106,"column_start":5,"column_end":69}},{"value":"/ let store = Store::new(&engine);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":234364,"byte_end":234400,"line_start":1107,"line_end":1107,"column_start":5,"column_end":41}},{"value":"/ let interrupt_handle = store.interrupt_handle()?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":234405,"byte_end":234458,"line_start":1108,"line_end":1108,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":234463,"byte_end":234466,"line_start":1109,"line_end":1109,"column_start":5,"column_end":8}},{"value":"/ // Compile and instantiate a small example with an infinite loop.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":234471,"byte_end":234540,"line_start":1110,"line_end":1110,"column_start":5,"column_end":74}},{"value":"/ let module = Module::new(&engine, r#\"","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":234545,"byte_end":234586,"line_start":1111,"line_end":1111,"column_start":5,"column_end":46}},{"value":"/     (func (export \"run\") (loop br 0))","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":234591,"byte_end":234632,"line_start":1112,"line_end":1112,"column_start":5,"column_end":46}},{"value":"/ \"#)?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":234637,"byte_end":234646,"line_start":1113,"line_end":1113,"column_start":5,"column_end":14}},{"value":"/ let instance = Instance::new(&store, &module, &[])?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":234651,"byte_end":234707,"line_start":1114,"line_end":1114,"column_start":5,"column_end":61}},{"value":"/ let run = instance","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":234712,"byte_end":234734,"line_start":1115,"line_end":1115,"column_start":5,"column_end":27}},{"value":"/     .get_func(\"run\")","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":234739,"byte_end":234763,"line_start":1116,"line_end":1116,"column_start":5,"column_end":29}},{"value":"/     .ok_or(anyhow::format_err!(\"failed to find `run` function export\"))?","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":234768,"byte_end":234844,"line_start":1117,"line_end":1117,"column_start":5,"column_end":81}},{"value":"/     .get0::<()>()?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":234849,"byte_end":234872,"line_start":1118,"line_end":1118,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":234877,"byte_end":234880,"line_start":1119,"line_end":1119,"column_start":5,"column_end":8}},{"value":"/ // Spin up a thread to send us an interrupt in a second","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":234885,"byte_end":234944,"line_start":1120,"line_end":1120,"column_start":5,"column_end":64}},{"value":"/ std::thread::spawn(move || {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":234949,"byte_end":234981,"line_start":1121,"line_end":1121,"column_start":5,"column_end":37}},{"value":"/     std::thread::sleep(std::time::Duration::from_secs(1));","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":234986,"byte_end":235048,"line_start":1122,"line_end":1122,"column_start":5,"column_end":67}},{"value":"/     interrupt_handle.interrupt();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":235053,"byte_end":235090,"line_start":1123,"line_end":1123,"column_start":5,"column_end":42}},{"value":"/ });","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":235095,"byte_end":235102,"line_start":1124,"line_end":1124,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":235107,"byte_end":235110,"line_start":1125,"line_end":1125,"column_start":5,"column_end":8}},{"value":"/ let trap = run().unwrap_err();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":235115,"byte_end":235149,"line_start":1126,"line_end":1126,"column_start":5,"column_end":39}},{"value":"/ assert!(trap.to_string().contains(\"wasm trap: interrupt\"));","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":235154,"byte_end":235217,"line_start":1127,"line_end":1127,"column_start":5,"column_end":68}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":235222,"byte_end":235234,"line_start":1128,"line_end":1128,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":235239,"byte_end":235246,"line_start":1129,"line_end":1129,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":235251,"byte_end":235258,"line_start":1130,"line_end":1130,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1090},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":235901,"byte_end":235903,"line_start":1150,"line_end":1150,"column_start":12,"column_end":14},"name":"gc","qualname":"<Store>::gc","value":"pub fn gc(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Perform garbage collection of `ExternRef`s.\n","sig":null,"attributes":[{"value":"/ Perform garbage collection of `ExternRef`s.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":235842,"byte_end":235889,"line_start":1149,"line_end":1149,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":1097},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":237026,"byte_end":237041,"line_start":1190,"line_end":1190,"column_start":12,"column_end":27},"name":"InterruptHandle","qualname":"::runtime::InterruptHandle","value":"InterruptHandle {  }","parent":null,"children":[{"krate":0,"index":1098}],"decl_id":null,"docs":" A threadsafe handle used to interrupt instances executing within a\n particular `Store`.","sig":null,"attributes":[{"value":"/ A threadsafe handle used to interrupt instances executing within a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":236843,"byte_end":236913,"line_start":1186,"line_end":1186,"column_start":1,"column_end":71}},{"value":"/ particular `Store`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":236914,"byte_end":236937,"line_start":1187,"line_end":1187,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":236938,"byte_end":236941,"line_start":1188,"line_end":1188,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`Store::interrupt_handle`] method.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":236942,"byte_end":237014,"line_start":1189,"line_end":1189,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1100},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":237473,"byte_end":237482,"line_start":1202,"line_end":1202,"column_start":12,"column_end":21},"name":"interrupt","qualname":"<InterruptHandle>::interrupt","value":"pub fn interrupt(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Flags that execution within this handle's original [`Store`] should be\n interrupted.","sig":null,"attributes":[{"value":"/ Flags that execution within this handle's original [`Store`] should be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":237109,"byte_end":237183,"line_start":1195,"line_end":1195,"column_start":5,"column_end":79}},{"value":"/ interrupted.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":237188,"byte_end":237204,"line_start":1196,"line_end":1196,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":237209,"byte_end":237212,"line_start":1197,"line_end":1197,"column_start":5,"column_end":8}},{"value":"/ This will not immediately interrupt execution of wasm modules, but","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":237217,"byte_end":237287,"line_start":1198,"line_end":1198,"column_start":5,"column_end":75}},{"value":"/ rather it will interrupt wasm execution of loop headers and wasm","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":237292,"byte_end":237360,"line_start":1199,"line_end":1199,"column_start":5,"column_end":73}},{"value":"/ execution of function entries. For more information see","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":237365,"byte_end":237424,"line_start":1200,"line_end":1200,"column_start":5,"column_end":64}},{"value":"/ [`Store::interrupt_handle`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":237429,"byte_end":237461,"line_start":1201,"line_end":1201,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3058},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\trap.rs","byte_start":264215,"byte_end":264219,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"Trap","qualname":"::trap::Trap","value":"Trap {  }","parent":null,"children":[{"krate":0,"index":3059}],"decl_id":null,"docs":" A struct representing an aborted instruction execution, with a message\n indicating the cause.\n","sig":null,"attributes":[{"value":"/ A struct representing an aborted instruction execution, with a message","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\trap.rs","byte_start":264086,"byte_end":264160,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ indicating the cause.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\trap.rs","byte_start":264161,"byte_end":264186,"line_start":9,"line_end":9,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1544},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\trap.rs","byte_start":265369,"byte_end":265372,"line_start":55,"line_end":55,"column_start":12,"column_end":15},"name":"new","qualname":"<Trap>::new","value":"pub fn new<I: Into<String>>(I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Trap` with `message`.\n # Example\n ```\n let trap = wasmtime::Trap::new(\"unexpected error\");\n assert!(trap.to_string().contains(\"unexpected error\"));\n ```\n","sig":null,"attributes":[{"value":"/ Creates a new `Trap` with `message`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\trap.rs","byte_start":265151,"byte_end":265191,"line_start":49,"line_end":49,"column_start":5,"column_end":45}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\trap.rs","byte_start":265196,"byte_end":265209,"line_start":50,"line_end":50,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\trap.rs","byte_start":265214,"byte_end":265221,"line_start":51,"line_end":51,"column_start":5,"column_end":12}},{"value":"/ let trap = wasmtime::Trap::new(\"unexpected error\");","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\trap.rs","byte_start":265226,"byte_end":265281,"line_start":52,"line_end":52,"column_start":5,"column_end":60}},{"value":"/ assert!(trap.to_string().contains(\"unexpected error\"));","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\trap.rs","byte_start":265286,"byte_end":265345,"line_start":53,"line_end":53,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\trap.rs","byte_start":265350,"byte_end":265357,"line_start":54,"line_end":54,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1546},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\trap.rs","byte_start":265729,"byte_end":265737,"line_start":63,"line_end":63,"column_start":12,"column_end":20},"name":"i32_exit","qualname":"<Trap>::i32_exit","value":"pub fn i32_exit(i32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Trap` representing an explicit program exit with a classic `i32`\n exit status value.\n","sig":null,"attributes":[{"value":"/ Creates a new `Trap` representing an explicit program exit with a classic `i32`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\trap.rs","byte_start":265607,"byte_end":265690,"line_start":61,"line_end":61,"column_start":5,"column_end":88}},{"value":"/ exit status value.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\trap.rs","byte_start":265695,"byte_end":265717,"line_start":62,"line_end":62,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1552},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\trap.rs","byte_start":269860,"byte_end":269875,"line_start":165,"line_end":165,"column_start":12,"column_end":27},"name":"i32_exit_status","qualname":"<Trap>::i32_exit_status","value":"pub fn i32_exit_status(&Self) -> Option<i32>","parent":null,"children":[],"decl_id":null,"docs":" If the trap was the result of an explicit program exit with a classic\n `i32` exit status value, return the value, otherwise return `None`.\n","sig":null,"attributes":[{"value":"/ If the trap was the result of an explicit program exit with a classic","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\trap.rs","byte_start":269699,"byte_end":269772,"line_start":163,"line_end":163,"column_start":5,"column_end":78}},{"value":"/ `i32` exit status value, return the value, otherwise return `None`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\trap.rs","byte_start":269777,"byte_end":269848,"line_start":164,"line_end":164,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1553},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\trap.rs","byte_start":270145,"byte_end":270150,"line_start":174,"line_end":174,"column_start":12,"column_end":17},"name":"trace","qualname":"<Trap>::trace","value":"pub fn trace(&Self) -> &[FrameInfo]","parent":null,"children":[],"decl_id":null,"docs":" Returns a list of function frames in WebAssembly code that led to this\n trap happening.\n","sig":null,"attributes":[{"value":"/ Returns a list of function frames in WebAssembly code that led to this","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\trap.rs","byte_start":270035,"byte_end":270109,"line_start":172,"line_end":172,"column_start":5,"column_end":79}},{"value":"/ trap happening.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\trap.rs","byte_start":270114,"byte_end":270133,"line_start":173,"line_end":173,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3075},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":272666,"byte_end":272671,"line_start":12,"line_end":12,"column_start":5,"column_end":10},"name":"Const","qualname":"::types::Mutability::Const","value":"Mutability::Const","parent":{"krate":0,"index":3074},"children":[],"decl_id":null,"docs":" The global is constant and its value does not change\n","sig":null,"attributes":[{"value":"/ The global is constant and its value does not change","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":272605,"byte_end":272661,"line_start":11,"line_end":11,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3077},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":272730,"byte_end":272733,"line_start":14,"line_end":14,"column_start":5,"column_end":8},"name":"Var","qualname":"::types::Mutability::Var","value":"Mutability::Var","parent":{"krate":0,"index":3074},"children":[],"decl_id":null,"docs":" The value of the global can change over time\n","sig":null,"attributes":[{"value":"/ The value of the global can change over time","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":272677,"byte_end":272725,"line_start":13,"line_end":13,"column_start":5,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":3074},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":272588,"byte_end":272598,"line_start":10,"line_end":10,"column_start":10,"column_end":20},"name":"Mutability","qualname":"::types::Mutability","value":"pub enum Mutability { Const, Var, }","parent":null,"children":[{"krate":0,"index":3075},{"krate":0,"index":3077}],"decl_id":null,"docs":" Indicator of whether a global is mutable or not\n","sig":null,"attributes":[{"value":"/ Indicator of whether a global is mutable or not","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":272476,"byte_end":272527,"line_start":8,"line_end":8,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":3093},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":272971,"byte_end":272977,"line_start":22,"line_end":22,"column_start":12,"column_end":18},"name":"Limits","qualname":"::types::Limits","value":"Limits {  }","parent":null,"children":[{"krate":0,"index":3094},{"krate":0,"index":3095}],"decl_id":null,"docs":" Limits of tables/memories where the units of the limits are defined by the\n table/memory types.","sig":null,"attributes":[{"value":"/ Limits of tables/memories where the units of the limits are defined by the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":272738,"byte_end":272816,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ table/memory types.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":272817,"byte_end":272840,"line_start":18,"line_end":18,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":272841,"byte_end":272844,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ A minimum is always available but the maximum may not be present.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":272845,"byte_end":272914,"line_start":20,"line_end":20,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1579},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":273125,"byte_end":273128,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<Limits>::new","value":"pub fn new(u32, Option<u32>) -> Limits","parent":null,"children":[],"decl_id":null,"docs":" Creates a new set of limits with the minimum and maximum both specified.\n","sig":null,"attributes":[{"value":"/ Creates a new set of limits with the minimum and maximum both specified.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":273037,"byte_end":273113,"line_start":28,"line_end":28,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1580},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":273297,"byte_end":273305,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"at_least","qualname":"<Limits>::at_least","value":"pub fn at_least(u32) -> Limits","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Limits` with the `min` specified and no maximum specified.\n","sig":null,"attributes":[{"value":"/ Creates a new `Limits` with the `min` specified and no maximum specified.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":273208,"byte_end":273285,"line_start":33,"line_end":33,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1581},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":273430,"byte_end":273433,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"min","qualname":"<Limits>::min","value":"pub fn min(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the minimum amount for these limits.\n","sig":null,"attributes":[{"value":"/ Returns the minimum amount for these limits.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":273370,"byte_end":273418,"line_start":38,"line_end":38,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1582},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":273552,"byte_end":273555,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"max","qualname":"<Limits>::max","value":"pub fn max(&Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum amount for these limits, if specified.\n","sig":null,"attributes":[{"value":"/ Returns the maximum amount for these limits, if specified.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":273478,"byte_end":273540,"line_start":43,"line_end":43,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3111},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":273776,"byte_end":273779,"line_start":55,"line_end":55,"column_start":5,"column_end":8},"name":"I32","qualname":"::types::ValType::I32","value":"ValType::I32","parent":{"krate":0,"index":3110},"children":[],"decl_id":null,"docs":" Signed 32 bit integer.\n","sig":null,"attributes":[{"value":"/ Signed 32 bit integer.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":273745,"byte_end":273771,"line_start":54,"line_end":54,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3113},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":273816,"byte_end":273819,"line_start":57,"line_end":57,"column_start":5,"column_end":8},"name":"I64","qualname":"::types::ValType::I64","value":"ValType::I64","parent":{"krate":0,"index":3110},"children":[],"decl_id":null,"docs":" Signed 64 bit integer.\n","sig":null,"attributes":[{"value":"/ Signed 64 bit integer.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":273785,"byte_end":273811,"line_start":56,"line_end":56,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3115},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":273864,"byte_end":273867,"line_start":59,"line_end":59,"column_start":5,"column_end":8},"name":"F32","qualname":"::types::ValType::F32","value":"ValType::F32","parent":{"krate":0,"index":3110},"children":[],"decl_id":null,"docs":" Floating point 32 bit integer.\n","sig":null,"attributes":[{"value":"/ Floating point 32 bit integer.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":273825,"byte_end":273859,"line_start":58,"line_end":58,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3117},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":273912,"byte_end":273915,"line_start":61,"line_end":61,"column_start":5,"column_end":8},"name":"F64","qualname":"::types::ValType::F64","value":"ValType::F64","parent":{"krate":0,"index":3110},"children":[],"decl_id":null,"docs":" Floating point 64 bit integer.\n","sig":null,"attributes":[{"value":"/ Floating point 64 bit integer.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":273873,"byte_end":273907,"line_start":60,"line_end":60,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3119},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":273947,"byte_end":273951,"line_start":63,"line_end":63,"column_start":5,"column_end":9},"name":"V128","qualname":"::types::ValType::V128","value":"ValType::V128","parent":{"krate":0,"index":3110},"children":[],"decl_id":null,"docs":" A 128 bit number.\n","sig":null,"attributes":[{"value":"/ A 128 bit number.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":273921,"byte_end":273942,"line_start":62,"line_end":62,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3121},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":274014,"byte_end":274023,"line_start":65,"line_end":65,"column_start":5,"column_end":14},"name":"ExternRef","qualname":"::types::ValType::ExternRef","value":"ValType::ExternRef","parent":{"krate":0,"index":3110},"children":[],"decl_id":null,"docs":" A reference to opaque data in the Wasm instance.\n","sig":null,"attributes":[{"value":"/ A reference to opaque data in the Wasm instance.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":273957,"byte_end":274009,"line_start":64,"line_end":64,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3123},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":274081,"byte_end":274088,"line_start":67,"line_end":67,"column_start":5,"column_end":12},"name":"FuncRef","qualname":"::types::ValType::FuncRef","value":"ValType::FuncRef","parent":{"krate":0,"index":3110},"children":[],"decl_id":null,"docs":" A reference to a Wasm function.\n","sig":null,"attributes":[{"value":"/ A reference to a Wasm function.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":274041,"byte_end":274076,"line_start":66,"line_end":66,"column_start":5,"column_end":40}}]},{"kind":"Enum","id":{"krate":0,"index":3110},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":273731,"byte_end":273738,"line_start":53,"line_end":53,"column_start":10,"column_end":17},"name":"ValType","qualname":"::types::ValType","value":"pub enum ValType { I32, I64, F32, F64, V128, ExternRef, FuncRef, }","parent":null,"children":[{"krate":0,"index":3111},{"krate":0,"index":3113},{"krate":0,"index":3115},{"krate":0,"index":3117},{"krate":0,"index":3119},{"krate":0,"index":3121},{"krate":0,"index":3123}],"decl_id":null,"docs":" A list of all possible value types in WebAssembly.\n","sig":null,"attributes":[{"value":"/ A list of all possible value types in WebAssembly.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":273622,"byte_end":273676,"line_start":51,"line_end":51,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1586},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":274705,"byte_end":274711,"line_start":87,"line_end":87,"column_start":12,"column_end":18},"name":"is_num","qualname":"<ValType>::is_num","value":"pub fn is_num(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if `ValType` matches any of the numeric types. (e.g. `I32`,\n `I64`, `F32`, `F64`).\n","sig":null,"attributes":[{"value":"/ Returns true if `ValType` matches any of the numeric types. (e.g. `I32`,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":274587,"byte_end":274663,"line_start":85,"line_end":85,"column_start":5,"column_end":81}},{"value":"/ `I64`, `F32`, `F64`).","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":274668,"byte_end":274693,"line_start":86,"line_end":86,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1587},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":274954,"byte_end":274960,"line_start":95,"line_end":95,"column_start":12,"column_end":18},"name":"is_ref","qualname":"<ValType>::is_ref","value":"pub fn is_ref(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if `ValType` matches either of the reference types.\n","sig":null,"attributes":[{"value":"/ Returns true if `ValType` matches either of the reference types.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":274874,"byte_end":274942,"line_start":94,"line_end":94,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3139},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":276811,"byte_end":276815,"line_start":149,"line_end":149,"column_start":5,"column_end":9},"name":"Func","qualname":"::types::ExternType::Func","value":"ExternType::Func(FuncType)","parent":{"krate":0,"index":3138},"children":[],"decl_id":null,"docs":" This external type is the type of a WebAssembly function.\n","sig":null,"attributes":[{"value":"/ This external type is the type of a WebAssembly function.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":276745,"byte_end":276806,"line_start":148,"line_end":148,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3142},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":276895,"byte_end":276901,"line_start":151,"line_end":151,"column_start":5,"column_end":11},"name":"Global","qualname":"::types::ExternType::Global","value":"ExternType::Global(GlobalType)","parent":{"krate":0,"index":3138},"children":[],"decl_id":null,"docs":" This external type is the type of a WebAssembly global.\n","sig":null,"attributes":[{"value":"/ This external type is the type of a WebAssembly global.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":276831,"byte_end":276890,"line_start":150,"line_end":150,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3145},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":276982,"byte_end":276987,"line_start":153,"line_end":153,"column_start":5,"column_end":10},"name":"Table","qualname":"::types::ExternType::Table","value":"ExternType::Table(TableType)","parent":{"krate":0,"index":3138},"children":[],"decl_id":null,"docs":" This external type is the type of a WebAssembly table.\n","sig":null,"attributes":[{"value":"/ This external type is the type of a WebAssembly table.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":276919,"byte_end":276977,"line_start":152,"line_end":152,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3148},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":277068,"byte_end":277074,"line_start":155,"line_end":155,"column_start":5,"column_end":11},"name":"Memory","qualname":"::types::ExternType::Memory","value":"ExternType::Memory(MemoryType)","parent":{"krate":0,"index":3138},"children":[],"decl_id":null,"docs":" This external type is the type of a WebAssembly memory.\n","sig":null,"attributes":[{"value":"/ This external type is the type of a WebAssembly memory.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":277004,"byte_end":277063,"line_start":154,"line_end":154,"column_start":5,"column_end":64}}]},{"kind":"Enum","id":{"krate":0,"index":3138},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":276728,"byte_end":276738,"line_start":147,"line_end":147,"column_start":10,"column_end":20},"name":"ExternType","qualname":"::types::ExternType","value":"pub enum ExternType {\n    Func(FuncType),\n    Global(GlobalType),\n    Table(TableType),\n    Memory(MemoryType),\n}","parent":null,"children":[{"krate":0,"index":3139},{"krate":0,"index":3142},{"krate":0,"index":3145},{"krate":0,"index":3148}],"decl_id":null,"docs":" A list of all possible types which can be externally referenced from a\n WebAssembly module.","sig":null,"attributes":[{"value":"/ A list of all possible types which can be externally referenced from a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":276452,"byte_end":276526,"line_start":141,"line_end":141,"column_start":1,"column_end":75}},{"value":"/ WebAssembly module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":276527,"byte_end":276550,"line_start":142,"line_end":142,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":276551,"byte_end":276554,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ This list can be found in [`ImportType`] or [`ExportType`], so these types","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":276555,"byte_end":276633,"line_start":144,"line_end":144,"column_start":1,"column_end":79}},{"value":"/ can either be imported or exported.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":276634,"byte_end":276673,"line_start":145,"line_end":145,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3165},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":277909,"byte_end":277913,"line_start":184,"line_end":184,"column_start":25,"column_end":29},"name":"func","qualname":"<ExternType>::func","value":"pub fn func(&Self) -> Option<&FuncType>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to return the underlying type of this external type,\n returning `None` if it is a different type.\n","sig":null,"attributes":[{"value":"/ Attempt to return the underlying type of this external type,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":277191,"byte_end":277255,"line_start":160,"line_end":160,"column_start":9,"column_end":73}},{"value":"/ returning `None` if it is a different type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":277264,"byte_end":277311,"line_start":161,"line_end":161,"column_start":9,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3166},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":277914,"byte_end":277925,"line_start":184,"line_end":184,"column_start":30,"column_end":41},"name":"unwrap_func","qualname":"<ExternType>::unwrap_func","value":"pub fn unwrap_func(&Self) -> &FuncType","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying descriptor of this [`ExternType`], panicking\n if it is a different type.","sig":null,"attributes":[{"value":"/ Returns the underlying descriptor of this [`ExternType`], panicking","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":277508,"byte_end":277579,"line_start":170,"line_end":170,"column_start":9,"column_end":80}},{"value":"/ if it is a different type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":277588,"byte_end":277618,"line_start":171,"line_end":171,"column_start":9,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":277627,"byte_end":277630,"line_start":172,"line_end":172,"column_start":9,"column_end":12}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":277639,"byte_end":277651,"line_start":173,"line_end":173,"column_start":9,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":277660,"byte_end":277663,"line_start":174,"line_end":174,"column_start":9,"column_end":12}},{"value":"/ Panics if `self` is not of the right type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":277672,"byte_end":277718,"line_start":175,"line_end":175,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3167},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":277955,"byte_end":277961,"line_start":185,"line_end":185,"column_start":29,"column_end":35},"name":"global","qualname":"<ExternType>::global","value":"pub fn global(&Self) -> Option<&GlobalType>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to return the underlying type of this external type,\n returning `None` if it is a different type.\n","sig":null,"attributes":[{"value":"/ Attempt to return the underlying type of this external type,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":277191,"byte_end":277255,"line_start":160,"line_end":160,"column_start":9,"column_end":73}},{"value":"/ returning `None` if it is a different type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":277264,"byte_end":277311,"line_start":161,"line_end":161,"column_start":9,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3168},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":277962,"byte_end":277975,"line_start":185,"line_end":185,"column_start":36,"column_end":49},"name":"unwrap_global","qualname":"<ExternType>::unwrap_global","value":"pub fn unwrap_global(&Self) -> &GlobalType","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying descriptor of this [`ExternType`], panicking\n if it is a different type.","sig":null,"attributes":[{"value":"/ Returns the underlying descriptor of this [`ExternType`], panicking","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":277508,"byte_end":277579,"line_start":170,"line_end":170,"column_start":9,"column_end":80}},{"value":"/ if it is a different type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":277588,"byte_end":277618,"line_start":171,"line_end":171,"column_start":9,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":277627,"byte_end":277630,"line_start":172,"line_end":172,"column_start":9,"column_end":12}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":277639,"byte_end":277651,"line_start":173,"line_end":173,"column_start":9,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":277660,"byte_end":277663,"line_start":174,"line_end":174,"column_start":9,"column_end":12}},{"value":"/ Panics if `self` is not of the right type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":277672,"byte_end":277718,"line_start":175,"line_end":175,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3169},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":278003,"byte_end":278008,"line_start":186,"line_end":186,"column_start":27,"column_end":32},"name":"table","qualname":"<ExternType>::table","value":"pub fn table(&Self) -> Option<&TableType>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to return the underlying type of this external type,\n returning `None` if it is a different type.\n","sig":null,"attributes":[{"value":"/ Attempt to return the underlying type of this external type,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":277191,"byte_end":277255,"line_start":160,"line_end":160,"column_start":9,"column_end":73}},{"value":"/ returning `None` if it is a different type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":277264,"byte_end":277311,"line_start":161,"line_end":161,"column_start":9,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3170},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":278009,"byte_end":278021,"line_start":186,"line_end":186,"column_start":33,"column_end":45},"name":"unwrap_table","qualname":"<ExternType>::unwrap_table","value":"pub fn unwrap_table(&Self) -> &TableType","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying descriptor of this [`ExternType`], panicking\n if it is a different type.","sig":null,"attributes":[{"value":"/ Returns the underlying descriptor of this [`ExternType`], panicking","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":277508,"byte_end":277579,"line_start":170,"line_end":170,"column_start":9,"column_end":80}},{"value":"/ if it is a different type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":277588,"byte_end":277618,"line_start":171,"line_end":171,"column_start":9,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":277627,"byte_end":277630,"line_start":172,"line_end":172,"column_start":9,"column_end":12}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":277639,"byte_end":277651,"line_start":173,"line_end":173,"column_start":9,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":277660,"byte_end":277663,"line_start":174,"line_end":174,"column_start":9,"column_end":12}},{"value":"/ Panics if `self` is not of the right type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":277672,"byte_end":277718,"line_start":175,"line_end":175,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3171},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":278051,"byte_end":278057,"line_start":187,"line_end":187,"column_start":29,"column_end":35},"name":"memory","qualname":"<ExternType>::memory","value":"pub fn memory(&Self) -> Option<&MemoryType>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to return the underlying type of this external type,\n returning `None` if it is a different type.\n","sig":null,"attributes":[{"value":"/ Attempt to return the underlying type of this external type,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":277191,"byte_end":277255,"line_start":160,"line_end":160,"column_start":9,"column_end":73}},{"value":"/ returning `None` if it is a different type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":277264,"byte_end":277311,"line_start":161,"line_end":161,"column_start":9,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3172},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":278058,"byte_end":278071,"line_start":187,"line_end":187,"column_start":36,"column_end":49},"name":"unwrap_memory","qualname":"<ExternType>::unwrap_memory","value":"pub fn unwrap_memory(&Self) -> &MemoryType","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying descriptor of this [`ExternType`], panicking\n if it is a different type.","sig":null,"attributes":[{"value":"/ Returns the underlying descriptor of this [`ExternType`], panicking","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":277508,"byte_end":277579,"line_start":170,"line_end":170,"column_start":9,"column_end":80}},{"value":"/ if it is a different type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":277588,"byte_end":277618,"line_start":171,"line_end":171,"column_start":9,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":277627,"byte_end":277630,"line_start":172,"line_end":172,"column_start":9,"column_end":12}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":277639,"byte_end":277651,"line_start":173,"line_end":173,"column_start":9,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":277660,"byte_end":277663,"line_start":174,"line_end":174,"column_start":9,"column_end":12}},{"value":"/ Panics if `self` is not of the right type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":277672,"byte_end":277718,"line_start":175,"line_end":175,"column_start":9,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":3173},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":278751,"byte_end":278759,"line_start":219,"line_end":219,"column_start":12,"column_end":20},"name":"FuncType","qualname":"::types::FuncType","value":"FuncType {  }","parent":null,"children":[{"krate":0,"index":3174},{"krate":0,"index":3175}],"decl_id":null,"docs":" A descriptor for a function in a WebAssembly module.","sig":null,"attributes":[{"value":"/ A descriptor for a function in a WebAssembly module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":278565,"byte_end":278621,"line_start":215,"line_end":215,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":278622,"byte_end":278625,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ WebAssembly functions can have 0 or more parameters and results.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":278626,"byte_end":278694,"line_start":217,"line_end":217,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1602},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":279090,"byte_end":279093,"line_start":229,"line_end":229,"column_start":12,"column_end":15},"name":"new","qualname":"<FuncType>::new","value":"pub fn new(Box<[ValType]>, Box<[ValType]>) -> FuncType","parent":null,"children":[],"decl_id":null,"docs":" Creates a new function descriptor from the given parameters and results.","sig":null,"attributes":[{"value":"/ Creates a new function descriptor from the given parameters and results.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":278842,"byte_end":278918,"line_start":225,"line_end":225,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":278923,"byte_end":278926,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ The function descriptor returned will represent a function which takes","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":278931,"byte_end":279005,"line_start":227,"line_end":227,"column_start":5,"column_end":79}},{"value":"/ `params` as arguments and returns `results` when it is finished.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":279010,"byte_end":279078,"line_start":228,"line_end":228,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1603},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":279275,"byte_end":279281,"line_start":234,"line_end":234,"column_start":12,"column_end":18},"name":"params","qualname":"<FuncType>::params","value":"pub fn params(&Self) -> &[ValType]","parent":null,"children":[],"decl_id":null,"docs":" Returns the list of parameter types for this function.\n","sig":null,"attributes":[{"value":"/ Returns the list of parameter types for this function.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":279205,"byte_end":279263,"line_start":233,"line_end":233,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1604},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":279404,"byte_end":279411,"line_start":239,"line_end":239,"column_start":12,"column_end":19},"name":"results","qualname":"<FuncType>::results","value":"pub fn results(&Self) -> &[ValType]","parent":null,"children":[],"decl_id":null,"docs":" Returns the list of result types for this function.\n","sig":null,"attributes":[{"value":"/ Returns the list of result types for this function.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":279337,"byte_end":279392,"line_start":238,"line_end":238,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":3190},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":281662,"byte_end":281672,"line_start":307,"line_end":307,"column_start":12,"column_end":22},"name":"GlobalType","qualname":"::types::GlobalType","value":"GlobalType {  }","parent":null,"children":[{"krate":0,"index":3191},{"krate":0,"index":3192}],"decl_id":null,"docs":" A WebAssembly global descriptor.","sig":null,"attributes":[{"value":"/ A WebAssembly global descriptor.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":281393,"byte_end":281429,"line_start":301,"line_end":301,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":281430,"byte_end":281433,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ This type describes an instance of a global in a WebAssembly module. Globals","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":281434,"byte_end":281514,"line_start":303,"line_end":303,"column_start":1,"column_end":81}},{"value":"/ are local to an [`Instance`](crate::Instance) and are either immutable or","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":281515,"byte_end":281592,"line_start":304,"line_end":304,"column_start":1,"column_end":78}},{"value":"/ mutable.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":281593,"byte_end":281605,"line_start":305,"line_end":305,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":1628},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":281870,"byte_end":281873,"line_start":315,"line_end":315,"column_start":12,"column_end":15},"name":"new","qualname":"<GlobalType>::new","value":"pub fn new(ValType, Mutability) -> GlobalType","parent":null,"children":[],"decl_id":null,"docs":" Creates a new global descriptor of the specified `content` type and\n whether or not it's mutable.\n","sig":null,"attributes":[{"value":"/ Creates a new global descriptor of the specified `content` type and","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":281750,"byte_end":281821,"line_start":313,"line_end":313,"column_start":5,"column_end":76}},{"value":"/ whether or not it's mutable.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":281826,"byte_end":281858,"line_start":314,"line_end":314,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1629},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":282084,"byte_end":282091,"line_start":323,"line_end":323,"column_start":12,"column_end":19},"name":"content","qualname":"<GlobalType>::content","value":"pub fn content(&Self) -> &ValType","parent":null,"children":[],"decl_id":null,"docs":" Returns the value type of this global descriptor.\n","sig":null,"attributes":[{"value":"/ Returns the value type of this global descriptor.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":282019,"byte_end":282072,"line_start":322,"line_end":322,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1630},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":282208,"byte_end":282218,"line_start":328,"line_end":328,"column_start":12,"column_end":22},"name":"mutability","qualname":"<GlobalType>::mutability","value":"pub fn mutability(&Self) -> Mutability","parent":null,"children":[],"decl_id":null,"docs":" Returns whether or not this global is mutable.\n","sig":null,"attributes":[{"value":"/ Returns whether or not this global is mutable.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":282146,"byte_end":282196,"line_start":327,"line_end":327,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":3207},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":283087,"byte_end":283096,"line_start":353,"line_end":353,"column_start":12,"column_end":21},"name":"TableType","qualname":"::types::TableType","value":"TableType {  }","parent":null,"children":[{"krate":0,"index":3208},{"krate":0,"index":3209}],"decl_id":null,"docs":" A descriptor for a table in a WebAssembly module.","sig":null,"attributes":[{"value":"/ A descriptor for a table in a WebAssembly module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":282759,"byte_end":282812,"line_start":347,"line_end":347,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":282813,"byte_end":282816,"line_start":348,"line_end":348,"column_start":1,"column_end":4}},{"value":"/ Tables are contiguous chunks of a specific element, typically a `funcref` or","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":282817,"byte_end":282897,"line_start":349,"line_end":349,"column_start":1,"column_end":81}},{"value":"/ an `externref`. The most common use for tables is a function table through","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":282898,"byte_end":282976,"line_start":350,"line_end":350,"column_start":1,"column_end":79}},{"value":"/ which `call_indirect` can invoke other functions.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":282977,"byte_end":283030,"line_start":351,"line_end":351,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1633},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":283307,"byte_end":283310,"line_start":361,"line_end":361,"column_start":12,"column_end":15},"name":"new","qualname":"<TableType>::new","value":"pub fn new(ValType, Limits) -> TableType","parent":null,"children":[],"decl_id":null,"docs":" Creates a new table descriptor which will contain the specified\n `element` and have the `limits` applied to its length.\n","sig":null,"attributes":[{"value":"/ Creates a new table descriptor which will contain the specified","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":283165,"byte_end":283232,"line_start":359,"line_end":359,"column_start":5,"column_end":72}},{"value":"/ `element` and have the `limits` applied to its length.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":283237,"byte_end":283295,"line_start":360,"line_end":360,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1634},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":283470,"byte_end":283477,"line_start":366,"line_end":366,"column_start":12,"column_end":19},"name":"element","qualname":"<TableType>::element","value":"pub fn element(&Self) -> &ValType","parent":null,"children":[],"decl_id":null,"docs":" Returns the element value type of this table.\n","sig":null,"attributes":[{"value":"/ Returns the element value type of this table.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":283409,"byte_end":283458,"line_start":365,"line_end":365,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1635},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":283604,"byte_end":283610,"line_start":371,"line_end":371,"column_start":12,"column_end":18},"name":"limits","qualname":"<TableType>::limits","value":"pub fn limits(&Self) -> &Limits","parent":null,"children":[],"decl_id":null,"docs":" Returns the limits, in units of elements, of this table.\n","sig":null,"attributes":[{"value":"/ Returns the limits, in units of elements, of this table.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":283532,"byte_end":283592,"line_start":370,"line_end":370,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":3224},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":284514,"byte_end":284524,"line_start":396,"line_end":396,"column_start":12,"column_end":22},"name":"MemoryType","qualname":"::types::MemoryType","value":"MemoryType {  }","parent":null,"children":[{"krate":0,"index":3225}],"decl_id":null,"docs":" A descriptor for a WebAssembly memory type.","sig":null,"attributes":[{"value":"/ A descriptor for a WebAssembly memory type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":284295,"byte_end":284342,"line_start":391,"line_end":391,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":284343,"byte_end":284346,"line_start":392,"line_end":392,"column_start":1,"column_end":4}},{"value":"/ Memories are described in units of pages (64KB) and represent contiguous","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":284347,"byte_end":284423,"line_start":393,"line_end":393,"column_start":1,"column_end":77}},{"value":"/ chunks of addressable memory.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":284424,"byte_end":284457,"line_start":394,"line_end":394,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1638},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":284687,"byte_end":284690,"line_start":403,"line_end":403,"column_start":12,"column_end":15},"name":"new","qualname":"<MemoryType>::new","value":"pub fn new(Limits) -> MemoryType","parent":null,"children":[],"decl_id":null,"docs":" Creates a new descriptor for a WebAssembly memory given the specified\n limits of the memory.\n","sig":null,"attributes":[{"value":"/ Creates a new descriptor for a WebAssembly memory given the specified","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":284572,"byte_end":284645,"line_start":401,"line_end":401,"column_start":5,"column_end":78}},{"value":"/ limits of the memory.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":284650,"byte_end":284675,"line_start":402,"line_end":402,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1639},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":284846,"byte_end":284852,"line_start":408,"line_end":408,"column_start":12,"column_end":18},"name":"limits","qualname":"<MemoryType>::limits","value":"pub fn limits(&Self) -> &Limits","parent":null,"children":[],"decl_id":null,"docs":" Returns the limits (in pages) that are configured for this memory.\n","sig":null,"attributes":[{"value":"/ Returns the limits (in pages) that are configured for this memory.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":284764,"byte_end":284834,"line_start":407,"line_end":407,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":3272},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":287027,"byte_end":287037,"line_start":468,"line_end":468,"column_start":12,"column_end":22},"name":"ImportType","qualname":"::types::ImportType","value":"ImportType {  }","parent":null,"children":[{"krate":0,"index":3274},{"krate":0,"index":3275},{"krate":0,"index":3276}],"decl_id":null,"docs":" A descriptor for an imported value into a wasm module.","sig":null,"attributes":[{"value":"/ A descriptor for an imported value into a wasm module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":286652,"byte_end":286710,"line_start":461,"line_end":461,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":286711,"byte_end":286714,"line_start":462,"line_end":462,"column_start":1,"column_end":4}},{"value":"/ This type is primarily accessed from the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":286715,"byte_end":286759,"line_start":463,"line_end":463,"column_start":1,"column_end":45}},{"value":"/ [`Module::imports`](crate::Module::imports) API. Each [`ImportType`]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":286760,"byte_end":286832,"line_start":464,"line_end":464,"column_start":1,"column_end":73}},{"value":"/ describes an import into the wasm module with the module/name that it's","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":286833,"byte_end":286908,"line_start":465,"line_end":465,"column_start":1,"column_end":76}},{"value":"/ imported from as well as the type of item that's being imported.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":286909,"byte_end":286977,"line_start":466,"line_end":466,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1648},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":287652,"byte_end":287658,"line_start":491,"line_end":491,"column_start":12,"column_end":18},"name":"module","qualname":"<ImportType>::module","value":"pub fn module(&Self) -> &'module str","parent":null,"children":[],"decl_id":null,"docs":" Returns the module name that this import is expected to come from.\n","sig":null,"attributes":[{"value":"/ Returns the module name that this import is expected to come from.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":287570,"byte_end":287640,"line_start":490,"line_end":490,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1649},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":287818,"byte_end":287822,"line_start":497,"line_end":497,"column_start":12,"column_end":16},"name":"name","qualname":"<ImportType>::name","value":"pub fn name(&Self) -> &'module str","parent":null,"children":[],"decl_id":null,"docs":" Returns the field name of the module that this import is expected to\n come from.\n","sig":null,"attributes":[{"value":"/ Returns the field name of the module that this import is expected to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":287715,"byte_end":287787,"line_start":495,"line_end":495,"column_start":5,"column_end":77}},{"value":"/ come from.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":287792,"byte_end":287806,"line_start":496,"line_end":496,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1650},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":287934,"byte_end":287936,"line_start":502,"line_end":502,"column_start":12,"column_end":14},"name":"ty","qualname":"<ImportType>::ty","value":"pub fn ty(&Self) -> ExternType","parent":null,"children":[],"decl_id":null,"docs":" Returns the expected type of this import.\n","sig":null,"attributes":[{"value":"/ Returns the expected type of this import.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":287877,"byte_end":287922,"line_start":501,"line_end":501,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":3295},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":288658,"byte_end":288668,"line_start":526,"line_end":526,"column_start":12,"column_end":22},"name":"ExportType","qualname":"::types::ExportType","value":"ExportType {  }","parent":null,"children":[{"krate":0,"index":3297},{"krate":0,"index":3298}],"decl_id":null,"docs":" A descriptor for an exported WebAssembly value.","sig":null,"attributes":[{"value":"/ A descriptor for an exported WebAssembly value.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":288343,"byte_end":288394,"line_start":519,"line_end":519,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":288395,"byte_end":288398,"line_start":520,"line_end":520,"column_start":1,"column_end":4}},{"value":"/ This type is primarily accessed from the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":288399,"byte_end":288443,"line_start":521,"line_end":521,"column_start":1,"column_end":45}},{"value":"/ [`Module::exports`](crate::Module::exports) accessor and describes what","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":288444,"byte_end":288519,"line_start":522,"line_end":522,"column_start":1,"column_end":76}},{"value":"/ names are exported from a wasm module and the type of the item that is","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":288520,"byte_end":288594,"line_start":523,"line_end":523,"column_start":1,"column_end":75}},{"value":"/ exported.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":288595,"byte_end":288608,"line_start":524,"line_end":524,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1657},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":289136,"byte_end":289140,"line_start":542,"line_end":542,"column_start":12,"column_end":16},"name":"name","qualname":"<ExportType>::name","value":"pub fn name(&Self) -> &'module str","parent":null,"children":[],"decl_id":null,"docs":" Returns the name by which this export is known.\n","sig":null,"attributes":[{"value":"/ Returns the name by which this export is known.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":289073,"byte_end":289124,"line_start":541,"line_end":541,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1658},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":289243,"byte_end":289245,"line_start":547,"line_end":547,"column_start":12,"column_end":14},"name":"ty","qualname":"<ExportType>::ty","value":"pub fn ty(&Self) -> ExternType","parent":null,"children":[],"decl_id":null,"docs":" Returns the type of this export.\n","sig":null,"attributes":[{"value":"/ Returns the type of this export.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":289195,"byte_end":289231,"line_start":546,"line_end":546,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3318},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":289897,"byte_end":289900,"line_start":12,"line_end":12,"column_start":5,"column_end":8},"name":"I32","qualname":"::values::Val::I32","value":"Val::I32(i32)","parent":{"krate":0,"index":3317},"children":[],"decl_id":null,"docs":" A 32-bit integer\n","sig":null,"attributes":[{"value":"/ A 32-bit integer","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":289872,"byte_end":289892,"line_start":11,"line_end":11,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3321},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":289937,"byte_end":289940,"line_start":15,"line_end":15,"column_start":5,"column_end":8},"name":"I64","qualname":"::values::Val::I64","value":"Val::I64(i64)","parent":{"krate":0,"index":3317},"children":[],"decl_id":null,"docs":" A 64-bit integer\n","sig":null,"attributes":[{"value":"/ A 64-bit integer","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":289912,"byte_end":289932,"line_start":14,"line_end":14,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3324},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":290112,"byte_end":290115,"line_start":21,"line_end":21,"column_start":5,"column_end":8},"name":"F32","qualname":"::values::Val::F32","value":"Val::F32(u32)","parent":{"krate":0,"index":3317},"children":[],"decl_id":null,"docs":" A 32-bit float.","sig":null,"attributes":[{"value":"/ A 32-bit float.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":289952,"byte_end":289971,"line_start":17,"line_end":17,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":289976,"byte_end":289979,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ Note that the raw bits of the float are stored here, and you can use","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":289984,"byte_end":290056,"line_start":19,"line_end":19,"column_start":5,"column_end":77}},{"value":"/ `f32::from_bits` to create an `f32` value.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":290061,"byte_end":290107,"line_start":20,"line_end":20,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3327},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":290287,"byte_end":290290,"line_start":27,"line_end":27,"column_start":5,"column_end":8},"name":"F64","qualname":"::values::Val::F64","value":"Val::F64(u64)","parent":{"krate":0,"index":3317},"children":[],"decl_id":null,"docs":" A 64-bit float.","sig":null,"attributes":[{"value":"/ A 64-bit float.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":290127,"byte_end":290146,"line_start":23,"line_end":23,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":290151,"byte_end":290154,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ Note that the raw bits of the float are stored here, and you can use","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":290159,"byte_end":290231,"line_start":25,"line_end":25,"column_start":5,"column_end":77}},{"value":"/ `f64::from_bits` to create an `f64` value.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":290236,"byte_end":290282,"line_start":26,"line_end":26,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3330},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":290507,"byte_end":290516,"line_start":34,"line_end":34,"column_start":5,"column_end":14},"name":"ExternRef","qualname":"::values::Val::ExternRef","value":"Val::ExternRef(Option<ExternRef>)","parent":{"krate":0,"index":3317},"children":[],"decl_id":null,"docs":" An `externref` value which can hold opaque data to the Wasm instance\n itself.","sig":null,"attributes":[{"value":"/ An `externref` value which can hold opaque data to the Wasm instance","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":290302,"byte_end":290374,"line_start":29,"line_end":29,"column_start":5,"column_end":77}},{"value":"/ itself.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":290379,"byte_end":290390,"line_start":30,"line_end":30,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":290395,"byte_end":290398,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ `ExternRef(None)` is the null external reference, created by `ref.null","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":290403,"byte_end":290477,"line_start":32,"line_end":32,"column_start":5,"column_end":79}},{"value":"/ extern` in Wasm.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":290482,"byte_end":290502,"line_start":33,"line_end":33,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3333},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":290709,"byte_end":290716,"line_start":40,"line_end":40,"column_start":5,"column_end":12},"name":"FuncRef","qualname":"::values::Val::FuncRef","value":"Val::FuncRef(Option<Func>)","parent":{"krate":0,"index":3317},"children":[],"decl_id":null,"docs":" A first-class reference to a WebAssembly function.","sig":null,"attributes":[{"value":"/ A first-class reference to a WebAssembly function.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":290542,"byte_end":290596,"line_start":36,"line_end":36,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":290601,"byte_end":290604,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ `FuncRef(None)` is the null function reference, created by `ref.null","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":290609,"byte_end":290681,"line_start":38,"line_end":38,"column_start":5,"column_end":77}},{"value":"/ func` in Wasm.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":290686,"byte_end":290704,"line_start":39,"line_end":39,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3336},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":290762,"byte_end":290766,"line_start":43,"line_end":43,"column_start":5,"column_end":9},"name":"V128","qualname":"::values::Val::V128","value":"Val::V128(u128)","parent":{"krate":0,"index":3317},"children":[],"decl_id":null,"docs":" A 128-bit number\n","sig":null,"attributes":[{"value":"/ A 128-bit number","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":290737,"byte_end":290757,"line_start":42,"line_end":42,"column_start":5,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":3317},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":289862,"byte_end":289865,"line_start":10,"line_end":10,"column_start":10,"column_end":13},"name":"Val","qualname":"::values::Val","value":"pub enum Val {\n    I32(i32),\n    I64(i64),\n    F32(u32),\n    F64(u64),\n    ExternRef(Option<ExternRef>),\n    FuncRef(Option<Func>),\n    V128(u128),\n}","parent":null,"children":[{"krate":0,"index":3318},{"krate":0,"index":3321},{"krate":0,"index":3324},{"krate":0,"index":3327},{"krate":0,"index":3330},{"krate":0,"index":3333},{"krate":0,"index":3336}],"decl_id":null,"docs":" Possible runtime values that a WebAssembly module can either consume or\n produce.\n","sig":null,"attributes":[{"value":"/ Possible runtime values that a WebAssembly module can either consume or","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":289740,"byte_end":289815,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ produce.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":289816,"byte_end":289828,"line_start":8,"line_end":8,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":1695},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":291600,"byte_end":291604,"line_start":72,"line_end":72,"column_start":12,"column_end":16},"name":"null","qualname":"<Val>::null","value":"pub fn null() -> Val","parent":null,"children":[],"decl_id":null,"docs":" Returns a null `externref` value.\n","sig":null,"attributes":[{"value":"/ Returns a null `externref` value.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":291551,"byte_end":291588,"line_start":71,"line_end":71,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1696},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":291725,"byte_end":291727,"line_start":77,"line_end":77,"column_start":12,"column_end":14},"name":"ty","qualname":"<Val>::ty","value":"pub fn ty(&Self) -> ValType","parent":null,"children":[],"decl_id":null,"docs":" Returns the corresponding [`ValType`] for this `Val`.\n","sig":null,"attributes":[{"value":"/ Returns the corresponding [`ValType`] for this `Val`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":291656,"byte_end":291713,"line_start":76,"line_end":76,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3343},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":294226,"byte_end":294229,"line_start":141,"line_end":141,"column_start":19,"column_end":22},"name":"i32","qualname":"<Val>::i32","value":"pub fn i32(&Self) -> Option<i32>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to access the underlying value of this `Val`, returning\n `None` if it is not the correct type.\n","sig":null,"attributes":[{"value":"/ Attempt to access the underlying value of this `Val`, returning","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":290899,"byte_end":290966,"line_start":48,"line_end":48,"column_start":9,"column_end":76}},{"value":"/ `None` if it is not the correct type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":290975,"byte_end":291016,"line_start":49,"line_end":49,"column_start":9,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3344},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":294230,"byte_end":294240,"line_start":141,"line_end":141,"column_start":23,"column_end":33},"name":"unwrap_i32","qualname":"<Val>::unwrap_i32","value":"pub fn unwrap_i32(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying value of this `Val`, panicking if it's the\n wrong type.","sig":null,"attributes":[{"value":"/ Returns the underlying value of this `Val`, panicking if it's the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":291212,"byte_end":291281,"line_start":58,"line_end":58,"column_start":9,"column_end":78}},{"value":"/ wrong type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":291290,"byte_end":291305,"line_start":59,"line_end":59,"column_start":9,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":291314,"byte_end":291317,"line_start":60,"line_end":60,"column_start":9,"column_end":12}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":291326,"byte_end":291338,"line_start":61,"line_end":61,"column_start":9,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":291347,"byte_end":291350,"line_start":62,"line_end":62,"column_start":9,"column_end":12}},{"value":"/ Panics if `self` is not of the right type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":291359,"byte_end":291405,"line_start":63,"line_end":63,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3345},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":294263,"byte_end":294266,"line_start":142,"line_end":142,"column_start":19,"column_end":22},"name":"i64","qualname":"<Val>::i64","value":"pub fn i64(&Self) -> Option<i64>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to access the underlying value of this `Val`, returning\n `None` if it is not the correct type.\n","sig":null,"attributes":[{"value":"/ Attempt to access the underlying value of this `Val`, returning","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":290899,"byte_end":290966,"line_start":48,"line_end":48,"column_start":9,"column_end":76}},{"value":"/ `None` if it is not the correct type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":290975,"byte_end":291016,"line_start":49,"line_end":49,"column_start":9,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3346},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":294267,"byte_end":294277,"line_start":142,"line_end":142,"column_start":23,"column_end":33},"name":"unwrap_i64","qualname":"<Val>::unwrap_i64","value":"pub fn unwrap_i64(&Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying value of this `Val`, panicking if it's the\n wrong type.","sig":null,"attributes":[{"value":"/ Returns the underlying value of this `Val`, panicking if it's the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":291212,"byte_end":291281,"line_start":58,"line_end":58,"column_start":9,"column_end":78}},{"value":"/ wrong type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":291290,"byte_end":291305,"line_start":59,"line_end":59,"column_start":9,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":291314,"byte_end":291317,"line_start":60,"line_end":60,"column_start":9,"column_end":12}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":291326,"byte_end":291338,"line_start":61,"line_end":61,"column_start":9,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":291347,"byte_end":291350,"line_start":62,"line_end":62,"column_start":9,"column_end":12}},{"value":"/ Panics if `self` is not of the right type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":291359,"byte_end":291405,"line_start":63,"line_end":63,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3347},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":294300,"byte_end":294303,"line_start":143,"line_end":143,"column_start":19,"column_end":22},"name":"f32","qualname":"<Val>::f32","value":"pub fn f32(&Self) -> Option<f32>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to access the underlying value of this `Val`, returning\n `None` if it is not the correct type.\n","sig":null,"attributes":[{"value":"/ Attempt to access the underlying value of this `Val`, returning","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":290899,"byte_end":290966,"line_start":48,"line_end":48,"column_start":9,"column_end":76}},{"value":"/ `None` if it is not the correct type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":290975,"byte_end":291016,"line_start":49,"line_end":49,"column_start":9,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3348},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":294304,"byte_end":294314,"line_start":143,"line_end":143,"column_start":23,"column_end":33},"name":"unwrap_f32","qualname":"<Val>::unwrap_f32","value":"pub fn unwrap_f32(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying value of this `Val`, panicking if it's the\n wrong type.","sig":null,"attributes":[{"value":"/ Returns the underlying value of this `Val`, panicking if it's the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":291212,"byte_end":291281,"line_start":58,"line_end":58,"column_start":9,"column_end":78}},{"value":"/ wrong type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":291290,"byte_end":291305,"line_start":59,"line_end":59,"column_start":9,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":291314,"byte_end":291317,"line_start":60,"line_end":60,"column_start":9,"column_end":12}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":291326,"byte_end":291338,"line_start":61,"line_end":61,"column_start":9,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":291347,"byte_end":291350,"line_start":62,"line_end":62,"column_start":9,"column_end":12}},{"value":"/ Panics if `self` is not of the right type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":291359,"byte_end":291405,"line_start":63,"line_end":63,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3349},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":294353,"byte_end":294356,"line_start":144,"line_end":144,"column_start":19,"column_end":22},"name":"f64","qualname":"<Val>::f64","value":"pub fn f64(&Self) -> Option<f64>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to access the underlying value of this `Val`, returning\n `None` if it is not the correct type.\n","sig":null,"attributes":[{"value":"/ Attempt to access the underlying value of this `Val`, returning","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":290899,"byte_end":290966,"line_start":48,"line_end":48,"column_start":9,"column_end":76}},{"value":"/ `None` if it is not the correct type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":290975,"byte_end":291016,"line_start":49,"line_end":49,"column_start":9,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3350},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":294357,"byte_end":294367,"line_start":144,"line_end":144,"column_start":23,"column_end":33},"name":"unwrap_f64","qualname":"<Val>::unwrap_f64","value":"pub fn unwrap_f64(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying value of this `Val`, panicking if it's the\n wrong type.","sig":null,"attributes":[{"value":"/ Returns the underlying value of this `Val`, panicking if it's the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":291212,"byte_end":291281,"line_start":58,"line_end":58,"column_start":9,"column_end":78}},{"value":"/ wrong type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":291290,"byte_end":291305,"line_start":59,"line_end":59,"column_start":9,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":291314,"byte_end":291317,"line_start":60,"line_end":60,"column_start":9,"column_end":12}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":291326,"byte_end":291338,"line_start":61,"line_end":61,"column_start":9,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":291347,"byte_end":291350,"line_start":62,"line_end":62,"column_start":9,"column_end":12}},{"value":"/ Panics if `self` is not of the right type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":291359,"byte_end":291405,"line_start":63,"line_end":63,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3351},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":294420,"byte_end":294427,"line_start":145,"line_end":145,"column_start":33,"column_end":40},"name":"funcref","qualname":"<Val>::funcref","value":"pub fn funcref(&Self) -> Option<Option<&Func>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to access the underlying value of this `Val`, returning\n `None` if it is not the correct type.\n","sig":null,"attributes":[{"value":"/ Attempt to access the underlying value of this `Val`, returning","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":290899,"byte_end":290966,"line_start":48,"line_end":48,"column_start":9,"column_end":76}},{"value":"/ `None` if it is not the correct type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":290975,"byte_end":291016,"line_start":49,"line_end":49,"column_start":9,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3352},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":294428,"byte_end":294442,"line_start":145,"line_end":145,"column_start":41,"column_end":55},"name":"unwrap_funcref","qualname":"<Val>::unwrap_funcref","value":"pub fn unwrap_funcref(&Self) -> Option<&Func>","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying value of this `Val`, panicking if it's the\n wrong type.","sig":null,"attributes":[{"value":"/ Returns the underlying value of this `Val`, panicking if it's the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":291212,"byte_end":291281,"line_start":58,"line_end":58,"column_start":9,"column_end":78}},{"value":"/ wrong type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":291290,"byte_end":291305,"line_start":59,"line_end":59,"column_start":9,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":291314,"byte_end":291317,"line_start":60,"line_end":60,"column_start":9,"column_end":12}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":291326,"byte_end":291338,"line_start":61,"line_end":61,"column_start":9,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":291347,"byte_end":291350,"line_start":62,"line_end":62,"column_start":9,"column_end":12}},{"value":"/ Panics if `self` is not of the right type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":291359,"byte_end":291405,"line_start":63,"line_end":63,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3353},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":294475,"byte_end":294479,"line_start":146,"line_end":146,"column_start":21,"column_end":25},"name":"v128","qualname":"<Val>::v128","value":"pub fn v128(&Self) -> Option<u128>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to access the underlying value of this `Val`, returning\n `None` if it is not the correct type.\n","sig":null,"attributes":[{"value":"/ Attempt to access the underlying value of this `Val`, returning","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":290899,"byte_end":290966,"line_start":48,"line_end":48,"column_start":9,"column_end":76}},{"value":"/ `None` if it is not the correct type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":290975,"byte_end":291016,"line_start":49,"line_end":49,"column_start":9,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3354},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":294480,"byte_end":294491,"line_start":146,"line_end":146,"column_start":26,"column_end":37},"name":"unwrap_v128","qualname":"<Val>::unwrap_v128","value":"pub fn unwrap_v128(&Self) -> u128","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying value of this `Val`, panicking if it's the\n wrong type.","sig":null,"attributes":[{"value":"/ Returns the underlying value of this `Val`, panicking if it's the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":291212,"byte_end":291281,"line_start":58,"line_end":58,"column_start":9,"column_end":78}},{"value":"/ wrong type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":291290,"byte_end":291305,"line_start":59,"line_end":59,"column_start":9,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":291314,"byte_end":291317,"line_start":60,"line_end":60,"column_start":9,"column_end":12}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":291326,"byte_end":291338,"line_start":61,"line_end":61,"column_start":9,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":291347,"byte_end":291350,"line_start":62,"line_end":62,"column_start":9,"column_end":12}},{"value":"/ Panics if `self` is not of the right type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":291359,"byte_end":291405,"line_start":63,"line_end":63,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1699},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":294824,"byte_end":294833,"line_start":156,"line_end":156,"column_start":12,"column_end":21},"name":"externref","qualname":"<Val>::externref","value":"pub fn externref(&Self) -> Option<Option<ExternRef>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to access the underlying `externref` value of this `Val`.","sig":null,"attributes":[{"value":"/ Attempt to access the underlying `externref` value of this `Val`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":294507,"byte_end":294576,"line_start":149,"line_end":149,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":294581,"byte_end":294584,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ If this is not an `externref`, then `None` is returned.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":294589,"byte_end":294648,"line_start":151,"line_end":151,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":294653,"byte_end":294656,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ If this is a null `externref`, then `Some(None)` is returned.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":294661,"byte_end":294726,"line_start":153,"line_end":153,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":294731,"byte_end":294734,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ If this is a non-null `externref`, then `Some(Some(..))` is returned.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":294739,"byte_end":294812,"line_start":155,"line_end":155,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1700},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":295343,"byte_end":295359,"line_start":173,"line_end":173,"column_start":12,"column_end":28},"name":"unwrap_externref","qualname":"<Val>::unwrap_externref","value":"pub fn unwrap_externref(&Self) -> Option<ExternRef>","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying `externref` value of this `Val`, panicking if it's the\n wrong type.","sig":null,"attributes":[{"value":"/ Returns the underlying `externref` value of this `Val`, panicking if it's the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":294987,"byte_end":295068,"line_start":163,"line_end":163,"column_start":5,"column_end":86}},{"value":"/ wrong type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":295073,"byte_end":295088,"line_start":164,"line_end":164,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":295093,"byte_end":295096,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ If this is a null `externref`, then `None` is returned.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":295101,"byte_end":295160,"line_start":166,"line_end":166,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":295165,"byte_end":295168,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ If this is a non-null `externref`, then `Some(..)` is returned.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":295173,"byte_end":295240,"line_start":168,"line_end":168,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":295245,"byte_end":295248,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":295253,"byte_end":295265,"line_start":170,"line_end":170,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":295270,"byte_end":295273,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ Panics if `self` is not a (nullable) `externref`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":295278,"byte_end":295331,"line_start":172,"line_end":172,"column_start":5,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":3355},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\windows.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"windows","qualname":"::windows","value":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\windows.rs","parent":null,"children":[{"krate":0,"index":3356},{"krate":0,"index":3359},{"krate":0,"index":3362}],"decl_id":null,"docs":" windows-specific extension for the `wasmtime` crate.","sig":null,"attributes":[{"value":"/ windows-specific extension for the `wasmtime` crate.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\windows.rs","byte_start":17687829,"byte_end":17687885,"line_start":1,"line_end":1,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\windows.rs","byte_start":17687886,"byte_end":17687889,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only available on Windows targets.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\windows.rs","byte_start":17687890,"byte_end":17687943,"line_start":3,"line_end":3,"column_start":1,"column_end":54}},{"value":"/ It is not available on Linux or macOS, for example. Note that the import path for","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\windows.rs","byte_start":17687944,"byte_end":17688029,"line_start":4,"line_end":4,"column_start":1,"column_end":86}},{"value":"/ this module is `wasmtime::windows::...`, which is intended to emphasize that it","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\windows.rs","byte_start":17688030,"byte_end":17688113,"line_start":5,"line_end":5,"column_start":1,"column_end":84}},{"value":"/ is platform-specific.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\windows.rs","byte_start":17688114,"byte_end":17688139,"line_start":6,"line_end":6,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\windows.rs","byte_start":17688140,"byte_end":17688143,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The traits contained in this module are intended to extend various types","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\windows.rs","byte_start":17688144,"byte_end":17688220,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ throughout the `wasmtime` crate with extra functionality that's only","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\windows.rs","byte_start":17688221,"byte_end":17688293,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"/ available on Windows.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\windows.rs","byte_start":17688294,"byte_end":17688319,"line_start":10,"line_end":10,"column_start":1,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":3359},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\windows.rs","byte_start":17688415,"byte_end":17688423,"line_start":15,"line_end":15,"column_start":11,"column_end":19},"name":"StoreExt","qualname":"::windows::StoreExt","value":"StoreExt","parent":null,"children":[{"krate":0,"index":3360}],"decl_id":null,"docs":" Extensions for the [`Store`] type only available on Windows.\n","sig":null,"attributes":[{"value":"/ Extensions for the [`Store`] type only available on Windows.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\windows.rs","byte_start":17688340,"byte_end":17688404,"line_start":14,"line_end":14,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3360},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\windows.rs","byte_start":17688543,"byte_end":17688561,"line_start":19,"line_end":19,"column_start":15,"column_end":33},"name":"set_signal_handler","qualname":"::windows::StoreExt::set_signal_handler","value":"pub unsafe fn set_signal_handler<H>(&Self, H) where H: 'static +\nFn(winapi::um::winnt::PEXCEPTION_POINTERS) -> bool","parent":{"krate":0,"index":3359},"children":[],"decl_id":null,"docs":" Configures a custom signal handler to execute.","sig":null,"attributes":[{"value":"/ Configures a custom signal handler to execute.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\windows.rs","byte_start":17688430,"byte_end":17688480,"line_start":16,"line_end":16,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\windows.rs","byte_start":17688485,"byte_end":17688488,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ TODO: needs more documentation.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\windows.rs","byte_start":17688493,"byte_end":17688528,"line_start":18,"line_end":18,"column_start":5,"column_end":40}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":11954,"byte_end":11960,"line_start":38,"line_end":38,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":14875,"byte_end":14881,"line_start":129,"line_end":129,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":14970,"byte_end":14976,"line_start":135,"line_end":135,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":15069,"byte_end":15075,"line_start":141,"line_end":141,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":15167,"byte_end":15173,"line_start":147,"line_end":147,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":16088,"byte_end":16094,"line_start":174,"line_end":174,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":111},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":22386,"byte_end":22391,"line_start":343,"line_end":343,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":40688,"byte_end":40694,"line_start":776,"line_end":776,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":53261,"byte_end":53267,"line_start":1095,"line_end":1095,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":56566,"byte_end":56581,"line_start":56,"line_end":56,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":59803,"byte_end":59830,"line_start":137,"line_end":137,"column_start":15,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":62412,"byte_end":62421,"line_start":215,"line_end":215,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":72894,"byte_end":72898,"line_start":233,"line_end":233,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":328},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":1808},{"krate":0,"index":1813},{"krate":0,"index":1820},{"krate":0,"index":1829},{"krate":0,"index":1840},{"krate":0,"index":1853},{"krate":0,"index":1868},{"krate":0,"index":1885},{"krate":0,"index":1904},{"krate":0,"index":1925},{"krate":0,"index":1948},{"krate":0,"index":1973},{"krate":0,"index":2000},{"krate":0,"index":2029},{"krate":0,"index":2060},{"krate":0,"index":2093},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":95543,"byte_end":95547,"line_start":804,"line_end":804,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":106380,"byte_end":106386,"line_start":1215,"line_end":1215,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":477},{"krate":0,"index":479},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":484},{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":107961,"byte_end":107967,"line_start":1275,"line_end":1275,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":490},{"krate":0,"index":492},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":497},{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":109445,"byte_end":109446,"line_start":1328,"line_end":1328,"column_start":28,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":504},{"krate":0,"index":506},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":511},{"krate":0,"index":512}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":110484,"byte_end":110490,"line_start":1370,"line_end":1370,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":518},{"krate":0,"index":521},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":526},{"krate":0,"index":527}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":114227,"byte_end":114233,"line_start":1470,"line_end":1470,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":537},{"krate":0,"index":538}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":116771,"byte_end":116786,"line_start":1529,"line_end":1529,"column_start":32,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":116817,"byte_end":116832,"line_start":1531,"line_end":1531,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":542}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":129402,"byte_end":129410,"line_start":105,"line_end":105,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":631},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":140875,"byte_end":140881,"line_start":63,"line_end":63,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":732},{"krate":0,"index":735},{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":758},{"krate":0,"index":760}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":166303,"byte_end":166313,"line_start":736,"line_end":736,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":170591,"byte_end":170597,"line_start":86,"line_end":86,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":821},{"krate":0,"index":823},{"krate":0,"index":825},{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":839},{"krate":0,"index":843},{"krate":0,"index":845},{"krate":0,"index":846}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\ref.rs","byte_start":189892,"byte_end":189901,"line_start":12,"line_end":12,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":862},{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":192484,"byte_end":192490,"line_start":55,"line_end":55,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1006},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1026},{"krate":0,"index":1027}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":218537,"byte_end":218543,"line_start":658,"line_end":658,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1032}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":218626,"byte_end":218632,"line_start":664,"line_end":664,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1034}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":222214,"byte_end":222220,"line_start":773,"line_end":773,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1042}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":223145,"byte_end":223151,"line_start":806,"line_end":806,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1044}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":225383,"byte_end":225394,"line_start":863,"line_end":863,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1058}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":225498,"byte_end":225509,"line_start":869,"line_end":869,"column_start":13,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":225528,"byte_end":225539,"line_start":871,"line_end":871,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1061}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":225673,"byte_end":225678,"line_start":880,"line_end":880,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1064},{"krate":0,"index":1065},{"krate":0,"index":1066},{"krate":0,"index":1067},{"krate":0,"index":1069},{"krate":0,"index":1070},{"krate":0,"index":1071},{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1075},{"krate":0,"index":1077},{"krate":0,"index":1079},{"krate":0,"index":1080},{"krate":0,"index":1081},{"krate":0,"index":1082},{"krate":0,"index":1083},{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1090}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":236344,"byte_end":236349,"line_start":1163,"line_end":1163,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1092}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":236448,"byte_end":236453,"line_start":1169,"line_end":1169,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1094}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":236657,"byte_end":236667,"line_start":1176,"line_end":1176,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1096}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":237087,"byte_end":237102,"line_start":1194,"line_end":1194,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1100}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\trampoline\\memory.rs","byte_start":261531,"byte_end":261548,"line_start":46,"line_end":46,"column_start":30,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1397},{"krate":0,"index":1398},{"krate":0,"index":1399}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\trampoline\\memory.rs","byte_start":262047,"byte_end":262065,"line_start":68,"line_end":68,"column_start":31,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1401}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\trampoline\\mod.rs","byte_start":241478,"byte_end":241497,"line_start":30,"line_end":30,"column_start":16,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1504}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\trampoline\\mod.rs","byte_start":241844,"byte_end":241863,"line_start":41,"line_end":41,"column_start":16,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1506},{"krate":0,"index":1507}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\trap.rs","byte_start":264617,"byte_end":264627,"line_start":28,"line_end":28,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1537}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\trap.rs","byte_start":265140,"byte_end":265144,"line_start":48,"line_end":48,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1544},{"krate":0,"index":1546},{"krate":0,"index":1547},{"krate":0,"index":1549},{"krate":0,"index":1551},{"krate":0,"index":1552},{"krate":0,"index":1553}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\trap.rs","byte_start":270236,"byte_end":270240,"line_start":179,"line_end":179,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1555}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\trap.rs","byte_start":270557,"byte_end":270561,"line_start":189,"line_end":189,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1557}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\trap.rs","byte_start":271444,"byte_end":271448,"line_start":213,"line_end":213,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1559}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\trap.rs","byte_start":271720,"byte_end":271724,"line_start":222,"line_end":222,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1561}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\trap.rs","byte_start":271899,"byte_end":271903,"line_start":228,"line_end":228,"column_start":57,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1563}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":273024,"byte_end":273030,"line_start":27,"line_end":27,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1579},{"krate":0,"index":1580},{"krate":0,"index":1581},{"krate":0,"index":1582}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":274115,"byte_end":274122,"line_start":70,"line_end":70,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1584}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":274573,"byte_end":274580,"line_start":84,"line_end":84,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1586},{"krate":0,"index":1587},{"krate":0,"index":1588},{"krate":0,"index":1589},{"krate":0,"index":1590}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":277855,"byte_end":277865,"line_start":182,"line_end":182,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3165},{"krate":0,"index":3166},{"krate":0,"index":3167},{"krate":0,"index":3168},{"krate":0,"index":3169},{"krate":0,"index":3170},{"krate":0,"index":3171},{"krate":0,"index":3172}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":278106,"byte_end":278116,"line_start":191,"line_end":191,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1594}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":278225,"byte_end":278235,"line_start":197,"line_end":197,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1596}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":278348,"byte_end":278358,"line_start":203,"line_end":203,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1598}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":278470,"byte_end":278480,"line_start":209,"line_end":209,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1600}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":278827,"byte_end":278835,"line_start":224,"line_end":224,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1602},{"krate":0,"index":1603},{"krate":0,"index":1604},{"krate":0,"index":1605},{"krate":0,"index":1608},{"krate":0,"index":1624}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":281733,"byte_end":281743,"line_start":312,"line_end":312,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1628},{"krate":0,"index":1629},{"krate":0,"index":1630},{"krate":0,"index":1631}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":283149,"byte_end":283158,"line_start":358,"line_end":358,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1633},{"krate":0,"index":1634},{"krate":0,"index":1635},{"krate":0,"index":1636}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":284555,"byte_end":284565,"line_start":400,"line_end":400,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1638},{"krate":0,"index":1639},{"krate":0,"index":1640}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":285313,"byte_end":285323,"line_start":427,"line_end":427,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1643},{"krate":0,"index":1644}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":287246,"byte_end":287256,"line_start":479,"line_end":479,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1647},{"krate":0,"index":1648},{"krate":0,"index":1649},{"krate":0,"index":1650}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":288028,"byte_end":288038,"line_start":507,"line_end":507,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1653}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":288815,"byte_end":288825,"line_start":534,"line_end":534,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1656},{"krate":0,"index":1657},{"krate":0,"index":1658}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":289337,"byte_end":289347,"line_start":552,"line_end":552,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1661}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":291541,"byte_end":291544,"line_start":70,"line_end":70,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":1695},{"krate":0,"index":1696},{"krate":0,"index":1697},{"krate":0,"index":1698},{"krate":0,"index":3343},{"krate":0,"index":3344},{"krate":0,"index":3345},{"krate":0,"index":3346},{"krate":0,"index":3347},{"krate":0,"index":3348},{"krate":0,"index":3349},{"krate":0,"index":3350},{"krate":0,"index":3351},{"krate":0,"index":3352},{"krate":0,"index":3353},{"krate":0,"index":3354},{"krate":0,"index":1699},{"krate":0,"index":1700},{"krate":0,"index":1701},{"krate":0,"index":1702}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":296642,"byte_end":296645,"line_start":207,"line_end":207,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1704}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":296729,"byte_end":296732,"line_start":213,"line_end":213,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1706}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":296816,"byte_end":296819,"line_start":219,"line_end":219,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1708}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":296913,"byte_end":296916,"line_start":225,"line_end":225,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1710}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":297016,"byte_end":297019,"line_start":231,"line_end":231,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1712}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":297135,"byte_end":297138,"line_start":237,"line_end":237,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1714}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":297251,"byte_end":297254,"line_start":243,"line_end":243,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1716}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":297352,"byte_end":297355,"line_start":249,"line_end":249,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1718}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\windows.rs","byte_start":17688688,"byte_end":17688693,"line_start":24,"line_end":24,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3363}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\lib.rs","byte_start":10587,"byte_end":10594,"line_start":266,"line_end":266,"column_start":17,"column_end":24},"ref_id":{"krate":0,"index":3355}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":11954,"byte_end":11960,"line_start":38,"line_end":38,"column_start":6,"column_end":12},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1742},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":14875,"byte_end":14881,"line_start":129,"line_end":129,"column_start":21,"column_end":27},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1742},"to":{"krate":2,"index":2895}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":14970,"byte_end":14976,"line_start":135,"line_end":135,"column_start":23,"column_end":29},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1742},"to":{"krate":2,"index":2895}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":15069,"byte_end":15075,"line_start":141,"line_end":141,"column_start":23,"column_end":29},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1742},"to":{"krate":2,"index":2895}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":15167,"byte_end":15173,"line_start":147,"line_end":147,"column_start":22,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1742},"to":{"krate":2,"index":2895}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":16088,"byte_end":16094,"line_start":174,"line_end":174,"column_start":6,"column_end":12},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1757},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":22386,"byte_end":22391,"line_start":343,"line_end":343,"column_start":6,"column_end":11},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1762},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":40688,"byte_end":40694,"line_start":776,"line_end":776,"column_start":6,"column_end":12},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1767},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":50290,"byte_end":50294,"line_start":1023,"line_end":1023,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":2989},"to":{"krate":0,"index":151}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":50297,"byte_end":50301,"line_start":1023,"line_end":1023,"column_start":40,"column_end":44},"kind":"SuperTrait","from":{"krate":2,"index":3001},"to":{"krate":0,"index":151}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\externals.rs","byte_start":53261,"byte_end":53267,"line_start":1095,"line_end":1095,"column_start":17,"column_end":23},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1772},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":56566,"byte_end":56581,"line_start":56,"line_end":56,"column_start":6,"column_end":21},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1790},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":59803,"byte_end":59830,"line_start":137,"line_end":137,"column_start":15,"column_end":42},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":199},"to":{"krate":2,"index":3224}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\frame_info.rs","byte_start":62412,"byte_end":62421,"line_start":215,"line_end":215,"column_start":6,"column_end":15},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1794},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":72894,"byte_end":72898,"line_start":233,"line_end":233,"column_start":6,"column_end":10},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1802},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":95543,"byte_end":95547,"line_start":804,"line_end":804,"column_start":21,"column_end":25},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1802},"to":{"krate":2,"index":9300}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":106380,"byte_end":106386,"line_start":1215,"line_end":1215,"column_start":24,"column_end":30},"kind":{"Impl":{"id":20}},"from":{"krate":2,"index":43179},"to":{"krate":0,"index":356}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":107961,"byte_end":107967,"line_start":1275,"line_end":1275,"column_start":24,"column_end":30},"kind":{"Impl":{"id":21}},"from":{"krate":2,"index":43179},"to":{"krate":0,"index":356}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":109445,"byte_end":109446,"line_start":1328,"line_end":1328,"column_start":28,"column_end":29},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":500},"to":{"krate":0,"index":369}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":110484,"byte_end":110490,"line_start":1370,"line_end":1370,"column_start":28,"column_end":34},"kind":{"Impl":{"id":23}},"from":{"krate":14,"index":577},"to":{"krate":0,"index":369}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":114227,"byte_end":114233,"line_start":1470,"line_end":1470,"column_start":6,"column_end":12},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":532},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":116771,"byte_end":116786,"line_start":1529,"line_end":1529,"column_start":32,"column_end":47},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":2137},"to":{"krate":1,"index":2336}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\func.rs","byte_start":116817,"byte_end":116832,"line_start":1531,"line_end":1531,"column_start":27,"column_end":42},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":2137},"to":{"krate":2,"index":9307}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\instance.rs","byte_start":129402,"byte_end":129410,"line_start":105,"line_end":105,"column_start":6,"column_end":14},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":2940},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":140875,"byte_end":140881,"line_start":63,"line_end":63,"column_start":6,"column_end":12},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":713},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\linker.rs","byte_start":166303,"byte_end":166313,"line_start":736,"line_end":736,"column_start":6,"column_end":16},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":762},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\module.rs","byte_start":170591,"byte_end":170597,"line_start":86,"line_end":86,"column_start":6,"column_end":12},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":2983},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\ref.rs","byte_start":189892,"byte_end":189901,"line_start":12,"line_end":12,"column_start":6,"column_end":15},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":2989},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":192484,"byte_end":192490,"line_start":55,"line_end":55,"column_start":6,"column_end":12},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":2995},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":218537,"byte_end":218543,"line_start":658,"line_end":658,"column_start":18,"column_end":24},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":2995},"to":{"krate":2,"index":2967}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":218626,"byte_end":218632,"line_start":664,"line_end":664,"column_start":21,"column_end":27},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":2995},"to":{"krate":2,"index":9300}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":222214,"byte_end":222220,"line_start":773,"line_end":773,"column_start":6,"column_end":12},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":3045},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":223145,"byte_end":223151,"line_start":806,"line_end":806,"column_start":18,"column_end":24},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":3045},"to":{"krate":2,"index":2967}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":225383,"byte_end":225394,"line_start":863,"line_end":863,"column_start":20,"column_end":31},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1054},"to":{"krate":2,"index":2640}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":225498,"byte_end":225509,"line_start":869,"line_end":869,"column_start":13,"column_end":24},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1054},"to":{"krate":2,"index":2645}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":225528,"byte_end":225539,"line_start":871,"line_end":871,"column_start":15,"column_end":26},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1054},"to":{"krate":2,"index":9506}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":225673,"byte_end":225678,"line_start":880,"line_end":880,"column_start":6,"column_end":11},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":3049},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":236344,"byte_end":236349,"line_start":1163,"line_end":1163,"column_start":18,"column_end":23},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":3049},"to":{"krate":2,"index":2967}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":236448,"byte_end":236453,"line_start":1169,"line_end":1169,"column_start":21,"column_end":26},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":3049},"to":{"krate":2,"index":9300}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":236657,"byte_end":236667,"line_start":1176,"line_end":1176,"column_start":15,"column_end":25},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1045},"to":{"krate":2,"index":3224}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\runtime.rs","byte_start":237087,"byte_end":237102,"line_start":1194,"line_end":1194,"column_start":6,"column_end":21},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1097},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\trampoline\\memory.rs","byte_start":261531,"byte_end":261548,"line_start":46,"line_end":46,"column_start":30,"column_end":47},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1394},"to":{"krate":43,"index":627}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\trampoline\\memory.rs","byte_start":262047,"byte_end":262065,"line_start":68,"line_end":68,"column_start":31,"column_end":49},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":3054},"to":{"krate":43,"index":621}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\trampoline\\mod.rs","byte_start":241478,"byte_end":241497,"line_start":30,"line_end":30,"column_start":16,"column_end":35},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1500},"to":{"krate":2,"index":2610}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\trampoline\\mod.rs","byte_start":241844,"byte_end":241863,"line_start":41,"line_end":41,"column_start":16,"column_end":35},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1500},"to":{"krate":2,"index":3200}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\trap.rs","byte_start":264617,"byte_end":264627,"line_start":28,"line_end":28,"column_start":23,"column_end":33},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":3062},"to":{"krate":2,"index":9307}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\trap.rs","byte_start":265140,"byte_end":265144,"line_start":48,"line_end":48,"column_start":6,"column_end":10},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":3058},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\trap.rs","byte_start":270236,"byte_end":270240,"line_start":179,"line_end":179,"column_start":21,"column_end":25},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":3058},"to":{"krate":2,"index":9300}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\trap.rs","byte_start":270557,"byte_end":270561,"line_start":189,"line_end":189,"column_start":23,"column_end":27},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":3058},"to":{"krate":2,"index":9307}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\trap.rs","byte_start":271444,"byte_end":271448,"line_start":213,"line_end":213,"column_start":28,"column_end":32},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":3058},"to":{"krate":1,"index":2336}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\trap.rs","byte_start":271720,"byte_end":271724,"line_start":222,"line_end":222,"column_start":30,"column_end":34},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":3058},"to":{"krate":2,"index":2895}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\trap.rs","byte_start":271899,"byte_end":271903,"line_start":228,"line_end":228,"column_start":57,"column_end":61},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":3058},"to":{"krate":2,"index":2895}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":273024,"byte_end":273030,"line_start":27,"line_end":27,"column_start":6,"column_end":12},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":3093},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":274115,"byte_end":274122,"line_start":70,"line_end":70,"column_start":23,"column_end":30},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":3110},"to":{"krate":2,"index":9307}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":274573,"byte_end":274580,"line_start":84,"line_end":84,"column_start":6,"column_end":13},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":3110},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":277855,"byte_end":277865,"line_start":182,"line_end":182,"column_start":6,"column_end":16},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":3138},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":278106,"byte_end":278116,"line_start":191,"line_end":191,"column_start":25,"column_end":35},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":3138},"to":{"krate":2,"index":2895}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":278225,"byte_end":278235,"line_start":197,"line_end":197,"column_start":27,"column_end":37},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":3138},"to":{"krate":2,"index":2895}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":278348,"byte_end":278358,"line_start":203,"line_end":203,"column_start":27,"column_end":37},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":3138},"to":{"krate":2,"index":2895}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":278470,"byte_end":278480,"line_start":209,"line_end":209,"column_start":26,"column_end":36},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":3138},"to":{"krate":2,"index":2895}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":278827,"byte_end":278835,"line_start":224,"line_end":224,"column_start":6,"column_end":14},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":3173},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":281733,"byte_end":281743,"line_start":312,"line_end":312,"column_start":6,"column_end":16},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":3190},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":283149,"byte_end":283158,"line_start":358,"line_end":358,"column_start":6,"column_end":15},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":3207},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":284555,"byte_end":284565,"line_start":400,"line_end":400,"column_start":6,"column_end":16},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":3224},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":285313,"byte_end":285323,"line_start":427,"line_end":427,"column_start":15,"column_end":25},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":3240},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":287246,"byte_end":287256,"line_start":479,"line_end":479,"column_start":15,"column_end":25},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":3272},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":288028,"byte_end":288038,"line_start":507,"line_end":507,"column_start":30,"column_end":40},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":3272},"to":{"krate":2,"index":9300}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":288815,"byte_end":288825,"line_start":534,"line_end":534,"column_start":15,"column_end":25},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":3295},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\types.rs","byte_start":289337,"byte_end":289347,"line_start":552,"line_end":552,"column_start":30,"column_end":40},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":3295},"to":{"krate":2,"index":9300}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":291541,"byte_end":291544,"line_start":70,"line_end":70,"column_start":6,"column_end":9},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":3317},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":296642,"byte_end":296645,"line_start":207,"line_end":207,"column_start":20,"column_end":23},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":3317},"to":{"krate":2,"index":2895}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":296729,"byte_end":296732,"line_start":213,"line_end":213,"column_start":20,"column_end":23},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":3317},"to":{"krate":2,"index":2895}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":296816,"byte_end":296819,"line_start":219,"line_end":219,"column_start":20,"column_end":23},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":3317},"to":{"krate":2,"index":2895}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":296913,"byte_end":296916,"line_start":225,"line_end":225,"column_start":20,"column_end":23},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":3317},"to":{"krate":2,"index":2895}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":297016,"byte_end":297019,"line_start":231,"line_end":231,"column_start":26,"column_end":29},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":3317},"to":{"krate":2,"index":2895}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":297135,"byte_end":297138,"line_start":237,"line_end":237,"column_start":34,"column_end":37},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":3317},"to":{"krate":2,"index":2895}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":297251,"byte_end":297254,"line_start":243,"line_end":243,"column_start":29,"column_end":32},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":3317},"to":{"krate":2,"index":2895}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\values.rs","byte_start":297352,"byte_end":297355,"line_start":249,"line_end":249,"column_start":21,"column_end":24},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":3317},"to":{"krate":2,"index":2895}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmtime-0.20.0\\src\\windows.rs","byte_start":17688688,"byte_end":17688693,"line_start":24,"line_end":24,"column_start":19,"column_end":24},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":3049},"to":{"krate":0,"index":3359}}]}