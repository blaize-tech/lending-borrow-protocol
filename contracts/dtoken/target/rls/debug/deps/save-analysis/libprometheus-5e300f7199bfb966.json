{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0","program":"C:\\Users\\комфи\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","prometheus","--edition=2018","C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"protobuf\"","-C","metadata=5e300f7199bfb966","-C","extra-filename=-5e300f7199bfb966","--out-dir","c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps","--extern","cfg_if=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps\\libcfg_if-cac53d004ec9196f.rmeta","--extern","fnv=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps\\libfnv-96e008602c027cb5.rmeta","--extern","lazy_static=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps\\liblazy_static-d6cbdbe0b44bd4a4.rmeta","--extern","parking_lot=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps\\libparking_lot-4408e580282267aa.rmeta","--extern","protobuf=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps\\libprotobuf-fd7ab8fc710e2329.rmeta","--extern","regex=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps\\libregex-5ef322f0852e6a5b.rmeta","--extern","thiserror=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps\\libthiserror-4e544be42338ddff.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\комфи\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps\\libprometheus-5e300f7199bfb966.rmeta"},"prelude":{"crate_id":{"name":"prometheus","disambiguator":[4426220825836708127,0]},"crate_root":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src","external_crates":[{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[7976927198175868373,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[11165144592143370822,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[252041924521724887,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5467317383579905353,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7624884120048857693,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[11703982264691436790,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[2970152443746782806,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9222488229097456044,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7853498759631503325,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16147963203778103955,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[14622278557065309757,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[12620427935833221912,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[5227252993197737239,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","num":14,"id":{"name":"cfg_if","disambiguator":[12394071839129264589,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","num":15,"id":{"name":"lazy_static","disambiguator":[8441177590269360409,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","num":16,"id":{"name":"parking_lot","disambiguator":[14416690169615417030,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","num":17,"id":{"name":"instant","disambiguator":[8631056243197965734,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","num":18,"id":{"name":"lock_api","disambiguator":[5532784440429673632,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","num":19,"id":{"name":"scopeguard","disambiguator":[18306970893068717338,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","num":20,"id":{"name":"parking_lot_core","disambiguator":[10063858549501933422,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","num":21,"id":{"name":"smallvec","disambiguator":[9259698098513288274,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","num":22,"id":{"name":"winapi","disambiguator":[158433219665495671,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\desc.rs","num":23,"id":{"name":"fnv","disambiguator":[2959341266061264263,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\desc.rs","num":24,"id":{"name":"regex","disambiguator":[5321003400262654706,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\desc.rs","num":25,"id":{"name":"regex_syntax","disambiguator":[9115906448555579718,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\desc.rs","num":26,"id":{"name":"aho_corasick","disambiguator":[328595471268169391,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\desc.rs","num":27,"id":{"name":"memchr","disambiguator":[14479689056587954301,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\encoder\\pb.rs","num":28,"id":{"name":"protobuf","disambiguator":[3891970754372775891,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\errors.rs","num":29,"id":{"name":"thiserror","disambiguator":[16452521269220640097,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\errors.rs","num":30,"id":{"name":"thiserror_impl","disambiguator":[9048138020972467572,0]}}],"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":68,"byte_end":6214,"line_start":3,"line_end":230,"column_start":1,"column_end":74}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1992},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\encoder\\mod.rs","byte_start":58152,"byte_end":58167,"line_start":8,"line_end":8,"column_start":20,"column_end":35},"alias_span":null,"name":"ProtobufEncoder","value":"","parent":{"krate":0,"index":356}},{"kind":"Use","ref_id":{"krate":0,"index":1993},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\encoder\\mod.rs","byte_start":58152,"byte_end":58167,"line_start":8,"line_end":8,"column_start":20,"column_end":35},"alias_span":null,"name":"ProtobufEncoder","value":"","parent":{"krate":0,"index":356}},{"kind":"Use","ref_id":{"krate":0,"index":1998},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\encoder\\mod.rs","byte_start":58208,"byte_end":58219,"line_start":9,"line_end":9,"column_start":22,"column_end":33},"alias_span":null,"name":"TextEncoder","value":"","parent":{"krate":0,"index":356}},{"kind":"Use","ref_id":{"krate":0,"index":1999},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\encoder\\mod.rs","byte_start":58208,"byte_end":58219,"line_start":9,"line_end":9,"column_start":22,"column_end":33},"alias_span":null,"name":"TextEncoder","value":"","parent":{"krate":0,"index":356}},{"kind":"Use","ref_id":{"krate":0,"index":276},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":4528,"byte_end":4548,"line_start":184,"line_end":184,"column_start":9,"column_end":29},"alias_span":null,"name":"CounterWithValueType","value":"","parent":{"krate":0,"index":1084}},{"kind":"Use","ref_id":{"krate":0,"index":281},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":4550,"byte_end":4562,"line_start":184,"line_end":184,"column_start":31,"column_end":43},"alias_span":null,"name":"LocalCounter","value":"","parent":{"krate":0,"index":1084}},{"kind":"Use","ref_id":{"krate":0,"index":304},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":4564,"byte_end":4579,"line_start":184,"line_end":184,"column_start":45,"column_end":60},"alias_span":null,"name":"LocalCounterVec","value":"","parent":{"krate":0,"index":1084}},{"kind":"Use","ref_id":{"krate":0,"index":282},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":4581,"byte_end":4596,"line_start":184,"line_end":184,"column_start":62,"column_end":77},"alias_span":null,"name":"LocalIntCounter","value":"","parent":{"krate":0,"index":1084}},{"kind":"Use","ref_id":{"krate":0,"index":305},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":4598,"byte_end":4616,"line_start":184,"line_end":184,"column_start":79,"column_end":97},"alias_span":null,"name":"LocalIntCounterVec","value":"","parent":{"krate":0,"index":1084}},{"kind":"Use","ref_id":{"krate":0,"index":2142},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":4656,"byte_end":4670,"line_start":186,"line_end":186,"column_start":32,"column_end":46},"alias_span":null,"name":"LocalHistogram","value":"","parent":{"krate":0,"index":1084}},{"kind":"Use","ref_id":{"krate":0,"index":2146},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":4672,"byte_end":4691,"line_start":186,"line_end":186,"column_start":48,"column_end":67},"alias_span":null,"name":"LocalHistogramTimer","value":"","parent":{"krate":0,"index":1084}},{"kind":"Use","ref_id":{"krate":0,"index":2152},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":4693,"byte_end":4710,"line_start":186,"line_end":186,"column_start":69,"column_end":86},"alias_span":null,"name":"LocalHistogramVec","value":"","parent":{"krate":0,"index":1084}},{"kind":"Use","ref_id":{"krate":0,"index":829},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":4742,"byte_end":4753,"line_start":187,"line_end":187,"column_start":30,"column_end":41},"alias_span":null,"name":"LocalMetric","value":"","parent":{"krate":0,"index":1084}},{"kind":"Use","ref_id":{"krate":0,"index":831},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":4755,"byte_end":4763,"line_start":187,"line_end":187,"column_start":43,"column_end":51},"alias_span":null,"name":"MayFlush","value":"","parent":{"krate":0,"index":1084}},{"kind":"Use","ref_id":{"krate":0,"index":1920},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":4808,"byte_end":4822,"line_start":190,"line_end":190,"column_start":9,"column_end":23},"alias_span":null,"name":"AFLocalCounter","value":"","parent":{"krate":0,"index":1084}},{"kind":"Use","ref_id":{"krate":0,"index":1931},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":4824,"byte_end":4840,"line_start":190,"line_end":190,"column_start":25,"column_end":41},"alias_span":null,"name":"AFLocalHistogram","value":"","parent":{"krate":0,"index":1084}},{"kind":"Use","ref_id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":4842,"byte_end":4858,"line_start":190,"line_end":190,"column_start":43,"column_end":59},"alias_span":null,"name":"CounterDelegator","value":"","parent":{"krate":0,"index":1084}},{"kind":"Use","ref_id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":4860,"byte_end":4878,"line_start":190,"line_end":190,"column_start":61,"column_end":79},"alias_span":null,"name":"HistogramDelegator","value":"","parent":{"krate":0,"index":1084}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":4979,"byte_end":4980,"line_start":201,"line_end":201,"column_start":30,"column_end":31},"alias_span":null,"name":"*","value":"Atomic","parent":{"krate":0,"index":1131}},{"kind":"Use","ref_id":{"krate":0,"index":1940},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":5020,"byte_end":5034,"line_start":203,"line_end":203,"column_start":9,"column_end":23},"alias_span":null,"name":"GenericCounter","value":"","parent":{"krate":0,"index":1131}},{"kind":"Use","ref_id":{"krate":0,"index":267},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":5036,"byte_end":5053,"line_start":203,"line_end":203,"column_start":25,"column_end":42},"alias_span":null,"name":"GenericCounterVec","value":"","parent":{"krate":0,"index":1131}},{"kind":"Use","ref_id":{"krate":0,"index":1952},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":5055,"byte_end":5074,"line_start":203,"line_end":203,"column_start":44,"column_end":63},"alias_span":null,"name":"GenericLocalCounter","value":"","parent":{"krate":0,"index":1131}},{"kind":"Use","ref_id":{"krate":0,"index":297},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":5076,"byte_end":5098,"line_start":203,"line_end":203,"column_start":65,"column_end":87},"alias_span":null,"name":"GenericLocalCounterVec","value":"","parent":{"krate":0,"index":1131}},{"kind":"Use","ref_id":{"krate":0,"index":1981},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":5133,"byte_end":5137,"line_start":205,"line_end":205,"column_start":27,"column_end":31},"alias_span":null,"name":"Desc","value":"","parent":{"krate":0,"index":1131}},{"kind":"Use","ref_id":{"krate":0,"index":354},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":5139,"byte_end":5148,"line_start":205,"line_end":205,"column_start":33,"column_end":42},"alias_span":null,"name":"Describer","value":"","parent":{"krate":0,"index":1131}},{"kind":"Use","ref_id":{"krate":0,"index":2061},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":5178,"byte_end":5190,"line_start":206,"line_end":206,"column_start":28,"column_end":40},"alias_span":null,"name":"GenericGauge","value":"","parent":{"krate":0,"index":1131}},{"kind":"Use","ref_id":{"krate":0,"index":560},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":5192,"byte_end":5207,"line_start":206,"line_end":206,"column_start":42,"column_end":57},"alias_span":null,"name":"GenericGaugeVec","value":"","parent":{"krate":0,"index":1131}},{"kind":"Use","ref_id":{"krate":0,"index":824},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":5239,"byte_end":5248,"line_start":207,"line_end":207,"column_start":30,"column_end":39},"alias_span":null,"name":"Collector","value":"","parent":{"krate":0,"index":1131}},{"kind":"Use","ref_id":{"krate":0,"index":827},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":5250,"byte_end":5256,"line_start":207,"line_end":207,"column_start":41,"column_end":47},"alias_span":null,"name":"Metric","value":"","parent":{"krate":0,"index":1131}},{"kind":"Use","ref_id":{"krate":0,"index":2157},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":5258,"byte_end":5262,"line_start":207,"line_end":207,"column_start":49,"column_end":53},"alias_span":null,"name":"Opts","value":"","parent":{"krate":0,"index":1131}},{"kind":"Use","ref_id":{"krate":0,"index":2221},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":5290,"byte_end":5299,"line_start":208,"line_end":208,"column_start":26,"column_end":35},"alias_span":null,"name":"MetricVec","value":"","parent":{"krate":0,"index":1131}},{"kind":"Use","ref_id":{"krate":0,"index":1022},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":5301,"byte_end":5317,"line_start":208,"line_end":208,"column_start":37,"column_end":53},"alias_span":null,"name":"MetricVecBuilder","value":"","parent":{"krate":0,"index":1131}},{"kind":"Use","ref_id":{"krate":0,"index":232},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":5347,"byte_end":5354,"line_start":211,"line_end":211,"column_start":25,"column_end":32},"alias_span":null,"name":"Counter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":269},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":5356,"byte_end":5366,"line_start":211,"line_end":211,"column_start":34,"column_end":44},"alias_span":null,"name":"CounterVec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":233},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":5368,"byte_end":5378,"line_start":211,"line_end":211,"column_start":46,"column_end":56},"alias_span":null,"name":"IntCounter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":270},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":5380,"byte_end":5393,"line_start":211,"line_end":211,"column_start":58,"column_end":71},"alias_span":null,"name":"IntCounterVec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":460},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":5419,"byte_end":5426,"line_start":212,"line_end":212,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1992},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":5480,"byte_end":5495,"line_start":214,"line_end":214,"column_start":24,"column_end":39},"alias_span":null,"name":"ProtobufEncoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1993},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":5480,"byte_end":5495,"line_start":214,"line_end":214,"column_start":24,"column_end":39},"alias_span":null,"name":"ProtobufEncoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1998},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":5520,"byte_end":5531,"line_start":215,"line_end":215,"column_start":24,"column_end":35},"alias_span":null,"name":"TextEncoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1999},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":5520,"byte_end":5531,"line_start":215,"line_end":215,"column_start":24,"column_end":35},"alias_span":null,"name":"TextEncoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":377},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":5586,"byte_end":5601,"line_start":217,"line_end":217,"column_start":25,"column_end":40},"alias_span":null,"name":"PROTOBUF_FORMAT","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":421},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":5603,"byte_end":5614,"line_start":217,"line_end":217,"column_start":42,"column_end":53},"alias_span":null,"name":"TEXT_FORMAT","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2026},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":5640,"byte_end":5645,"line_start":218,"line_end":218,"column_start":24,"column_end":29},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":469},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":5647,"byte_end":5653,"line_start":218,"line_end":218,"column_start":31,"column_end":37},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":524},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":5678,"byte_end":5683,"line_start":219,"line_end":219,"column_start":23,"column_end":28},"alias_span":null,"name":"Gauge","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":562},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":5685,"byte_end":5693,"line_start":219,"line_end":219,"column_start":30,"column_end":38},"alias_span":null,"name":"GaugeVec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":525},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":5695,"byte_end":5703,"line_start":219,"line_end":219,"column_start":40,"column_end":48},"alias_span":null,"name":"IntGauge","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":563},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":5705,"byte_end":5716,"line_start":219,"line_end":219,"column_start":50,"column_end":61},"alias_span":null,"name":"IntGaugeVec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":649},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":5744,"byte_end":5759,"line_start":220,"line_end":220,"column_start":26,"column_end":41},"alias_span":null,"name":"DEFAULT_BUCKETS","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":737},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":5787,"byte_end":5806,"line_start":221,"line_end":221,"column_start":27,"column_end":46},"alias_span":null,"name":"exponential_buckets","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":735},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":5808,"byte_end":5822,"line_start":221,"line_end":221,"column_start":48,"column_end":62},"alias_span":null,"name":"linear_buckets","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2122},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":5851,"byte_end":5860,"line_start":222,"line_end":222,"column_start":27,"column_end":36},"alias_span":null,"name":"Histogram","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2073},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":5862,"byte_end":5875,"line_start":222,"line_end":222,"column_start":38,"column_end":51},"alias_span":null,"name":"HistogramOpts","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2116},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":5877,"byte_end":5891,"line_start":222,"line_end":222,"column_start":53,"column_end":67},"alias_span":null,"name":"HistogramTimer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":730},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":5893,"byte_end":5905,"line_start":222,"line_end":222,"column_start":69,"column_end":81},"alias_span":null,"name":"HistogramVec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2157},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":5931,"byte_end":5935,"line_start":223,"line_end":223,"column_start":24,"column_end":28},"alias_span":null,"name":"Opts","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2168},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":6131,"byte_end":6139,"line_start":229,"line_end":229,"column_start":25,"column_end":33},"alias_span":null,"name":"Registry","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":918},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":6166,"byte_end":6182,"line_start":230,"line_end":230,"column_start":26,"column_end":42},"alias_span":null,"name":"default_registry","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":921},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":6184,"byte_end":6190,"line_start":230,"line_end":230,"column_start":44,"column_end":50},"alias_span":null,"name":"gather","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":919},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":6192,"byte_end":6200,"line_start":230,"line_end":230,"column_start":52,"column_end":60},"alias_span":null,"name":"register","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":920},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":6202,"byte_end":6212,"line_start":230,"line_end":230,"column_start":62,"column_end":72},"alias_span":null,"name":"unregister","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":68,"byte_end":6214,"line_start":3,"line_end":230,"column_start":1,"column_end":74},"name":"","qualname":"::","value":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":1268},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":23},{"krate":0,"index":87},{"krate":0,"index":170},{"krate":0,"index":320},{"krate":0,"index":356},{"krate":0,"index":465},{"krate":0,"index":471},{"krate":0,"index":568},{"krate":0,"index":783},{"krate":0,"index":858},{"krate":0,"index":922},{"krate":0,"index":978},{"krate":0,"index":1056},{"krate":0,"index":1084},{"krate":0,"index":1131},{"krate":0,"index":1177},{"krate":0,"index":1178},{"krate":0,"index":1181},{"krate":0,"index":1184},{"krate":0,"index":1187},{"krate":0,"index":1190},{"krate":0,"index":1193},{"krate":0,"index":1194},{"krate":0,"index":1196},{"krate":0,"index":1197},{"krate":0,"index":1199},{"krate":0,"index":1200},{"krate":0,"index":1203},{"krate":0,"index":1206},{"krate":0,"index":1207},{"krate":0,"index":1210},{"krate":0,"index":1213},{"krate":0,"index":1214},{"krate":0,"index":1217},{"krate":0,"index":1220},{"krate":0,"index":1223},{"krate":0,"index":1226},{"krate":0,"index":1229},{"krate":0,"index":1230},{"krate":0,"index":1233},{"krate":0,"index":1236},{"krate":0,"index":1237},{"krate":0,"index":1240},{"krate":0,"index":1243},{"krate":0,"index":1246},{"krate":0,"index":1249},{"krate":0,"index":1252},{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1259},{"krate":0,"index":1262},{"krate":0,"index":1265}],"decl_id":null,"docs":"The Rust client library for [Prometheus](https://prometheus.io/).","sig":null,"attributes":[{"value":"*\nThe Rust client library for [Prometheus](https://prometheus.io/).\n\nUse of this library involves a few core concepts:\n\n* [`Metric`s](core/trait.Metric.html) like [`Counter`s](type.Counter.html) that\n  represent information about your system.\n\n* A [`Registry`](struct.Registry.html) that [`Metric`s](core/trait.Metric.html)\n  are registered with.\n\n* An endpoint that calls [`gather`](fn.gather.html) which returns\n  [`MetricFamily`s](proto/struct.MetricFamily.html) through an\n  [`Encoder`](trait.Encoder.html).\n\n\n# Basic Example\n\n```rust\nuse prometheus::{Opts, Registry, Counter, TextEncoder, Encoder};\n\n// Create a Counter.\nlet counter_opts = Opts::new(\"test_counter\", \"test counter help\");\nlet counter = Counter::with_opts(counter_opts).unwrap();\n\n// Create a Registry and register Counter.\nlet r = Registry::new();\nr.register(Box::new(counter.clone())).unwrap();\n\n// Inc.\ncounter.inc();\n\n// Gather the metrics.\nlet mut buffer = vec![];\nlet encoder = TextEncoder::new();\nlet metric_families = r.gather();\nencoder.encode(&metric_families, &mut buffer).unwrap();\n\n// Output to the standard output.\nprintln!(\"{}\", String::from_utf8(buffer).unwrap());\n```\n\nYou can find more examples within\n[`/examples`](https://github.com/tikv/rust-prometheus/tree/master/examples).\n\n\n# Static Metrics\n\nThis crate supports staticly built metrics. You can use it with\n[`lazy_static`](https://docs.rs/lazy_static/) to quickly build up and collect\nsome metrics.\n\n```rust\n#[macro_use] extern crate lazy_static;\n#[macro_use] extern crate prometheus;\nuse prometheus::{self, IntCounter, TextEncoder, Encoder};\n\nlazy_static! {\n    static ref HIGH_FIVE_COUNTER: IntCounter =\n        register_int_counter!(\"highfives\", \"Number of high fives received\").unwrap();\n}\n\nHIGH_FIVE_COUNTER.inc();\nassert_eq!(HIGH_FIVE_COUNTER.get(), 1);\n```\n\nBy default, this registers with a default registry. To make a report, you can call\n[`gather`](fn.gather.html). This will return a family of metrics you can then feed through an\n[`Encoder`](trait.Encoder.html) and report to Promethus.\n\n```\n# #[macro_use] extern crate lazy_static;\n#[macro_use] extern crate prometheus;\n# use prometheus::IntCounter;\nuse prometheus::{self, TextEncoder, Encoder};\n\n// Register & measure some metrics.\n# lazy_static! {\n#     static ref HIGH_FIVE_COUNTER: IntCounter =\n#        register_int_counter!(\"highfives\", \"Number of high fives received\").unwrap();\n# }\n# HIGH_FIVE_COUNTER.inc();\n\nlet mut buffer = Vec::new();\nlet encoder = TextEncoder::new();\n\n// Gather the metrics.\nlet metric_families = prometheus::gather();\n// Encode them to send.\nencoder.encode(&metric_families, &mut buffer).unwrap();\n\nlet output = String::from_utf8(buffer.clone()).unwrap();\nconst EXPECTED_OUTPUT: &'static str = \"# HELP highfives Number of high fives received\\n# TYPE highfives counter\\nhighfives 1\\n\";\nassert!(output.starts_with(EXPECTED_OUTPUT));\n```\n\nSee [prometheus_static_metric](https://docs.rs/prometheus-static-metric) for\nadditional functionality.\n\n\n# Features\n\nThis library supports four features:\n\n* `gen`: To generate protobuf client with the latest protobuf version instead of\n  using the pre-generated client.\n* `nightly`: Enable nightly only features.\n* `process`: For collecting process info.\n* `push`: Enable push support.\n\n*/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":68,"byte_end":3333,"line_start":3,"line_end":113,"column_start":1,"column_end":3}},{"value":"allow(clippy :: needless_pass_by_value, clippy :: new_without_default,\n        clippy :: new_ret_no_self)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":3335,"byte_end":3444,"line_start":115,"line_end":119,"column_start":1,"column_end":3}},{"value":"deny(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":3445,"byte_end":3467,"line_start":120,"line_end":120,"column_start":1,"column_end":23}},{"value":"deny(missing_debug_implementations)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":3468,"byte_end":3507,"line_start":121,"line_end":121,"column_start":1,"column_end":40}}]},{"kind":"Mod","id":{"krate":0,"index":1268},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"proto","qualname":"::proto","value":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","parent":null,"children":[{"krate":0,"index":1269},{"krate":0,"index":1272},{"krate":0,"index":1743},{"krate":0,"index":1748},{"krate":0,"index":1749},{"krate":0,"index":1752},{"krate":0,"index":1754},{"krate":0,"index":1275},{"krate":0,"index":1291},{"krate":0,"index":1313},{"krate":0,"index":1315},{"krate":0,"index":1317},{"krate":0,"index":1756},{"krate":0,"index":1760},{"krate":0,"index":1761},{"krate":0,"index":1764},{"krate":0,"index":1766},{"krate":0,"index":1319},{"krate":0,"index":1325},{"krate":0,"index":1345},{"krate":0,"index":1347},{"krate":0,"index":1349},{"krate":0,"index":1768},{"krate":0,"index":1772},{"krate":0,"index":1773},{"krate":0,"index":1776},{"krate":0,"index":1778},{"krate":0,"index":1351},{"krate":0,"index":1357},{"krate":0,"index":1377},{"krate":0,"index":1379},{"krate":0,"index":1381},{"krate":0,"index":1780},{"krate":0,"index":1785},{"krate":0,"index":1786},{"krate":0,"index":1789},{"krate":0,"index":1791},{"krate":0,"index":1383},{"krate":0,"index":1393},{"krate":0,"index":1415},{"krate":0,"index":1417},{"krate":0,"index":1419},{"krate":0,"index":1793},{"krate":0,"index":1799},{"krate":0,"index":1800},{"krate":0,"index":1803},{"krate":0,"index":1805},{"krate":0,"index":1421},{"krate":0,"index":1436},{"krate":0,"index":1460},{"krate":0,"index":1462},{"krate":0,"index":1464},{"krate":0,"index":1807},{"krate":0,"index":1811},{"krate":0,"index":1812},{"krate":0,"index":1815},{"krate":0,"index":1817},{"krate":0,"index":1466},{"krate":0,"index":1472},{"krate":0,"index":1492},{"krate":0,"index":1494},{"krate":0,"index":1496},{"krate":0,"index":1819},{"krate":0,"index":1825},{"krate":0,"index":1826},{"krate":0,"index":1829},{"krate":0,"index":1831},{"krate":0,"index":1498},{"krate":0,"index":1513},{"krate":0,"index":1537},{"krate":0,"index":1539},{"krate":0,"index":1541},{"krate":0,"index":1833},{"krate":0,"index":1838},{"krate":0,"index":1839},{"krate":0,"index":1842},{"krate":0,"index":1844},{"krate":0,"index":1543},{"krate":0,"index":1553},{"krate":0,"index":1575},{"krate":0,"index":1577},{"krate":0,"index":1579},{"krate":0,"index":1846},{"krate":0,"index":1856},{"krate":0,"index":1857},{"krate":0,"index":1860},{"krate":0,"index":1862},{"krate":0,"index":1581},{"krate":0,"index":1632},{"krate":0,"index":1664},{"krate":0,"index":1666},{"krate":0,"index":1668},{"krate":0,"index":1864},{"krate":0,"index":1871},{"krate":0,"index":1872},{"krate":0,"index":1875},{"krate":0,"index":1877},{"krate":0,"index":1670},{"krate":0,"index":1695},{"krate":0,"index":1721},{"krate":0,"index":1723},{"krate":0,"index":1725},{"krate":0,"index":1879},{"krate":0,"index":1895},{"krate":0,"index":1897},{"krate":0,"index":1898},{"krate":0,"index":1900},{"krate":0,"index":1901},{"krate":0,"index":1903},{"krate":0,"index":1905},{"krate":0,"index":1727},{"krate":0,"index":1735},{"krate":0,"index":1736},{"krate":0,"index":1738},{"krate":0,"index":1739},{"krate":0,"index":1740},{"krate":0,"index":1741}],"decl_id":null,"docs":" Protocol buffers format of metrics.\n","sig":null,"attributes":[{"value":"/ Protocol buffers format of metrics.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":3509,"byte_end":3548,"line_start":123,"line_end":123,"column_start":1,"column_end":40}},{"value":"cfg(feature = \"protobuf\")","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":3549,"byte_end":3577,"line_start":124,"line_end":124,"column_start":1,"column_end":29}},{"value":"allow(warnings)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":3578,"byte_end":3596,"line_start":125,"line_end":125,"column_start":1,"column_end":19}},{"value":"rustfmt::skip","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":3597,"byte_end":3613,"line_start":126,"line_end":126,"column_start":1,"column_end":17}},{"value":"path = \"../proto/proto_model.rs\"","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":3614,"byte_end":3649,"line_start":127,"line_end":127,"column_start":1,"column_end":36}},{"value":"allow(unknown_lints)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14150964,"byte_end":14150988,"line_start":5,"line_end":5,"column_start":1,"column_end":25}},{"value":"allow(clippy)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14150989,"byte_end":14151006,"line_start":6,"line_end":6,"column_start":1,"column_end":18}},{"value":"allow(box_pointers)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14151045,"byte_end":14151068,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"allow(dead_code)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14151069,"byte_end":14151089,"line_start":11,"line_end":11,"column_start":1,"column_end":21}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14151090,"byte_end":14151113,"line_start":12,"line_end":12,"column_start":1,"column_end":24}},{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14151114,"byte_end":14151145,"line_start":13,"line_end":13,"column_start":1,"column_end":32}},{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14151146,"byte_end":14151171,"line_start":14,"line_end":14,"column_start":1,"column_end":26}},{"value":"allow(non_upper_case_globals)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14151172,"byte_end":14151205,"line_start":15,"line_end":15,"column_start":1,"column_end":34}},{"value":"allow(trivial_casts)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14151206,"byte_end":14151230,"line_start":16,"line_end":16,"column_start":1,"column_end":25}},{"value":"allow(unsafe_code)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14151231,"byte_end":14151253,"line_start":17,"line_end":17,"column_start":1,"column_end":23}},{"value":"allow(unused_imports)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14151254,"byte_end":14151279,"line_start":18,"line_end":18,"column_start":1,"column_end":26}},{"value":"allow(unused_results)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14151280,"byte_end":14151305,"line_start":19,"line_end":19,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":1743},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14151478,"byte_end":14151487,"line_start":25,"line_end":25,"column_start":12,"column_end":21},"name":"LabelPair","qualname":"::proto::LabelPair","value":"LabelPair { unknown_fields, cached_size }","parent":null,"children":[{"krate":0,"index":1744},{"krate":0,"index":1745},{"krate":0,"index":1746},{"krate":0,"index":1747}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1746},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14151663,"byte_end":14151677,"line_start":30,"line_end":30,"column_start":9,"column_end":23},"name":"unknown_fields","qualname":"::proto::LabelPair::unknown_fields","value":"protobuf::UnknownFields","parent":{"krate":0,"index":1743},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1747},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14151714,"byte_end":14151725,"line_start":31,"line_end":31,"column_start":9,"column_end":20},"name":"cached_size","qualname":"::proto::LabelPair::cached_size","value":"protobuf::CachedSize","parent":{"krate":0,"index":1743},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1276},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14151782,"byte_end":14151785,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<LabelPair>::new","value":"pub fn new() -> LabelPair","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1277},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14151898,"byte_end":14151908,"line_start":41,"line_end":41,"column_start":12,"column_end":22},"name":"clear_name","qualname":"<LabelPair>::clear_name","value":"pub fn clear_name(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1278},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14151967,"byte_end":14151975,"line_start":45,"line_end":45,"column_start":12,"column_end":20},"name":"has_name","qualname":"<LabelPair>::has_name","value":"pub fn has_name(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1279},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14152078,"byte_end":14152086,"line_start":50,"line_end":50,"column_start":12,"column_end":20},"name":"set_name","qualname":"<LabelPair>::set_name","value":"pub fn set_name(&mut Self, ::std::string::String)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1280},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14152317,"byte_end":14152325,"line_start":56,"line_end":56,"column_start":12,"column_end":20},"name":"mut_name","qualname":"<LabelPair>::mut_name","value":"pub fn mut_name(&mut Self) -> &mut ::std::string::String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1281},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14152521,"byte_end":14152530,"line_start":64,"line_end":64,"column_start":12,"column_end":21},"name":"take_name","qualname":"<LabelPair>::take_name","value":"pub fn take_name(&mut Self) -> ::std::string::String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1283},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14152660,"byte_end":14152668,"line_start":68,"line_end":68,"column_start":12,"column_end":20},"name":"get_name","qualname":"<LabelPair>::get_name","value":"pub fn get_name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1284},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14152835,"byte_end":14152846,"line_start":77,"line_end":77,"column_start":12,"column_end":23},"name":"clear_value","qualname":"<LabelPair>::clear_value","value":"pub fn clear_value(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1285},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14152906,"byte_end":14152915,"line_start":81,"line_end":81,"column_start":12,"column_end":21},"name":"has_value","qualname":"<LabelPair>::has_value","value":"pub fn has_value(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1286},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14153019,"byte_end":14153028,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"set_value","qualname":"<LabelPair>::set_value","value":"pub fn set_value(&mut Self, ::std::string::String)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1287},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14153260,"byte_end":14153269,"line_start":92,"line_end":92,"column_start":12,"column_end":21},"name":"mut_value","qualname":"<LabelPair>::mut_value","value":"pub fn mut_value(&mut Self) -> &mut ::std::string::String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1288},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14153468,"byte_end":14153478,"line_start":100,"line_end":100,"column_start":12,"column_end":22},"name":"take_value","qualname":"<LabelPair>::take_value","value":"pub fn take_value(&mut Self) -> ::std::string::String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1290},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14153609,"byte_end":14153618,"line_start":104,"line_end":104,"column_start":12,"column_end":21},"name":"get_value","qualname":"<LabelPair>::get_value","value":"pub fn get_value(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1756},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14158402,"byte_end":14158407,"line_start":250,"line_end":250,"column_start":12,"column_end":17},"name":"Gauge","qualname":"::proto::Gauge","value":"Gauge { unknown_fields, cached_size }","parent":null,"children":[{"krate":0,"index":1757},{"krate":0,"index":1758},{"krate":0,"index":1759}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1758},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14158501,"byte_end":14158515,"line_start":254,"line_end":254,"column_start":9,"column_end":23},"name":"unknown_fields","qualname":"::proto::Gauge::unknown_fields","value":"protobuf::UnknownFields","parent":{"krate":0,"index":1756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1759},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14158552,"byte_end":14158563,"line_start":255,"line_end":255,"column_start":9,"column_end":20},"name":"cached_size","qualname":"::proto::Gauge::cached_size","value":"protobuf::CachedSize","parent":{"krate":0,"index":1756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1320},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14158616,"byte_end":14158619,"line_start":259,"line_end":259,"column_start":12,"column_end":15},"name":"new","qualname":"<Gauge>::new","value":"pub fn new() -> Gauge","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1321},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14158729,"byte_end":14158740,"line_start":265,"line_end":265,"column_start":12,"column_end":23},"name":"clear_value","qualname":"<Gauge>::clear_value","value":"pub fn clear_value(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1322},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14158822,"byte_end":14158831,"line_start":269,"line_end":269,"column_start":12,"column_end":21},"name":"has_value","qualname":"<Gauge>::has_value","value":"pub fn has_value(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1323},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14158935,"byte_end":14158944,"line_start":274,"line_end":274,"column_start":12,"column_end":21},"name":"set_value","qualname":"<Gauge>::set_value","value":"pub fn set_value(&mut Self, f64)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1324},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14159037,"byte_end":14159046,"line_start":278,"line_end":278,"column_start":12,"column_end":21},"name":"get_value","qualname":"<Gauge>::get_value","value":"pub fn get_value(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1768},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14163203,"byte_end":14163210,"line_start":410,"line_end":410,"column_start":12,"column_end":19},"name":"Counter","qualname":"::proto::Counter","value":"Counter { unknown_fields, cached_size }","parent":null,"children":[{"krate":0,"index":1769},{"krate":0,"index":1770},{"krate":0,"index":1771}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1770},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14163304,"byte_end":14163318,"line_start":414,"line_end":414,"column_start":9,"column_end":23},"name":"unknown_fields","qualname":"::proto::Counter::unknown_fields","value":"protobuf::UnknownFields","parent":{"krate":0,"index":1768},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1771},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14163355,"byte_end":14163366,"line_start":415,"line_end":415,"column_start":9,"column_end":20},"name":"cached_size","qualname":"::proto::Counter::cached_size","value":"protobuf::CachedSize","parent":{"krate":0,"index":1768},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1352},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14163421,"byte_end":14163424,"line_start":419,"line_end":419,"column_start":12,"column_end":15},"name":"new","qualname":"<Counter>::new","value":"pub fn new() -> Counter","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1353},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14163536,"byte_end":14163547,"line_start":425,"line_end":425,"column_start":12,"column_end":23},"name":"clear_value","qualname":"<Counter>::clear_value","value":"pub fn clear_value(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1354},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14163629,"byte_end":14163638,"line_start":429,"line_end":429,"column_start":12,"column_end":21},"name":"has_value","qualname":"<Counter>::has_value","value":"pub fn has_value(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1355},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14163742,"byte_end":14163751,"line_start":434,"line_end":434,"column_start":12,"column_end":21},"name":"set_value","qualname":"<Counter>::set_value","value":"pub fn set_value(&mut Self, f64)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1356},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14163844,"byte_end":14163853,"line_start":438,"line_end":438,"column_start":12,"column_end":21},"name":"get_value","qualname":"<Counter>::get_value","value":"pub fn get_value(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1780},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14168038,"byte_end":14168046,"line_start":570,"line_end":570,"column_start":12,"column_end":20},"name":"Quantile","qualname":"::proto::Quantile","value":"Quantile { unknown_fields, cached_size }","parent":null,"children":[{"krate":0,"index":1781},{"krate":0,"index":1782},{"krate":0,"index":1783},{"krate":0,"index":1784}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1783},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14168182,"byte_end":14168196,"line_start":575,"line_end":575,"column_start":9,"column_end":23},"name":"unknown_fields","qualname":"::proto::Quantile::unknown_fields","value":"protobuf::UnknownFields","parent":{"krate":0,"index":1780},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1784},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14168233,"byte_end":14168244,"line_start":576,"line_end":576,"column_start":9,"column_end":20},"name":"cached_size","qualname":"::proto::Quantile::cached_size","value":"protobuf::CachedSize","parent":{"krate":0,"index":1780},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1384},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14168300,"byte_end":14168303,"line_start":580,"line_end":580,"column_start":12,"column_end":15},"name":"new","qualname":"<Quantile>::new","value":"pub fn new() -> Quantile","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1385},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14168419,"byte_end":14168433,"line_start":586,"line_end":586,"column_start":12,"column_end":26},"name":"clear_quantile","qualname":"<Quantile>::clear_quantile","value":"pub fn clear_quantile(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1386},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14168518,"byte_end":14168530,"line_start":590,"line_end":590,"column_start":12,"column_end":24},"name":"has_quantile","qualname":"<Quantile>::has_quantile","value":"pub fn has_quantile(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1387},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14168637,"byte_end":14168649,"line_start":595,"line_end":595,"column_start":12,"column_end":24},"name":"set_quantile","qualname":"<Quantile>::set_quantile","value":"pub fn set_quantile(&mut Self, f64)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1388},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14168745,"byte_end":14168757,"line_start":599,"line_end":599,"column_start":12,"column_end":24},"name":"get_quantile","qualname":"<Quantile>::get_quantile","value":"pub fn get_quantile(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1389},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14168863,"byte_end":14168874,"line_start":605,"line_end":605,"column_start":12,"column_end":23},"name":"clear_value","qualname":"<Quantile>::clear_value","value":"pub fn clear_value(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1390},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14168956,"byte_end":14168965,"line_start":609,"line_end":609,"column_start":12,"column_end":21},"name":"has_value","qualname":"<Quantile>::has_value","value":"pub fn has_value(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1391},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14169069,"byte_end":14169078,"line_start":614,"line_end":614,"column_start":12,"column_end":21},"name":"set_value","qualname":"<Quantile>::set_value","value":"pub fn set_value(&mut Self, f64)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1392},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14169171,"byte_end":14169180,"line_start":618,"line_end":618,"column_start":12,"column_end":21},"name":"get_value","qualname":"<Quantile>::get_value","value":"pub fn get_value(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1793},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14174233,"byte_end":14174240,"line_start":769,"line_end":769,"column_start":12,"column_end":19},"name":"Summary","qualname":"::proto::Summary","value":"Summary { unknown_fields, cached_size }","parent":null,"children":[{"krate":0,"index":1794},{"krate":0,"index":1795},{"krate":0,"index":1796},{"krate":0,"index":1797},{"krate":0,"index":1798}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1797},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14174436,"byte_end":14174450,"line_start":775,"line_end":775,"column_start":9,"column_end":23},"name":"unknown_fields","qualname":"::proto::Summary::unknown_fields","value":"protobuf::UnknownFields","parent":{"krate":0,"index":1793},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1798},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14174487,"byte_end":14174498,"line_start":776,"line_end":776,"column_start":9,"column_end":20},"name":"cached_size","qualname":"::proto::Summary::cached_size","value":"protobuf::CachedSize","parent":{"krate":0,"index":1793},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1422},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14174553,"byte_end":14174556,"line_start":780,"line_end":780,"column_start":12,"column_end":15},"name":"new","qualname":"<Summary>::new","value":"pub fn new() -> Summary","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1423},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14174675,"byte_end":14174693,"line_start":786,"line_end":786,"column_start":12,"column_end":30},"name":"clear_sample_count","qualname":"<Summary>::clear_sample_count","value":"pub fn clear_sample_count(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1424},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14174782,"byte_end":14174798,"line_start":790,"line_end":790,"column_start":12,"column_end":28},"name":"has_sample_count","qualname":"<Summary>::has_sample_count","value":"pub fn has_sample_count(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1425},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14174909,"byte_end":14174925,"line_start":795,"line_end":795,"column_start":12,"column_end":28},"name":"set_sample_count","qualname":"<Summary>::set_sample_count","value":"pub fn set_sample_count(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1426},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14175025,"byte_end":14175041,"line_start":799,"line_end":799,"column_start":12,"column_end":28},"name":"get_sample_count","qualname":"<Summary>::get_sample_count","value":"pub fn get_sample_count(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1427},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14175155,"byte_end":14175171,"line_start":805,"line_end":805,"column_start":12,"column_end":28},"name":"clear_sample_sum","qualname":"<Summary>::clear_sample_sum","value":"pub fn clear_sample_sum(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1428},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14175258,"byte_end":14175272,"line_start":809,"line_end":809,"column_start":12,"column_end":26},"name":"has_sample_sum","qualname":"<Summary>::has_sample_sum","value":"pub fn has_sample_sum(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1429},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14175381,"byte_end":14175395,"line_start":814,"line_end":814,"column_start":12,"column_end":26},"name":"set_sample_sum","qualname":"<Summary>::set_sample_sum","value":"pub fn set_sample_sum(&mut Self, f64)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1430},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14175493,"byte_end":14175507,"line_start":818,"line_end":818,"column_start":12,"column_end":26},"name":"get_sample_sum","qualname":"<Summary>::get_sample_sum","value":"pub fn get_sample_sum(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1431},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14175642,"byte_end":14175656,"line_start":824,"line_end":824,"column_start":12,"column_end":26},"name":"clear_quantile","qualname":"<Summary>::clear_quantile","value":"pub fn clear_quantile(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1432},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14175758,"byte_end":14175770,"line_start":829,"line_end":829,"column_start":12,"column_end":24},"name":"set_quantile","qualname":"<Summary>::set_quantile","value":"pub fn set_quantile(&mut Self, ::protobuf::RepeatedField<Quantile>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1433},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14175906,"byte_end":14175918,"line_start":834,"line_end":834,"column_start":12,"column_end":24},"name":"mut_quantile","qualname":"<Summary>::mut_quantile","value":"pub fn mut_quantile(&mut Self) -> &mut ::protobuf::RepeatedField<Quantile>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1434},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14176039,"byte_end":14176052,"line_start":839,"line_end":839,"column_start":12,"column_end":25},"name":"take_quantile","qualname":"<Summary>::take_quantile","value":"pub fn take_quantile(&mut Self) -> ::protobuf::RepeatedField<Quantile>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1435},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14176205,"byte_end":14176217,"line_start":843,"line_end":843,"column_start":12,"column_end":24},"name":"get_quantile","qualname":"<Summary>::get_quantile","value":"pub fn get_quantile(&Self) -> &[Quantile]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1807},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14182394,"byte_end":14182401,"line_start":1017,"line_end":1017,"column_start":12,"column_end":19},"name":"Untyped","qualname":"::proto::Untyped","value":"Untyped { unknown_fields, cached_size }","parent":null,"children":[{"krate":0,"index":1808},{"krate":0,"index":1809},{"krate":0,"index":1810}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1809},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14182495,"byte_end":14182509,"line_start":1021,"line_end":1021,"column_start":9,"column_end":23},"name":"unknown_fields","qualname":"::proto::Untyped::unknown_fields","value":"protobuf::UnknownFields","parent":{"krate":0,"index":1807},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1810},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14182546,"byte_end":14182557,"line_start":1022,"line_end":1022,"column_start":9,"column_end":20},"name":"cached_size","qualname":"::proto::Untyped::cached_size","value":"protobuf::CachedSize","parent":{"krate":0,"index":1807},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1467},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14182612,"byte_end":14182615,"line_start":1026,"line_end":1026,"column_start":12,"column_end":15},"name":"new","qualname":"<Untyped>::new","value":"pub fn new() -> Untyped","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1468},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14182727,"byte_end":14182738,"line_start":1032,"line_end":1032,"column_start":12,"column_end":23},"name":"clear_value","qualname":"<Untyped>::clear_value","value":"pub fn clear_value(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1469},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14182820,"byte_end":14182829,"line_start":1036,"line_end":1036,"column_start":12,"column_end":21},"name":"has_value","qualname":"<Untyped>::has_value","value":"pub fn has_value(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1470},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14182933,"byte_end":14182942,"line_start":1041,"line_end":1041,"column_start":12,"column_end":21},"name":"set_value","qualname":"<Untyped>::set_value","value":"pub fn set_value(&mut Self, f64)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1471},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14183035,"byte_end":14183044,"line_start":1045,"line_end":1045,"column_start":12,"column_end":21},"name":"get_value","qualname":"<Untyped>::get_value","value":"pub fn get_value(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1819},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14187229,"byte_end":14187238,"line_start":1177,"line_end":1177,"column_start":12,"column_end":21},"name":"Histogram","qualname":"::proto::Histogram","value":"Histogram { unknown_fields, cached_size }","parent":null,"children":[{"krate":0,"index":1820},{"krate":0,"index":1821},{"krate":0,"index":1822},{"krate":0,"index":1823},{"krate":0,"index":1824}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1823},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14187430,"byte_end":14187444,"line_start":1183,"line_end":1183,"column_start":9,"column_end":23},"name":"unknown_fields","qualname":"::proto::Histogram::unknown_fields","value":"protobuf::UnknownFields","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1824},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14187481,"byte_end":14187492,"line_start":1184,"line_end":1184,"column_start":9,"column_end":20},"name":"cached_size","qualname":"::proto::Histogram::cached_size","value":"protobuf::CachedSize","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1499},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14187549,"byte_end":14187552,"line_start":1188,"line_end":1188,"column_start":12,"column_end":15},"name":"new","qualname":"<Histogram>::new","value":"pub fn new() -> Histogram","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1500},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14187673,"byte_end":14187691,"line_start":1194,"line_end":1194,"column_start":12,"column_end":30},"name":"clear_sample_count","qualname":"<Histogram>::clear_sample_count","value":"pub fn clear_sample_count(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1501},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14187780,"byte_end":14187796,"line_start":1198,"line_end":1198,"column_start":12,"column_end":28},"name":"has_sample_count","qualname":"<Histogram>::has_sample_count","value":"pub fn has_sample_count(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1502},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14187907,"byte_end":14187923,"line_start":1203,"line_end":1203,"column_start":12,"column_end":28},"name":"set_sample_count","qualname":"<Histogram>::set_sample_count","value":"pub fn set_sample_count(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1503},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14188023,"byte_end":14188039,"line_start":1207,"line_end":1207,"column_start":12,"column_end":28},"name":"get_sample_count","qualname":"<Histogram>::get_sample_count","value":"pub fn get_sample_count(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1504},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14188153,"byte_end":14188169,"line_start":1213,"line_end":1213,"column_start":12,"column_end":28},"name":"clear_sample_sum","qualname":"<Histogram>::clear_sample_sum","value":"pub fn clear_sample_sum(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1505},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14188256,"byte_end":14188270,"line_start":1217,"line_end":1217,"column_start":12,"column_end":26},"name":"has_sample_sum","qualname":"<Histogram>::has_sample_sum","value":"pub fn has_sample_sum(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1506},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14188379,"byte_end":14188393,"line_start":1222,"line_end":1222,"column_start":12,"column_end":26},"name":"set_sample_sum","qualname":"<Histogram>::set_sample_sum","value":"pub fn set_sample_sum(&mut Self, f64)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1507},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14188491,"byte_end":14188505,"line_start":1226,"line_end":1226,"column_start":12,"column_end":26},"name":"get_sample_sum","qualname":"<Histogram>::get_sample_sum","value":"pub fn get_sample_sum(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1508},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14188636,"byte_end":14188648,"line_start":1232,"line_end":1232,"column_start":12,"column_end":24},"name":"clear_bucket","qualname":"<Histogram>::clear_bucket","value":"pub fn clear_bucket(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1509},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14188748,"byte_end":14188758,"line_start":1237,"line_end":1237,"column_start":12,"column_end":22},"name":"set_bucket","qualname":"<Histogram>::set_bucket","value":"pub fn set_bucket(&mut Self, ::protobuf::RepeatedField<Bucket>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1510},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14188890,"byte_end":14188900,"line_start":1242,"line_end":1242,"column_start":12,"column_end":22},"name":"mut_bucket","qualname":"<Histogram>::mut_bucket","value":"pub fn mut_bucket(&mut Self) -> &mut ::protobuf::RepeatedField<Bucket>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1511},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14189017,"byte_end":14189028,"line_start":1247,"line_end":1247,"column_start":12,"column_end":23},"name":"take_bucket","qualname":"<Histogram>::take_bucket","value":"pub fn take_bucket(&mut Self) -> ::protobuf::RepeatedField<Bucket>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1512},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14189177,"byte_end":14189187,"line_start":1251,"line_end":1251,"column_start":12,"column_end":22},"name":"get_bucket","qualname":"<Histogram>::get_bucket","value":"pub fn get_bucket(&Self) -> &[Bucket]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1833},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14195378,"byte_end":14195384,"line_start":1425,"line_end":1425,"column_start":12,"column_end":18},"name":"Bucket","qualname":"::proto::Bucket","value":"Bucket { unknown_fields, cached_size }","parent":null,"children":[{"krate":0,"index":1834},{"krate":0,"index":1835},{"krate":0,"index":1836},{"krate":0,"index":1837}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1836},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14195534,"byte_end":14195548,"line_start":1430,"line_end":1430,"column_start":9,"column_end":23},"name":"unknown_fields","qualname":"::proto::Bucket::unknown_fields","value":"protobuf::UnknownFields","parent":{"krate":0,"index":1833},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1837},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14195585,"byte_end":14195596,"line_start":1431,"line_end":1431,"column_start":9,"column_end":20},"name":"cached_size","qualname":"::proto::Bucket::cached_size","value":"protobuf::CachedSize","parent":{"krate":0,"index":1833},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1544},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14195650,"byte_end":14195653,"line_start":1435,"line_end":1435,"column_start":12,"column_end":15},"name":"new","qualname":"<Bucket>::new","value":"pub fn new() -> Bucket","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1545},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14195775,"byte_end":14195797,"line_start":1441,"line_end":1441,"column_start":12,"column_end":34},"name":"clear_cumulative_count","qualname":"<Bucket>::clear_cumulative_count","value":"pub fn clear_cumulative_count(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1546},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14195890,"byte_end":14195910,"line_start":1445,"line_end":1445,"column_start":12,"column_end":32},"name":"has_cumulative_count","qualname":"<Bucket>::has_cumulative_count","value":"pub fn has_cumulative_count(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1547},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14196025,"byte_end":14196045,"line_start":1450,"line_end":1450,"column_start":12,"column_end":32},"name":"set_cumulative_count","qualname":"<Bucket>::set_cumulative_count","value":"pub fn set_cumulative_count(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1548},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14196149,"byte_end":14196169,"line_start":1454,"line_end":1454,"column_start":12,"column_end":32},"name":"get_cumulative_count","qualname":"<Bucket>::get_cumulative_count","value":"pub fn get_cumulative_count(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1549},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14196288,"byte_end":14196305,"line_start":1460,"line_end":1460,"column_start":12,"column_end":29},"name":"clear_upper_bound","qualname":"<Bucket>::clear_upper_bound","value":"pub fn clear_upper_bound(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1550},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14196393,"byte_end":14196408,"line_start":1464,"line_end":1464,"column_start":12,"column_end":27},"name":"has_upper_bound","qualname":"<Bucket>::has_upper_bound","value":"pub fn has_upper_bound(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1551},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14196518,"byte_end":14196533,"line_start":1469,"line_end":1469,"column_start":12,"column_end":27},"name":"set_upper_bound","qualname":"<Bucket>::set_upper_bound","value":"pub fn set_upper_bound(&mut Self, f64)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1552},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14196632,"byte_end":14196647,"line_start":1473,"line_end":1473,"column_start":12,"column_end":27},"name":"get_upper_bound","qualname":"<Bucket>::get_upper_bound","value":"pub fn get_upper_bound(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1846},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14201843,"byte_end":14201849,"line_start":1624,"line_end":1624,"column_start":12,"column_end":18},"name":"Metric","qualname":"::proto::Metric","value":"Metric { unknown_fields, cached_size }","parent":null,"children":[{"krate":0,"index":1847},{"krate":0,"index":1848},{"krate":0,"index":1849},{"krate":0,"index":1850},{"krate":0,"index":1851},{"krate":0,"index":1852},{"krate":0,"index":1853},{"krate":0,"index":1854},{"krate":0,"index":1855}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1854},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14202259,"byte_end":14202273,"line_start":1634,"line_end":1634,"column_start":9,"column_end":23},"name":"unknown_fields","qualname":"::proto::Metric::unknown_fields","value":"protobuf::UnknownFields","parent":{"krate":0,"index":1846},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1855},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14202310,"byte_end":14202321,"line_start":1635,"line_end":1635,"column_start":9,"column_end":20},"name":"cached_size","qualname":"::proto::Metric::cached_size","value":"protobuf::CachedSize","parent":{"krate":0,"index":1846},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1582},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14202375,"byte_end":14202378,"line_start":1639,"line_end":1639,"column_start":12,"column_end":15},"name":"new","qualname":"<Metric>::new","value":"pub fn new() -> Metric","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1583},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14202514,"byte_end":14202525,"line_start":1645,"line_end":1645,"column_start":12,"column_end":23},"name":"clear_label","qualname":"<Metric>::clear_label","value":"pub fn clear_label(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1584},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14202624,"byte_end":14202633,"line_start":1650,"line_end":1650,"column_start":12,"column_end":21},"name":"set_label","qualname":"<Metric>::set_label","value":"pub fn set_label(&mut Self, ::protobuf::RepeatedField<LabelPair>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1585},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14202767,"byte_end":14202776,"line_start":1655,"line_end":1655,"column_start":12,"column_end":21},"name":"mut_label","qualname":"<Metric>::mut_label","value":"pub fn mut_label(&mut Self) -> &mut ::protobuf::RepeatedField<LabelPair>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1586},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14202895,"byte_end":14202905,"line_start":1660,"line_end":1660,"column_start":12,"column_end":22},"name":"take_label","qualname":"<Metric>::take_label","value":"pub fn take_label(&mut Self) -> ::protobuf::RepeatedField<LabelPair>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1587},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14203056,"byte_end":14203065,"line_start":1664,"line_end":1664,"column_start":12,"column_end":21},"name":"get_label","qualname":"<Metric>::get_label","value":"pub fn get_label(&Self) -> &[LabelPair]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1588},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14203185,"byte_end":14203196,"line_start":1670,"line_end":1670,"column_start":12,"column_end":23},"name":"clear_gauge","qualname":"<Metric>::clear_gauge","value":"pub fn clear_gauge(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1589},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14203256,"byte_end":14203265,"line_start":1674,"line_end":1674,"column_start":12,"column_end":21},"name":"has_gauge","qualname":"<Metric>::has_gauge","value":"pub fn has_gauge(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1590},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14203369,"byte_end":14203378,"line_start":1679,"line_end":1679,"column_start":12,"column_end":21},"name":"set_gauge","qualname":"<Metric>::set_gauge","value":"pub fn set_gauge(&mut Self, Gauge)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1591},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14203597,"byte_end":14203606,"line_start":1685,"line_end":1685,"column_start":12,"column_end":21},"name":"mut_gauge","qualname":"<Metric>::mut_gauge","value":"pub fn mut_gauge(&mut Self) -> &mut Gauge","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1592},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14203789,"byte_end":14203799,"line_start":1693,"line_end":1693,"column_start":12,"column_end":22},"name":"take_gauge","qualname":"<Metric>::take_gauge","value":"pub fn take_gauge(&mut Self) -> Gauge","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1594},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14203898,"byte_end":14203907,"line_start":1697,"line_end":1697,"column_start":12,"column_end":21},"name":"get_gauge","qualname":"<Metric>::get_gauge","value":"pub fn get_gauge(&Self) -> &Gauge","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1596},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14204078,"byte_end":14204091,"line_start":1703,"line_end":1703,"column_start":12,"column_end":25},"name":"clear_counter","qualname":"<Metric>::clear_counter","value":"pub fn clear_counter(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1597},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14204153,"byte_end":14204164,"line_start":1707,"line_end":1707,"column_start":12,"column_end":23},"name":"has_counter","qualname":"<Metric>::has_counter","value":"pub fn has_counter(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1598},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14204270,"byte_end":14204281,"line_start":1712,"line_end":1712,"column_start":12,"column_end":23},"name":"set_counter","qualname":"<Metric>::set_counter","value":"pub fn set_counter(&mut Self, Counter)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1599},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14204504,"byte_end":14204515,"line_start":1718,"line_end":1718,"column_start":12,"column_end":23},"name":"mut_counter","qualname":"<Metric>::mut_counter","value":"pub fn mut_counter(&mut Self) -> &mut Counter","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1600},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14204706,"byte_end":14204718,"line_start":1726,"line_end":1726,"column_start":12,"column_end":24},"name":"take_counter","qualname":"<Metric>::take_counter","value":"pub fn take_counter(&mut Self) -> Counter","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1602},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14204823,"byte_end":14204834,"line_start":1730,"line_end":1730,"column_start":12,"column_end":23},"name":"get_counter","qualname":"<Metric>::get_counter","value":"pub fn get_counter(&Self) -> &Counter","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1604},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14205011,"byte_end":14205024,"line_start":1736,"line_end":1736,"column_start":12,"column_end":25},"name":"clear_summary","qualname":"<Metric>::clear_summary","value":"pub fn clear_summary(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1605},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14205086,"byte_end":14205097,"line_start":1740,"line_end":1740,"column_start":12,"column_end":23},"name":"has_summary","qualname":"<Metric>::has_summary","value":"pub fn has_summary(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1606},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14205203,"byte_end":14205214,"line_start":1745,"line_end":1745,"column_start":12,"column_end":23},"name":"set_summary","qualname":"<Metric>::set_summary","value":"pub fn set_summary(&mut Self, Summary)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1607},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14205437,"byte_end":14205448,"line_start":1751,"line_end":1751,"column_start":12,"column_end":23},"name":"mut_summary","qualname":"<Metric>::mut_summary","value":"pub fn mut_summary(&mut Self) -> &mut Summary","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1608},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14205639,"byte_end":14205651,"line_start":1759,"line_end":1759,"column_start":12,"column_end":24},"name":"take_summary","qualname":"<Metric>::take_summary","value":"pub fn take_summary(&mut Self) -> Summary","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1610},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14205756,"byte_end":14205767,"line_start":1763,"line_end":1763,"column_start":12,"column_end":23},"name":"get_summary","qualname":"<Metric>::get_summary","value":"pub fn get_summary(&Self) -> &Summary","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1612},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14205944,"byte_end":14205957,"line_start":1769,"line_end":1769,"column_start":12,"column_end":25},"name":"clear_untyped","qualname":"<Metric>::clear_untyped","value":"pub fn clear_untyped(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1613},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14206019,"byte_end":14206030,"line_start":1773,"line_end":1773,"column_start":12,"column_end":23},"name":"has_untyped","qualname":"<Metric>::has_untyped","value":"pub fn has_untyped(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1614},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14206136,"byte_end":14206147,"line_start":1778,"line_end":1778,"column_start":12,"column_end":23},"name":"set_untyped","qualname":"<Metric>::set_untyped","value":"pub fn set_untyped(&mut Self, Untyped)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1615},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14206370,"byte_end":14206381,"line_start":1784,"line_end":1784,"column_start":12,"column_end":23},"name":"mut_untyped","qualname":"<Metric>::mut_untyped","value":"pub fn mut_untyped(&mut Self) -> &mut Untyped","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1616},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14206572,"byte_end":14206584,"line_start":1792,"line_end":1792,"column_start":12,"column_end":24},"name":"take_untyped","qualname":"<Metric>::take_untyped","value":"pub fn take_untyped(&mut Self) -> Untyped","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1618},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14206689,"byte_end":14206700,"line_start":1796,"line_end":1796,"column_start":12,"column_end":23},"name":"get_untyped","qualname":"<Metric>::get_untyped","value":"pub fn get_untyped(&Self) -> &Untyped","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1620},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14206881,"byte_end":14206896,"line_start":1802,"line_end":1802,"column_start":12,"column_end":27},"name":"clear_histogram","qualname":"<Metric>::clear_histogram","value":"pub fn clear_histogram(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1621},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14206960,"byte_end":14206973,"line_start":1806,"line_end":1806,"column_start":12,"column_end":25},"name":"has_histogram","qualname":"<Metric>::has_histogram","value":"pub fn has_histogram(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1622},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14207081,"byte_end":14207094,"line_start":1811,"line_end":1811,"column_start":12,"column_end":25},"name":"set_histogram","qualname":"<Metric>::set_histogram","value":"pub fn set_histogram(&mut Self, Histogram)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1623},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14207321,"byte_end":14207334,"line_start":1817,"line_end":1817,"column_start":12,"column_end":25},"name":"mut_histogram","qualname":"<Metric>::mut_histogram","value":"pub fn mut_histogram(&mut Self) -> &mut Histogram","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1624},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14207533,"byte_end":14207547,"line_start":1825,"line_end":1825,"column_start":12,"column_end":26},"name":"take_histogram","qualname":"<Metric>::take_histogram","value":"pub fn take_histogram(&mut Self) -> Histogram","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1626},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14207658,"byte_end":14207671,"line_start":1829,"line_end":1829,"column_start":12,"column_end":25},"name":"get_histogram","qualname":"<Metric>::get_histogram","value":"pub fn get_histogram(&Self) -> &Histogram","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1628},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14207835,"byte_end":14207853,"line_start":1835,"line_end":1835,"column_start":12,"column_end":30},"name":"clear_timestamp_ms","qualname":"<Metric>::clear_timestamp_ms","value":"pub fn clear_timestamp_ms(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1629},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14207942,"byte_end":14207958,"line_start":1839,"line_end":1839,"column_start":12,"column_end":28},"name":"has_timestamp_ms","qualname":"<Metric>::has_timestamp_ms","value":"pub fn has_timestamp_ms(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1630},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14208069,"byte_end":14208085,"line_start":1844,"line_end":1844,"column_start":12,"column_end":28},"name":"set_timestamp_ms","qualname":"<Metric>::set_timestamp_ms","value":"pub fn set_timestamp_ms(&mut Self, i64)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1631},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14208185,"byte_end":14208201,"line_start":1848,"line_end":1848,"column_start":12,"column_end":28},"name":"get_timestamp_ms","qualname":"<Metric>::get_timestamp_ms","value":"pub fn get_timestamp_ms(&Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1864},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14218633,"byte_end":14218645,"line_start":2118,"line_end":2118,"column_start":12,"column_end":24},"name":"MetricFamily","qualname":"::proto::MetricFamily","value":"MetricFamily { unknown_fields, cached_size }","parent":null,"children":[{"krate":0,"index":1865},{"krate":0,"index":1866},{"krate":0,"index":1867},{"krate":0,"index":1868},{"krate":0,"index":1869},{"krate":0,"index":1870}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1869},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14218918,"byte_end":14218932,"line_start":2125,"line_end":2125,"column_start":9,"column_end":23},"name":"unknown_fields","qualname":"::proto::MetricFamily::unknown_fields","value":"protobuf::UnknownFields","parent":{"krate":0,"index":1864},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1870},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14218969,"byte_end":14218980,"line_start":2126,"line_end":2126,"column_start":9,"column_end":20},"name":"cached_size","qualname":"::proto::MetricFamily::cached_size","value":"protobuf::CachedSize","parent":{"krate":0,"index":1864},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1671},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14219040,"byte_end":14219043,"line_start":2130,"line_end":2130,"column_start":12,"column_end":15},"name":"new","qualname":"<MetricFamily>::new","value":"pub fn new() -> MetricFamily","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1672},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14219159,"byte_end":14219169,"line_start":2136,"line_end":2136,"column_start":12,"column_end":22},"name":"clear_name","qualname":"<MetricFamily>::clear_name","value":"pub fn clear_name(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1673},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14219228,"byte_end":14219236,"line_start":2140,"line_end":2140,"column_start":12,"column_end":20},"name":"has_name","qualname":"<MetricFamily>::has_name","value":"pub fn has_name(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1674},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14219339,"byte_end":14219347,"line_start":2145,"line_end":2145,"column_start":12,"column_end":20},"name":"set_name","qualname":"<MetricFamily>::set_name","value":"pub fn set_name(&mut Self, ::std::string::String)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1675},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14219578,"byte_end":14219586,"line_start":2151,"line_end":2151,"column_start":12,"column_end":20},"name":"mut_name","qualname":"<MetricFamily>::mut_name","value":"pub fn mut_name(&mut Self) -> &mut ::std::string::String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1676},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14219782,"byte_end":14219791,"line_start":2159,"line_end":2159,"column_start":12,"column_end":21},"name":"take_name","qualname":"<MetricFamily>::take_name","value":"pub fn take_name(&mut Self) -> ::std::string::String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1678},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14219921,"byte_end":14219929,"line_start":2163,"line_end":2163,"column_start":12,"column_end":20},"name":"get_name","qualname":"<MetricFamily>::get_name","value":"pub fn get_name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1679},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14220095,"byte_end":14220105,"line_start":2172,"line_end":2172,"column_start":12,"column_end":22},"name":"clear_help","qualname":"<MetricFamily>::clear_help","value":"pub fn clear_help(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1680},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14220164,"byte_end":14220172,"line_start":2176,"line_end":2176,"column_start":12,"column_end":20},"name":"has_help","qualname":"<MetricFamily>::has_help","value":"pub fn has_help(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1681},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14220275,"byte_end":14220283,"line_start":2181,"line_end":2181,"column_start":12,"column_end":20},"name":"set_help","qualname":"<MetricFamily>::set_help","value":"pub fn set_help(&mut Self, ::std::string::String)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1682},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14220514,"byte_end":14220522,"line_start":2187,"line_end":2187,"column_start":12,"column_end":20},"name":"mut_help","qualname":"<MetricFamily>::mut_help","value":"pub fn mut_help(&mut Self) -> &mut ::std::string::String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1683},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14220718,"byte_end":14220727,"line_start":2195,"line_end":2195,"column_start":12,"column_end":21},"name":"take_help","qualname":"<MetricFamily>::take_help","value":"pub fn take_help(&mut Self) -> ::std::string::String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1685},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14220857,"byte_end":14220865,"line_start":2199,"line_end":2199,"column_start":12,"column_end":20},"name":"get_help","qualname":"<MetricFamily>::get_help","value":"pub fn get_help(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1686},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14221057,"byte_end":14221073,"line_start":2208,"line_end":2208,"column_start":12,"column_end":28},"name":"clear_field_type","qualname":"<MetricFamily>::clear_field_type","value":"pub fn clear_field_type(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1687},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14221160,"byte_end":14221174,"line_start":2212,"line_end":2212,"column_start":12,"column_end":26},"name":"has_field_type","qualname":"<MetricFamily>::has_field_type","value":"pub fn has_field_type(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1688},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14221283,"byte_end":14221297,"line_start":2217,"line_end":2217,"column_start":12,"column_end":26},"name":"set_field_type","qualname":"<MetricFamily>::set_field_type","value":"pub fn set_field_type(&mut Self, MetricType)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1689},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14221402,"byte_end":14221416,"line_start":2221,"line_end":2221,"column_start":12,"column_end":26},"name":"get_field_type","qualname":"<MetricFamily>::get_field_type","value":"pub fn get_field_type(&Self) -> MetricType","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1690},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14221571,"byte_end":14221583,"line_start":2227,"line_end":2227,"column_start":12,"column_end":24},"name":"clear_metric","qualname":"<MetricFamily>::clear_metric","value":"pub fn clear_metric(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1691},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14221683,"byte_end":14221693,"line_start":2232,"line_end":2232,"column_start":12,"column_end":22},"name":"set_metric","qualname":"<MetricFamily>::set_metric","value":"pub fn set_metric(&mut Self, ::protobuf::RepeatedField<Metric>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1692},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14221825,"byte_end":14221835,"line_start":2237,"line_end":2237,"column_start":12,"column_end":22},"name":"mut_metric","qualname":"<MetricFamily>::mut_metric","value":"pub fn mut_metric(&mut Self) -> &mut ::protobuf::RepeatedField<Metric>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1693},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14221952,"byte_end":14221963,"line_start":2242,"line_end":2242,"column_start":12,"column_end":23},"name":"take_metric","qualname":"<MetricFamily>::take_metric","value":"pub fn take_metric(&mut Self) -> ::protobuf::RepeatedField<Metric>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1694},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14222112,"byte_end":14222122,"line_start":2246,"line_end":2246,"column_start":12,"column_end":22},"name":"get_metric","qualname":"<MetricFamily>::get_metric","value":"pub fn get_metric(&Self) -> &[Metric]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1880},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14228628,"byte_end":14228635,"line_start":2428,"line_end":2428,"column_start":5,"column_end":12},"name":"COUNTER","qualname":"::proto::MetricType::COUNTER","value":"MetricType::COUNTER","parent":{"krate":0,"index":1879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1883},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14228645,"byte_end":14228650,"line_start":2429,"line_end":2429,"column_start":5,"column_end":10},"name":"GAUGE","qualname":"::proto::MetricType::GAUGE","value":"MetricType::GAUGE","parent":{"krate":0,"index":1879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1886},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14228660,"byte_end":14228667,"line_start":2430,"line_end":2430,"column_start":5,"column_end":12},"name":"SUMMARY","qualname":"::proto::MetricType::SUMMARY","value":"MetricType::SUMMARY","parent":{"krate":0,"index":1879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1889},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14228677,"byte_end":14228684,"line_start":2431,"line_end":2431,"column_start":5,"column_end":12},"name":"UNTYPED","qualname":"::proto::MetricType::UNTYPED","value":"MetricType::UNTYPED","parent":{"krate":0,"index":1879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1892},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14228694,"byte_end":14228703,"line_start":2432,"line_end":2432,"column_start":5,"column_end":14},"name":"HISTOGRAM","qualname":"::proto::MetricType::HISTOGRAM","value":"MetricType::HISTOGRAM","parent":{"krate":0,"index":1879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1879},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14228611,"byte_end":14228621,"line_start":2427,"line_end":2427,"column_start":10,"column_end":20},"name":"MetricType","qualname":"::proto::MetricType","value":"pub enum MetricType {\n    COUNTER = ,\n    GAUGE = ,\n    SUMMARY = ,\n    UNTYPED = ,\n    HISTOGRAM = ,\n}","parent":null,"children":[{"krate":0,"index":1880},{"krate":0,"index":1883},{"krate":0,"index":1886},{"krate":0,"index":1889},{"krate":0,"index":1892}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1741},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14233084,"byte_end":14233105,"line_start":2526,"line_end":2526,"column_start":8,"column_end":29},"name":"file_descriptor_proto","qualname":"::proto::file_descriptor_proto","value":"pub fn file_descriptor_proto()\n-> &'static ::protobuf::descriptor::FileDescriptorProto","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":39},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":18309,"byte_end":18315,"line_start":11,"line_end":11,"column_start":11,"column_end":17},"name":"Number","qualname":"::atomic64::Number","value":"Number: Sized + AddAssign + SubAssign + PartialOrd + PartialEq + Copy + Send + Sync","parent":null,"children":[{"krate":0,"index":40},{"krate":0,"index":41}],"decl_id":null,"docs":" An interface for numbers. Used to generically model float metrics and integer metrics, i.e.\n [`Counter`](crate::Counter) and [`IntCounter`](crate::Counter).\n","sig":null,"attributes":[{"value":"/ An interface for numbers. Used to generically model float metrics and integer metrics, i.e.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":18135,"byte_end":18230,"line_start":9,"line_end":9,"column_start":1,"column_end":96}},{"value":"/ [`Counter`](crate::Counter) and [`IntCounter`](crate::Counter).","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":18231,"byte_end":18298,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":18506,"byte_end":18514,"line_start":15,"line_end":15,"column_start":8,"column_end":16},"name":"from_i64","qualname":"::atomic64::Number::from_i64","value":"pub fn from_i64(i64) -> Self","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":" `std::convert::From<i64> for f64` is not implemented, so that we need to implement our own.\n","sig":null,"attributes":[{"value":"/ `std::convert::From<i64> for f64` is not implemented, so that we need to implement our own.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":18403,"byte_end":18498,"line_start":14,"line_end":14,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":18565,"byte_end":18573,"line_start":17,"line_end":17,"column_start":8,"column_end":16},"name":"into_f64","qualname":"::atomic64::Number::into_f64","value":"pub fn into_f64(Self) -> f64","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":" Convert to a f64.\n","sig":null,"attributes":[{"value":"/ Convert to a f64.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":18536,"byte_end":18557,"line_start":16,"line_end":16,"column_start":5,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":19258,"byte_end":19264,"line_start":58,"line_end":58,"column_start":11,"column_end":17},"name":"Atomic","qualname":"::atomic64::Atomic","value":"Atomic: Send + Sync","parent":null,"children":[{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57}],"decl_id":null,"docs":" An interface for atomics. Used to generically model float metrics and integer metrics, i.e.\n [`Counter`](crate::Counter) and [`IntCounter`](crate::IntCounter).\n","sig":null,"attributes":[{"value":"/ An interface for atomics. Used to generically model float metrics and integer metrics, i.e.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":19081,"byte_end":19176,"line_start":56,"line_end":56,"column_start":1,"column_end":96}},{"value":"/ [`Counter`](crate::Counter) and [`IntCounter`](crate::IntCounter).","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":19177,"byte_end":19247,"line_start":57,"line_end":57,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":52},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":19343,"byte_end":19344,"line_start":60,"line_end":60,"column_start":10,"column_end":11},"name":"T","qualname":"::atomic64::Atomic::T","value":"type T: Number;","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" The numeric type associated with this atomic.\n","sig":null,"attributes":[{"value":"/ The numeric type associated with this atomic.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":19284,"byte_end":19333,"line_start":59,"line_end":59,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":19396,"byte_end":19399,"line_start":62,"line_end":62,"column_start":8,"column_end":11},"name":"new","qualname":"::atomic64::Atomic::new","value":"pub fn new(Self::T) -> Self","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Create a new atomic value.\n","sig":null,"attributes":[{"value":"/ Create a new atomic value.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":19358,"byte_end":19388,"line_start":61,"line_end":61,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":19475,"byte_end":19478,"line_start":64,"line_end":64,"column_start":8,"column_end":11},"name":"set","qualname":"::atomic64::Atomic::set","value":"pub fn set(&Self, Self::T)","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Set the value to the provided value.\n","sig":null,"attributes":[{"value":"/ Set the value to the provided value.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":19427,"byte_end":19467,"line_start":63,"line_end":63,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":19531,"byte_end":19534,"line_start":66,"line_end":66,"column_start":8,"column_end":11},"name":"get","qualname":"::atomic64::Atomic::get","value":"pub fn get(&Self) -> Self::T","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Get the value.\n","sig":null,"attributes":[{"value":"/ Get the value.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":19505,"byte_end":19523,"line_start":65,"line_end":65,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":19608,"byte_end":19614,"line_start":68,"line_end":68,"column_start":8,"column_end":14},"name":"inc_by","qualname":"::atomic64::Atomic::inc_by","value":"pub fn inc_by(&Self, Self::T)","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Increment the value by a given amount.\n","sig":null,"attributes":[{"value":"/ Increment the value by a given amount.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":19558,"byte_end":19600,"line_start":67,"line_end":67,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":19693,"byte_end":19699,"line_start":70,"line_end":70,"column_start":8,"column_end":14},"name":"dec_by","qualname":"::atomic64::Atomic::dec_by","value":"pub fn dec_by(&Self, Self::T)","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Decrement the value by a given amount.\n","sig":null,"attributes":[{"value":"/ Decrement the value by a given amount.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":19643,"byte_end":19685,"line_start":69,"line_end":69,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1908},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":19775,"byte_end":19784,"line_start":75,"line_end":75,"column_start":12,"column_end":21},"name":"AtomicF64","qualname":"::atomic64::AtomicF64","value":"AtomicF64 {  }","parent":null,"children":[{"krate":0,"index":1909}],"decl_id":null,"docs":" A atomic float.\n","sig":null,"attributes":[{"value":"/ A atomic float.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":19727,"byte_end":19746,"line_start":73,"line_end":73,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":20936,"byte_end":20940,"line_start":130,"line_end":130,"column_start":12,"column_end":16},"name":"swap","qualname":"<AtomicF64>::swap","value":"pub fn swap(&Self, f64, Ordering) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Store the value, returning the previous value.\n","sig":null,"attributes":[{"value":"/ Store the value, returning the previous value.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":20874,"byte_end":20924,"line_start":129,"line_end":129,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":1912},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":21116,"byte_end":21125,"line_start":137,"line_end":137,"column_start":12,"column_end":21},"name":"AtomicI64","qualname":"::atomic64::AtomicI64","value":"AtomicI64 {  }","parent":null,"children":[{"krate":0,"index":1913}],"decl_id":null,"docs":" A atomic signed integer.\n","sig":null,"attributes":[{"value":"/ A atomic signed integer.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":21059,"byte_end":21087,"line_start":135,"line_end":135,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":1916},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":21816,"byte_end":21825,"line_start":173,"line_end":173,"column_start":12,"column_end":21},"name":"AtomicU64","qualname":"::atomic64::AtomicU64","value":"AtomicU64 {  }","parent":null,"children":[{"krate":0,"index":1917}],"decl_id":null,"docs":" A atomic unsigned integer.\n","sig":null,"attributes":[{"value":"/ A atomic unsigned integer.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":21757,"byte_end":21787,"line_start":171,"line_end":171,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":22547,"byte_end":22563,"line_start":209,"line_end":209,"column_start":12,"column_end":28},"name":"compare_and_swap","qualname":"<AtomicU64>::compare_and_swap","value":"pub fn compare_and_swap(&Self, u64, u64, Ordering) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Get the value with the provided memory ordering.\n","sig":null,"attributes":[{"value":"/ Get the value with the provided memory ordering.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":22483,"byte_end":22535,"line_start":208,"line_end":208,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":22783,"byte_end":22803,"line_start":214,"line_end":214,"column_start":12,"column_end":32},"name":"inc_by_with_ordering","qualname":"<AtomicU64>::inc_by_with_ordering","value":"pub fn inc_by_with_ordering(&Self, u64, Ordering)","parent":null,"children":[],"decl_id":null,"docs":" Increment the value by a given amount with the provided memory ordering.\n","sig":null,"attributes":[{"value":"/ Increment the value by a given amount with the provided memory ordering.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":22695,"byte_end":22771,"line_start":213,"line_end":213,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":22988,"byte_end":22992,"line_start":219,"line_end":219,"column_start":12,"column_end":16},"name":"swap","qualname":"<AtomicU64>::swap","value":"pub fn swap(&Self, u64, Ordering) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Stores a value into the atomic integer, returning the previous value.\n","sig":null,"attributes":[{"value":"/ Stores a value into the atomic integer, returning the previous value.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":22903,"byte_end":22976,"line_start":218,"line_end":218,"column_start":5,"column_end":78}}]},{"kind":"Trait","id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":24139,"byte_end":24155,"line_start":10,"line_end":10,"column_start":11,"column_end":27},"name":"CounterDelegator","qualname":"::auto_flush::CounterDelegator","value":"CounterDelegator<T: 'static + MayFlush, V: CounterWithValueType>","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":121}],"decl_id":null,"docs":" Delegator for auto flush-able local counter\n","sig":null,"attributes":[{"value":"/ Delegator for auto flush-able local counter","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":24081,"byte_end":24128,"line_start":9,"line_end":9,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":24260,"byte_end":24275,"line_start":12,"line_end":12,"column_start":8,"column_end":23},"name":"get_root_metric","qualname":"::auto_flush::CounterDelegator::get_root_metric","value":"pub fn get_root_metric(&Self) -> &'static LocalKey<T>","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":" Get the root local metric for delegate\n","sig":null,"attributes":[{"value":"/ Get the root local metric for delegate","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":24210,"byte_end":24252,"line_start":11,"line_end":11,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":24359,"byte_end":24368,"line_start":15,"line_end":15,"column_start":8,"column_end":17},"name":"get_local","qualname":"::auto_flush::CounterDelegator::get_local","value":"pub fn get_local<'a>(&Self, &'a T) -> &'a GenericLocalCounter<V::ValueType>","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":" Get the final counter for delegate\n","sig":null,"attributes":[{"value":"/ Get the final counter for delegate","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":24313,"byte_end":24351,"line_start":14,"line_end":14,"column_start":5,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":24503,"byte_end":24521,"line_start":19,"line_end":19,"column_start":11,"column_end":29},"name":"HistogramDelegator","qualname":"::auto_flush::HistogramDelegator","value":"HistogramDelegator<T: 'static + MayFlush>","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":126}],"decl_id":null,"docs":" Delegator for auto flush-able local counter\n","sig":null,"attributes":[{"value":"/ Delegator for auto flush-able local counter","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":24445,"byte_end":24492,"line_start":18,"line_end":18,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":24601,"byte_end":24616,"line_start":21,"line_end":21,"column_start":8,"column_end":23},"name":"get_root_metric","qualname":"::auto_flush::HistogramDelegator::get_root_metric","value":"pub fn get_root_metric(&Self) -> &'static LocalKey<T>","parent":{"krate":0,"index":123},"children":[],"decl_id":null,"docs":" Get the root local metric for delegate\n","sig":null,"attributes":[{"value":"/ Get the root local metric for delegate","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":24551,"byte_end":24593,"line_start":20,"line_end":20,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":24700,"byte_end":24709,"line_start":24,"line_end":24,"column_start":8,"column_end":17},"name":"get_local","qualname":"::auto_flush::HistogramDelegator::get_local","value":"pub fn get_local<'a>(&Self, &'a T) -> &'a LocalHistogram","parent":{"krate":0,"index":123},"children":[],"decl_id":null,"docs":" Get the final counter for delegate\n","sig":null,"attributes":[{"value":"/ Get the final counter for delegate","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":24654,"byte_end":24692,"line_start":23,"line_end":23,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":1920},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":24829,"byte_end":24843,"line_start":29,"line_end":29,"column_start":12,"column_end":26},"name":"AFLocalCounter","qualname":"::auto_flush::AFLocalCounter","value":"AFLocalCounter {  }","parent":null,"children":[{"krate":0,"index":1924},{"krate":0,"index":1925}],"decl_id":null,"docs":" Auto flush-able local counter\n","sig":null,"attributes":[{"value":"/ Auto flush-able local counter","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":24767,"byte_end":24800,"line_start":27,"line_end":27,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":25246,"byte_end":25249,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<AFLocalCounter<T, V, D>>::new","value":"pub fn new(D) -> AFLocalCounter<T, V, D>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new AFLocalCounter from delegator.\n","sig":null,"attributes":[{"value":"/ Construct a new AFLocalCounter from delegator.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":25184,"byte_end":25234,"line_start":40,"line_end":40,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":26138,"byte_end":26144,"line_start":72,"line_end":72,"column_start":12,"column_end":18},"name":"inc_by","qualname":"<AFLocalCounter<T, V, D>>::inc_by","value":"pub fn inc_by(&Self, <V::ValueType as Atomic>::T)","parent":null,"children":[],"decl_id":null,"docs":" Increase the given value to the local counter,\n and try to flush to global\n # Panics","sig":null,"attributes":[{"value":"/ Increase the given value to the local counter,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":25951,"byte_end":26001,"line_start":66,"line_end":66,"column_start":5,"column_end":55}},{"value":"/ and try to flush to global","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":26006,"byte_end":26036,"line_start":67,"line_end":67,"column_start":5,"column_end":35}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":26041,"byte_end":26053,"line_start":68,"line_end":68,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":26058,"byte_end":26061,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Panics in debug build if the value is < 0.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":26066,"byte_end":26112,"line_start":70,"line_end":70,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":26117,"byte_end":26126,"line_start":71,"line_end":71,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":26453,"byte_end":26456,"line_start":83,"line_end":83,"column_start":12,"column_end":15},"name":"inc","qualname":"<AFLocalCounter<T, V, D>>::inc","value":"pub fn inc(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Increase the local counter by 1,\n and try to flush to global.\n","sig":null,"attributes":[{"value":"/ Increase the local counter by 1,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":26355,"byte_end":26391,"line_start":80,"line_end":80,"column_start":5,"column_end":41}},{"value":"/ and try to flush to global.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":26396,"byte_end":26427,"line_start":81,"line_end":81,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":26432,"byte_end":26441,"line_start":82,"line_end":82,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":26692,"byte_end":26695,"line_start":93,"line_end":93,"column_start":12,"column_end":15},"name":"get","qualname":"<AFLocalCounter<T, V, D>>::get","value":"pub fn get(&Self) -> <V::ValueType as Atomic>::T","parent":null,"children":[],"decl_id":null,"docs":" Return the local counter value.\n","sig":null,"attributes":[{"value":"/ Return the local counter value.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":26631,"byte_end":26666,"line_start":91,"line_end":91,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":26671,"byte_end":26680,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":26954,"byte_end":26959,"line_start":102,"line_end":102,"column_start":12,"column_end":17},"name":"reset","qualname":"<AFLocalCounter<T, V, D>>::reset","value":"pub fn reset(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Restart the counter, resetting its value back to 0.\n","sig":null,"attributes":[{"value":"/ Restart the counter, resetting its value back to 0.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":26873,"byte_end":26928,"line_start":100,"line_end":100,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":26933,"byte_end":26942,"line_start":101,"line_end":101,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":27167,"byte_end":27172,"line_start":111,"line_end":111,"column_start":12,"column_end":17},"name":"flush","qualname":"<AFLocalCounter<T, V, D>>::flush","value":"pub fn flush(&Self)","parent":null,"children":[],"decl_id":null,"docs":" trigger flush of LocalKey<T>\n","sig":null,"attributes":[{"value":"/ trigger flush of LocalKey<T>","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":27109,"byte_end":27141,"line_start":109,"line_end":109,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":27146,"byte_end":27155,"line_start":110,"line_end":110,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1931},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":27304,"byte_end":27320,"line_start":118,"line_end":118,"column_start":12,"column_end":28},"name":"AFLocalHistogram","qualname":"::auto_flush::AFLocalHistogram","value":"AFLocalHistogram {  }","parent":null,"children":[{"krate":0,"index":1934},{"krate":0,"index":1935}],"decl_id":null,"docs":" Auto flush-able local counter\n","sig":null,"attributes":[{"value":"/ Auto flush-able local counter","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":27242,"byte_end":27275,"line_start":116,"line_end":116,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":27655,"byte_end":27658,"line_start":127,"line_end":127,"column_start":12,"column_end":15},"name":"new","qualname":"<AFLocalHistogram<T, D>>::new","value":"pub fn new(D) -> AFLocalHistogram<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new AFLocalHistogram from delegator\n","sig":null,"attributes":[{"value":"/ Construct a new AFLocalHistogram from delegator","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":27592,"byte_end":27643,"line_start":126,"line_end":126,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":28003,"byte_end":28010,"line_start":138,"line_end":138,"column_start":12,"column_end":19},"name":"observe","qualname":"<AFLocalHistogram<M, D>>::observe","value":"pub fn observe(&Self, f64)","parent":null,"children":[],"decl_id":null,"docs":" Add a single observation to the [`Histogram`](::Histogram).\n","sig":null,"attributes":[{"value":"/ Add a single observation to the [`Histogram`](::Histogram).","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":27928,"byte_end":27991,"line_start":137,"line_end":137,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":28275,"byte_end":28299,"line_start":147,"line_end":147,"column_start":12,"column_end":36},"name":"observe_closure_duration","qualname":"<AFLocalHistogram<M, D>>::observe_closure_duration","value":"pub fn observe_closure_duration<F, T>(&Self, F) -> T where F: FnOnce() -> T","parent":null,"children":[],"decl_id":null,"docs":" Observe execution time of a closure, in second.\n","sig":null,"attributes":[{"value":"/ Observe execution time of a closure, in second.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":28212,"byte_end":28263,"line_start":146,"line_end":146,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":28925,"byte_end":28930,"line_start":172,"line_end":172,"column_start":12,"column_end":17},"name":"clear","qualname":"<AFLocalHistogram<M, D>>::clear","value":"pub fn clear(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear the local metric.\n","sig":null,"attributes":[{"value":"/ Clear the local metric.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":28886,"byte_end":28913,"line_start":171,"line_end":171,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":29145,"byte_end":29150,"line_start":179,"line_end":179,"column_start":12,"column_end":17},"name":"flush","qualname":"<AFLocalHistogram<M, D>>::flush","value":"pub fn flush(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Flush the local metrics to the [`Histogram`](::Histogram) metric.\n","sig":null,"attributes":[{"value":"/ Flush the local metrics to the [`Histogram`](::Histogram) metric.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":29064,"byte_end":29133,"line_start":178,"line_end":178,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":29341,"byte_end":29355,"line_start":186,"line_end":186,"column_start":12,"column_end":26},"name":"get_sample_sum","qualname":"<AFLocalHistogram<M, D>>::get_sample_sum","value":"pub fn get_sample_sum(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Return accumulated sum of local samples.\n","sig":null,"attributes":[{"value":"/ Return accumulated sum of local samples.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":29285,"byte_end":29329,"line_start":185,"line_end":185,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":29551,"byte_end":29567,"line_start":193,"line_end":193,"column_start":12,"column_end":28},"name":"get_sample_count","qualname":"<AFLocalHistogram<M, D>>::get_sample_count","value":"pub fn get_sample_count(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Return count of local samples.\n","sig":null,"attributes":[{"value":"/ Return count of local samples.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":29505,"byte_end":29539,"line_start":192,"line_end":192,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1940},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":30305,"byte_end":30319,"line_start":19,"line_end":19,"column_start":12,"column_end":26},"name":"GenericCounter","qualname":"::counter::GenericCounter","value":"GenericCounter {  }","parent":null,"children":[{"krate":0,"index":1942}],"decl_id":null,"docs":" The underlying implementation for [`Counter`] and [`IntCounter`].\n","sig":null,"attributes":[{"value":"/ The underlying implementation for [`Counter`] and [`IntCounter`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":30207,"byte_end":30276,"line_start":17,"line_end":17,"column_start":1,"column_end":70}}]},{"kind":"Type","id":{"krate":0,"index":232},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":30444,"byte_end":30451,"line_start":24,"line_end":24,"column_start":10,"column_end":17},"name":"Counter","qualname":"::counter::Counter","value":"GenericCounter<AtomicF64>","parent":null,"children":[],"decl_id":null,"docs":" A [`Metric`] represents a single numerical value that only ever goes up.\n","sig":null,"attributes":[{"value":"/ A [`Metric`] represents a single numerical value that only ever goes up.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":30358,"byte_end":30434,"line_start":23,"line_end":23,"column_start":1,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":233},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":30625,"byte_end":30635,"line_start":28,"line_end":28,"column_start":10,"column_end":20},"name":"IntCounter","qualname":"::counter::IntCounter","value":"GenericCounter<AtomicU64>","parent":null,"children":[],"decl_id":null,"docs":" The integer version of [`Counter`]. Provides better performance if metric values\n are all positive integers (natural numbers).\n","sig":null,"attributes":[{"value":"/ The integer version of [`Counter`]. Provides better performance if metric values","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":30482,"byte_end":30566,"line_start":26,"line_end":26,"column_start":1,"column_end":85}},{"value":"/ are all positive integers (natural numbers).","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":30567,"byte_end":30615,"line_start":27,"line_end":27,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":30933,"byte_end":30936,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<GenericCounter<P>>::new","value":"pub fn new<S1: Into<String>, S2: Into<String>>(S1, S2) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a [`GenericCounter`] with the `name` and `help` arguments.\n","sig":null,"attributes":[{"value":"/ Create a [`GenericCounter`] with the `name` and `help` arguments.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":30852,"byte_end":30921,"line_start":39,"line_end":39,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":31162,"byte_end":31171,"line_start":46,"line_end":46,"column_start":12,"column_end":21},"name":"with_opts","qualname":"<GenericCounter<P>>::with_opts","value":"pub fn with_opts(Opts) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a [`GenericCounter`] with the `opts` options.\n","sig":null,"attributes":[{"value":"/ Create a [`GenericCounter`] with the `opts` options.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":31094,"byte_end":31150,"line_start":45,"line_end":45,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":31639,"byte_end":31645,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"inc_by","qualname":"<GenericCounter<P>>::inc_by","value":"pub fn inc_by(&Self, P::T)","parent":null,"children":[],"decl_id":null,"docs":" Increase the given value to the counter.","sig":null,"attributes":[{"value":"/ Increase the given value to the counter.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":31485,"byte_end":31529,"line_start":55,"line_end":55,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":31534,"byte_end":31537,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":31542,"byte_end":31554,"line_start":57,"line_end":57,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":31559,"byte_end":31562,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Panics in debug build if the value is < 0.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":31567,"byte_end":31613,"line_start":59,"line_end":59,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":31618,"byte_end":31627,"line_start":60,"line_end":60,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":31804,"byte_end":31807,"line_start":68,"line_end":68,"column_start":12,"column_end":15},"name":"inc","qualname":"<GenericCounter<P>>::inc","value":"pub fn inc(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Increase the counter by 1.\n","sig":null,"attributes":[{"value":"/ Increase the counter by 1.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":31748,"byte_end":31778,"line_start":66,"line_end":66,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":31783,"byte_end":31792,"line_start":67,"line_end":67,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":31905,"byte_end":31908,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"get","qualname":"<GenericCounter<P>>::get","value":"pub fn get(&Self) -> P::T","parent":null,"children":[],"decl_id":null,"docs":" Return the counter value.\n","sig":null,"attributes":[{"value":"/ Return the counter value.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":31850,"byte_end":31879,"line_start":72,"line_end":72,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":31884,"byte_end":31893,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":32039,"byte_end":32044,"line_start":80,"line_end":80,"column_start":12,"column_end":17},"name":"reset","qualname":"<GenericCounter<P>>::reset","value":"pub fn reset(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Restart the counter, resetting its value back to 0.\n","sig":null,"attributes":[{"value":"/ Restart the counter, resetting its value back to 0.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":31958,"byte_end":32013,"line_start":78,"line_end":78,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":32018,"byte_end":32027,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":32176,"byte_end":32181,"line_start":85,"line_end":85,"column_start":12,"column_end":17},"name":"local","qualname":"<GenericCounter<P>>::local","value":"pub fn local(&Self) -> GenericLocalCounter<P>","parent":null,"children":[],"decl_id":null,"docs":" Return a [`GenericLocalCounter`] for single thread usage.\n","sig":null,"attributes":[{"value":"/ Return a [`GenericLocalCounter`] for single thread usage.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":32103,"byte_end":32164,"line_start":84,"line_end":84,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":1946},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":32632,"byte_end":32649,"line_start":107,"line_end":107,"column_start":12,"column_end":29},"name":"CounterVecBuilder","qualname":"::counter::CounterVecBuilder","value":"CounterVecBuilder {  }","parent":null,"children":[{"krate":0,"index":1948}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":32746,"byte_end":32749,"line_start":112,"line_end":112,"column_start":12,"column_end":15},"name":"new","qualname":"<CounterVecBuilder<P>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":267},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":33270,"byte_end":33287,"line_start":135,"line_end":135,"column_start":10,"column_end":27},"name":"GenericCounterVec","qualname":"::counter::GenericCounterVec","value":"MetricVec<CounterVecBuilder<P>>","parent":null,"children":[],"decl_id":null,"docs":" The underlying implementation for [`CounterVec`] and [`IntCounterVec`].\n","sig":null,"attributes":[{"value":"/ The underlying implementation for [`CounterVec`] and [`IntCounterVec`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":33185,"byte_end":33260,"line_start":134,"line_end":134,"column_start":1,"column_end":76}}]},{"kind":"Type","id":{"krate":0,"index":269},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":33646,"byte_end":33656,"line_start":141,"line_end":141,"column_start":10,"column_end":20},"name":"CounterVec","qualname":"::counter::CounterVec","value":"GenericCounterVec<AtomicF64>","parent":null,"children":[],"decl_id":null,"docs":" A [`Collector`] that bundles a set of [`Counter`]s that all share\n the same [`Desc`], but have different values for their variable labels. This is\n used if you want to count the same thing partitioned by various dimensions\n (e.g. number of HTTP requests, partitioned by response code and method).\n","sig":null,"attributes":[{"value":"/ A [`Collector`] that bundles a set of [`Counter`]s that all share","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":33327,"byte_end":33396,"line_start":137,"line_end":137,"column_start":1,"column_end":70}},{"value":"/ the same [`Desc`], but have different values for their variable labels. This is","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":33397,"byte_end":33480,"line_start":138,"line_end":138,"column_start":1,"column_end":84}},{"value":"/ used if you want to count the same thing partitioned by various dimensions","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":33481,"byte_end":33559,"line_start":139,"line_end":139,"column_start":1,"column_end":79}},{"value":"/ (e.g. number of HTTP requests, partitioned by response code and method).","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":33560,"byte_end":33636,"line_start":140,"line_end":140,"column_start":1,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":270},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":33829,"byte_end":33842,"line_start":145,"line_end":145,"column_start":10,"column_end":23},"name":"IntCounterVec","qualname":"::counter::IntCounterVec","value":"GenericCounterVec<AtomicU64>","parent":null,"children":[],"decl_id":null,"docs":" The integer version of [`CounterVec`]. Provides better performance if metric\n are all positive integers (natural numbers).\n","sig":null,"attributes":[{"value":"/ The integer version of [`CounterVec`]. Provides better performance if metric","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":33690,"byte_end":33770,"line_start":143,"line_end":143,"column_start":1,"column_end":81}},{"value":"/ are all positive integers (natural numbers).","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":33771,"byte_end":33819,"line_start":144,"line_end":144,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":34100,"byte_end":34103,"line_start":151,"line_end":151,"column_start":12,"column_end":15},"name":"new","qualname":"<GenericCounterVec<P>>::new","value":"pub fn new(Opts, &[&str]) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`GenericCounterVec`] based on the provided\n [`Opts`] and partitioned by the given label names. At least one label name must be\n provided.\n","sig":null,"attributes":[{"value":"/ Create a new [`GenericCounterVec`] based on the provided","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":33919,"byte_end":33979,"line_start":148,"line_end":148,"column_start":5,"column_end":65}},{"value":"/ [`Opts`] and partitioned by the given label names. At least one label name must be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":33984,"byte_end":34070,"line_start":149,"line_end":149,"column_start":5,"column_end":91}},{"value":"/ provided.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":34075,"byte_end":34088,"line_start":150,"line_end":150,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":34533,"byte_end":34538,"line_start":161,"line_end":161,"column_start":12,"column_end":17},"name":"local","qualname":"<GenericCounterVec<P>>::local","value":"pub fn local(&Self) -> GenericLocalCounterVec<P>","parent":null,"children":[],"decl_id":null,"docs":" Return a [`GenericLocalCounterVec`] for single thread usage.\n","sig":null,"attributes":[{"value":"/ Return a [`GenericLocalCounterVec`] for single thread usage.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":34457,"byte_end":34521,"line_start":160,"line_end":160,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":1952},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":34748,"byte_end":34767,"line_start":169,"line_end":169,"column_start":12,"column_end":31},"name":"GenericLocalCounter","qualname":"::counter::GenericLocalCounter","value":"GenericLocalCounter {  }","parent":null,"children":[{"krate":0,"index":1954},{"krate":0,"index":1955}],"decl_id":null,"docs":" The underlying implementation for [`LocalCounter`]\n and [`LocalIntCounter`].\n","sig":null,"attributes":[{"value":"/ The underlying implementation for [`LocalCounter`]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":34636,"byte_end":34690,"line_start":166,"line_end":166,"column_start":1,"column_end":55}},{"value":"/ and [`LocalIntCounter`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":34691,"byte_end":34719,"line_start":167,"line_end":167,"column_start":1,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":276},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":34924,"byte_end":34944,"line_start":175,"line_end":175,"column_start":11,"column_end":31},"name":"CounterWithValueType","qualname":"::counter::CounterWithValueType","value":"CounterWithValueType","parent":null,"children":[{"krate":0,"index":277}],"decl_id":null,"docs":" For auto_flush::AFLocalCounter to use to make type inference possible\n","sig":null,"attributes":[{"value":"/ For auto_flush::AFLocalCounter to use to make type inference possible","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":34840,"byte_end":34913,"line_start":174,"line_end":174,"column_start":1,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":277},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":35002,"byte_end":35011,"line_start":177,"line_end":177,"column_start":10,"column_end":19},"name":"ValueType","qualname":"::counter::CounterWithValueType::ValueType","value":"type ValueType: Atomic;","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":"the exact type which implements Atomic\n","sig":null,"attributes":[{"value":"/the exact type which implements Atomic","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":34951,"byte_end":34992,"line_start":176,"line_end":176,"column_start":5,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":281},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":35153,"byte_end":35165,"line_start":185,"line_end":185,"column_start":10,"column_end":22},"name":"LocalCounter","qualname":"::counter::LocalCounter","value":"GenericLocalCounter<AtomicF64>","parent":null,"children":[],"decl_id":null,"docs":" An unsync [`Counter`].\n","sig":null,"attributes":[{"value":"/ An unsync [`Counter`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":35117,"byte_end":35143,"line_start":184,"line_end":184,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":282},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":35332,"byte_end":35347,"line_start":189,"line_end":189,"column_start":10,"column_end":25},"name":"LocalIntCounter","qualname":"::counter::LocalIntCounter","value":"GenericLocalCounter<AtomicU64>","parent":null,"children":[],"decl_id":null,"docs":" The integer version of [`LocalCounter`]. Provides better performance\n are all positive integers (natural numbers).\n","sig":null,"attributes":[{"value":"/ The integer version of [`LocalCounter`]. Provides better performance","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":35201,"byte_end":35273,"line_start":187,"line_end":187,"column_start":1,"column_end":73}},{"value":"/ are all positive integers (natural numbers).","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":35274,"byte_end":35322,"line_start":188,"line_end":188,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":35740,"byte_end":35746,"line_start":205,"line_end":205,"column_start":12,"column_end":18},"name":"inc_by","qualname":"<GenericLocalCounter<P>>::inc_by","value":"pub fn inc_by(&Self, P::T)","parent":null,"children":[],"decl_id":null,"docs":" Increase the given value to the local counter.","sig":null,"attributes":[{"value":"/ Increase the given value to the local counter.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":35580,"byte_end":35630,"line_start":199,"line_end":199,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":35635,"byte_end":35638,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":35643,"byte_end":35655,"line_start":201,"line_end":201,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":35660,"byte_end":35663,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ Panics in debug build if the value is < 0.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":35668,"byte_end":35714,"line_start":203,"line_end":203,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":35719,"byte_end":35728,"line_start":204,"line_end":204,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":35922,"byte_end":35925,"line_start":212,"line_end":212,"column_start":12,"column_end":15},"name":"inc","qualname":"<GenericLocalCounter<P>>::inc","value":"pub fn inc(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Increase the local counter by 1.\n","sig":null,"attributes":[{"value":"/ Increase the local counter by 1.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":35860,"byte_end":35896,"line_start":210,"line_end":210,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":35901,"byte_end":35910,"line_start":211,"line_end":211,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":36060,"byte_end":36063,"line_start":218,"line_end":218,"column_start":12,"column_end":15},"name":"get","qualname":"<GenericLocalCounter<P>>::get","value":"pub fn get(&Self) -> P::T","parent":null,"children":[],"decl_id":null,"docs":" Return the local counter value.\n","sig":null,"attributes":[{"value":"/ Return the local counter value.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":35999,"byte_end":36034,"line_start":216,"line_end":216,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":36039,"byte_end":36048,"line_start":217,"line_end":217,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":36200,"byte_end":36205,"line_start":224,"line_end":224,"column_start":12,"column_end":17},"name":"reset","qualname":"<GenericLocalCounter<P>>::reset","value":"pub fn reset(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Restart the counter, resetting its value back to 0.\n","sig":null,"attributes":[{"value":"/ Restart the counter, resetting its value back to 0.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":36119,"byte_end":36174,"line_start":222,"line_end":222,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":36179,"byte_end":36188,"line_start":223,"line_end":223,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":36351,"byte_end":36356,"line_start":230,"line_end":230,"column_start":12,"column_end":17},"name":"flush","qualname":"<GenericLocalCounter<P>>::flush","value":"pub fn flush(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Flush the local metrics to the [`Counter`].\n","sig":null,"attributes":[{"value":"/ Flush the local metrics to the [`Counter`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":36278,"byte_end":36325,"line_start":228,"line_end":228,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":36330,"byte_end":36339,"line_start":229,"line_end":229,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":297},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":36986,"byte_end":37008,"line_start":255,"line_end":255,"column_start":12,"column_end":34},"name":"GenericLocalCounterVec","qualname":"::counter::GenericLocalCounterVec","value":"GenericLocalCounterVec {  }","parent":null,"children":[{"krate":0,"index":299},{"krate":0,"index":300}],"decl_id":null,"docs":" The underlying implementation for [`LocalCounterVec`]\n and [`LocalIntCounterVec`].\n","sig":null,"attributes":[{"value":"/ The underlying implementation for [`LocalCounterVec`]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":36885,"byte_end":36942,"line_start":253,"line_end":253,"column_start":1,"column_end":58}},{"value":"/ and [`LocalIntCounterVec`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":36943,"byte_end":36974,"line_start":254,"line_end":254,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":304},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":37417,"byte_end":37432,"line_start":271,"line_end":271,"column_start":10,"column_end":25},"name":"LocalCounterVec","qualname":"::counter::LocalCounterVec","value":"GenericLocalCounterVec<AtomicF64>","parent":null,"children":[],"decl_id":null,"docs":" An unsync [`CounterVec`].\n","sig":null,"attributes":[{"value":"/ An unsync [`CounterVec`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":37378,"byte_end":37407,"line_start":270,"line_end":270,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":305},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":37626,"byte_end":37644,"line_start":276,"line_end":276,"column_start":10,"column_end":28},"name":"LocalIntCounterVec","qualname":"::counter::LocalIntCounterVec","value":"GenericLocalCounterVec<AtomicU64>","parent":null,"children":[],"decl_id":null,"docs":" The integer version of [`LocalCounterVec`].\n Provides better performance if metric values are all positive\n integers (natural numbers).\n","sig":null,"attributes":[{"value":"/ The integer version of [`LocalCounterVec`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":37471,"byte_end":37518,"line_start":273,"line_end":273,"column_start":1,"column_end":48}},{"value":"/ Provides better performance if metric values are all positive","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":37519,"byte_end":37584,"line_start":274,"line_end":274,"column_start":1,"column_end":66}},{"value":"/ integers (natural numbers).","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":37585,"byte_end":37616,"line_start":275,"line_end":275,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":37998,"byte_end":38015,"line_start":286,"line_end":286,"column_start":12,"column_end":29},"name":"with_label_values","qualname":"<GenericLocalCounterVec<P>>::with_label_values","value":"pub fn with_label_values<'a>(&'a mut Self, &[&str])\n-> &'a mut GenericLocalCounter<P>","parent":null,"children":[],"decl_id":null,"docs":" Get a [`GenericLocalCounter`] by label values.\n See more [MetricVec::with_label_values].\n","sig":null,"attributes":[{"value":"/ Get a [`GenericLocalCounter`] by label values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":37887,"byte_end":37937,"line_start":284,"line_end":284,"column_start":5,"column_end":55}},{"value":"/ See more [MetricVec::with_label_values].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":37942,"byte_end":37986,"line_start":285,"line_end":285,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":38417,"byte_end":38436,"line_start":296,"line_end":296,"column_start":12,"column_end":31},"name":"remove_label_values","qualname":"<GenericLocalCounterVec<P>>::remove_label_values","value":"pub fn remove_label_values(&mut Self, &[&str]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Remove a [`GenericLocalCounter`] by label values.\n See more [MetricVec::remove_label_values].\n","sig":null,"attributes":[{"value":"/ Remove a [`GenericLocalCounter`] by label values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":38301,"byte_end":38354,"line_start":294,"line_end":294,"column_start":5,"column_end":58}},{"value":"/ See more [MetricVec::remove_label_values].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":38359,"byte_end":38405,"line_start":295,"line_end":295,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":38694,"byte_end":38699,"line_start":303,"line_end":303,"column_start":12,"column_end":17},"name":"flush","qualname":"<GenericLocalCounterVec<P>>::flush","value":"pub fn flush(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Flush the local metrics to the [`CounterVec`] metric.\n","sig":null,"attributes":[{"value":"/ Flush the local metrics to the [`CounterVec`] metric.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":38625,"byte_end":38682,"line_start":302,"line_end":302,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":1981},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\desc.rs","byte_start":50447,"byte_end":50451,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"Desc","qualname":"::desc::Desc","value":"Desc { fq_name, help, const_label_pairs, variable_labels, id, dim_hash }","parent":null,"children":[{"krate":0,"index":1982},{"krate":0,"index":1983},{"krate":0,"index":1984},{"krate":0,"index":1985},{"krate":0,"index":1986},{"krate":0,"index":1987}],"decl_id":null,"docs":" The descriptor used by every Prometheus [`Metric`](crate::core::Metric). It is essentially\n the immutable meta-data of a metric. The normal metric implementations\n included in this package manage their [`Desc`] under the hood.","sig":null,"attributes":[{"value":"/ The descriptor used by every Prometheus [`Metric`](crate::core::Metric). It is essentially","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\desc.rs","byte_start":49685,"byte_end":49779,"line_start":34,"line_end":34,"column_start":1,"column_end":95}},{"value":"/ the immutable meta-data of a metric. The normal metric implementations","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\desc.rs","byte_start":49780,"byte_end":49854,"line_start":35,"line_end":35,"column_start":1,"column_end":75}},{"value":"/ included in this package manage their [`Desc`] under the hood.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\desc.rs","byte_start":49855,"byte_end":49921,"line_start":36,"line_end":36,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\desc.rs","byte_start":49922,"byte_end":49925,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Descriptors registered with the same registry have to fulfill certain","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\desc.rs","byte_start":49926,"byte_end":49999,"line_start":38,"line_end":38,"column_start":1,"column_end":74}},{"value":"/ consistency and uniqueness criteria if they share the same fully-qualified","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\desc.rs","byte_start":50000,"byte_end":50078,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/ name: They must have the same help string and the same label names (aka label","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\desc.rs","byte_start":50079,"byte_end":50160,"line_start":40,"line_end":40,"column_start":1,"column_end":82}},{"value":"/ dimensions) in each, constLabels and variableLabels, but they must differ in","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\desc.rs","byte_start":50161,"byte_end":50241,"line_start":41,"line_end":41,"column_start":1,"column_end":81}},{"value":"/ the values of the constLabels.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\desc.rs","byte_start":50242,"byte_end":50276,"line_start":42,"line_end":42,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\desc.rs","byte_start":50277,"byte_end":50280,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Descriptors that share the same fully-qualified names and the same label","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\desc.rs","byte_start":50281,"byte_end":50357,"line_start":44,"line_end":44,"column_start":1,"column_end":77}},{"value":"/ values of their constLabels are considered equal.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\desc.rs","byte_start":50358,"byte_end":50411,"line_start":45,"line_end":45,"column_start":1,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1982},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\desc.rs","byte_start":50530,"byte_end":50537,"line_start":49,"line_end":49,"column_start":9,"column_end":16},"name":"fq_name","qualname":"::desc::Desc::fq_name","value":"std::string::String","parent":{"krate":0,"index":1981},"children":[],"decl_id":null,"docs":" fq_name has been built from Namespace, Subsystem, and Name.\n","sig":null,"attributes":[{"value":"/ fq_name has been built from Namespace, Subsystem, and Name.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\desc.rs","byte_start":50458,"byte_end":50521,"line_start":48,"line_end":48,"column_start":5,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":1983},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\desc.rs","byte_start":50621,"byte_end":50625,"line_start":51,"line_end":51,"column_start":9,"column_end":13},"name":"help","qualname":"::desc::Desc::help","value":"std::string::String","parent":{"krate":0,"index":1981},"children":[],"decl_id":null,"docs":" help provides some helpful information about this metric.\n","sig":null,"attributes":[{"value":"/ help provides some helpful information about this metric.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\desc.rs","byte_start":50551,"byte_end":50612,"line_start":50,"line_end":50,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":1984},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\desc.rs","byte_start":50746,"byte_end":50763,"line_start":54,"line_end":54,"column_start":9,"column_end":26},"name":"const_label_pairs","qualname":"::desc::Desc::const_label_pairs","value":"std::vec::Vec<proto::LabelPair>","parent":{"krate":0,"index":1981},"children":[],"decl_id":null,"docs":" const_label_pairs contains precalculated DTO label pairs based on\n the constant labels.\n","sig":null,"attributes":[{"value":"/ const_label_pairs contains precalculated DTO label pairs based on","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\desc.rs","byte_start":50639,"byte_end":50708,"line_start":52,"line_end":52,"column_start":5,"column_end":74}},{"value":"/ the constant labels.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\desc.rs","byte_start":50713,"byte_end":50737,"line_start":53,"line_end":53,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":1985},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\desc.rs","byte_start":50894,"byte_end":50909,"line_start":57,"line_end":57,"column_start":9,"column_end":24},"name":"variable_labels","qualname":"::desc::Desc::variable_labels","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":1981},"children":[],"decl_id":null,"docs":" variable_labels contains names of labels for which the metric\n maintains variable values.\n","sig":null,"attributes":[{"value":"/ variable_labels contains names of labels for which the metric","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\desc.rs","byte_start":50785,"byte_end":50850,"line_start":55,"line_end":55,"column_start":5,"column_end":70}},{"value":"/ maintains variable values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\desc.rs","byte_start":50855,"byte_end":50885,"line_start":56,"line_end":56,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":1986},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\desc.rs","byte_start":51129,"byte_end":51131,"line_start":61,"line_end":61,"column_start":9,"column_end":11},"name":"id","qualname":"::desc::Desc::id","value":"u64","parent":{"krate":0,"index":1981},"children":[],"decl_id":null,"docs":" id is a hash of the values of the ConstLabels and fqName. This\n must be unique among all registered descriptors and can therefore be\n used as an identifier of the descriptor.\n","sig":null,"attributes":[{"value":"/ id is a hash of the values of the ConstLabels and fqName. This","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\desc.rs","byte_start":50928,"byte_end":50994,"line_start":58,"line_end":58,"column_start":5,"column_end":71}},{"value":"/ must be unique among all registered descriptors and can therefore be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\desc.rs","byte_start":50999,"byte_end":51071,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ used as an identifier of the descriptor.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\desc.rs","byte_start":51076,"byte_end":51120,"line_start":60,"line_end":60,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":1987},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\desc.rs","byte_start":51310,"byte_end":51318,"line_start":65,"line_end":65,"column_start":9,"column_end":17},"name":"dim_hash","qualname":"::desc::Desc::dim_hash","value":"u64","parent":{"krate":0,"index":1981},"children":[],"decl_id":null,"docs":" dim_hash is a hash of the label names (preset and variable) and the\n Help string. Each Desc with the same fqName must have the same\n dimHash.\n","sig":null,"attributes":[{"value":"/ dim_hash is a hash of the label names (preset and variable) and the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\desc.rs","byte_start":51142,"byte_end":51213,"line_start":62,"line_end":62,"column_start":5,"column_end":76}},{"value":"/ Help string. Each Desc with the same fqName must have the same","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\desc.rs","byte_start":51218,"byte_end":51284,"line_start":63,"line_end":63,"column_start":5,"column_end":71}},{"value":"/ dimHash.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\desc.rs","byte_start":51289,"byte_end":51301,"line_start":64,"line_end":64,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\desc.rs","byte_start":51588,"byte_end":51591,"line_start":72,"line_end":72,"column_start":12,"column_end":15},"name":"new","qualname":"<Desc>::new","value":"pub fn new(String, String, Vec<String>, HashMap<String, String>)\n-> Result<Desc>","parent":null,"children":[],"decl_id":null,"docs":" Initializes a new [`Desc`]. Errors are recorded in the Desc\n and will be reported on registration time. variableLabels and constLabels can\n be nil if no such labels should be set. fqName and help must not be empty.\n","sig":null,"attributes":[{"value":"/ Initializes a new [`Desc`]. Errors are recorded in the Desc","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\desc.rs","byte_start":51344,"byte_end":51407,"line_start":69,"line_end":69,"column_start":5,"column_end":68}},{"value":"/ and will be reported on registration time. variableLabels and constLabels can","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\desc.rs","byte_start":51412,"byte_end":51493,"line_start":70,"line_end":70,"column_start":5,"column_end":86}},{"value":"/ be nil if no such labels should be set. fqName and help must not be empty.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\desc.rs","byte_start":51498,"byte_end":51576,"line_start":71,"line_end":71,"column_start":5,"column_end":83}}]},{"kind":"Trait","id":{"krate":0,"index":354},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\desc.rs","byte_start":54937,"byte_end":54946,"line_start":176,"line_end":176,"column_start":11,"column_end":20},"name":"Describer","qualname":"::desc::Describer","value":"Describer","parent":null,"children":[{"krate":0,"index":355}],"decl_id":null,"docs":" An interface for describing the immutable meta-data of a [`Metric`](crate::core::Metric).\n","sig":null,"attributes":[{"value":"/ An interface for describing the immutable meta-data of a [`Metric`](crate::core::Metric).","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\desc.rs","byte_start":54833,"byte_end":54926,"line_start":175,"line_end":175,"column_start":1,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\desc.rs","byte_start":54995,"byte_end":55003,"line_start":178,"line_end":178,"column_start":8,"column_end":16},"name":"describe","qualname":"::desc::Describer::describe","value":"pub fn describe(&Self) -> Result<Desc>","parent":{"krate":0,"index":354},"children":[],"decl_id":null,"docs":" `describe` returns a [`Desc`].\n","sig":null,"attributes":[{"value":"/ `describe` returns a [`Desc`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\desc.rs","byte_start":54953,"byte_end":54987,"line_start":177,"line_end":177,"column_start":5,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":377},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\encoder\\pb.rs","byte_start":61430,"byte_end":61445,"line_start":13,"line_end":13,"column_start":11,"column_end":26},"name":"PROTOBUF_FORMAT","qualname":"::encoder::pb::PROTOBUF_FORMAT","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" The protocol buffer format of metric family.\n","sig":null,"attributes":[{"value":"/ The protocol buffer format of metric family.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\encoder\\pb.rs","byte_start":61371,"byte_end":61419,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1992},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\encoder\\pb.rs","byte_start":61794,"byte_end":61809,"line_start":20,"line_end":20,"column_start":12,"column_end":27},"name":"ProtobufEncoder","qualname":"::encoder::pb::ProtobufEncoder","value":"","parent":null,"children":[],"decl_id":null,"docs":" An implementation of an [`Encoder`] that converts a [`MetricFamily`] proto\n message into the binary wire format of protobuf.\n","sig":null,"attributes":[{"value":"/ An implementation of an [`Encoder`] that converts a [`MetricFamily`] proto","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\encoder\\pb.rs","byte_start":61625,"byte_end":61703,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ message into the binary wire format of protobuf.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\encoder\\pb.rs","byte_start":61704,"byte_end":61756,"line_start":18,"line_end":18,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\encoder\\pb.rs","byte_start":61885,"byte_end":61888,"line_start":24,"line_end":24,"column_start":12,"column_end":15},"name":"new","qualname":"<ProtobufEncoder>::new","value":"pub fn new() -> ProtobufEncoder","parent":null,"children":[],"decl_id":null,"docs":" Create a new protobuf encoder.\n","sig":null,"attributes":[{"value":"/ Create a new protobuf encoder.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\encoder\\pb.rs","byte_start":61839,"byte_end":61873,"line_start":23,"line_end":23,"column_start":5,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":421},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\encoder\\text.rs","byte_start":64057,"byte_end":64068,"line_start":14,"line_end":14,"column_start":11,"column_end":22},"name":"TEXT_FORMAT","qualname":"::encoder::text::TEXT_FORMAT","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" The text format of metric family.\n","sig":null,"attributes":[{"value":"/ The text format of metric family.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\encoder\\text.rs","byte_start":64009,"byte_end":64046,"line_start":13,"line_end":13,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1998},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\encoder\\text.rs","byte_start":64324,"byte_end":64335,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"name":"TextEncoder","qualname":"::encoder::text::TextEncoder","value":"","parent":null,"children":[],"decl_id":null,"docs":" An implementation of an [`Encoder`] that converts a [`MetricFamily`] proto message\n into text format.\n","sig":null,"attributes":[{"value":"/ An implementation of an [`Encoder`] that converts a [`MetricFamily`] proto message","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\encoder\\text.rs","byte_start":64178,"byte_end":64264,"line_start":19,"line_end":19,"column_start":1,"column_end":87}},{"value":"/ into text format.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\encoder\\text.rs","byte_start":64265,"byte_end":64286,"line_start":20,"line_end":20,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\encoder\\text.rs","byte_start":64403,"byte_end":64406,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"name":"new","qualname":"<TextEncoder>::new","value":"pub fn new() -> TextEncoder","parent":null,"children":[],"decl_id":null,"docs":" Create a new text encoder.\n","sig":null,"attributes":[{"value":"/ Create a new text encoder.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\encoder\\text.rs","byte_start":64361,"byte_end":64391,"line_start":25,"line_end":25,"column_start":5,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":460},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\encoder\\mod.rs","byte_start":58416,"byte_end":58423,"line_start":17,"line_end":17,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::encoder::Encoder","value":"Encoder","parent":null,"children":[{"krate":0,"index":461},{"krate":0,"index":463}],"decl_id":null,"docs":" An interface for encoding metric families into an underlying wire protocol.\n","sig":null,"attributes":[{"value":"/ An interface for encoding metric families into an underlying wire protocol.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\encoder\\mod.rs","byte_start":58326,"byte_end":58405,"line_start":16,"line_end":16,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\encoder\\mod.rs","byte_start":58829,"byte_end":58835,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::encoder::Encoder::encode","value":"pub fn encode<W: Write>(&Self, &[MetricFamily], &mut W) -> Result<()>","parent":{"krate":0,"index":460},"children":[],"decl_id":null,"docs":" `encode` converts a slice of MetricFamily proto messages into target\n format and writes the resulting lines to `writer`. It returns the number\n of bytes written and any error encountered. This function does not\n perform checks on the content of the metric and label names,\n i.e. invalid metric or label names will result in invalid text format\n output.\n","sig":null,"attributes":[{"value":"/ `encode` converts a slice of MetricFamily proto messages into target","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\encoder\\mod.rs","byte_start":58430,"byte_end":58502,"line_start":18,"line_end":18,"column_start":5,"column_end":77}},{"value":"/ format and writes the resulting lines to `writer`. It returns the number","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\encoder\\mod.rs","byte_start":58507,"byte_end":58583,"line_start":19,"line_end":19,"column_start":5,"column_end":81}},{"value":"/ of bytes written and any error encountered. This function does not","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\encoder\\mod.rs","byte_start":58588,"byte_end":58658,"line_start":20,"line_end":20,"column_start":5,"column_end":75}},{"value":"/ perform checks on the content of the metric and label names,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\encoder\\mod.rs","byte_start":58663,"byte_end":58727,"line_start":21,"line_end":21,"column_start":5,"column_end":69}},{"value":"/ i.e. invalid metric or label names will result in invalid text format","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\encoder\\mod.rs","byte_start":58732,"byte_end":58805,"line_start":22,"line_end":22,"column_start":5,"column_end":78}},{"value":"/ output.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\encoder\\mod.rs","byte_start":58810,"byte_end":58821,"line_start":23,"line_end":23,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\encoder\\mod.rs","byte_start":58952,"byte_end":58963,"line_start":27,"line_end":27,"column_start":8,"column_end":19},"name":"format_type","qualname":"::encoder::Encoder::format_type","value":"pub fn format_type(&Self) -> &str","parent":{"krate":0,"index":460},"children":[],"decl_id":null,"docs":" `format_type` returns target format.\n","sig":null,"attributes":[{"value":"/ `format_type` returns target format.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\encoder\\mod.rs","byte_start":58904,"byte_end":58944,"line_start":26,"line_end":26,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2047},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\errors.rs","byte_start":77745,"byte_end":77755,"line_start":10,"line_end":10,"column_start":5,"column_end":15},"name":"AlreadyReg","qualname":"::errors::Error::AlreadyReg","value":"Error::AlreadyReg","parent":{"krate":0,"index":2026},"children":[],"decl_id":null,"docs":" A duplicate metric collector has already been registered.\n","sig":null,"attributes":[{"value":"/ A duplicate metric collector has already been registered.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\errors.rs","byte_start":77612,"byte_end":77673,"line_start":8,"line_end":8,"column_start":5,"column_end":66}},{"value":"error(\"Duplicate metrics collector registration attempted\")","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\errors.rs","byte_start":77678,"byte_end":77740,"line_start":9,"line_end":9,"column_start":5,"column_end":67}}]},{"kind":"StructVariant","id":{"krate":0,"index":2049},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\errors.rs","byte_start":77901,"byte_end":77924,"line_start":13,"line_end":13,"column_start":5,"column_end":28},"name":"InconsistentCardinality","qualname":"::errors::Error::InconsistentCardinality","value":"Error::InconsistentCardinality { expect, got }","parent":{"krate":0,"index":2026},"children":[],"decl_id":null,"docs":" The label cardinality was inconsistent.\n","sig":null,"attributes":[{"value":"/ The label cardinality was inconsistent.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\errors.rs","byte_start":77761,"byte_end":77804,"line_start":11,"line_end":11,"column_start":5,"column_end":48}},{"value":"error(\"Inconsistent label cardinality, expect {expect} label values, but got {got}\")","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\errors.rs","byte_start":77809,"byte_end":77896,"line_start":12,"line_end":12,"column_start":5,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2052},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\errors.rs","byte_start":78141,"byte_end":78144,"line_start":21,"line_end":21,"column_start":5,"column_end":8},"name":"Msg","qualname":"::errors::Error::Msg","value":"Error::Msg(String)","parent":{"krate":0,"index":2026},"children":[],"decl_id":null,"docs":" An error message which is only a string.\n","sig":null,"attributes":[{"value":"/ An error message which is only a string.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\errors.rs","byte_start":78065,"byte_end":78109,"line_start":19,"line_end":19,"column_start":5,"column_end":49}},{"value":"error(\"Error: {0}\")","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\errors.rs","byte_start":78114,"byte_end":78136,"line_start":20,"line_end":20,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2055},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\errors.rs","byte_start":78238,"byte_end":78240,"line_start":24,"line_end":24,"column_start":5,"column_end":7},"name":"Io","qualname":"::errors::Error::Io","value":"Error::Io(std::io::Error)","parent":{"krate":0,"index":2026},"children":[],"decl_id":null,"docs":" An error containing a [`std::io::Error`].\n","sig":null,"attributes":[{"value":"/ An error containing a [`std::io::Error`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\errors.rs","byte_start":78158,"byte_end":78203,"line_start":22,"line_end":22,"column_start":5,"column_end":50}},{"value":"error(\"Io error: {0}\")","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\errors.rs","byte_start":78208,"byte_end":78233,"line_start":23,"line_end":23,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2058},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\errors.rs","byte_start":78405,"byte_end":78413,"line_start":28,"line_end":28,"column_start":5,"column_end":13},"name":"Protobuf","qualname":"::errors::Error::Protobuf","value":"Error::Protobuf(protobuf::error::ProtobufError)","parent":{"krate":0,"index":2026},"children":[],"decl_id":null,"docs":" An error containing a [`protobuf::error::ProtobufError`].\n","sig":null,"attributes":[{"value":"/ An error containing a [`protobuf::error::ProtobufError`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\errors.rs","byte_start":78270,"byte_end":78331,"line_start":25,"line_end":25,"column_start":5,"column_end":66}},{"value":"cfg(feature = \"protobuf\")","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\errors.rs","byte_start":78336,"byte_end":78364,"line_start":26,"line_end":26,"column_start":5,"column_end":33}},{"value":"error(\"Protobuf error: {0}\")","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\errors.rs","byte_start":78369,"byte_end":78400,"line_start":27,"line_end":27,"column_start":5,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":2026},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\errors.rs","byte_start":77600,"byte_end":77605,"line_start":7,"line_end":7,"column_start":10,"column_end":15},"name":"Error","qualname":"::errors::Error","value":"pub enum Error {\n    AlreadyReg,\n    InconsistentCardinality {\n        expect: usize,\n        got: usize,\n    },\n    Msg(String),\n    Io(std::io::Error),\n    Protobuf(protobuf::error::ProtobufError),\n}","parent":null,"children":[{"krate":0,"index":2047},{"krate":0,"index":2049},{"krate":0,"index":2052},{"krate":0,"index":2055},{"krate":0,"index":2058}],"decl_id":null,"docs":" The error types for prometheus.\n","sig":null,"attributes":[{"value":"/ The error types for prometheus.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\errors.rs","byte_start":77531,"byte_end":77566,"line_start":5,"line_end":5,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":469},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\errors.rs","byte_start":78513,"byte_end":78519,"line_start":32,"line_end":32,"column_start":10,"column_end":16},"name":"Result","qualname":"::errors::Result","value":"std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" A specialized Result type for prometheus.\n","sig":null,"attributes":[{"value":"/ A specialized Result type for prometheus.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\errors.rs","byte_start":78458,"byte_end":78503,"line_start":31,"line_end":31,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":2061},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":79073,"byte_end":79085,"line_start":17,"line_end":17,"column_start":12,"column_end":24},"name":"GenericGauge","qualname":"::gauge::GenericGauge","value":"GenericGauge {  }","parent":null,"children":[{"krate":0,"index":2063}],"decl_id":null,"docs":" The underlying implementation for [`Gauge`] and [`IntGauge`].\n","sig":null,"attributes":[{"value":"/ The underlying implementation for [`Gauge`] and [`IntGauge`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":78979,"byte_end":79044,"line_start":15,"line_end":15,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":524},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":79227,"byte_end":79232,"line_start":23,"line_end":23,"column_start":10,"column_end":15},"name":"Gauge","qualname":"::gauge::Gauge","value":"GenericGauge<AtomicF64>","parent":null,"children":[],"decl_id":null,"docs":" A [`Metric`] represents a single numerical value that can arbitrarily go up\n and down.\n","sig":null,"attributes":[{"value":"/ A [`Metric`] represents a single numerical value that can arbitrarily go up","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":79124,"byte_end":79203,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ and down.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":79204,"byte_end":79217,"line_start":22,"line_end":22,"column_start":1,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":525},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":79375,"byte_end":79383,"line_start":27,"line_end":27,"column_start":10,"column_end":18},"name":"IntGauge","qualname":"::gauge::IntGauge","value":"GenericGauge<AtomicI64>","parent":null,"children":[],"decl_id":null,"docs":" The integer version of [`Gauge`]. Provides better performance if metric values are\n all integers.\n","sig":null,"attributes":[{"value":"/ The integer version of [`Gauge`]. Provides better performance if metric values are","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":79261,"byte_end":79347,"line_start":25,"line_end":25,"column_start":1,"column_end":87}},{"value":"/ all integers.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":79348,"byte_end":79365,"line_start":26,"line_end":26,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":79673,"byte_end":79676,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<GenericGauge<P>>::new","value":"pub fn new<S1: Into<String>, S2: Into<String>>(S1, S2) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a [`GenericGauge`] with the `name` and `help` arguments.\n","sig":null,"attributes":[{"value":"/ Create a [`GenericGauge`] with the `name` and `help` arguments.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":79594,"byte_end":79661,"line_start":38,"line_end":38,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":79900,"byte_end":79909,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"with_opts","qualname":"<GenericGauge<P>>::with_opts","value":"pub fn with_opts(Opts) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a [`GenericGauge`] with the `opts` options.\n","sig":null,"attributes":[{"value":"/ Create a [`GenericGauge`] with the `opts` options.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":79834,"byte_end":79888,"line_start":44,"line_end":44,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":80287,"byte_end":80290,"line_start":56,"line_end":56,"column_start":12,"column_end":15},"name":"set","qualname":"<GenericGauge<P>>::set","value":"pub fn set(&Self, P::T)","parent":null,"children":[],"decl_id":null,"docs":" Set the gauge to an arbitrary value.\n","sig":null,"attributes":[{"value":"/ Set the gauge to an arbitrary value.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":80221,"byte_end":80261,"line_start":54,"line_end":54,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":80266,"byte_end":80275,"line_start":55,"line_end":55,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":537},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":80397,"byte_end":80400,"line_start":62,"line_end":62,"column_start":12,"column_end":15},"name":"inc","qualname":"<GenericGauge<P>>::inc","value":"pub fn inc(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Increase the gauge by 1.\n","sig":null,"attributes":[{"value":"/ Increase the gauge by 1.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":80343,"byte_end":80371,"line_start":60,"line_end":60,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":80376,"byte_end":80385,"line_start":61,"line_end":61,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":538},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":80497,"byte_end":80500,"line_start":68,"line_end":68,"column_start":12,"column_end":15},"name":"dec","qualname":"<GenericGauge<P>>::dec","value":"pub fn dec(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Decrease the gauge by 1.\n","sig":null,"attributes":[{"value":"/ Decrease the gauge by 1.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":80443,"byte_end":80471,"line_start":66,"line_end":66,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":80476,"byte_end":80485,"line_start":67,"line_end":67,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":80682,"byte_end":80685,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"add","qualname":"<GenericGauge<P>>::add","value":"pub fn add(&Self, P::T)","parent":null,"children":[],"decl_id":null,"docs":" Add the given value to the gauge. (The value can be\n negative, resulting in a decrement of the gauge.)\n","sig":null,"attributes":[{"value":"/ Add the given value to the gauge. (The value can be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":80543,"byte_end":80598,"line_start":72,"line_end":72,"column_start":5,"column_end":60}},{"value":"/ negative, resulting in a decrement of the gauge.)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":80603,"byte_end":80656,"line_start":73,"line_end":73,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":80661,"byte_end":80670,"line_start":74,"line_end":74,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":80888,"byte_end":80891,"line_start":82,"line_end":82,"column_start":12,"column_end":15},"name":"sub","qualname":"<GenericGauge<P>>::sub","value":"pub fn sub(&Self, P::T)","parent":null,"children":[],"decl_id":null,"docs":" Subtract the given value from the gauge. (The value can be\n negative, resulting in an increment of the gauge.)\n","sig":null,"attributes":[{"value":"/ Subtract the given value from the gauge. (The value can be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":80741,"byte_end":80803,"line_start":79,"line_end":79,"column_start":5,"column_end":67}},{"value":"/ negative, resulting in an increment of the gauge.)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":80808,"byte_end":80862,"line_start":80,"line_end":80,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":80867,"byte_end":80876,"line_start":81,"line_end":81,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":541},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":81000,"byte_end":81003,"line_start":88,"line_end":88,"column_start":12,"column_end":15},"name":"get","qualname":"<GenericGauge<P>>::get","value":"pub fn get(&Self) -> P::T","parent":null,"children":[],"decl_id":null,"docs":" Return the gauge value.\n","sig":null,"attributes":[{"value":"/ Return the gauge value.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":80947,"byte_end":80974,"line_start":86,"line_end":86,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":80979,"byte_end":80988,"line_start":87,"line_end":87,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2067},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":81406,"byte_end":81421,"line_start":110,"line_end":110,"column_start":12,"column_end":27},"name":"GaugeVecBuilder","qualname":"::gauge::GaugeVecBuilder","value":"GaugeVecBuilder {  }","parent":null,"children":[{"krate":0,"index":2069}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":81516,"byte_end":81519,"line_start":115,"line_end":115,"column_start":12,"column_end":15},"name":"new","qualname":"<GaugeVecBuilder<P>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":560},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":82030,"byte_end":82045,"line_start":138,"line_end":138,"column_start":10,"column_end":25},"name":"GenericGaugeVec","qualname":"::gauge::GenericGaugeVec","value":"MetricVec<GaugeVecBuilder<P>>","parent":null,"children":[],"decl_id":null,"docs":" The underlying implementation for [`GaugeVec`] and [`IntGaugeVec`].\n","sig":null,"attributes":[{"value":"/ The underlying implementation for [`GaugeVec`] and [`IntGaugeVec`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":81949,"byte_end":82020,"line_start":137,"line_end":137,"column_start":1,"column_end":72}}]},{"kind":"Type","id":{"krate":0,"index":562},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":82403,"byte_end":82411,"line_start":144,"line_end":144,"column_start":10,"column_end":18},"name":"GaugeVec","qualname":"::gauge::GaugeVec","value":"GenericGaugeVec<AtomicF64>","parent":null,"children":[],"decl_id":null,"docs":" A [`Collector`] that bundles a set of [`Gauge`]s that all share\n the same [`Desc`], but have different values for their variable labels. This is\n used if you want to count the same thing partitioned by various dimensions\n (e.g. number of operations queued, partitioned by user and operation type).\n","sig":null,"attributes":[{"value":"/ A [`Collector`] that bundles a set of [`Gauge`]s that all share","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":82083,"byte_end":82150,"line_start":140,"line_end":140,"column_start":1,"column_end":68}},{"value":"/ the same [`Desc`], but have different values for their variable labels. This is","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":82151,"byte_end":82234,"line_start":141,"line_end":141,"column_start":1,"column_end":84}},{"value":"/ used if you want to count the same thing partitioned by various dimensions","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":82235,"byte_end":82313,"line_start":142,"line_end":142,"column_start":1,"column_end":79}},{"value":"/ (e.g. number of operations queued, partitioned by user and operation type).","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":82314,"byte_end":82393,"line_start":143,"line_end":143,"column_start":1,"column_end":80}}]},{"kind":"Type","id":{"krate":0,"index":563},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":82560,"byte_end":82571,"line_start":148,"line_end":148,"column_start":10,"column_end":21},"name":"IntGaugeVec","qualname":"::gauge::IntGaugeVec","value":"GenericGaugeVec<AtomicI64>","parent":null,"children":[],"decl_id":null,"docs":" The integer version of [`GaugeVec`]. Provides better performance if metric values\n are all integers.\n","sig":null,"attributes":[{"value":"/ The integer version of [`GaugeVec`]. Provides better performance if metric values","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":82443,"byte_end":82528,"line_start":146,"line_end":146,"column_start":1,"column_end":86}},{"value":"/ are all integers.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":82529,"byte_end":82550,"line_start":147,"line_end":147,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":82823,"byte_end":82826,"line_start":154,"line_end":154,"column_start":12,"column_end":15},"name":"new","qualname":"<GenericGaugeVec<P>>::new","value":"pub fn new(Opts, &[&str]) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`GenericGaugeVec`] based on the provided\n [`Opts`] and partitioned by the given label names. At least one label name must\n be provided.\n","sig":null,"attributes":[{"value":"/ Create a new [`GenericGaugeVec`] based on the provided","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":82644,"byte_end":82702,"line_start":151,"line_end":151,"column_start":5,"column_end":63}},{"value":"/ [`Opts`] and partitioned by the given label names. At least one label name must","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":82707,"byte_end":82790,"line_start":152,"line_end":152,"column_start":5,"column_end":88}},{"value":"/ be provided.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":82795,"byte_end":82811,"line_start":153,"line_end":153,"column_start":5,"column_end":21}}]},{"kind":"Const","id":{"krate":0,"index":649},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":86409,"byte_end":86424,"line_start":25,"line_end":25,"column_start":11,"column_end":26},"name":"DEFAULT_BUCKETS","qualname":"::histogram::DEFAULT_BUCKETS","value":"&[f64; ]","parent":null,"children":[],"decl_id":null,"docs":" The default [`Histogram`] buckets. The default buckets are\n tailored to broadly measure the response time (in seconds) of a\n network service. Most likely, however, you will be required to define\n buckets customized to your use case.\n","sig":null,"attributes":[{"value":"/ The default [`Histogram`] buckets. The default buckets are","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":86153,"byte_end":86215,"line_start":21,"line_end":21,"column_start":1,"column_end":63}},{"value":"/ tailored to broadly measure the response time (in seconds) of a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":86216,"byte_end":86283,"line_start":22,"line_end":22,"column_start":1,"column_end":68}},{"value":"/ network service. Most likely, however, you will be required to define","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":86284,"byte_end":86357,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/ buckets customized to your use case.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":86358,"byte_end":86398,"line_start":24,"line_end":24,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":2073},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":87875,"byte_end":87888,"line_start":73,"line_end":73,"column_start":12,"column_end":25},"name":"HistogramOpts","qualname":"::histogram::HistogramOpts","value":"HistogramOpts { common_opts, buckets }","parent":null,"children":[{"krate":0,"index":2074},{"krate":0,"index":2075}],"decl_id":null,"docs":" A struct that bundles the options for creating a [`Histogram`] metric. It is\n mandatory to set Name and Help to a non-empty string. All other fields are\n optional and can safely be left at their zero value.\n","sig":null,"attributes":[{"value":"/ A struct that bundles the options for creating a [`Histogram`] metric. It is","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":87623,"byte_end":87703,"line_start":69,"line_end":69,"column_start":1,"column_end":81}},{"value":"/ mandatory to set Name and Help to a non-empty string. All other fields are","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":87704,"byte_end":87782,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/ optional and can safely be left at their zero value.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":87783,"byte_end":87839,"line_start":71,"line_end":71,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":2074},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":87944,"byte_end":87955,"line_start":75,"line_end":75,"column_start":9,"column_end":20},"name":"common_opts","qualname":"::histogram::HistogramOpts::common_opts","value":"metrics::Opts","parent":{"krate":0,"index":2073},"children":[],"decl_id":null,"docs":" A container holding various options.\n","sig":null,"attributes":[{"value":"/ A container holding various options.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":87895,"byte_end":87935,"line_start":74,"line_end":74,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":2075},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":88313,"byte_end":88320,"line_start":82,"line_end":82,"column_start":9,"column_end":16},"name":"buckets","qualname":"::histogram::HistogramOpts::buckets","value":"std::vec::Vec<f64>","parent":{"krate":0,"index":2073},"children":[],"decl_id":null,"docs":" Defines the buckets into which observations are counted. Each\n element in the slice is the upper inclusive bound of a bucket. The\n values must be sorted in strictly increasing order. There is no need\n to add a highest bucket with +Inf bound, it will be added\n implicitly. The default value is DefBuckets.\n","sig":null,"attributes":[{"value":"/ Defines the buckets into which observations are counted. Each","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":87968,"byte_end":88033,"line_start":77,"line_end":77,"column_start":5,"column_end":70}},{"value":"/ element in the slice is the upper inclusive bound of a bucket. The","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":88038,"byte_end":88108,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ values must be sorted in strictly increasing order. There is no need","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":88113,"byte_end":88185,"line_start":79,"line_end":79,"column_start":5,"column_end":77}},{"value":"/ to add a highest bucket with +Inf bound, it will be added","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":88190,"byte_end":88251,"line_start":80,"line_end":80,"column_start":5,"column_end":66}},{"value":"/ implicitly. The default value is DefBuckets.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":88256,"byte_end":88304,"line_start":81,"line_end":81,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":88440,"byte_end":88443,"line_start":87,"line_end":87,"column_start":12,"column_end":15},"name":"new","qualname":"<HistogramOpts>::new","value":"pub fn new<S1: Into<String>, S2: Into<String>>(S1, S2) -> HistogramOpts","parent":null,"children":[],"decl_id":null,"docs":" Create a [`HistogramOpts`] with the `name` and `help` arguments.\n","sig":null,"attributes":[{"value":"/ Create a [`HistogramOpts`] with the `name` and `help` arguments.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":88360,"byte_end":88428,"line_start":86,"line_end":86,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":658},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":88726,"byte_end":88735,"line_start":95,"line_end":95,"column_start":12,"column_end":21},"name":"namespace","qualname":"<HistogramOpts>::namespace","value":"pub fn namespace<S: Into<String>>(Self, S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" `namespace` sets the namespace.\n","sig":null,"attributes":[{"value":"/ `namespace` sets the namespace.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":88679,"byte_end":88714,"line_start":94,"line_end":94,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":660},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":88914,"byte_end":88923,"line_start":101,"line_end":101,"column_start":12,"column_end":21},"name":"subsystem","qualname":"<HistogramOpts>::subsystem","value":"pub fn subsystem<S: Into<String>>(Self, S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" `subsystem` sets the sub system.\n","sig":null,"attributes":[{"value":"/ `subsystem` sets the sub system.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":88866,"byte_end":88902,"line_start":100,"line_end":100,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":662},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":89107,"byte_end":89119,"line_start":107,"line_end":107,"column_start":12,"column_end":24},"name":"const_labels","qualname":"<HistogramOpts>::const_labels","value":"pub fn const_labels(Self, HashMap<String, String>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" `const_labels` sets the const labels.\n","sig":null,"attributes":[{"value":"/ `const_labels` sets the const labels.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":89054,"byte_end":89095,"line_start":106,"line_end":106,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":663},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":89324,"byte_end":89335,"line_start":113,"line_end":113,"column_start":12,"column_end":23},"name":"const_label","qualname":"<HistogramOpts>::const_label","value":"pub fn const_label<S1: Into<String>, S2: Into<String>>(Self, S1, S2) -> Self","parent":null,"children":[],"decl_id":null,"docs":" `const_label` adds a const label.\n","sig":null,"attributes":[{"value":"/ `const_label` adds a const label.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":89275,"byte_end":89312,"line_start":112,"line_end":112,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":666},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":89566,"byte_end":89581,"line_start":119,"line_end":119,"column_start":12,"column_end":27},"name":"variable_labels","qualname":"<HistogramOpts>::variable_labels","value":"pub fn variable_labels(Self, Vec<String>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" `variable_labels` sets the variable labels.\n","sig":null,"attributes":[{"value":"/ `variable_labels` sets the variable labels.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":89507,"byte_end":89554,"line_start":118,"line_end":118,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":89789,"byte_end":89803,"line_start":125,"line_end":125,"column_start":12,"column_end":26},"name":"variable_label","qualname":"<HistogramOpts>::variable_label","value":"pub fn variable_label<S: Into<String>>(Self, S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" `variable_label` adds a variable label.\n","sig":null,"attributes":[{"value":"/ `variable_label` adds a variable label.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":89734,"byte_end":89777,"line_start":124,"line_end":124,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":669},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":89986,"byte_end":89993,"line_start":131,"line_end":131,"column_start":12,"column_end":19},"name":"fq_name","qualname":"<HistogramOpts>::fq_name","value":"pub fn fq_name(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" `fq_name` returns the fq_name.\n","sig":null,"attributes":[{"value":"/ `fq_name` returns the fq_name.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":89940,"byte_end":89974,"line_start":130,"line_end":130,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":90101,"byte_end":90108,"line_start":136,"line_end":136,"column_start":12,"column_end":19},"name":"buckets","qualname":"<HistogramOpts>::buckets","value":"pub fn buckets(Self, Vec<f64>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" `buckets` set the buckets.\n","sig":null,"attributes":[{"value":"/ `buckets` set the buckets.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":90059,"byte_end":90089,"line_start":135,"line_end":135,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2116},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":105210,"byte_end":105224,"line_start":577,"line_end":577,"column_start":12,"column_end":26},"name":"HistogramTimer","qualname":"::histogram::HistogramTimer","value":"HistogramTimer {  }","parent":null,"children":[{"krate":0,"index":2117},{"krate":0,"index":2118},{"krate":0,"index":2119}],"decl_id":null,"docs":" Timer to measure and record the duration of an event.","sig":null,"attributes":[{"value":"/ Timer to measure and record the duration of an event.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":104815,"byte_end":104872,"line_start":570,"line_end":570,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":104873,"byte_end":104876,"line_start":571,"line_end":571,"column_start":1,"column_end":4}},{"value":"/ This timer can be stopped and observed at most once, either automatically (when it","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":104877,"byte_end":104963,"line_start":572,"line_end":572,"column_start":1,"column_end":87}},{"value":"/ goes out of scope) or manually.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":104964,"byte_end":104999,"line_start":573,"line_end":573,"column_start":1,"column_end":36}},{"value":"/ Alternatively, it can be manually stopped and discarded in order to not record its value.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":105000,"byte_end":105093,"line_start":574,"line_end":574,"column_start":1,"column_end":94}},{"value":"must_use =\n  \"Timer should be kept in a variable otherwise it cannot observe duration\"","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":105094,"byte_end":105181,"line_start":575,"line_end":575,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":106083,"byte_end":106099,"line_start":608,"line_end":608,"column_start":12,"column_end":28},"name":"observe_duration","qualname":"<HistogramTimer>::observe_duration","value":"pub fn observe_duration(Self)","parent":null,"children":[],"decl_id":null,"docs":" Observe and record timer duration (in seconds).","sig":null,"attributes":[{"value":"/ Observe and record timer duration (in seconds).","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":105861,"byte_end":105912,"line_start":604,"line_end":604,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":105917,"byte_end":105920,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ It observes the floating-point number of seconds elapsed since the timer","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":105925,"byte_end":106001,"line_start":606,"line_end":606,"column_start":5,"column_end":81}},{"value":"/ started, and it records that value to the attached histogram.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":106006,"byte_end":106071,"line_start":607,"line_end":607,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":106387,"byte_end":106402,"line_start":616,"line_end":616,"column_start":12,"column_end":27},"name":"stop_and_record","qualname":"<HistogramTimer>::stop_and_record","value":"pub fn stop_and_record(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Observe, record and return timer duration (in seconds).","sig":null,"attributes":[{"value":"/ Observe, record and return timer duration (in seconds).","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":106151,"byte_end":106210,"line_start":612,"line_end":612,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":106215,"byte_end":106218,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ It observes and returns a floating-point number for seconds elapsed since","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":106223,"byte_end":106300,"line_start":614,"line_end":614,"column_start":5,"column_end":82}},{"value":"/ the timer started, recording that value to the attached histogram.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":106305,"byte_end":106375,"line_start":615,"line_end":615,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":106689,"byte_end":106705,"line_start":625,"line_end":625,"column_start":12,"column_end":28},"name":"stop_and_discard","qualname":"<HistogramTimer>::stop_and_discard","value":"pub fn stop_and_discard(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Observe and return timer duration (in seconds).","sig":null,"attributes":[{"value":"/ Observe and return timer duration (in seconds).","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":106487,"byte_end":106538,"line_start":621,"line_end":621,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":106543,"byte_end":106546,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ It returns a floating-point number of seconds elapsed since the timer started,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":106551,"byte_end":106633,"line_start":623,"line_end":623,"column_start":5,"column_end":87}},{"value":"/ without recording to any histogram.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":106638,"byte_end":106677,"line_start":624,"line_end":624,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":2122},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":108217,"byte_end":108226,"line_start":666,"line_end":666,"column_start":12,"column_end":21},"name":"Histogram","qualname":"::histogram::Histogram","value":"Histogram {  }","parent":null,"children":[{"krate":0,"index":2123}],"decl_id":null,"docs":" A [`Metric`] counts individual observations from an event or sample stream\n in configurable buckets. Similar to a [`Summary`](crate::proto::Summary),\n it also provides a sum of observations and an observation count.","sig":null,"attributes":[{"value":"/ A [`Metric`] counts individual observations from an event or sample stream","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":107131,"byte_end":107209,"line_start":648,"line_end":648,"column_start":1,"column_end":79}},{"value":"/ in configurable buckets. Similar to a [`Summary`](crate::proto::Summary),","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":107210,"byte_end":107287,"line_start":649,"line_end":649,"column_start":1,"column_end":78}},{"value":"/ it also provides a sum of observations and an observation count.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":107288,"byte_end":107356,"line_start":650,"line_end":650,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":107357,"byte_end":107360,"line_start":651,"line_end":651,"column_start":1,"column_end":4}},{"value":"/ On the Prometheus server, quantiles can be calculated from a [`Histogram`] using","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":107361,"byte_end":107445,"line_start":652,"line_end":652,"column_start":1,"column_end":85}},{"value":"/ the [`histogram_quantile`][1] function in the query language.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":107446,"byte_end":107511,"line_start":653,"line_end":653,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":107512,"byte_end":107515,"line_start":654,"line_end":654,"column_start":1,"column_end":4}},{"value":"/ Note that Histograms, in contrast to Summaries, can be aggregated with the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":107516,"byte_end":107594,"line_start":655,"line_end":655,"column_start":1,"column_end":79}},{"value":"/ Prometheus query language (see [the prometheus documentation][2] for","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":107595,"byte_end":107667,"line_start":656,"line_end":656,"column_start":1,"column_end":73}},{"value":"/ detailed procedures). However, Histograms require the user to pre-define","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":107668,"byte_end":107744,"line_start":657,"line_end":657,"column_start":1,"column_end":77}},{"value":"/ suitable buckets, (see [`linear_buckets`] and [`exponential_buckets`] for","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":107745,"byte_end":107822,"line_start":658,"line_end":658,"column_start":1,"column_end":78}},{"value":"/ some helper provided here) and they are in general less accurate. The","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":107823,"byte_end":107896,"line_start":659,"line_end":659,"column_start":1,"column_end":74}},{"value":"/ Observe method of a [`Histogram`] has a very low performance overhead in","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":107897,"byte_end":107973,"line_start":660,"line_end":660,"column_start":1,"column_end":77}},{"value":"/ comparison with the Observe method of a Summary.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":107974,"byte_end":108026,"line_start":661,"line_end":661,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":108027,"byte_end":108030,"line_start":662,"line_end":662,"column_start":1,"column_end":4}},{"value":"/ [1]: https://prometheus.io/docs/prometheus/latest/querying/functions/#histogram_quantile","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":108031,"byte_end":108123,"line_start":663,"line_end":663,"column_start":1,"column_end":93}},{"value":"/ [2]: https://prometheus.io/docs/practices/histograms/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":108124,"byte_end":108181,"line_start":664,"line_end":664,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":108359,"byte_end":108368,"line_start":672,"line_end":672,"column_start":12,"column_end":21},"name":"with_opts","qualname":"<Histogram>::with_opts","value":"pub fn with_opts(HistogramOpts) -> Result<Histogram>","parent":null,"children":[],"decl_id":null,"docs":" `with_opts` creates a [`Histogram`] with the `opts` options.\n","sig":null,"attributes":[{"value":"/ `with_opts` creates a [`Histogram`] with the `opts` options.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":108283,"byte_end":108347,"line_start":671,"line_end":671,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":108824,"byte_end":108831,"line_start":690,"line_end":690,"column_start":12,"column_end":19},"name":"observe","qualname":"<Histogram>::observe","value":"pub fn observe(&Self, f64)","parent":null,"children":[],"decl_id":null,"docs":" Add a single observation to the [`Histogram`].\n","sig":null,"attributes":[{"value":"/ Add a single observation to the [`Histogram`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":108762,"byte_end":108812,"line_start":689,"line_end":689,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":714},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":108953,"byte_end":108964,"line_start":695,"line_end":695,"column_start":12,"column_end":23},"name":"start_timer","qualname":"<Histogram>::start_timer","value":"pub fn start_timer(&Self) -> HistogramTimer","parent":null,"children":[],"decl_id":null,"docs":" Return a [`HistogramTimer`] to track a duration.\n","sig":null,"attributes":[{"value":"/ Return a [`HistogramTimer`] to track a duration.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":108889,"byte_end":108941,"line_start":694,"line_end":694,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":715},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":109349,"byte_end":109373,"line_start":707,"line_end":707,"column_start":12,"column_end":36},"name":"observe_closure_duration","qualname":"<Histogram>::observe_closure_duration","value":"pub fn observe_closure_duration<F, T>(&Self, F) -> T where F: FnOnce() -> T","parent":null,"children":[],"decl_id":null,"docs":" Observe execution time of a closure, in second.\n","sig":null,"attributes":[{"value":"/ Observe execution time of a closure, in second.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":109286,"byte_end":109337,"line_start":706,"line_end":706,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":110028,"byte_end":110033,"line_start":732,"line_end":732,"column_start":12,"column_end":17},"name":"local","qualname":"<Histogram>::local","value":"pub fn local(&Self) -> LocalHistogram","parent":null,"children":[],"decl_id":null,"docs":" Return a [`LocalHistogram`] for single thread usage.\n","sig":null,"attributes":[{"value":"/ Return a [`LocalHistogram`] for single thread usage.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":109960,"byte_end":110016,"line_start":731,"line_end":731,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":110168,"byte_end":110182,"line_start":737,"line_end":737,"column_start":12,"column_end":26},"name":"get_sample_sum","qualname":"<Histogram>::get_sample_sum","value":"pub fn get_sample_sum(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Return accumulated sum of all samples.\n","sig":null,"attributes":[{"value":"/ Return accumulated sum of all samples.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":110114,"byte_end":110156,"line_start":736,"line_end":736,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":110285,"byte_end":110301,"line_start":742,"line_end":742,"column_start":12,"column_end":28},"name":"get_sample_count","qualname":"<Histogram>::get_sample_count","value":"pub fn get_sample_count(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Return count of all samples.\n","sig":null,"attributes":[{"value":"/ Return count of all samples.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":110241,"byte_end":110273,"line_start":741,"line_end":741,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2128},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":111100,"byte_end":111119,"line_start":776,"line_end":776,"column_start":12,"column_end":31},"name":"HistogramVecBuilder","qualname":"::histogram::HistogramVecBuilder","value":"HistogramVecBuilder {  }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":730},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":111686,"byte_end":111698,"line_start":791,"line_end":791,"column_start":10,"column_end":22},"name":"HistogramVec","qualname":"::histogram::HistogramVec","value":"MetricVec<HistogramVecBuilder>","parent":null,"children":[],"decl_id":null,"docs":" A [`Collector`] that bundles a set of Histograms that all share the\n same [`Desc`], but have different values for their variable labels. This is used\n if you want to count the same thing partitioned by various dimensions\n (e.g. HTTP request latencies, partitioned by status code and method).\n","sig":null,"attributes":[{"value":"/ A [`Collector`] that bundles a set of Histograms that all share the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":111372,"byte_end":111443,"line_start":787,"line_end":787,"column_start":1,"column_end":72}},{"value":"/ same [`Desc`], but have different values for their variable labels. This is used","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":111444,"byte_end":111528,"line_start":788,"line_end":788,"column_start":1,"column_end":85}},{"value":"/ if you want to count the same thing partitioned by various dimensions","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":111529,"byte_end":111602,"line_start":789,"line_end":789,"column_start":1,"column_end":74}},{"value":"/ (e.g. HTTP request latencies, partitioned by status code and method).","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":111603,"byte_end":111676,"line_start":790,"line_end":790,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":732},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":111943,"byte_end":111946,"line_start":797,"line_end":797,"column_start":12,"column_end":15},"name":"new","qualname":"<HistogramVec>::new","value":"pub fn new(HistogramOpts, &[&str]) -> Result<HistogramVec>","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`HistogramVec`] based on the provided\n [`HistogramOpts`] and partitioned by the given label names. At least\n one label name must be provided.\n","sig":null,"attributes":[{"value":"/ Create a new [`HistogramVec`] based on the provided","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":111758,"byte_end":111813,"line_start":794,"line_end":794,"column_start":5,"column_end":60}},{"value":"/ [`HistogramOpts`] and partitioned by the given label names. At least","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":111818,"byte_end":111890,"line_start":795,"line_end":795,"column_start":5,"column_end":77}},{"value":"/ one label name must be provided.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":111895,"byte_end":111931,"line_start":796,"line_end":796,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":112394,"byte_end":112399,"line_start":807,"line_end":807,"column_start":12,"column_end":17},"name":"local","qualname":"<HistogramVec>::local","value":"pub fn local(&Self) -> LocalHistogramVec","parent":null,"children":[],"decl_id":null,"docs":" Return a `LocalHistogramVec` for single thread usage.\n","sig":null,"attributes":[{"value":"/ Return a `LocalHistogramVec` for single thread usage.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":112325,"byte_end":112382,"line_start":806,"line_end":806,"column_start":5,"column_end":62}}]},{"kind":"Function","id":{"krate":0,"index":735},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":112881,"byte_end":112895,"line_start":820,"line_end":820,"column_start":8,"column_end":22},"name":"linear_buckets","qualname":"::histogram::linear_buckets","value":"pub fn linear_buckets(f64, f64, usize) -> Result<Vec<f64>>","parent":null,"children":[],"decl_id":null,"docs":" Create `count` buckets, each `width` wide, where the lowest\n bucket has an upper bound of `start`. The final +Inf bucket is not counted\n and not included in the returned slice. The returned slice is meant to be\n used for the Buckets field of [`HistogramOpts`].","sig":null,"attributes":[{"value":"/ Create `count` buckets, each `width` wide, where the lowest","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":112507,"byte_end":112570,"line_start":813,"line_end":813,"column_start":1,"column_end":64}},{"value":"/ bucket has an upper bound of `start`. The final +Inf bucket is not counted","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":112571,"byte_end":112649,"line_start":814,"line_end":814,"column_start":1,"column_end":79}},{"value":"/ and not included in the returned slice. The returned slice is meant to be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":112650,"byte_end":112727,"line_start":815,"line_end":815,"column_start":1,"column_end":78}},{"value":"/ used for the Buckets field of [`HistogramOpts`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":112728,"byte_end":112780,"line_start":816,"line_end":816,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":112781,"byte_end":112784,"line_start":817,"line_end":817,"column_start":1,"column_end":4}},{"value":"/ The function returns an error if `count` is zero or `width` is zero or","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":112785,"byte_end":112859,"line_start":818,"line_end":818,"column_start":1,"column_end":75}},{"value":"/ negative.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":112860,"byte_end":112873,"line_start":819,"line_end":819,"column_start":1,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":737},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":113902,"byte_end":113921,"line_start":849,"line_end":849,"column_start":8,"column_end":27},"name":"exponential_buckets","qualname":"::histogram::exponential_buckets","value":"pub fn exponential_buckets(f64, f64, usize) -> Result<Vec<f64>>","parent":null,"children":[],"decl_id":null,"docs":" Create `count` buckets, where the lowest bucket has an\n upper bound of `start` and each following bucket's upper bound is `factor`\n times the previous bucket's upper bound. The final +Inf bucket is not counted\n and not included in the returned slice. The returned slice is meant to be\n used for the Buckets field of [`HistogramOpts`].","sig":null,"attributes":[{"value":"/ Create `count` buckets, where the lowest bucket has an","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":113410,"byte_end":113468,"line_start":841,"line_end":841,"column_start":1,"column_end":59}},{"value":"/ upper bound of `start` and each following bucket's upper bound is `factor`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":113469,"byte_end":113547,"line_start":842,"line_end":842,"column_start":1,"column_end":79}},{"value":"/ times the previous bucket's upper bound. The final +Inf bucket is not counted","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":113548,"byte_end":113629,"line_start":843,"line_end":843,"column_start":1,"column_end":82}},{"value":"/ and not included in the returned slice. The returned slice is meant to be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":113630,"byte_end":113707,"line_start":844,"line_end":844,"column_start":1,"column_end":78}},{"value":"/ used for the Buckets field of [`HistogramOpts`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":113708,"byte_end":113760,"line_start":845,"line_end":845,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":113761,"byte_end":113764,"line_start":846,"line_end":846,"column_start":1,"column_end":4}},{"value":"/ The function returns an error if `count` is zero, if `start` is zero or","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":113765,"byte_end":113840,"line_start":847,"line_end":847,"column_start":1,"column_end":76}},{"value":"/ negative, or if `factor` is less than or equal 1.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":113841,"byte_end":113894,"line_start":848,"line_end":848,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":2142},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":115099,"byte_end":115113,"line_start":898,"line_end":898,"column_start":12,"column_end":26},"name":"LocalHistogram","qualname":"::histogram::LocalHistogram","value":"LocalHistogram {  }","parent":null,"children":[{"krate":0,"index":2143}],"decl_id":null,"docs":" An unsync [`Histogram`].\n","sig":null,"attributes":[{"value":"/ An unsync [`Histogram`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":115042,"byte_end":115070,"line_start":896,"line_end":896,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":2146},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":115500,"byte_end":115519,"line_start":914,"line_end":914,"column_start":12,"column_end":31},"name":"LocalHistogramTimer","qualname":"::histogram::LocalHistogramTimer","value":"LocalHistogramTimer {  }","parent":null,"children":[{"krate":0,"index":2147},{"krate":0,"index":2148},{"krate":0,"index":2149}],"decl_id":null,"docs":" An unsync [`HistogramTimer`].\n","sig":null,"attributes":[{"value":"/ An unsync [`HistogramTimer`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":115350,"byte_end":115383,"line_start":911,"line_end":911,"column_start":1,"column_end":34}},{"value":"must_use =\n  \"Timer should be kept in a variable otherwise it cannot observe duration\"","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":115384,"byte_end":115471,"line_start":912,"line_end":912,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":743},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":116404,"byte_end":116420,"line_start":945,"line_end":945,"column_start":12,"column_end":28},"name":"observe_duration","qualname":"<LocalHistogramTimer>::observe_duration","value":"pub fn observe_duration(Self)","parent":null,"children":[],"decl_id":null,"docs":" Observe and record timer duration (in seconds).","sig":null,"attributes":[{"value":"/ Observe and record timer duration (in seconds).","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":116182,"byte_end":116233,"line_start":941,"line_end":941,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":116238,"byte_end":116241,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ It observes the floating-point number of seconds elapsed since the timer","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":116246,"byte_end":116322,"line_start":943,"line_end":943,"column_start":5,"column_end":81}},{"value":"/ started, and it records that value to the attached histogram.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":116327,"byte_end":116392,"line_start":944,"line_end":944,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":116708,"byte_end":116723,"line_start":953,"line_end":953,"column_start":12,"column_end":27},"name":"stop_and_record","qualname":"<LocalHistogramTimer>::stop_and_record","value":"pub fn stop_and_record(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Observe, record and return timer duration (in seconds).","sig":null,"attributes":[{"value":"/ Observe, record and return timer duration (in seconds).","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":116472,"byte_end":116531,"line_start":949,"line_end":949,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":116536,"byte_end":116539,"line_start":950,"line_end":950,"column_start":5,"column_end":8}},{"value":"/ It observes and returns a floating-point number for seconds elapsed since","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":116544,"byte_end":116621,"line_start":951,"line_end":951,"column_start":5,"column_end":82}},{"value":"/ the timer started, recording that value to the attached histogram.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":116626,"byte_end":116696,"line_start":952,"line_end":952,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":117010,"byte_end":117026,"line_start":962,"line_end":962,"column_start":12,"column_end":28},"name":"stop_and_discard","qualname":"<LocalHistogramTimer>::stop_and_discard","value":"pub fn stop_and_discard(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Observe and return timer duration (in seconds).","sig":null,"attributes":[{"value":"/ Observe and return timer duration (in seconds).","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":116808,"byte_end":116859,"line_start":958,"line_end":958,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":116864,"byte_end":116867,"line_start":959,"line_end":959,"column_start":5,"column_end":8}},{"value":"/ It returns a floating-point number of seconds elapsed since the timer started,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":116872,"byte_end":116954,"line_start":960,"line_end":960,"column_start":5,"column_end":87}},{"value":"/ without recording to any histogram.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":116959,"byte_end":116998,"line_start":961,"line_end":961,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":119888,"byte_end":119895,"line_start":1077,"line_end":1077,"column_start":12,"column_end":19},"name":"observe","qualname":"<LocalHistogram>::observe","value":"pub fn observe(&Self, f64)","parent":null,"children":[],"decl_id":null,"docs":" Add a single observation to the [`Histogram`].\n","sig":null,"attributes":[{"value":"/ Add a single observation to the [`Histogram`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":119826,"byte_end":119876,"line_start":1076,"line_end":1076,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":760},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":120034,"byte_end":120045,"line_start":1082,"line_end":1082,"column_start":12,"column_end":23},"name":"start_timer","qualname":"<LocalHistogram>::start_timer","value":"pub fn start_timer(&Self) -> LocalHistogramTimer","parent":null,"children":[],"decl_id":null,"docs":" Return a `LocalHistogramTimer` to track a duration.\n","sig":null,"attributes":[{"value":"/ Return a `LocalHistogramTimer` to track a duration.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":119967,"byte_end":120022,"line_start":1081,"line_end":1081,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":761},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":120453,"byte_end":120477,"line_start":1094,"line_end":1094,"column_start":12,"column_end":36},"name":"observe_closure_duration","qualname":"<LocalHistogram>::observe_closure_duration","value":"pub fn observe_closure_duration<F, T>(&Self, F) -> T where F: FnOnce() -> T","parent":null,"children":[],"decl_id":null,"docs":" Observe execution time of a closure, in second.\n","sig":null,"attributes":[{"value":"/ Observe execution time of a closure, in second.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":120390,"byte_end":120441,"line_start":1093,"line_end":1093,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":121103,"byte_end":121108,"line_start":1119,"line_end":1119,"column_start":12,"column_end":17},"name":"clear","qualname":"<LocalHistogram>::clear","value":"pub fn clear(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear the local metric.\n","sig":null,"attributes":[{"value":"/ Clear the local metric.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":121064,"byte_end":121091,"line_start":1118,"line_end":1118,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":765},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":121237,"byte_end":121242,"line_start":1124,"line_end":1124,"column_start":12,"column_end":17},"name":"flush","qualname":"<LocalHistogram>::flush","value":"pub fn flush(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Flush the local metrics to the [`Histogram`] metric.\n","sig":null,"attributes":[{"value":"/ Flush the local metrics to the [`Histogram`] metric.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":121169,"byte_end":121225,"line_start":1123,"line_end":1123,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":766},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":121359,"byte_end":121373,"line_start":1129,"line_end":1129,"column_start":12,"column_end":26},"name":"get_sample_sum","qualname":"<LocalHistogram>::get_sample_sum","value":"pub fn get_sample_sum(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Return accumulated sum of local samples.\n","sig":null,"attributes":[{"value":"/ Return accumulated sum of local samples.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":121303,"byte_end":121347,"line_start":1128,"line_end":1128,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":767},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":121487,"byte_end":121503,"line_start":1134,"line_end":1134,"column_start":12,"column_end":28},"name":"get_sample_count","qualname":"<LocalHistogram>::get_sample_count","value":"pub fn get_sample_count(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Return count of local samples.\n","sig":null,"attributes":[{"value":"/ Return count of local samples.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":121441,"byte_end":121475,"line_start":1133,"line_end":1133,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":2152},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":121884,"byte_end":121901,"line_start":1154,"line_end":1154,"column_start":12,"column_end":29},"name":"LocalHistogramVec","qualname":"::histogram::LocalHistogramVec","value":"LocalHistogramVec {  }","parent":null,"children":[{"krate":0,"index":2153},{"krate":0,"index":2154}],"decl_id":null,"docs":" An unsync [`HistogramVec`].\n","sig":null,"attributes":[{"value":"/ An unsync [`HistogramVec`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":121824,"byte_end":121855,"line_start":1152,"line_end":1152,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":774},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":122282,"byte_end":122299,"line_start":1167,"line_end":1167,"column_start":12,"column_end":29},"name":"with_label_values","qualname":"<LocalHistogramVec>::with_label_values","value":"pub fn with_label_values<'a>(&'a mut Self, &[&str]) -> &'a LocalHistogram","parent":null,"children":[],"decl_id":null,"docs":" Get a [`LocalHistogram`] by label values.\n See more [`MetricVec::with_label_values`].\n","sig":null,"attributes":[{"value":"/ Get a [`LocalHistogram`] by label values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":122174,"byte_end":122219,"line_start":1165,"line_end":1165,"column_start":5,"column_end":50}},{"value":"/ See more [`MetricVec::with_label_values`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":122224,"byte_end":122270,"line_start":1166,"line_end":1166,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":777},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":122686,"byte_end":122705,"line_start":1177,"line_end":1177,"column_start":12,"column_end":31},"name":"remove_label_values","qualname":"<LocalHistogramVec>::remove_label_values","value":"pub fn remove_label_values(&mut Self, &[&str]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Remove a [`LocalHistogram`] by label values.\n See more [`MetricVec::remove_label_values`].\n","sig":null,"attributes":[{"value":"/ Remove a [`LocalHistogram`] by label values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":122573,"byte_end":122621,"line_start":1175,"line_end":1175,"column_start":5,"column_end":53}},{"value":"/ See more [`MetricVec::remove_label_values`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":122626,"byte_end":122674,"line_start":1176,"line_end":1176,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":778},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":122965,"byte_end":122970,"line_start":1184,"line_end":1184,"column_start":12,"column_end":17},"name":"flush","qualname":"<LocalHistogramVec>::flush","value":"pub fn flush(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Flush the local metrics to the [`HistogramVec`] metric.\n","sig":null,"attributes":[{"value":"/ Flush the local metrics to the [`HistogramVec`] metric.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":122894,"byte_end":122953,"line_start":1183,"line_end":1183,"column_start":5,"column_end":64}}]},{"kind":"Trait","id":{"krate":0,"index":824},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":136146,"byte_end":136155,"line_start":16,"line_end":16,"column_start":11,"column_end":20},"name":"Collector","qualname":"::metrics::Collector","value":"Collector: Sync + Send","parent":null,"children":[{"krate":0,"index":825},{"krate":0,"index":826}],"decl_id":null,"docs":" An interface for collecting metrics.\n","sig":null,"attributes":[{"value":"/ An interface for collecting metrics.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":136095,"byte_end":136135,"line_start":15,"line_end":15,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":825},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":136218,"byte_end":136222,"line_start":18,"line_end":18,"column_start":8,"column_end":12},"name":"desc","qualname":"::metrics::Collector::desc","value":"pub fn desc(&Self) -> Vec<&Desc>","parent":{"krate":0,"index":824},"children":[],"decl_id":null,"docs":" Return descriptors for metrics.\n","sig":null,"attributes":[{"value":"/ Return descriptors for metrics.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":136175,"byte_end":136210,"line_start":17,"line_end":17,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":136278,"byte_end":136285,"line_start":21,"line_end":21,"column_start":8,"column_end":15},"name":"collect","qualname":"::metrics::Collector::collect","value":"pub fn collect(&Self) -> Vec<proto::MetricFamily>","parent":{"krate":0,"index":824},"children":[],"decl_id":null,"docs":" Collect metrics.\n","sig":null,"attributes":[{"value":"/ Collect metrics.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":136250,"byte_end":136270,"line_start":20,"line_end":20,"column_start":5,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":827},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":136430,"byte_end":136436,"line_start":25,"line_end":25,"column_start":11,"column_end":17},"name":"Metric","qualname":"::metrics::Metric","value":"Metric: Sync + Send + Clone","parent":null,"children":[{"krate":0,"index":828}],"decl_id":null,"docs":" An interface models a single sample value with its meta data being exported to Prometheus.\n","sig":null,"attributes":[{"value":"/ An interface models a single sample value with its meta data being exported to Prometheus.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":136325,"byte_end":136419,"line_start":24,"line_end":24,"column_start":1,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":828},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":136503,"byte_end":136509,"line_start":27,"line_end":27,"column_start":8,"column_end":14},"name":"metric","qualname":"::metrics::Metric::metric","value":"pub fn metric(&Self) -> proto::Metric","parent":{"krate":0,"index":827},"children":[],"decl_id":null,"docs":" Return the protocol Metric.\n","sig":null,"attributes":[{"value":"/ Return the protocol Metric.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":136464,"byte_end":136495,"line_start":26,"line_end":26,"column_start":5,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":829},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":136623,"byte_end":136634,"line_start":31,"line_end":31,"column_start":11,"column_end":22},"name":"LocalMetric","qualname":"::metrics::LocalMetric","value":"LocalMetric","parent":null,"children":[{"krate":0,"index":830}],"decl_id":null,"docs":" An interface models a Metric only usable in single thread environment.\n","sig":null,"attributes":[{"value":"/ An interface models a Metric only usable in single thread environment.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":136538,"byte_end":136612,"line_start":30,"line_end":30,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":830},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":136695,"byte_end":136700,"line_start":33,"line_end":33,"column_start":8,"column_end":13},"name":"flush","qualname":"::metrics::LocalMetric::flush","value":"pub fn flush(&Self)","parent":{"krate":0,"index":829},"children":[],"decl_id":null,"docs":" Flush the local metrics to the global one.\n","sig":null,"attributes":[{"value":"/ Flush the local metrics to the global one.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":136641,"byte_end":136687,"line_start":32,"line_end":32,"column_start":5,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":831},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":136870,"byte_end":136878,"line_start":38,"line_end":38,"column_start":11,"column_end":19},"name":"MayFlush","qualname":"::metrics::MayFlush","value":"MayFlush: LocalMetric","parent":null,"children":[{"krate":0,"index":832},{"krate":0,"index":833}],"decl_id":null,"docs":" An interface models a LocalMetric with try to flush functions.\n Not intend to be implemented by user manually, used in macro generated code.\n","sig":null,"attributes":[{"value":"/ An interface models a LocalMetric with try to flush functions.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":136712,"byte_end":136778,"line_start":36,"line_end":36,"column_start":1,"column_end":67}},{"value":"/ Not intend to be implemented by user manually, used in macro generated code.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":136779,"byte_end":136859,"line_start":37,"line_end":37,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":832},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":137049,"byte_end":137058,"line_start":41,"line_end":41,"column_start":8,"column_end":17},"name":"try_flush","qualname":"::metrics::MayFlush::try_flush","value":"pub fn try_flush(&Self, &Cell<u64>, u64)","parent":{"krate":0,"index":831},"children":[],"decl_id":null,"docs":" If the LocalMetric is already flushed in last `flush_interval_sec` seconds, then do nothing,\n else flush and update last flush time.\n","sig":null,"attributes":[{"value":"/ If the LocalMetric is already flushed in last `flush_interval_sec` seconds, then do nothing,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":136898,"byte_end":136994,"line_start":39,"line_end":39,"column_start":5,"column_end":101}},{"value":"/ else flush and update last flush time.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":136999,"byte_end":137041,"line_start":40,"line_end":40,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":833},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":137412,"byte_end":137421,"line_start":52,"line_end":52,"column_start":8,"column_end":17},"name":"may_flush","qualname":"::metrics::MayFlush::may_flush","value":"pub fn may_flush(&Self)","parent":{"krate":0,"index":831},"children":[],"decl_id":null,"docs":" Open to implementation to fill try_flush parameters\n","sig":null,"attributes":[{"value":"/ Open to implementation to fill try_flush parameters","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":137349,"byte_end":137404,"line_start":51,"line_end":51,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":2157},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":137542,"byte_end":137546,"line_start":57,"line_end":57,"column_start":12,"column_end":16},"name":"Opts","qualname":"::metrics::Opts","value":"Opts { namespace, subsystem, name, help, const_labels, variable_labels }","parent":null,"children":[{"krate":0,"index":2158},{"krate":0,"index":2159},{"krate":0,"index":2160},{"krate":0,"index":2161},{"krate":0,"index":2162},{"krate":0,"index":2163}],"decl_id":null,"docs":" A struct that bundles the options for creating most [`Metric`] types.\n","sig":null,"attributes":[{"value":"/ A struct that bundles the options for creating most [`Metric`] types.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":137433,"byte_end":137506,"line_start":55,"line_end":55,"column_start":1,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":2158},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":137895,"byte_end":137904,"line_start":63,"line_end":63,"column_start":9,"column_end":18},"name":"namespace","qualname":"::metrics::Opts::namespace","value":"std::string::String","parent":{"krate":0,"index":2157},"children":[],"decl_id":null,"docs":" namespace, subsystem, and name are components of the fully-qualified\n name of the [`Metric`] (created by joining these components with\n \"_\"). Only Name is mandatory, the others merely help structuring the\n name. Note that the fully-qualified name of the metric must be a\n valid Prometheus metric name.\n","sig":null,"attributes":[{"value":"/ namespace, subsystem, and name are components of the fully-qualified","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":137553,"byte_end":137625,"line_start":58,"line_end":58,"column_start":5,"column_end":77}},{"value":"/ name of the [`Metric`] (created by joining these components with","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":137630,"byte_end":137698,"line_start":59,"line_end":59,"column_start":5,"column_end":73}},{"value":"/ \"_\"). Only Name is mandatory, the others merely help structuring the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":137703,"byte_end":137775,"line_start":60,"line_end":60,"column_start":5,"column_end":77}},{"value":"/ name. Note that the fully-qualified name of the metric must be a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":137780,"byte_end":137848,"line_start":61,"line_end":61,"column_start":5,"column_end":73}},{"value":"/ valid Prometheus metric name.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":137853,"byte_end":137886,"line_start":62,"line_end":62,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":2159},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":138260,"byte_end":138269,"line_start":69,"line_end":69,"column_start":9,"column_end":18},"name":"subsystem","qualname":"::metrics::Opts::subsystem","value":"std::string::String","parent":{"krate":0,"index":2157},"children":[],"decl_id":null,"docs":" namespace, subsystem, and name are components of the fully-qualified\n name of the [`Metric`] (created by joining these components with\n \"_\"). Only Name is mandatory, the others merely help structuring the\n name. Note that the fully-qualified name of the metric must be a\n valid Prometheus metric name.\n","sig":null,"attributes":[{"value":"/ namespace, subsystem, and name are components of the fully-qualified","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":137918,"byte_end":137990,"line_start":64,"line_end":64,"column_start":5,"column_end":77}},{"value":"/ name of the [`Metric`] (created by joining these components with","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":137995,"byte_end":138063,"line_start":65,"line_end":65,"column_start":5,"column_end":73}},{"value":"/ \"_\"). Only Name is mandatory, the others merely help structuring the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":138068,"byte_end":138140,"line_start":66,"line_end":66,"column_start":5,"column_end":77}},{"value":"/ name. Note that the fully-qualified name of the metric must be a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":138145,"byte_end":138213,"line_start":67,"line_end":67,"column_start":5,"column_end":73}},{"value":"/ valid Prometheus metric name.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":138218,"byte_end":138251,"line_start":68,"line_end":68,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":2160},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":138625,"byte_end":138629,"line_start":75,"line_end":75,"column_start":9,"column_end":13},"name":"name","qualname":"::metrics::Opts::name","value":"std::string::String","parent":{"krate":0,"index":2157},"children":[],"decl_id":null,"docs":" namespace, subsystem, and name are components of the fully-qualified\n name of the [`Metric`] (created by joining these components with\n \"_\"). Only Name is mandatory, the others merely help structuring the\n name. Note that the fully-qualified name of the metric must be a\n valid Prometheus metric name.\n","sig":null,"attributes":[{"value":"/ namespace, subsystem, and name are components of the fully-qualified","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":138283,"byte_end":138355,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/ name of the [`Metric`] (created by joining these components with","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":138360,"byte_end":138428,"line_start":71,"line_end":71,"column_start":5,"column_end":73}},{"value":"/ \"_\"). Only Name is mandatory, the others merely help structuring the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":138433,"byte_end":138505,"line_start":72,"line_end":72,"column_start":5,"column_end":77}},{"value":"/ name. Note that the fully-qualified name of the metric must be a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":138510,"byte_end":138578,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/ valid Prometheus metric name.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":138583,"byte_end":138616,"line_start":74,"line_end":74,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":2161},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":138811,"byte_end":138815,"line_start":81,"line_end":81,"column_start":9,"column_end":13},"name":"help","qualname":"::metrics::Opts::help","value":"std::string::String","parent":{"krate":0,"index":2157},"children":[],"decl_id":null,"docs":" help provides information about this metric. Mandatory!","sig":null,"attributes":[{"value":"/ help provides information about this metric. Mandatory!","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":138644,"byte_end":138703,"line_start":77,"line_end":77,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":138708,"byte_end":138711,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Metrics with the same fully-qualified name must have the same Help","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":138716,"byte_end":138786,"line_start":79,"line_end":79,"column_start":5,"column_end":75}},{"value":"/ string.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":138791,"byte_end":138802,"line_start":80,"line_end":80,"column_start":5,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":2162},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":139913,"byte_end":139925,"line_start":101,"line_end":101,"column_start":9,"column_end":21},"name":"const_labels","qualname":"::metrics::Opts::const_labels","value":"std::collections::HashMap<std::string::String, std::string::String>","parent":{"krate":0,"index":2157},"children":[],"decl_id":null,"docs":" const_labels are used to attach fixed labels to this metric. Metrics\n with the same fully-qualified name must have the same label names in\n their ConstLabels.","sig":null,"attributes":[{"value":"/ const_labels are used to attach fixed labels to this metric. Metrics","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":138830,"byte_end":138902,"line_start":83,"line_end":83,"column_start":5,"column_end":77}},{"value":"/ with the same fully-qualified name must have the same label names in","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":138907,"byte_end":138979,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"/ their ConstLabels.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":138984,"byte_end":139006,"line_start":85,"line_end":85,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":139011,"byte_end":139014,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Note that in most cases, labels have a value that varies during the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":139019,"byte_end":139090,"line_start":87,"line_end":87,"column_start":5,"column_end":76}},{"value":"/ lifetime of a process. Those labels are usually managed with a metric","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":139095,"byte_end":139168,"line_start":88,"line_end":88,"column_start":5,"column_end":78}},{"value":"/ vector collector (like CounterVec, GaugeVec). ConstLabels","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":139173,"byte_end":139234,"line_start":89,"line_end":89,"column_start":5,"column_end":66}},{"value":"/ serve only special purposes. One is for the special case where the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":139239,"byte_end":139309,"line_start":90,"line_end":90,"column_start":5,"column_end":75}},{"value":"/ value of a label does not change during the lifetime of a process,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":139314,"byte_end":139384,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ e.g. if the revision of the running binary is put into a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":139389,"byte_end":139449,"line_start":92,"line_end":92,"column_start":5,"column_end":65}},{"value":"/ label. Another, more advanced purpose is if more than one [`Collector`]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":139454,"byte_end":139529,"line_start":93,"line_end":93,"column_start":5,"column_end":80}},{"value":"/ needs to collect Metrics with the same fully-qualified name. In that","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":139534,"byte_end":139606,"line_start":94,"line_end":94,"column_start":5,"column_end":77}},{"value":"/ case, those Metrics must differ in the values of their","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":139611,"byte_end":139669,"line_start":95,"line_end":95,"column_start":5,"column_end":63}},{"value":"/ ConstLabels. See the [`Collector`] examples.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":139674,"byte_end":139722,"line_start":96,"line_end":96,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":139727,"byte_end":139730,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ If the value of a label never changes (not even between binaries),","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":139735,"byte_end":139805,"line_start":98,"line_end":98,"column_start":5,"column_end":75}},{"value":"/ that label most likely should not be a label at all (but part of the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":139810,"byte_end":139882,"line_start":99,"line_end":99,"column_start":5,"column_end":77}},{"value":"/ metric name).","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":139887,"byte_end":139904,"line_start":100,"line_end":100,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":2163},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":140295,"byte_end":140310,"line_start":109,"line_end":109,"column_start":9,"column_end":24},"name":"variable_labels","qualname":"::metrics::Opts::variable_labels","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":2157},"children":[],"decl_id":null,"docs":" variable_labels contains names of labels for which the metric maintains\n variable values. Metrics with the same fully-qualified name must have\n the same label names in their variable_labels.","sig":null,"attributes":[{"value":"/ variable_labels contains names of labels for which the metric maintains","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":139957,"byte_end":140032,"line_start":103,"line_end":103,"column_start":5,"column_end":80}},{"value":"/ variable values. Metrics with the same fully-qualified name must have","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":140037,"byte_end":140110,"line_start":104,"line_end":104,"column_start":5,"column_end":78}},{"value":"/ the same label names in their variable_labels.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":140115,"byte_end":140165,"line_start":105,"line_end":105,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":140170,"byte_end":140173,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ Note that variable_labels is used in `MetricVec`. To create a single","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":140178,"byte_end":140250,"line_start":107,"line_end":107,"column_start":5,"column_end":77}},{"value":"/ metric must leave it empty.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":140255,"byte_end":140286,"line_start":108,"line_end":108,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":835},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":140420,"byte_end":140423,"line_start":114,"line_end":114,"column_start":12,"column_end":15},"name":"new","qualname":"<Opts>::new","value":"pub fn new<S1: Into<String>, S2: Into<String>>(S1, S2) -> Opts","parent":null,"children":[],"decl_id":null,"docs":" `new` creates the Opts with the `name` and `help` arguments.\n","sig":null,"attributes":[{"value":"/ `new` creates the Opts with the `name` and `help` arguments.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":140344,"byte_end":140408,"line_start":113,"line_end":113,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":838},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":140794,"byte_end":140803,"line_start":126,"line_end":126,"column_start":12,"column_end":21},"name":"namespace","qualname":"<Opts>::namespace","value":"pub fn namespace<S: Into<String>>(Self, S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" `namespace` sets the namespace.\n","sig":null,"attributes":[{"value":"/ `namespace` sets the namespace.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":140747,"byte_end":140782,"line_start":125,"line_end":125,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":140970,"byte_end":140979,"line_start":132,"line_end":132,"column_start":12,"column_end":21},"name":"subsystem","qualname":"<Opts>::subsystem","value":"pub fn subsystem<S: Into<String>>(Self, S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" `subsystem` sets the sub system.\n","sig":null,"attributes":[{"value":"/ `subsystem` sets the sub system.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":140922,"byte_end":140958,"line_start":131,"line_end":131,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":842},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":141151,"byte_end":141163,"line_start":138,"line_end":138,"column_start":12,"column_end":24},"name":"const_labels","qualname":"<Opts>::const_labels","value":"pub fn const_labels(Self, HashMap<String, String>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" `const_labels` sets the const labels.\n","sig":null,"attributes":[{"value":"/ `const_labels` sets the const labels.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":141098,"byte_end":141139,"line_start":137,"line_end":137,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":843},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":141338,"byte_end":141349,"line_start":144,"line_end":144,"column_start":12,"column_end":23},"name":"const_label","qualname":"<Opts>::const_label","value":"pub fn const_label<S1: Into<String>, S2: Into<String>>(Self, S1, S2) -> Self","parent":null,"children":[],"decl_id":null,"docs":" `const_label` adds a const label.\n","sig":null,"attributes":[{"value":"/ `const_label` adds a const label.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":141289,"byte_end":141326,"line_start":143,"line_end":143,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":846},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":141571,"byte_end":141586,"line_start":150,"line_end":150,"column_start":12,"column_end":27},"name":"variable_labels","qualname":"<Opts>::variable_labels","value":"pub fn variable_labels(Self, Vec<String>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" `variable_labels` sets the variable labels.\n","sig":null,"attributes":[{"value":"/ `variable_labels` sets the variable labels.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":141512,"byte_end":141559,"line_start":149,"line_end":149,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":847},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":141764,"byte_end":141778,"line_start":156,"line_end":156,"column_start":12,"column_end":26},"name":"variable_label","qualname":"<Opts>::variable_label","value":"pub fn variable_label<S: Into<String>>(Self, S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" `variable_label` adds a variable label.\n","sig":null,"attributes":[{"value":"/ `variable_label` adds a variable label.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":141709,"byte_end":141752,"line_start":155,"line_end":155,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":849},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":141943,"byte_end":141950,"line_start":162,"line_end":162,"column_start":12,"column_end":19},"name":"fq_name","qualname":"<Opts>::fq_name","value":"pub fn fq_name(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" `fq_name` returns the fq_name.\n","sig":null,"attributes":[{"value":"/ `fq_name` returns the fq_name.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":141897,"byte_end":141931,"line_start":161,"line_end":161,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":2168},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\registry.rs","byte_start":152959,"byte_end":152967,"line_start":217,"line_end":217,"column_start":12,"column_end":20},"name":"Registry","qualname":"::registry::Registry","value":"Registry {  }","parent":null,"children":[{"krate":0,"index":2169}],"decl_id":null,"docs":" A struct for registering Prometheus collectors, collecting their metrics, and gathering\n them into `MetricFamilies` for exposition.\n","sig":null,"attributes":[{"value":"/ A struct for registering Prometheus collectors, collecting their metrics, and gathering","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\registry.rs","byte_start":152785,"byte_end":152876,"line_start":214,"line_end":214,"column_start":1,"column_end":92}},{"value":"/ them into `MetricFamilies` for exposition.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\registry.rs","byte_start":152877,"byte_end":152923,"line_start":215,"line_end":215,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\registry.rs","byte_start":153433,"byte_end":153436,"line_start":239,"line_end":239,"column_start":12,"column_end":15},"name":"new","qualname":"<Registry>::new","value":"pub fn new() -> Registry","parent":null,"children":[],"decl_id":null,"docs":" `new` creates a Registry.\n","sig":null,"attributes":[{"value":"/ `new` creates a Registry.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\registry.rs","byte_start":153392,"byte_end":153421,"line_start":238,"line_end":238,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":914},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\registry.rs","byte_start":153570,"byte_end":153580,"line_start":244,"line_end":244,"column_start":12,"column_end":22},"name":"new_custom","qualname":"<Registry>::new_custom","value":"pub fn new_custom(Option<String>, Option<HashMap<String, String>>)\n-> Result<Registry>","parent":null,"children":[],"decl_id":null,"docs":" Create a new registry, with optional custom prefix and labels.\n","sig":null,"attributes":[{"value":"/ Create a new registry, with optional custom prefix and labels.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\registry.rs","byte_start":153492,"byte_end":153558,"line_start":243,"line_end":243,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":915},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\registry.rs","byte_start":154690,"byte_end":154698,"line_start":272,"line_end":272,"column_start":12,"column_end":20},"name":"register","qualname":"<Registry>::register","value":"pub fn register(&Self, Box<dyn Collector>) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" `register` registers a new [`Collector`] to be included in metrics\n collection. It returns an error if the descriptors provided by the\n [`Collector`] are invalid or if they — in combination with descriptors of\n already registered Collectors — do not fulfill the consistency and\n uniqueness criteria described in the documentation of [`Desc`](crate::core::Desc).","sig":null,"attributes":[{"value":"/ `register` registers a new [`Collector`] to be included in metrics","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\registry.rs","byte_start":154074,"byte_end":154144,"line_start":263,"line_end":263,"column_start":5,"column_end":75}},{"value":"/ collection. It returns an error if the descriptors provided by the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\registry.rs","byte_start":154149,"byte_end":154219,"line_start":264,"line_end":264,"column_start":5,"column_end":75}},{"value":"/ [`Collector`] are invalid or if they — in combination with descriptors of","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\registry.rs","byte_start":154224,"byte_end":154303,"line_start":265,"line_end":265,"column_start":5,"column_end":82}},{"value":"/ already registered Collectors — do not fulfill the consistency and","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\registry.rs","byte_start":154308,"byte_end":154380,"line_start":266,"line_end":266,"column_start":5,"column_end":75}},{"value":"/ uniqueness criteria described in the documentation of [`Desc`](crate::core::Desc).","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\registry.rs","byte_start":154385,"byte_end":154471,"line_start":267,"line_end":267,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\registry.rs","byte_start":154476,"byte_end":154479,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ If the provided [`Collector`] is equal to a [`Collector`] already registered","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\registry.rs","byte_start":154484,"byte_end":154564,"line_start":269,"line_end":269,"column_start":5,"column_end":85}},{"value":"/ (which includes the case of re-registering the same [`Collector`]), the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\registry.rs","byte_start":154569,"byte_end":154644,"line_start":270,"line_end":270,"column_start":5,"column_end":80}},{"value":"/ AlreadyReg error returns.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\registry.rs","byte_start":154649,"byte_end":154678,"line_start":271,"line_end":271,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":916},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\registry.rs","byte_start":155098,"byte_end":155108,"line_start":280,"line_end":280,"column_start":12,"column_end":22},"name":"unregister","qualname":"<Registry>::unregister","value":"pub fn unregister(&Self, Box<dyn Collector>) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" `unregister` unregisters the [`Collector`] that equals the [`Collector`] passed\n in as an argument.  (Two Collectors are considered equal if their\n Describe method yields the same set of descriptors.) The function\n returns error when the [`Collector`] is not registered.\n","sig":null,"attributes":[{"value":"/ `unregister` unregisters the [`Collector`] that equals the [`Collector`] passed","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\registry.rs","byte_start":154791,"byte_end":154874,"line_start":276,"line_end":276,"column_start":5,"column_end":88}},{"value":"/ in as an argument.  (Two Collectors are considered equal if their","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\registry.rs","byte_start":154879,"byte_end":154948,"line_start":277,"line_end":277,"column_start":5,"column_end":74}},{"value":"/ Describe method yields the same set of descriptors.) The function","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\registry.rs","byte_start":154953,"byte_end":155022,"line_start":278,"line_end":278,"column_start":5,"column_end":74}},{"value":"/ returns error when the [`Collector`] is not registered.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\registry.rs","byte_start":155027,"byte_end":155086,"line_start":279,"line_end":279,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":917},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\registry.rs","byte_start":155401,"byte_end":155407,"line_start":287,"line_end":287,"column_start":12,"column_end":18},"name":"gather","qualname":"<Registry>::gather","value":"pub fn gather(&Self) -> Vec<proto::MetricFamily>","parent":null,"children":[],"decl_id":null,"docs":" `gather` calls the Collect method of the registered Collectors and then\n gathers the collected metrics into a lexicographically sorted slice\n of MetricFamily protobufs.\n","sig":null,"attributes":[{"value":"/ `gather` calls the Collect method of the registered Collectors and then","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\registry.rs","byte_start":155203,"byte_end":155278,"line_start":284,"line_end":284,"column_start":5,"column_end":80}},{"value":"/ gathers the collected metrics into a lexicographically sorted slice","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\registry.rs","byte_start":155283,"byte_end":155354,"line_start":285,"line_end":285,"column_start":5,"column_end":76}},{"value":"/ of MetricFamily protobufs.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\registry.rs","byte_start":155359,"byte_end":155389,"line_start":286,"line_end":286,"column_start":5,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":918},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\registry.rs","byte_start":156240,"byte_end":156256,"line_start":320,"line_end":320,"column_start":8,"column_end":24},"name":"default_registry","qualname":"::registry::default_registry","value":"pub fn default_registry() -> &'static Registry","parent":null,"children":[],"decl_id":null,"docs":" Default registry (global static).\n","sig":null,"attributes":[{"value":"/ Default registry (global static).","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\registry.rs","byte_start":156195,"byte_end":156232,"line_start":319,"line_end":319,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":919},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\registry.rs","byte_start":156726,"byte_end":156734,"line_start":330,"line_end":330,"column_start":8,"column_end":16},"name":"register","qualname":"::registry::register","value":"pub fn register(Box<dyn Collector>) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Registers a new [`Collector`] to be included in metrics collection. It\n returns an error if the descriptors provided by the [`Collector`] are invalid or\n if they - in combination with descriptors of already registered Collectors -\n do not fulfill the consistency and uniqueness criteria described in the\n [`Desc`](crate::core::Desc) documentation.\n","sig":null,"attributes":[{"value":"/ Registers a new [`Collector`] to be included in metrics collection. It","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\registry.rs","byte_start":156355,"byte_end":156429,"line_start":325,"line_end":325,"column_start":1,"column_end":75}},{"value":"/ returns an error if the descriptors provided by the [`Collector`] are invalid or","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\registry.rs","byte_start":156430,"byte_end":156514,"line_start":326,"line_end":326,"column_start":1,"column_end":85}},{"value":"/ if they - in combination with descriptors of already registered Collectors -","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\registry.rs","byte_start":156515,"byte_end":156595,"line_start":327,"line_end":327,"column_start":1,"column_end":81}},{"value":"/ do not fulfill the consistency and uniqueness criteria described in the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\registry.rs","byte_start":156596,"byte_end":156671,"line_start":328,"line_end":328,"column_start":1,"column_end":76}},{"value":"/ [`Desc`](crate::core::Desc) documentation.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\registry.rs","byte_start":156672,"byte_end":156718,"line_start":329,"line_end":329,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":920},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\registry.rs","byte_start":157087,"byte_end":157097,"line_start":338,"line_end":338,"column_start":8,"column_end":18},"name":"unregister","qualname":"::registry::unregister","value":"pub fn unregister(Box<dyn Collector>) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Unregisters the [`Collector`] that equals the [`Collector`] passed in as\n an argument. (Two Collectors are considered equal if their Describe method\n yields the same set of descriptors.) The function returns an error if a\n [`Collector`] was not registered.\n","sig":null,"attributes":[{"value":"/ Unregisters the [`Collector`] that equals the [`Collector`] passed in as","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\registry.rs","byte_start":156810,"byte_end":156886,"line_start":334,"line_end":334,"column_start":1,"column_end":77}},{"value":"/ an argument. (Two Collectors are considered equal if their Describe method","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\registry.rs","byte_start":156887,"byte_end":156965,"line_start":335,"line_end":335,"column_start":1,"column_end":79}},{"value":"/ yields the same set of descriptors.) The function returns an error if a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\registry.rs","byte_start":156966,"byte_end":157041,"line_start":336,"line_end":336,"column_start":1,"column_end":76}},{"value":"/ [`Collector`] was not registered.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\registry.rs","byte_start":157042,"byte_end":157079,"line_start":337,"line_end":337,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":921},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\registry.rs","byte_start":157235,"byte_end":157241,"line_start":343,"line_end":343,"column_start":8,"column_end":14},"name":"gather","qualname":"::registry::gather","value":"pub fn gather() -> Vec<proto::MetricFamily>","parent":null,"children":[],"decl_id":null,"docs":" Return all `MetricFamily` of `DEFAULT_REGISTRY`.\n","sig":null,"attributes":[{"value":"/ Return all `MetricFamily` of `DEFAULT_REGISTRY`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\registry.rs","byte_start":157175,"byte_end":157227,"line_start":342,"line_end":342,"column_start":1,"column_end":53}}]},{"kind":"Trait","id":{"krate":0,"index":1022},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":169704,"byte_end":169720,"line_start":17,"line_end":17,"column_start":11,"column_end":27},"name":"MetricVecBuilder","qualname":"::vec::MetricVecBuilder","value":"MetricVecBuilder: Send + Sync + Clone","parent":null,"children":[{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025}],"decl_id":null,"docs":" An interface for building a metric vector.\n","sig":null,"attributes":[{"value":"/ An interface for building a metric vector.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":169647,"byte_end":169693,"line_start":16,"line_end":16,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":1023},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":169794,"byte_end":169795,"line_start":19,"line_end":19,"column_start":10,"column_end":11},"name":"M","qualname":"::vec::MetricVecBuilder::M","value":"type M: Metric;","parent":{"krate":0,"index":1022},"children":[],"decl_id":null,"docs":" The associated Metric collected.\n","sig":null,"attributes":[{"value":"/ The associated Metric collected.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":169748,"byte_end":169784,"line_start":18,"line_end":18,"column_start":5,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":1024},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":169848,"byte_end":169849,"line_start":21,"line_end":21,"column_start":10,"column_end":11},"name":"P","qualname":"::vec::MetricVecBuilder::P","value":"type P: Describer + Sync + Send + Clone;","parent":{"krate":0,"index":1022},"children":[],"decl_id":null,"docs":" The associated describer.\n","sig":null,"attributes":[{"value":"/ The associated describer.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":169809,"byte_end":169838,"line_start":20,"line_end":20,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1025},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":169971,"byte_end":169976,"line_start":24,"line_end":24,"column_start":8,"column_end":13},"name":"build","qualname":"::vec::MetricVecBuilder::build","value":"pub fn build(&Self, &Self::P, &[&str]) -> Result<Self::M>","parent":{"krate":0,"index":1022},"children":[],"decl_id":null,"docs":" `build` builds a [`Metric`] with option and corresponding label names.\n","sig":null,"attributes":[{"value":"/ `build` builds a [`Metric`] with option and corresponding label names.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":169889,"byte_end":169963,"line_start":23,"line_end":23,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":2221},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":174704,"byte_end":174713,"line_start":175,"line_end":175,"column_start":12,"column_end":21},"name":"MetricVec","qualname":"::vec::MetricVec","value":"MetricVec {  }","parent":null,"children":[{"krate":0,"index":2223}],"decl_id":null,"docs":" A [`Collector`] to bundle metrics of the same name that\n differ in their label values. It is usually not used directly but as a\n building block for implementations of vectors of a given metric\n type. [`GaugeVec`](crate::GaugeVec) and [`CounterVec`](crate::CounterVec)\n are examples already provided in this package.\n","sig":null,"attributes":[{"value":"/ A [`Collector`] to bundle metrics of the same name that","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":174344,"byte_end":174403,"line_start":169,"line_end":169,"column_start":1,"column_end":60}},{"value":"/ differ in their label values. It is usually not used directly but as a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":174404,"byte_end":174478,"line_start":170,"line_end":170,"column_start":1,"column_end":75}},{"value":"/ building block for implementations of vectors of a given metric","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":174479,"byte_end":174546,"line_start":171,"line_end":171,"column_start":1,"column_end":68}},{"value":"/ type. [`GaugeVec`](crate::GaugeVec) and [`CounterVec`](crate::CounterVec)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":174547,"byte_end":174624,"line_start":172,"line_end":172,"column_start":1,"column_end":78}},{"value":"/ are examples already provided in this package.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":174625,"byte_end":174675,"line_start":173,"line_end":173,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1044},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":175142,"byte_end":175148,"line_start":188,"line_end":188,"column_start":12,"column_end":18},"name":"create","qualname":"<MetricVec<T>>::create","value":"pub fn create(MetricType, T, T::P) -> Result<MetricVec<T>>","parent":null,"children":[],"decl_id":null,"docs":" `create` creates a MetricVec with description `desc`, a metric type `metric_type` and\n a MetricVecBuilder `new_metric`.\n","sig":null,"attributes":[{"value":"/ `create` creates a MetricVec with description `desc`, a metric type `metric_type` and","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":175000,"byte_end":175089,"line_start":186,"line_end":186,"column_start":5,"column_end":94}},{"value":"/ a MetricVecBuilder `new_metric`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":175094,"byte_end":175130,"line_start":187,"line_end":187,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1045},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":177012,"byte_end":177040,"line_start":224,"line_end":224,"column_start":12,"column_end":40},"name":"get_metric_with_label_values","qualname":"<MetricVec<T>>::get_metric_with_label_values","value":"pub fn get_metric_with_label_values(&Self, &[&str]) -> Result<T::M>","parent":null,"children":[],"decl_id":null,"docs":" `get_metric_with_label_values` returns the [`Metric`] for the given slice\n of label values (same order as the VariableLabels in Desc). If that combination of\n label values is accessed for the first time, a new [`Metric`] is created.","sig":null,"attributes":[{"value":"/ `get_metric_with_label_values` returns the [`Metric`] for the given slice","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":175496,"byte_end":175573,"line_start":201,"line_end":201,"column_start":5,"column_end":82}},{"value":"/ of label values (same order as the VariableLabels in Desc). If that combination of","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":175578,"byte_end":175664,"line_start":202,"line_end":202,"column_start":5,"column_end":91}},{"value":"/ label values is accessed for the first time, a new [`Metric`] is created.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":175669,"byte_end":175746,"line_start":203,"line_end":203,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":175751,"byte_end":175754,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ It is possible to call this method without using the returned [`Metric`]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":175759,"byte_end":175835,"line_start":205,"line_end":205,"column_start":5,"column_end":81}},{"value":"/ to only create the new [`Metric`] but leave it at its start value (e.g. a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":175840,"byte_end":175917,"line_start":206,"line_end":206,"column_start":5,"column_end":82}},{"value":"/ [`Histogram`](crate::Histogram) without any observations).","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":175922,"byte_end":175984,"line_start":207,"line_end":207,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":175989,"byte_end":175992,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ Keeping the [`Metric`] for later use is possible (and should be considered","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":175997,"byte_end":176075,"line_start":209,"line_end":209,"column_start":5,"column_end":83}},{"value":"/ if performance is critical), but keep in mind that Reset, DeleteLabelValues and Delete can","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":176080,"byte_end":176174,"line_start":210,"line_end":210,"column_start":5,"column_end":99}},{"value":"/ be used to delete the [`Metric`] from the MetricVec. In that case, the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":176179,"byte_end":176253,"line_start":211,"line_end":211,"column_start":5,"column_end":79}},{"value":"/ [`Metric`] will still exist, but it will not be exported anymore, even if a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":176258,"byte_end":176337,"line_start":212,"line_end":212,"column_start":5,"column_end":84}},{"value":"/ [`Metric`] with the same label values is created later. See also the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":176342,"byte_end":176414,"line_start":213,"line_end":213,"column_start":5,"column_end":77}},{"value":"/ CounterVec example.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":176419,"byte_end":176442,"line_start":214,"line_end":214,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":176447,"byte_end":176450,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ An error is returned if the number of label values is not the same as the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":176455,"byte_end":176532,"line_start":216,"line_end":216,"column_start":5,"column_end":82}},{"value":"/ number of VariableLabels in Desc.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":176537,"byte_end":176574,"line_start":217,"line_end":217,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":176579,"byte_end":176582,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ Note that for more than one label value, this method is prone to mistakes","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":176587,"byte_end":176664,"line_start":219,"line_end":219,"column_start":5,"column_end":82}},{"value":"/ caused by an incorrect order of arguments. Consider get_metric_with(labels) as","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":176669,"byte_end":176751,"line_start":220,"line_end":220,"column_start":5,"column_end":87}},{"value":"/ an alternative to avoid that type of mistake. For higher label numbers, the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":176756,"byte_end":176835,"line_start":221,"line_end":221,"column_start":5,"column_end":84}},{"value":"/ latter has a much more readable (albeit more verbose) syntax, but it comes","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":176840,"byte_end":176918,"line_start":222,"line_end":222,"column_start":5,"column_end":83}},{"value":"/ with a performance overhead (for creating and processing the Labels map).","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":176923,"byte_end":177000,"line_start":223,"line_end":223,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1046},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":177840,"byte_end":177855,"line_start":240,"line_end":240,"column_start":12,"column_end":27},"name":"get_metric_with","qualname":"<MetricVec<T>>::get_metric_with","value":"pub fn get_metric_with(&Self, &HashMap<&str, &str>) -> Result<T::M>","parent":null,"children":[],"decl_id":null,"docs":" `get_metric_with` returns the [`Metric`] for the given Labels map (the\n label names must match those of the VariableLabels in Desc). If that label map is\n accessed for the first time, a new [`Metric`] is created. Implications of\n creating a [`Metric`] without using it and keeping the\n [`Metric`] for later use are the same as for GetMetricWithLabelValues.","sig":null,"attributes":[{"value":"/ `get_metric_with` returns the [`Metric`] for the given Labels map (the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":177142,"byte_end":177216,"line_start":228,"line_end":228,"column_start":5,"column_end":79}},{"value":"/ label names must match those of the VariableLabels in Desc). If that label map is","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":177221,"byte_end":177306,"line_start":229,"line_end":229,"column_start":5,"column_end":90}},{"value":"/ accessed for the first time, a new [`Metric`] is created. Implications of","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":177311,"byte_end":177388,"line_start":230,"line_end":230,"column_start":5,"column_end":82}},{"value":"/ creating a [`Metric`] without using it and keeping the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":177393,"byte_end":177451,"line_start":231,"line_end":231,"column_start":5,"column_end":63}},{"value":"/ [`Metric`] for later use are the same as for GetMetricWithLabelValues.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":177456,"byte_end":177530,"line_start":232,"line_end":232,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":177535,"byte_end":177538,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ An error is returned if the number and names of the Labels are inconsistent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":177543,"byte_end":177622,"line_start":234,"line_end":234,"column_start":5,"column_end":84}},{"value":"/ with those of the VariableLabels in Desc.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":177627,"byte_end":177672,"line_start":235,"line_end":235,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":177677,"byte_end":177680,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ This method is used for the same purpose as","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":177685,"byte_end":177732,"line_start":237,"line_end":237,"column_start":5,"column_end":52}},{"value":"/ `get_metric_with_label_values`. See there for pros and cons of the two","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":177737,"byte_end":177811,"line_start":238,"line_end":238,"column_start":5,"column_end":79}},{"value":"/ methods.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":177816,"byte_end":177828,"line_start":239,"line_end":239,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1047},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":178389,"byte_end":178406,"line_start":257,"line_end":257,"column_start":12,"column_end":29},"name":"with_label_values","qualname":"<MetricVec<T>>::with_label_values","value":"pub fn with_label_values(&Self, &[&str]) -> T::M","parent":null,"children":[],"decl_id":null,"docs":" `with_label_values` works as `get_metric_with_label_values`, but panics if an error\n occurs.","sig":null,"attributes":[{"value":"/ `with_label_values` works as `get_metric_with_label_values`, but panics if an error","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":177961,"byte_end":178048,"line_start":244,"line_end":244,"column_start":5,"column_end":92}},{"value":"/ occurs.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":178053,"byte_end":178064,"line_start":245,"line_end":245,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":178069,"byte_end":178072,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":178077,"byte_end":178091,"line_start":247,"line_end":247,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":178096,"byte_end":178099,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":178104,"byte_end":178111,"line_start":249,"line_end":249,"column_start":5,"column_end":12}},{"value":"/ use prometheus::{CounterVec, Opts};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":178116,"byte_end":178155,"line_start":250,"line_end":250,"column_start":5,"column_end":44}},{"value":"/ let vec = CounterVec::new(","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":178160,"byte_end":178190,"line_start":251,"line_end":251,"column_start":5,"column_end":35}},{"value":"/     Opts::new(\"requests_total\", \"Number of requests.\"),","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":178195,"byte_end":178254,"line_start":252,"line_end":252,"column_start":5,"column_end":64}},{"value":"/     &[\"code\", \"http_method\"]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":178259,"byte_end":178291,"line_start":253,"line_end":253,"column_start":5,"column_end":37}},{"value":"/ ).unwrap();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":178296,"byte_end":178311,"line_start":254,"line_end":254,"column_start":5,"column_end":20}},{"value":"/ vec.with_label_values(&[\"404\", \"POST\"]).inc()","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":178316,"byte_end":178365,"line_start":255,"line_end":255,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":178370,"byte_end":178377,"line_start":256,"line_end":256,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1048},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":178705,"byte_end":178709,"line_start":264,"line_end":264,"column_start":12,"column_end":16},"name":"with","qualname":"<MetricVec<T>>::with","value":"pub fn with(&Self, &HashMap<&str, &str>) -> T::M","parent":null,"children":[],"decl_id":null,"docs":" `with` works as `get_metric_with`, but panics if an error occurs. The method allows\n neat syntax like:\n     httpReqs.with(Labels{\"status\":\"404\", \"method\":\"POST\"}).inc()\n","sig":null,"attributes":[{"value":"/ `with` works as `get_metric_with`, but panics if an error occurs. The method allows","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":178507,"byte_end":178594,"line_start":261,"line_end":261,"column_start":5,"column_end":92}},{"value":"/ neat syntax like:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":178599,"byte_end":178620,"line_start":262,"line_end":262,"column_start":5,"column_end":26}},{"value":"/     httpReqs.with(Labels{\"status\":\"404\", \"method\":\"POST\"}).inc()","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":178625,"byte_end":178693,"line_start":263,"line_end":263,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1049},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":179587,"byte_end":179606,"line_start":280,"line_end":280,"column_start":12,"column_end":31},"name":"remove_label_values","qualname":"<MetricVec<T>>::remove_label_values","value":"pub fn remove_label_values(&Self, &[&str]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" `remove_label_values` removes the metric where the variable labels are the same\n as those passed in as labels (same order as the VariableLabels in Desc). It\n returns true if a metric was deleted.","sig":null,"attributes":[{"value":"/ `remove_label_values` removes the metric where the variable labels are the same","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":178814,"byte_end":178897,"line_start":268,"line_end":268,"column_start":5,"column_end":88}},{"value":"/ as those passed in as labels (same order as the VariableLabels in Desc). It","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":178902,"byte_end":178981,"line_start":269,"line_end":269,"column_start":5,"column_end":84}},{"value":"/ returns true if a metric was deleted.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":178986,"byte_end":179027,"line_start":270,"line_end":270,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":179032,"byte_end":179035,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ It returns an error if the number of label values is not the same as the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":179040,"byte_end":179116,"line_start":272,"line_end":272,"column_start":5,"column_end":81}},{"value":"/ number of VariableLabels in Desc.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":179121,"byte_end":179158,"line_start":273,"line_end":273,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":179163,"byte_end":179166,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ Note that for more than one label value, this method is prone to mistakes","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":179171,"byte_end":179248,"line_start":275,"line_end":275,"column_start":5,"column_end":82}},{"value":"/ caused by an incorrect order of arguments. Consider delete(labels) as an","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":179253,"byte_end":179329,"line_start":276,"line_end":276,"column_start":5,"column_end":81}},{"value":"/ alternative to avoid that type of mistake. For higher label numbers, the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":179334,"byte_end":179410,"line_start":277,"line_end":277,"column_start":5,"column_end":81}},{"value":"/ latter has a much more readable (albeit more verbose) syntax, but it comes","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":179415,"byte_end":179493,"line_start":278,"line_end":278,"column_start":5,"column_end":83}},{"value":"/ with a performance overhead (for creating and processing the Labels map).","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":179498,"byte_end":179575,"line_start":279,"line_end":279,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1050},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":180159,"byte_end":180165,"line_start":292,"line_end":292,"column_start":12,"column_end":18},"name":"remove","qualname":"<MetricVec<T>>::remove","value":"pub fn remove(&Self, &HashMap<&str, &str>) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" `remove` removes the metric where the variable labels are the same as those\n passed in as labels. It returns true if a metric was deleted.","sig":null,"attributes":[{"value":"/ `remove` removes the metric where the variable labels are the same as those","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":179697,"byte_end":179776,"line_start":284,"line_end":284,"column_start":5,"column_end":84}},{"value":"/ passed in as labels. It returns true if a metric was deleted.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":179781,"byte_end":179846,"line_start":285,"line_end":285,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":179851,"byte_end":179854,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ It returns an error if the number and names of the Labels are inconsistent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":179859,"byte_end":179937,"line_start":287,"line_end":287,"column_start":5,"column_end":83}},{"value":"/ with those of the VariableLabels in the Desc of the MetricVec.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":179942,"byte_end":180008,"line_start":288,"line_end":288,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":180013,"byte_end":180016,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ This method is used for the same purpose as `delete_label_values`. See","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":180021,"byte_end":180095,"line_start":290,"line_end":290,"column_start":5,"column_end":79}},{"value":"/ there for pros and cons of the two methods.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":180100,"byte_end":180147,"line_start":291,"line_end":291,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1051},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":180319,"byte_end":180324,"line_start":297,"line_end":297,"column_start":12,"column_end":17},"name":"reset","qualname":"<MetricVec<T>>::reset","value":"pub fn reset(&Self)","parent":null,"children":[],"decl_id":null,"docs":" `reset` deletes all metrics in this vector.\n","sig":null,"attributes":[{"value":"/ `reset` deletes all metrics in this vector.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":180260,"byte_end":180307,"line_start":296,"line_end":296,"column_start":5,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":1056},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\timer.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"timer","qualname":"::timer","value":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\timer.rs","parent":null,"children":[{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1061},{"krate":0,"index":1064},{"krate":0,"index":1067},{"krate":0,"index":1070},{"krate":0,"index":1071},{"krate":0,"index":1074},{"krate":0,"index":1077},{"krate":0,"index":2227},{"krate":0,"index":2229},{"krate":0,"index":2230},{"krate":0,"index":2235},{"krate":0,"index":1078},{"krate":0,"index":1079},{"krate":0,"index":1080},{"krate":0,"index":2238},{"krate":0,"index":2240},{"krate":0,"index":2241},{"krate":0,"index":2246},{"krate":0,"index":1081},{"krate":0,"index":1082}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1078},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\timer.rs","byte_start":184662,"byte_end":184680,"line_start":13,"line_end":13,"column_start":8,"column_end":26},"name":"duration_to_millis","qualname":"::timer::duration_to_millis","value":"pub fn duration_to_millis(Duration) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Convert a duration to millisecond.\n","sig":null,"attributes":[{"value":"/ Convert a duration to millisecond.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\timer.rs","byte_start":184606,"byte_end":184644,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\timer.rs","byte_start":184645,"byte_end":184654,"line_start":12,"line_end":12,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1079},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\timer.rs","byte_start":184855,"byte_end":184865,"line_start":20,"line_end":20,"column_start":8,"column_end":18},"name":"now_millis","qualname":"::timer::now_millis","value":"pub fn now_millis() -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns milliseconds since ANCHOR.","sig":null,"attributes":[{"value":"/ Returns milliseconds since ANCHOR.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\timer.rs","byte_start":184762,"byte_end":184800,"line_start":17,"line_end":17,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\timer.rs","byte_start":184801,"byte_end":184804,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ANCHOR is some fixed point in history.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\timer.rs","byte_start":184805,"byte_end":184847,"line_start":19,"line_end":19,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":1080},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\timer.rs","byte_start":185340,"byte_end":185353,"line_start":36,"line_end":36,"column_start":8,"column_end":21},"name":"recent_millis","qualname":"::timer::recent_millis","value":"pub fn recent_millis() -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns recent returned value by `now_millis`.\n","sig":null,"attributes":[{"value":"/ Returns recent returned value by `now_millis`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\timer.rs","byte_start":185282,"byte_end":185332,"line_start":35,"line_end":35,"column_start":1,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":1082},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\timer.rs","byte_start":185655,"byte_end":185669,"line_start":47,"line_end":47,"column_start":8,"column_end":22},"name":"ensure_updater","qualname":"::timer::ensure_updater","value":"pub fn ensure_updater()","parent":null,"children":[],"decl_id":null,"docs":" Ensures background updater is running, which will call `now_millis` periodically.\n","sig":null,"attributes":[{"value":"/ Ensures background updater is running, which will call `now_millis` periodically.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\timer.rs","byte_start":185562,"byte_end":185647,"line_start":46,"line_end":46,"column_start":1,"column_end":86}}]},{"kind":"Mod","id":{"krate":0,"index":1084},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":4410,"byte_end":4415,"line_start":177,"line_end":177,"column_start":9,"column_end":14},"name":"local","qualname":"::local","value":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1089},{"krate":0,"index":1092},{"krate":0,"index":1095},{"krate":0,"index":1098},{"krate":0,"index":1101},{"krate":0,"index":1102},{"krate":0,"index":1105},{"krate":0,"index":1108},{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":1115},{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1122},{"krate":0,"index":1125},{"krate":0,"index":1128}],"decl_id":null,"docs":"    Unsync local metrics, provides better performance.\n","sig":null,"attributes":[{"value":"*\n\n    Unsync local metrics, provides better performance.\n\n    */","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":4422,"byte_end":4489,"line_start":178,"line_end":182,"column_start":5,"column_end":7}}]},{"kind":"Mod","id":{"krate":0,"index":1131},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":4898,"byte_end":4902,"line_start":194,"line_end":194,"column_start":9,"column_end":13},"name":"core","qualname":"::core","value":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1132},{"krate":0,"index":1133},{"krate":0,"index":1134},{"krate":0,"index":1137},{"krate":0,"index":1140},{"krate":0,"index":1143},{"krate":0,"index":1146},{"krate":0,"index":1147},{"krate":0,"index":1150},{"krate":0,"index":1153},{"krate":0,"index":1154},{"krate":0,"index":1157},{"krate":0,"index":1160},{"krate":0,"index":1161},{"krate":0,"index":1164},{"krate":0,"index":1167},{"krate":0,"index":1170},{"krate":0,"index":1171},{"krate":0,"index":1174}],"decl_id":null,"docs":"    Core traits and types.\n","sig":null,"attributes":[{"value":"*\n\n    Core traits and types.\n\n    */","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":4909,"byte_end":4948,"line_start":195,"line_end":199,"column_start":5,"column_end":7}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14151759,"byte_end":14151768,"line_start":34,"line_end":34,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1280},{"krate":0,"index":1281},{"krate":0,"index":1283},{"krate":0,"index":1284},{"krate":0,"index":1285},{"krate":0,"index":1286},{"krate":0,"index":1287},{"krate":0,"index":1288},{"krate":0,"index":1290}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14153771,"byte_end":14153780,"line_start":112,"line_end":112,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1292},{"krate":0,"index":1293},{"krate":0,"index":1294},{"krate":0,"index":1295},{"krate":0,"index":1296},{"krate":0,"index":1297},{"krate":0,"index":1298},{"krate":0,"index":1299},{"krate":0,"index":1300},{"krate":0,"index":1301},{"krate":0,"index":1302},{"krate":0,"index":1303},{"krate":0,"index":1304},{"krate":0,"index":1311}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14157852,"byte_end":14157861,"line_start":229,"line_end":229,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1314}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14158018,"byte_end":14158027,"line_start":237,"line_end":237,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1316}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14158206,"byte_end":14158215,"line_start":243,"line_end":243,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1318}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14158597,"byte_end":14158602,"line_start":258,"line_end":258,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1320},{"krate":0,"index":1321},{"krate":0,"index":1322},{"krate":0,"index":1323},{"krate":0,"index":1324}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14159134,"byte_end":14159139,"line_start":283,"line_end":283,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1326},{"krate":0,"index":1327},{"krate":0,"index":1328},{"krate":0,"index":1329},{"krate":0,"index":1330},{"krate":0,"index":1331},{"krate":0,"index":1332},{"krate":0,"index":1333},{"krate":0,"index":1334},{"krate":0,"index":1335},{"krate":0,"index":1336},{"krate":0,"index":1337},{"krate":0,"index":1338},{"krate":0,"index":1343}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14162692,"byte_end":14162697,"line_start":390,"line_end":390,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1346}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14162827,"byte_end":14162832,"line_start":397,"line_end":397,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1348}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14163011,"byte_end":14163016,"line_start":403,"line_end":403,"column_start":45,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1350}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14163400,"byte_end":14163407,"line_start":418,"line_end":418,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1352},{"krate":0,"index":1353},{"krate":0,"index":1354},{"krate":0,"index":1355},{"krate":0,"index":1356}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14163941,"byte_end":14163948,"line_start":443,"line_end":443,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1358},{"krate":0,"index":1359},{"krate":0,"index":1360},{"krate":0,"index":1361},{"krate":0,"index":1362},{"krate":0,"index":1363},{"krate":0,"index":1364},{"krate":0,"index":1365},{"krate":0,"index":1366},{"krate":0,"index":1367},{"krate":0,"index":1368},{"krate":0,"index":1369},{"krate":0,"index":1370},{"krate":0,"index":1375}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14167521,"byte_end":14167528,"line_start":550,"line_end":550,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1378}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14167658,"byte_end":14167665,"line_start":557,"line_end":557,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1380}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14167844,"byte_end":14167851,"line_start":563,"line_end":563,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1382}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14168278,"byte_end":14168286,"line_start":579,"line_end":579,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1384},{"krate":0,"index":1385},{"krate":0,"index":1386},{"krate":0,"index":1387},{"krate":0,"index":1388},{"krate":0,"index":1389},{"krate":0,"index":1390},{"krate":0,"index":1391},{"krate":0,"index":1392}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14169268,"byte_end":14169276,"line_start":623,"line_end":623,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1394},{"krate":0,"index":1395},{"krate":0,"index":1396},{"krate":0,"index":1397},{"krate":0,"index":1398},{"krate":0,"index":1399},{"krate":0,"index":1400},{"krate":0,"index":1401},{"krate":0,"index":1402},{"krate":0,"index":1403},{"krate":0,"index":1404},{"krate":0,"index":1405},{"krate":0,"index":1406},{"krate":0,"index":1413}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14173682,"byte_end":14173690,"line_start":748,"line_end":748,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1416}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14173851,"byte_end":14173859,"line_start":756,"line_end":756,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1418}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14174038,"byte_end":14174046,"line_start":762,"line_end":762,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1420}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14174532,"byte_end":14174539,"line_start":779,"line_end":779,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1422},{"krate":0,"index":1423},{"krate":0,"index":1424},{"krate":0,"index":1425},{"krate":0,"index":1426},{"krate":0,"index":1427},{"krate":0,"index":1428},{"krate":0,"index":1429},{"krate":0,"index":1430},{"krate":0,"index":1431},{"krate":0,"index":1432},{"krate":0,"index":1433},{"krate":0,"index":1434},{"krate":0,"index":1435}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14176303,"byte_end":14176310,"line_start":848,"line_end":848,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1437},{"krate":0,"index":1438},{"krate":0,"index":1439},{"krate":0,"index":1440},{"krate":0,"index":1441},{"krate":0,"index":1442},{"krate":0,"index":1443},{"krate":0,"index":1444},{"krate":0,"index":1445},{"krate":0,"index":1446},{"krate":0,"index":1447},{"krate":0,"index":1448},{"krate":0,"index":1449},{"krate":0,"index":1458}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14181806,"byte_end":14181813,"line_start":995,"line_end":995,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1461}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14182014,"byte_end":14182021,"line_start":1004,"line_end":1004,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1463}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14182200,"byte_end":14182207,"line_start":1010,"line_end":1010,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1465}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14182591,"byte_end":14182598,"line_start":1025,"line_end":1025,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1467},{"krate":0,"index":1468},{"krate":0,"index":1469},{"krate":0,"index":1470},{"krate":0,"index":1471}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14183132,"byte_end":14183139,"line_start":1050,"line_end":1050,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1473},{"krate":0,"index":1474},{"krate":0,"index":1475},{"krate":0,"index":1476},{"krate":0,"index":1477},{"krate":0,"index":1478},{"krate":0,"index":1479},{"krate":0,"index":1480},{"krate":0,"index":1481},{"krate":0,"index":1482},{"krate":0,"index":1483},{"krate":0,"index":1484},{"krate":0,"index":1485},{"krate":0,"index":1490}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14186712,"byte_end":14186719,"line_start":1157,"line_end":1157,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1493}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14186849,"byte_end":14186856,"line_start":1164,"line_end":1164,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1495}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14187035,"byte_end":14187042,"line_start":1170,"line_end":1170,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1497}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14187526,"byte_end":14187535,"line_start":1187,"line_end":1187,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1499},{"krate":0,"index":1500},{"krate":0,"index":1501},{"krate":0,"index":1502},{"krate":0,"index":1503},{"krate":0,"index":1504},{"krate":0,"index":1505},{"krate":0,"index":1506},{"krate":0,"index":1507},{"krate":0,"index":1508},{"krate":0,"index":1509},{"krate":0,"index":1510},{"krate":0,"index":1511},{"krate":0,"index":1512}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14189269,"byte_end":14189278,"line_start":1256,"line_end":1256,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1514},{"krate":0,"index":1515},{"krate":0,"index":1516},{"krate":0,"index":1517},{"krate":0,"index":1518},{"krate":0,"index":1519},{"krate":0,"index":1520},{"krate":0,"index":1521},{"krate":0,"index":1522},{"krate":0,"index":1523},{"krate":0,"index":1524},{"krate":0,"index":1525},{"krate":0,"index":1526},{"krate":0,"index":1535}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14194786,"byte_end":14194795,"line_start":1403,"line_end":1403,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1538}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14194994,"byte_end":14195003,"line_start":1412,"line_end":1412,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1540}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14195182,"byte_end":14195191,"line_start":1418,"line_end":1418,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1542}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14195630,"byte_end":14195636,"line_start":1434,"line_end":1434,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1544},{"krate":0,"index":1545},{"krate":0,"index":1546},{"krate":0,"index":1547},{"krate":0,"index":1548},{"krate":0,"index":1549},{"krate":0,"index":1550},{"krate":0,"index":1551},{"krate":0,"index":1552}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14196741,"byte_end":14196747,"line_start":1478,"line_end":1478,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1554},{"krate":0,"index":1555},{"krate":0,"index":1556},{"krate":0,"index":1557},{"krate":0,"index":1558},{"krate":0,"index":1559},{"krate":0,"index":1560},{"krate":0,"index":1561},{"krate":0,"index":1562},{"krate":0,"index":1563},{"krate":0,"index":1564},{"krate":0,"index":1565},{"krate":0,"index":1566},{"krate":0,"index":1573}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14201284,"byte_end":14201290,"line_start":1603,"line_end":1603,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1576}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14201465,"byte_end":14201471,"line_start":1611,"line_end":1611,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1578}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14201650,"byte_end":14201656,"line_start":1617,"line_end":1617,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1580}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14202355,"byte_end":14202361,"line_start":1638,"line_end":1638,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1582},{"krate":0,"index":1583},{"krate":0,"index":1584},{"krate":0,"index":1585},{"krate":0,"index":1586},{"krate":0,"index":1587},{"krate":0,"index":1588},{"krate":0,"index":1589},{"krate":0,"index":1590},{"krate":0,"index":1591},{"krate":0,"index":1592},{"krate":0,"index":1594},{"krate":0,"index":1596},{"krate":0,"index":1597},{"krate":0,"index":1598},{"krate":0,"index":1599},{"krate":0,"index":1600},{"krate":0,"index":1602},{"krate":0,"index":1604},{"krate":0,"index":1605},{"krate":0,"index":1606},{"krate":0,"index":1607},{"krate":0,"index":1608},{"krate":0,"index":1610},{"krate":0,"index":1612},{"krate":0,"index":1613},{"krate":0,"index":1614},{"krate":0,"index":1615},{"krate":0,"index":1616},{"krate":0,"index":1618},{"krate":0,"index":1620},{"krate":0,"index":1621},{"krate":0,"index":1622},{"krate":0,"index":1623},{"krate":0,"index":1624},{"krate":0,"index":1626},{"krate":0,"index":1628},{"krate":0,"index":1629},{"krate":0,"index":1630},{"krate":0,"index":1631}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14208295,"byte_end":14208301,"line_start":1853,"line_end":1853,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1633},{"krate":0,"index":1634},{"krate":0,"index":1635},{"krate":0,"index":1636},{"krate":0,"index":1637},{"krate":0,"index":1638},{"krate":0,"index":1639},{"krate":0,"index":1640},{"krate":0,"index":1641},{"krate":0,"index":1642},{"krate":0,"index":1643},{"krate":0,"index":1644},{"krate":0,"index":1645},{"krate":0,"index":1662}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14217934,"byte_end":14217940,"line_start":2092,"line_end":2092,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1665}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14218255,"byte_end":14218261,"line_start":2105,"line_end":2105,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1667}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14218440,"byte_end":14218446,"line_start":2111,"line_end":2111,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1669}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14219014,"byte_end":14219026,"line_start":2129,"line_end":2129,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1671},{"krate":0,"index":1672},{"krate":0,"index":1673},{"krate":0,"index":1674},{"krate":0,"index":1675},{"krate":0,"index":1676},{"krate":0,"index":1678},{"krate":0,"index":1679},{"krate":0,"index":1680},{"krate":0,"index":1681},{"krate":0,"index":1682},{"krate":0,"index":1683},{"krate":0,"index":1685},{"krate":0,"index":1686},{"krate":0,"index":1687},{"krate":0,"index":1688},{"krate":0,"index":1689},{"krate":0,"index":1690},{"krate":0,"index":1691},{"krate":0,"index":1692},{"krate":0,"index":1693},{"krate":0,"index":1694}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14222204,"byte_end":14222216,"line_start":2251,"line_end":2251,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1696},{"krate":0,"index":1697},{"krate":0,"index":1698},{"krate":0,"index":1699},{"krate":0,"index":1700},{"krate":0,"index":1701},{"krate":0,"index":1702},{"krate":0,"index":1703},{"krate":0,"index":1704},{"krate":0,"index":1705},{"krate":0,"index":1706},{"krate":0,"index":1707},{"krate":0,"index":1708},{"krate":0,"index":1719}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14227987,"byte_end":14227999,"line_start":2404,"line_end":2404,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1722}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14228217,"byte_end":14228229,"line_start":2414,"line_end":2414,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1724}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14228408,"byte_end":14228420,"line_start":2420,"line_end":2420,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1726}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14228746,"byte_end":14228756,"line_start":2435,"line_end":2435,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1728},{"krate":0,"index":1729},{"krate":0,"index":1730},{"krate":0,"index":1732}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14230119,"byte_end":14230129,"line_start":2475,"line_end":2475,"column_start":30,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14230179,"byte_end":14230189,"line_start":2478,"line_end":2478,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1737}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":19969,"byte_end":19978,"line_start":89,"line_end":89,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":20858,"byte_end":20867,"line_start":128,"line_end":128,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":21172,"byte_end":21181,"line_start":141,"line_end":141,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":21872,"byte_end":21881,"line_start":177,"line_end":177,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":22467,"byte_end":22476,"line_start":207,"line_end":207,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":25154,"byte_end":25168,"line_start":38,"line_end":38,"column_start":5,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":25553,"byte_end":25567,"line_start":52,"line_end":52,"column_start":5,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":142},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":27563,"byte_end":27579,"line_start":125,"line_end":125,"column_start":55,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":27899,"byte_end":27915,"line_start":136,"line_end":136,"column_start":55,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":159},{"krate":0,"index":162},{"krate":0,"index":164},{"krate":0,"index":166},{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":30692,"byte_end":30706,"line_start":30,"line_end":30,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":30828,"byte_end":30842,"line_start":38,"line_end":38,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":239},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":32303,"byte_end":32317,"line_start":90,"line_end":90,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":32511,"byte_end":32525,"line_start":100,"line_end":100,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":32712,"byte_end":32729,"line_start":111,"line_end":111,"column_start":17,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":32857,"byte_end":32874,"line_start":119,"line_end":119,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":32976,"byte_end":32993,"line_start":125,"line_end":125,"column_start":38,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":33892,"byte_end":33909,"line_start":147,"line_end":147,"column_start":17,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":273},{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":35065,"byte_end":35084,"line_start":180,"line_end":180,"column_start":42,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":35399,"byte_end":35418,"line_start":191,"line_end":191,"column_start":17,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":36591,"byte_end":36610,"line_start":239,"line_end":239,"column_start":33,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":36781,"byte_end":36800,"line_start":247,"line_end":247,"column_start":27,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":37141,"byte_end":37163,"line_start":260,"line_end":260,"column_start":37,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":37699,"byte_end":37721,"line_start":278,"line_end":278,"column_start":17,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":312},{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":38822,"byte_end":38844,"line_start":310,"line_end":310,"column_start":33,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":39014,"byte_end":39036,"line_start":317,"line_end":317,"column_start":27,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\desc.rs","byte_start":51333,"byte_end":51337,"line_start":68,"line_end":68,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\encoder\\pb.rs","byte_start":61817,"byte_end":61832,"line_start":22,"line_end":22,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\encoder\\pb.rs","byte_start":61962,"byte_end":61977,"line_start":29,"line_end":29,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":381},{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\encoder\\text.rs","byte_start":64343,"byte_end":64354,"line_start":24,"line_end":24,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\encoder\\text.rs","byte_start":64472,"byte_end":64483,"line_start":31,"line_end":31,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":427},{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":79438,"byte_end":79450,"line_start":29,"line_end":29,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":79572,"byte_end":79584,"line_start":37,"line_end":37,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":531},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":81081,"byte_end":81093,"line_start":93,"line_end":93,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":544},{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":81287,"byte_end":81299,"line_start":103,"line_end":103,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":81484,"byte_end":81499,"line_start":114,"line_end":114,"column_start":17,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":551}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":81627,"byte_end":81642,"line_start":122,"line_end":122,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":554}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":81744,"byte_end":81759,"line_start":128,"line_end":128,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":82619,"byte_end":82634,"line_start":150,"line_end":150,"column_start":17,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":88340,"byte_end":88353,"line_start":85,"line_end":85,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":655},{"krate":0,"index":658},{"krate":0,"index":660},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":669},{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":90221,"byte_end":90234,"line_start":142,"line_end":142,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":672}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":90343,"byte_end":90356,"line_start":148,"line_end":148,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":90740,"byte_end":90745,"line_start":167,"line_end":167,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":676}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":91304,"byte_end":91314,"line_start":193,"line_end":193,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":678}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":91561,"byte_end":91571,"line_start":203,"line_end":203,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":680}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":92265,"byte_end":92278,"line_start":232,"line_end":232,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":96048,"byte_end":96061,"line_start":329,"line_end":329,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":102579,"byte_end":102586,"line_start":500,"line_end":500,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":700}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":105460,"byte_end":105474,"line_start":586,"line_end":586,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":107010,"byte_end":107024,"line_start":640,"line_end":640,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":108267,"byte_end":108276,"line_start":670,"line_end":670,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":710},{"krate":0,"index":711}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":108746,"byte_end":108755,"line_start":688,"line_end":688,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":110376,"byte_end":110385,"line_start":747,"line_end":747,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":110640,"byte_end":110649,"line_start":759,"line_end":759,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":724},{"krate":0,"index":725}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":111150,"byte_end":111169,"line_start":778,"line_end":778,"column_start":27,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":111739,"byte_end":111751,"line_start":793,"line_end":793,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":732},{"krate":0,"index":734}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":115173,"byte_end":115187,"line_start":902,"line_end":902,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":740}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":115762,"byte_end":115781,"line_start":923,"line_end":923,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":746}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":117327,"byte_end":117346,"line_start":977,"line_end":977,"column_start":15,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":748}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":117458,"byte_end":117476,"line_start":985,"line_end":985,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":756}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":119617,"byte_end":119631,"line_start":1068,"line_end":1068,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":121592,"byte_end":121606,"line_start":1139,"line_end":1139,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":121752,"byte_end":121766,"line_start":1146,"line_end":1146,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":771}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":121976,"byte_end":121993,"line_start":1159,"line_end":1159,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":777},{"krate":0,"index":778}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":123082,"byte_end":123099,"line_start":1191,"line_end":1191,"column_start":22,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":780}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":123251,"byte_end":123268,"line_start":1198,"line_end":1198,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":782}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":140333,"byte_end":140337,"line_start":112,"line_end":112,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":835},{"krate":0,"index":838},{"krate":0,"index":840},{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":846},{"krate":0,"index":847},{"krate":0,"index":849}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":142066,"byte_end":142070,"line_start":167,"line_end":167,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":851}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":142305,"byte_end":142314,"line_start":178,"line_end":178,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":853}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":142435,"byte_end":142444,"line_start":184,"line_end":184,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":142469,"byte_end":142478,"line_start":186,"line_end":186,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":856}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\registry.rs","byte_start":145662,"byte_end":145674,"line_start":25,"line_end":25,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":901}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\registry.rs","byte_start":145896,"byte_end":145908,"line_start":35,"line_end":35,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":906}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\registry.rs","byte_start":153024,"byte_end":153032,"line_start":221,"line_end":221,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":911}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\registry.rs","byte_start":153377,"byte_end":153385,"line_start":237,"line_end":237,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":917}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\value.rs","byte_start":165775,"byte_end":165784,"line_start":17,"line_end":17,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":964}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\value.rs","byte_start":166439,"byte_end":166444,"line_start":39,"line_end":39,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":967},{"krate":0,"index":969},{"krate":0,"index":970},{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":976}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":170275,"byte_end":170288,"line_start":36,"line_end":36,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1038}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":174827,"byte_end":174836,"line_start":179,"line_end":179,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1041}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":174981,"byte_end":174990,"line_start":185,"line_end":185,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1044},{"krate":0,"index":1045},{"krate":0,"index":1046},{"krate":0,"index":1047},{"krate":0,"index":1048},{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1051}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":180406,"byte_end":180415,"line_start":302,"line_end":302,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1054},{"krate":0,"index":1055}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":3658,"byte_end":3663,"line_start":128,"line_end":128,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1268}},{"kind":"Mod","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\lib.rs","byte_start":4312,"byte_end":4317,"line_start":172,"line_end":172,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1056}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14151759,"byte_end":14151768,"line_start":34,"line_end":34,"column_start":6,"column_end":15},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1743},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14153771,"byte_end":14153780,"line_start":112,"line_end":112,"column_start":30,"column_end":39},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1743},"to":{"krate":28,"index":2692}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14157852,"byte_end":14157861,"line_start":229,"line_end":229,"column_start":28,"column_end":37},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1743},"to":{"krate":28,"index":2159}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14158018,"byte_end":14158027,"line_start":237,"line_end":237,"column_start":28,"column_end":37},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1743},"to":{"krate":2,"index":9300}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14158206,"byte_end":14158215,"line_start":243,"line_end":243,"column_start":45,"column_end":54},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1743},"to":{"krate":28,"index":3579}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14158597,"byte_end":14158602,"line_start":258,"line_end":258,"column_start":6,"column_end":11},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1756},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14159134,"byte_end":14159139,"line_start":283,"line_end":283,"column_start":30,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1756},"to":{"krate":28,"index":2692}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14162692,"byte_end":14162697,"line_start":390,"line_end":390,"column_start":28,"column_end":33},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1756},"to":{"krate":28,"index":2159}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14162827,"byte_end":14162832,"line_start":397,"line_end":397,"column_start":28,"column_end":33},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1756},"to":{"krate":2,"index":9300}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14163011,"byte_end":14163016,"line_start":403,"line_end":403,"column_start":45,"column_end":50},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1756},"to":{"krate":28,"index":3579}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14163400,"byte_end":14163407,"line_start":418,"line_end":418,"column_start":6,"column_end":13},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1768},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14163941,"byte_end":14163948,"line_start":443,"line_end":443,"column_start":30,"column_end":37},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1768},"to":{"krate":28,"index":2692}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14167521,"byte_end":14167528,"line_start":550,"line_end":550,"column_start":28,"column_end":35},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1768},"to":{"krate":28,"index":2159}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14167658,"byte_end":14167665,"line_start":557,"line_end":557,"column_start":28,"column_end":35},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1768},"to":{"krate":2,"index":9300}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14167844,"byte_end":14167851,"line_start":563,"line_end":563,"column_start":45,"column_end":52},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1768},"to":{"krate":28,"index":3579}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14168278,"byte_end":14168286,"line_start":579,"line_end":579,"column_start":6,"column_end":14},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1780},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14169268,"byte_end":14169276,"line_start":623,"line_end":623,"column_start":30,"column_end":38},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1780},"to":{"krate":28,"index":2692}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14173682,"byte_end":14173690,"line_start":748,"line_end":748,"column_start":28,"column_end":36},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1780},"to":{"krate":28,"index":2159}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14173851,"byte_end":14173859,"line_start":756,"line_end":756,"column_start":28,"column_end":36},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1780},"to":{"krate":2,"index":9300}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14174038,"byte_end":14174046,"line_start":762,"line_end":762,"column_start":45,"column_end":53},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1780},"to":{"krate":28,"index":3579}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14174532,"byte_end":14174539,"line_start":779,"line_end":779,"column_start":6,"column_end":13},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1793},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14176303,"byte_end":14176310,"line_start":848,"line_end":848,"column_start":30,"column_end":37},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1793},"to":{"krate":28,"index":2692}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14181806,"byte_end":14181813,"line_start":995,"line_end":995,"column_start":28,"column_end":35},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1793},"to":{"krate":28,"index":2159}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14182014,"byte_end":14182021,"line_start":1004,"line_end":1004,"column_start":28,"column_end":35},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1793},"to":{"krate":2,"index":9300}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14182200,"byte_end":14182207,"line_start":1010,"line_end":1010,"column_start":45,"column_end":52},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1793},"to":{"krate":28,"index":3579}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14182591,"byte_end":14182598,"line_start":1025,"line_end":1025,"column_start":6,"column_end":13},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1807},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14183132,"byte_end":14183139,"line_start":1050,"line_end":1050,"column_start":30,"column_end":37},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1807},"to":{"krate":28,"index":2692}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14186712,"byte_end":14186719,"line_start":1157,"line_end":1157,"column_start":28,"column_end":35},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1807},"to":{"krate":28,"index":2159}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14186849,"byte_end":14186856,"line_start":1164,"line_end":1164,"column_start":28,"column_end":35},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1807},"to":{"krate":2,"index":9300}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14187035,"byte_end":14187042,"line_start":1170,"line_end":1170,"column_start":45,"column_end":52},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1807},"to":{"krate":28,"index":3579}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14187526,"byte_end":14187535,"line_start":1187,"line_end":1187,"column_start":6,"column_end":15},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1819},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14189269,"byte_end":14189278,"line_start":1256,"line_end":1256,"column_start":30,"column_end":39},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1819},"to":{"krate":28,"index":2692}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14194786,"byte_end":14194795,"line_start":1403,"line_end":1403,"column_start":28,"column_end":37},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1819},"to":{"krate":28,"index":2159}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14194994,"byte_end":14195003,"line_start":1412,"line_end":1412,"column_start":28,"column_end":37},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1819},"to":{"krate":2,"index":9300}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14195182,"byte_end":14195191,"line_start":1418,"line_end":1418,"column_start":45,"column_end":54},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1819},"to":{"krate":28,"index":3579}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14195630,"byte_end":14195636,"line_start":1434,"line_end":1434,"column_start":6,"column_end":12},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1833},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14196741,"byte_end":14196747,"line_start":1478,"line_end":1478,"column_start":30,"column_end":36},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1833},"to":{"krate":28,"index":2692}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14201284,"byte_end":14201290,"line_start":1603,"line_end":1603,"column_start":28,"column_end":34},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1833},"to":{"krate":28,"index":2159}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14201465,"byte_end":14201471,"line_start":1611,"line_end":1611,"column_start":28,"column_end":34},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1833},"to":{"krate":2,"index":9300}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14201650,"byte_end":14201656,"line_start":1617,"line_end":1617,"column_start":45,"column_end":51},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1833},"to":{"krate":28,"index":3579}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14202355,"byte_end":14202361,"line_start":1638,"line_end":1638,"column_start":6,"column_end":12},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1846},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14208295,"byte_end":14208301,"line_start":1853,"line_end":1853,"column_start":30,"column_end":36},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1846},"to":{"krate":28,"index":2692}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14217934,"byte_end":14217940,"line_start":2092,"line_end":2092,"column_start":28,"column_end":34},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1846},"to":{"krate":28,"index":2159}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14218255,"byte_end":14218261,"line_start":2105,"line_end":2105,"column_start":28,"column_end":34},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1846},"to":{"krate":2,"index":9300}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14218440,"byte_end":14218446,"line_start":2111,"line_end":2111,"column_start":45,"column_end":51},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1846},"to":{"krate":28,"index":3579}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14219014,"byte_end":14219026,"line_start":2129,"line_end":2129,"column_start":6,"column_end":18},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1864},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14222204,"byte_end":14222216,"line_start":2251,"line_end":2251,"column_start":30,"column_end":42},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1864},"to":{"krate":28,"index":2692}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14227987,"byte_end":14227999,"line_start":2404,"line_end":2404,"column_start":28,"column_end":40},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1864},"to":{"krate":28,"index":2159}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14228217,"byte_end":14228229,"line_start":2414,"line_end":2414,"column_start":28,"column_end":40},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1864},"to":{"krate":2,"index":9300}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14228408,"byte_end":14228420,"line_start":2420,"line_end":2420,"column_start":45,"column_end":57},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1864},"to":{"krate":28,"index":3579}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14228746,"byte_end":14228756,"line_start":2435,"line_end":2435,"column_start":35,"column_end":45},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1879},"to":{"krate":28,"index":2535}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14230119,"byte_end":14230129,"line_start":2475,"line_end":2475,"column_start":30,"column_end":40},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1879},"to":{"krate":2,"index":2999}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\..\\proto\\proto_model.rs","byte_start":14230179,"byte_end":14230189,"line_start":2478,"line_end":2478,"column_start":45,"column_end":55},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1879},"to":{"krate":28,"index":3579}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":18321,"byte_end":18326,"line_start":12,"line_end":12,"column_start":5,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2994},"to":{"krate":0,"index":39}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":18329,"byte_end":18338,"line_start":12,"line_end":12,"column_start":13,"column_end":22},"kind":"SuperTrait","from":{"krate":2,"index":3087},"to":{"krate":0,"index":39}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":18341,"byte_end":18350,"line_start":12,"line_end":12,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":3091},"to":{"krate":0,"index":39}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":18353,"byte_end":18363,"line_start":12,"line_end":12,"column_start":37,"column_end":47},"kind":"SuperTrait","from":{"krate":2,"index":2687},"to":{"krate":0,"index":39}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":18366,"byte_end":18375,"line_start":12,"line_end":12,"column_start":50,"column_end":59},"kind":"SuperTrait","from":{"krate":2,"index":2640},"to":{"krate":0,"index":39}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":18378,"byte_end":18382,"line_start":12,"line_end":12,"column_start":62,"column_end":66},"kind":"SuperTrait","from":{"krate":2,"index":2999},"to":{"krate":0,"index":39}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":18385,"byte_end":18389,"line_start":12,"line_end":12,"column_start":69,"column_end":73},"kind":"SuperTrait","from":{"krate":2,"index":2989},"to":{"krate":0,"index":39}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":18392,"byte_end":18396,"line_start":12,"line_end":12,"column_start":76,"column_end":80},"kind":"SuperTrait","from":{"krate":2,"index":3001},"to":{"krate":0,"index":39}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":19266,"byte_end":19270,"line_start":58,"line_end":58,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":2989},"to":{"krate":0,"index":51}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":19273,"byte_end":19277,"line_start":58,"line_end":58,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":3001},"to":{"krate":0,"index":51}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":19969,"byte_end":19978,"line_start":89,"line_end":89,"column_start":17,"column_end":26},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1908},"to":{"krate":0,"index":51}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":20858,"byte_end":20867,"line_start":128,"line_end":128,"column_start":6,"column_end":15},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1908},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":21172,"byte_end":21181,"line_start":141,"line_end":141,"column_start":17,"column_end":26},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1912},"to":{"krate":0,"index":51}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":21872,"byte_end":21881,"line_start":177,"line_end":177,"column_start":17,"column_end":26},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1916},"to":{"krate":0,"index":51}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\atomic64.rs","byte_start":22467,"byte_end":22476,"line_start":207,"line_end":207,"column_start":6,"column_end":15},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1916},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":25154,"byte_end":25168,"line_start":38,"line_end":38,"column_start":5,"column_end":19},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1920},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":25553,"byte_end":25567,"line_start":52,"line_end":52,"column_start":5,"column_end":19},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1920},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":27563,"byte_end":27579,"line_start":125,"line_end":125,"column_start":55,"column_end":71},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1931},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\auto_flush.rs","byte_start":27899,"byte_end":27915,"line_start":136,"line_end":136,"column_start":55,"column_end":71},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1931},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":30692,"byte_end":30706,"line_start":30,"line_end":30,"column_start":27,"column_end":41},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1940},"to":{"krate":2,"index":2610}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":30828,"byte_end":30842,"line_start":38,"line_end":38,"column_start":17,"column_end":31},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1940},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":32303,"byte_end":32317,"line_start":90,"line_end":90,"column_start":31,"column_end":45},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1940},"to":{"krate":0,"index":824}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":32511,"byte_end":32525,"line_start":100,"line_end":100,"column_start":28,"column_end":42},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1940},"to":{"krate":0,"index":827}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":32712,"byte_end":32729,"line_start":111,"line_end":111,"column_start":17,"column_end":34},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1946},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":32857,"byte_end":32874,"line_start":119,"line_end":119,"column_start":27,"column_end":44},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1946},"to":{"krate":2,"index":2610}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":32976,"byte_end":32993,"line_start":125,"line_end":125,"column_start":38,"column_end":55},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1946},"to":{"krate":0,"index":1022}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":33892,"byte_end":33909,"line_start":147,"line_end":147,"column_start":17,"column_end":34},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":267},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":35065,"byte_end":35084,"line_start":180,"line_end":180,"column_start":42,"column_end":61},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1952},"to":{"krate":0,"index":276}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":35399,"byte_end":35418,"line_start":191,"line_end":191,"column_start":17,"column_end":36},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1952},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":36591,"byte_end":36610,"line_start":239,"line_end":239,"column_start":33,"column_end":52},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1952},"to":{"krate":0,"index":829}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":36781,"byte_end":36800,"line_start":247,"line_end":247,"column_start":27,"column_end":46},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1952},"to":{"krate":2,"index":2610}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":37141,"byte_end":37163,"line_start":260,"line_end":260,"column_start":37,"column_end":59},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":297},"to":{"krate":2,"index":9300}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":37699,"byte_end":37721,"line_start":278,"line_end":278,"column_start":17,"column_end":39},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":297},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":38822,"byte_end":38844,"line_start":310,"line_end":310,"column_start":33,"column_end":55},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":297},"to":{"krate":0,"index":829}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\counter.rs","byte_start":39014,"byte_end":39036,"line_start":317,"line_end":317,"column_start":27,"column_end":49},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":297},"to":{"krate":2,"index":2610}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\desc.rs","byte_start":51333,"byte_end":51337,"line_start":68,"line_end":68,"column_start":6,"column_end":10},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1981},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\encoder\\pb.rs","byte_start":61817,"byte_end":61832,"line_start":22,"line_end":22,"column_start":6,"column_end":21},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1992},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\encoder\\pb.rs","byte_start":61962,"byte_end":61977,"line_start":29,"line_end":29,"column_start":18,"column_end":33},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1992},"to":{"krate":0,"index":460}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\encoder\\text.rs","byte_start":64343,"byte_end":64354,"line_start":24,"line_end":24,"column_start":6,"column_end":17},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1998},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\encoder\\text.rs","byte_start":64472,"byte_end":64483,"line_start":31,"line_end":31,"column_start":18,"column_end":29},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1998},"to":{"krate":0,"index":460}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":79438,"byte_end":79450,"line_start":29,"line_end":29,"column_start":27,"column_end":39},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2061},"to":{"krate":2,"index":2610}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":79572,"byte_end":79584,"line_start":37,"line_end":37,"column_start":17,"column_end":29},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2061},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":81081,"byte_end":81093,"line_start":93,"line_end":93,"column_start":31,"column_end":43},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":2061},"to":{"krate":0,"index":824}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":81287,"byte_end":81299,"line_start":103,"line_end":103,"column_start":28,"column_end":40},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":2061},"to":{"krate":0,"index":827}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":81484,"byte_end":81499,"line_start":114,"line_end":114,"column_start":17,"column_end":32},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":2067},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":81627,"byte_end":81642,"line_start":122,"line_end":122,"column_start":27,"column_end":42},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2067},"to":{"krate":2,"index":2610}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":81744,"byte_end":81759,"line_start":128,"line_end":128,"column_start":38,"column_end":53},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":2067},"to":{"krate":0,"index":1022}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\gauge.rs","byte_start":82619,"byte_end":82634,"line_start":150,"line_end":150,"column_start":17,"column_end":32},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":560},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":88340,"byte_end":88353,"line_start":85,"line_end":85,"column_start":6,"column_end":19},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2073},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":90221,"byte_end":90234,"line_start":142,"line_end":142,"column_start":20,"column_end":33},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2073},"to":{"krate":0,"index":354}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":90343,"byte_end":90356,"line_start":148,"line_end":148,"column_start":21,"column_end":34},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2073},"to":{"krate":2,"index":2895}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":90740,"byte_end":90745,"line_start":167,"line_end":167,"column_start":6,"column_end":11},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2080},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":91304,"byte_end":91314,"line_start":193,"line_end":193,"column_start":6,"column_end":16},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2086},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":91561,"byte_end":91571,"line_start":203,"line_end":203,"column_start":20,"column_end":30},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2086},"to":{"krate":2,"index":2895}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":92265,"byte_end":92278,"line_start":232,"line_end":232,"column_start":6,"column_end":19},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":2096},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":96048,"byte_end":96061,"line_start":329,"line_end":329,"column_start":6,"column_end":19},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":2100},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":102579,"byte_end":102586,"line_start":500,"line_end":500,"column_start":6,"column_end":13},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":2110},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":105460,"byte_end":105474,"line_start":586,"line_end":586,"column_start":6,"column_end":20},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":107010,"byte_end":107024,"line_start":640,"line_end":640,"column_start":15,"column_end":29},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":2116},"to":{"krate":2,"index":3224}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":108267,"byte_end":108276,"line_start":670,"line_end":670,"column_start":6,"column_end":15},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2122},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":108746,"byte_end":108755,"line_start":688,"line_end":688,"column_start":6,"column_end":15},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2122},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":110376,"byte_end":110385,"line_start":747,"line_end":747,"column_start":17,"column_end":26},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2122},"to":{"krate":0,"index":827}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":110640,"byte_end":110649,"line_start":759,"line_end":759,"column_start":20,"column_end":29},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2122},"to":{"krate":0,"index":824}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":111150,"byte_end":111169,"line_start":778,"line_end":778,"column_start":27,"column_end":46},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2128},"to":{"krate":0,"index":1022}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":111739,"byte_end":111751,"line_start":793,"line_end":793,"column_start":6,"column_end":18},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":730},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":115173,"byte_end":115187,"line_start":902,"line_end":902,"column_start":16,"column_end":30},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2142},"to":{"krate":2,"index":2610}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":115762,"byte_end":115781,"line_start":923,"line_end":923,"column_start":6,"column_end":25},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2146},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":117327,"byte_end":117346,"line_start":977,"line_end":977,"column_start":15,"column_end":34},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2146},"to":{"krate":2,"index":3224}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":117458,"byte_end":117476,"line_start":985,"line_end":985,"column_start":6,"column_end":24},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2133},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":119617,"byte_end":119631,"line_start":1068,"line_end":1068,"column_start":6,"column_end":20},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2142},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":121592,"byte_end":121606,"line_start":1139,"line_end":1139,"column_start":22,"column_end":36},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2142},"to":{"krate":0,"index":829}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":121752,"byte_end":121766,"line_start":1146,"line_end":1146,"column_start":15,"column_end":29},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2142},"to":{"krate":2,"index":3224}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":121976,"byte_end":121993,"line_start":1159,"line_end":1159,"column_start":6,"column_end":23},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":2152},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":123082,"byte_end":123099,"line_start":1191,"line_end":1191,"column_start":22,"column_end":39},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2152},"to":{"krate":0,"index":829}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\histogram.rs","byte_start":123251,"byte_end":123268,"line_start":1198,"line_end":1198,"column_start":16,"column_end":33},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2152},"to":{"krate":2,"index":2610}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":136157,"byte_end":136161,"line_start":16,"line_end":16,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":3001},"to":{"krate":0,"index":824}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":136164,"byte_end":136168,"line_start":16,"line_end":16,"column_start":29,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":2989},"to":{"krate":0,"index":824}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":136438,"byte_end":136442,"line_start":25,"line_end":25,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":3001},"to":{"krate":0,"index":827}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":136445,"byte_end":136449,"line_start":25,"line_end":25,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2989},"to":{"krate":0,"index":827}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":136452,"byte_end":136457,"line_start":25,"line_end":25,"column_start":33,"column_end":38},"kind":"SuperTrait","from":{"krate":2,"index":2610},"to":{"krate":0,"index":827}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":136880,"byte_end":136891,"line_start":38,"line_end":38,"column_start":21,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":829},"to":{"krate":0,"index":831}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":140333,"byte_end":140337,"line_start":112,"line_end":112,"column_start":6,"column_end":10},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2157},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":142066,"byte_end":142070,"line_start":167,"line_end":167,"column_start":20,"column_end":24},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":2157},"to":{"krate":0,"index":354}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":142305,"byte_end":142314,"line_start":178,"line_end":178,"column_start":14,"column_end":23},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1743},"to":{"krate":2,"index":2676}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":142435,"byte_end":142444,"line_start":184,"line_end":184,"column_start":13,"column_end":22},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1743},"to":{"krate":2,"index":2645}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\metrics.rs","byte_start":142469,"byte_end":142478,"line_start":186,"line_end":186,"column_start":21,"column_end":30},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1743},"to":{"krate":2,"index":2687}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\registry.rs","byte_start":145662,"byte_end":145674,"line_start":25,"line_end":25,"column_start":26,"column_end":38},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":894},"to":{"krate":2,"index":9300}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\registry.rs","byte_start":145896,"byte_end":145908,"line_start":35,"line_end":35,"column_start":6,"column_end":18},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":894},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\registry.rs","byte_start":153024,"byte_end":153032,"line_start":221,"line_end":221,"column_start":18,"column_end":26},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2168},"to":{"krate":2,"index":2967}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\registry.rs","byte_start":153377,"byte_end":153385,"line_start":237,"line_end":237,"column_start":6,"column_end":14},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":2168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\value.rs","byte_start":165775,"byte_end":165784,"line_start":17,"line_end":17,"column_start":6,"column_end":15},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":2186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\value.rs","byte_start":166439,"byte_end":166444,"line_start":39,"line_end":39,"column_start":17,"column_end":22},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":2202},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":169722,"byte_end":169726,"line_start":17,"line_end":17,"column_start":29,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":2989},"to":{"krate":0,"index":1022}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":169729,"byte_end":169733,"line_start":17,"line_end":17,"column_start":36,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":3001},"to":{"krate":0,"index":1022}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":169736,"byte_end":169741,"line_start":17,"line_end":17,"column_start":43,"column_end":48},"kind":"SuperTrait","from":{"krate":2,"index":2610},"to":{"krate":0,"index":1022}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":170275,"byte_end":170288,"line_start":36,"line_end":36,"column_start":27,"column_end":40},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":2211},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":174827,"byte_end":174836,"line_start":179,"line_end":179,"column_start":47,"column_end":56},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":2221},"to":{"krate":2,"index":9300}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":174981,"byte_end":174990,"line_start":185,"line_end":185,"column_start":27,"column_end":36},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":2221},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\prometheus-0.11.0\\src\\vec.rs","byte_start":180406,"byte_end":180415,"line_start":302,"line_end":302,"column_start":41,"column_end":50},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":2221},"to":{"krate":0,"index":824}}]}