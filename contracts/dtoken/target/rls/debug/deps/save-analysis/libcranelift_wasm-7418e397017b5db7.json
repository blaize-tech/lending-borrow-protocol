{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0","program":"C:\\Users\\комфи\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","cranelift_wasm","--edition=2018","C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"enable-serde\"","--cfg","feature=\"serde\"","--cfg","feature=\"std\"","-C","metadata=7418e397017b5db7","-C","extra-filename=-7418e397017b5db7","--out-dir","c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps","--extern","cranelift_codegen=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps\\libcranelift_codegen-ad945deb3a160167.rmeta","--extern","cranelift_entity=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps\\libcranelift_entity-327829451b045e33.rmeta","--extern","cranelift_frontend=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps\\libcranelift_frontend-54d9f1f2203652e2.rmeta","--extern","log=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps\\liblog-8fb4ff5a8792f1ff.rmeta","--extern","serde=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps\\libserde-bb2975fbc5a79cfc.rmeta","--extern","thiserror=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps\\libthiserror-4e544be42338ddff.rmeta","--extern","wasmparser=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps\\libwasmparser-77849c6b9b08d19d.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\комфи\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps\\libcranelift_wasm-7418e397017b5db7.rmeta"},"prelude":{"crate_id":{"name":"cranelift_wasm","disambiguator":[11336328626624407117,0]},"crate_root":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src","external_crates":[{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[11165144592143370822,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[252041924521724887,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[5467317383579905353,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","num":4,"id":{"name":"std","disambiguator":[7976927198175868373,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7624884120048857693,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[11703982264691436790,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[2970152443746782806,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9222488229097456044,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7853498759631503325,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16147963203778103955,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[14622278557065309757,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[12620427935833221912,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[5227252993197737239,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\code_translator.rs","num":14,"id":{"name":"cranelift_codegen","disambiguator":[5986211292539320187,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\code_translator.rs","num":15,"id":{"name":"cranelift_bforest","disambiguator":[5967191781066483549,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","num":16,"id":{"name":"cranelift_entity","disambiguator":[1117635928365938132,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","num":17,"id":{"name":"serde","disambiguator":[9823350511623119401,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","num":18,"id":{"name":"serde_derive","disambiguator":[15868471050106267783,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\func_translator.rs","num":19,"id":{"name":"log","disambiguator":[7262945953961677380,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\code_translator.rs","num":20,"id":{"name":"cfg_if","disambiguator":[12394071839129264589,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\code_translator.rs","num":21,"id":{"name":"cranelift_codegen_shared","disambiguator":[14342157761650369642,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\code_translator.rs","num":22,"id":{"name":"target_lexicon","disambiguator":[2317706166845696577,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","num":23,"id":{"name":"thiserror","disambiguator":[16452521269220640097,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\code_translator.rs","num":24,"id":{"name":"thiserror_impl","disambiguator":[9048138020972467572,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\code_translator.rs","num":25,"id":{"name":"gimli","disambiguator":[9437475208511772857,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\code_translator.rs","num":26,"id":{"name":"stable_deref_trait","disambiguator":[18085504202279939971,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\code_translator.rs","num":27,"id":{"name":"indexmap","disambiguator":[6864592234072865951,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\code_translator.rs","num":28,"id":{"name":"hashbrown","disambiguator":[10599224521677906658,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\code_translator.rs","num":29,"id":{"name":"ahash","disambiguator":[9774790966930561325,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\code_translator.rs","num":30,"id":{"name":"once_cell","disambiguator":[1116581588057473973,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\code_translator.rs","num":31,"id":{"name":"getrandom","disambiguator":[516886532770300459,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\code_translator.rs","num":32,"id":{"name":"fallible_iterator","disambiguator":[6716362794023931551,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\code_translator.rs","num":33,"id":{"name":"byteorder","disambiguator":[13956033545584725802,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\code_translator.rs","num":34,"id":{"name":"regalloc","disambiguator":[6693807116643740893,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\code_translator.rs","num":35,"id":{"name":"smallvec","disambiguator":[9259698098513288274,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\code_translator.rs","num":36,"id":{"name":"rustc_hash","disambiguator":[2358302366584189522,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\code_translator.rs","num":37,"id":{"name":"cranelift_frontend","disambiguator":[617103835829124428,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\code_translator.rs","num":38,"id":{"name":"wasmparser","disambiguator":[5422444996453330376,0]}}],"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","byte_start":0,"byte_end":2548,"line_start":1,"line_end":76,"column_start":1,"column_end":53}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":328},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","byte_start":1754,"byte_end":1770,"line_start":61,"line_end":61,"column_start":5,"column_end":21},"alias_span":null,"name":"DummyEnvironment","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":513},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","byte_start":1772,"byte_end":1787,"line_start":61,"line_end":61,"column_start":23,"column_end":38},"alias_span":null,"name":"FuncEnvironment","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1411},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","byte_start":1789,"byte_end":1803,"line_start":61,"line_end":61,"column_start":40,"column_end":54},"alias_span":null,"name":"GlobalVariable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":548},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","byte_start":1805,"byte_end":1822,"line_start":61,"line_end":61,"column_start":56,"column_end":73},"alias_span":null,"name":"ModuleEnvironment","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1448},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","byte_start":1824,"byte_end":1834,"line_start":61,"line_end":61,"column_start":75,"column_end":85},"alias_span":null,"name":"ReturnMode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":508},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","byte_start":1840,"byte_end":1857,"line_start":62,"line_end":62,"column_start":5,"column_end":22},"alias_span":null,"name":"TargetEnvironment","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1424},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","byte_start":1859,"byte_end":1868,"line_start":62,"line_end":62,"column_start":24,"column_end":33},"alias_span":null,"name":"WasmError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1359},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","byte_start":1870,"byte_end":1882,"line_start":62,"line_end":62,"column_start":35,"column_end":47},"alias_span":null,"name":"WasmFuncType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":506},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","byte_start":1884,"byte_end":1894,"line_start":62,"line_end":62,"column_start":49,"column_end":59},"alias_span":null,"name":"WasmResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1275},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","byte_start":1896,"byte_end":1904,"line_start":62,"line_end":62,"column_start":61,"column_end":69},"alias_span":null,"name":"WasmType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":690},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","byte_start":1941,"byte_end":1955,"line_start":64,"line_end":64,"column_start":33,"column_end":47},"alias_span":null,"name":"FuncTranslator","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":769},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","byte_start":1991,"byte_end":2007,"line_start":65,"line_end":65,"column_start":35,"column_end":51},"alias_span":null,"name":"translate_module","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1027},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","byte_start":2043,"byte_end":2063,"line_start":66,"line_end":66,"column_start":35,"column_end":55},"alias_span":null,"name":"FuncTranslationState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1496},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","byte_start":2101,"byte_end":2123,"line_start":67,"line_end":67,"column_start":37,"column_end":59},"alias_span":null,"name":"ModuleTranslationState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1160},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","byte_start":2165,"byte_end":2186,"line_start":69,"line_end":69,"column_start":5,"column_end":26},"alias_span":null,"name":"get_vmctx_value_label","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1923},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","byte_start":2188,"byte_end":2197,"line_start":69,"line_end":69,"column_start":28,"column_end":37},"alias_span":null,"name":"DataIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1556},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","byte_start":2199,"byte_end":2215,"line_start":69,"line_end":69,"column_start":39,"column_end":55},"alias_span":null,"name":"DefinedFuncIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1649},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","byte_start":2217,"byte_end":2235,"line_start":69,"line_end":69,"column_start":57,"column_end":75},"alias_span":null,"name":"DefinedGlobalIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1618},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","byte_start":2237,"byte_end":2255,"line_start":69,"line_end":69,"column_start":77,"column_end":95},"alias_span":null,"name":"DefinedMemoryIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1587},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","byte_start":2261,"byte_end":2278,"line_start":70,"line_end":70,"column_start":5,"column_end":22},"alias_span":null,"name":"DefinedTableIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1979},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","byte_start":2280,"byte_end":2289,"line_start":70,"line_end":70,"column_start":24,"column_end":33},"alias_span":null,"name":"ElemIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1519},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","byte_start":2291,"byte_end":2300,"line_start":70,"line_end":70,"column_start":35,"column_end":44},"alias_span":null,"name":"FuncIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2031},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","byte_start":2302,"byte_end":2308,"line_start":70,"line_end":70,"column_start":46,"column_end":52},"alias_span":null,"name":"Global","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1755},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","byte_start":2310,"byte_end":2321,"line_start":70,"line_end":70,"column_start":54,"column_end":65},"alias_span":null,"name":"GlobalIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2104},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","byte_start":2323,"byte_end":2333,"line_start":70,"line_end":70,"column_start":67,"column_end":77},"alias_span":null,"name":"GlobalInit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2343},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","byte_start":2335,"byte_end":2341,"line_start":70,"line_end":70,"column_start":79,"column_end":85},"alias_span":null,"name":"Memory","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1811},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","byte_start":2343,"byte_end":2354,"line_start":70,"line_end":70,"column_start":87,"column_end":98},"alias_span":null,"name":"MemoryIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1867},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","byte_start":2360,"byte_end":2374,"line_start":71,"line_end":71,"column_start":5,"column_end":19},"alias_span":null,"name":"SignatureIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2204},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","byte_start":2376,"byte_end":2381,"line_start":71,"line_end":71,"column_start":21,"column_end":26},"alias_span":null,"name":"Table","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2277},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","byte_start":2383,"byte_end":2399,"line_start":71,"line_end":71,"column_start":28,"column_end":44},"alias_span":null,"name":"TableElementType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1699},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","byte_start":2401,"byte_end":2411,"line_start":71,"line_end":71,"column_start":46,"column_end":56},"alias_span":null,"name":"TableIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":37,"index":159},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","byte_start":2444,"byte_end":2459,"line_start":73,"line_end":73,"column_start":29,"column_end":44},"alias_span":null,"name":"FunctionBuilder","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","byte_start":0,"byte_end":2548,"line_start":1,"line_end":76,"column_start":1,"column_end":53},"name":"","qualname":"::","value":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":195},{"krate":0,"index":617},{"krate":0,"index":711},{"krate":0,"index":773},{"krate":0,"index":962},{"krate":0,"index":1106},{"krate":0,"index":1162},{"krate":0,"index":1163},{"krate":0,"index":1166},{"krate":0,"index":1169},{"krate":0,"index":1172},{"krate":0,"index":1175},{"krate":0,"index":1178},{"krate":0,"index":1181},{"krate":0,"index":1184},{"krate":0,"index":1187},{"krate":0,"index":1190},{"krate":0,"index":1193},{"krate":0,"index":1196},{"krate":0,"index":1199},{"krate":0,"index":1202},{"krate":0,"index":1205},{"krate":0,"index":1206},{"krate":0,"index":1209},{"krate":0,"index":1212},{"krate":0,"index":1215},{"krate":0,"index":1218},{"krate":0,"index":1221},{"krate":0,"index":1224},{"krate":0,"index":1227},{"krate":0,"index":1230},{"krate":0,"index":1233},{"krate":0,"index":1236},{"krate":0,"index":1239},{"krate":0,"index":1242},{"krate":0,"index":1245},{"krate":0,"index":1248},{"krate":0,"index":1251},{"krate":0,"index":1254},{"krate":0,"index":1257},{"krate":0,"index":1260}],"decl_id":null,"docs":" Performs translation from a wasm module in binary format to the in-memory form\n of Cranelift IR. More particularly, it translates the code of all the functions bodies and\n interacts with an environment implementing the\n [`ModuleEnvironment`](trait.ModuleEnvironment.html)\n trait to deal with tables, globals and linear memory.","sig":null,"attributes":[{"value":"/ Performs translation from a wasm module in binary format to the in-memory form","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","byte_start":0,"byte_end":82,"line_start":1,"line_end":1,"column_start":1,"column_end":83}},{"value":"/ of Cranelift IR. More particularly, it translates the code of all the functions bodies and","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","byte_start":83,"byte_end":177,"line_start":2,"line_end":2,"column_start":1,"column_end":95}},{"value":"/ interacts with an environment implementing the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","byte_start":178,"byte_end":228,"line_start":3,"line_end":3,"column_start":1,"column_end":51}},{"value":"/ [`ModuleEnvironment`](trait.ModuleEnvironment.html)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","byte_start":229,"byte_end":284,"line_start":4,"line_end":4,"column_start":1,"column_end":56}},{"value":"/ trait to deal with tables, globals and linear memory.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","byte_start":285,"byte_end":342,"line_start":5,"line_end":5,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","byte_start":343,"byte_end":346,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ The crate provides a `DummyEnvironment` struct that will allow to translate the code of the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","byte_start":347,"byte_end":442,"line_start":7,"line_end":7,"column_start":1,"column_end":96}},{"value":"/ functions but will fail at execution.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","byte_start":443,"byte_end":484,"line_start":8,"line_end":8,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","byte_start":485,"byte_end":488,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The main function of this module is [`translate_module`](fn.translate_module.html).","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","byte_start":489,"byte_end":576,"line_start":10,"line_end":10,"column_start":1,"column_end":88}},{"value":"deny(missing_docs, trivial_numeric_casts, unused_extern_crates)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","byte_start":578,"byte_end":645,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"warn(unused_import_braces)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","byte_start":646,"byte_end":676,"line_start":13,"line_end":13,"column_start":1,"column_end":31}},{"value":"deny(unstable_features)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","byte_start":706,"byte_end":729,"line_start":14,"line_end":14,"column_start":30,"column_end":53}},{"value":"no_std","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","byte_start":1212,"byte_end":1222,"line_start":30,"line_end":30,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":306},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":123233,"byte_end":123243,"line_start":36,"line_end":36,"column_start":12,"column_end":22},"name":"Exportable","qualname":"::environ::dummy::Exportable","value":"Exportable { entity, export_names }","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":309}],"decl_id":null,"docs":" A collection of names under which a given entity is exported.\n","sig":null,"attributes":[{"value":"/ A collection of names under which a given entity is exported.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":123156,"byte_end":123221,"line_start":35,"line_end":35,"column_start":1,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":308},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":123280,"byte_end":123286,"line_start":38,"line_end":38,"column_start":9,"column_end":15},"name":"entity","qualname":"::environ::dummy::Exportable::entity","value":"T","parent":{"krate":0,"index":306},"children":[],"decl_id":null,"docs":" A wasm entity.\n","sig":null,"attributes":[{"value":"/ A wasm entity.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":123253,"byte_end":123271,"line_start":37,"line_end":37,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":309},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":123350,"byte_end":123362,"line_start":41,"line_end":41,"column_start":9,"column_end":21},"name":"export_names","qualname":"::environ::dummy::Exportable::export_names","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":306},"children":[],"decl_id":null,"docs":" Names under which the entity is exported.\n","sig":null,"attributes":[{"value":"/ Names under which the entity is exported.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":123296,"byte_end":123341,"line_start":40,"line_end":40,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":123415,"byte_end":123418,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<Exportable<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":313},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":123718,"byte_end":123733,"line_start":56,"line_end":56,"column_start":12,"column_end":27},"name":"DummyModuleInfo","qualname":"::environ::dummy::DummyModuleInfo","value":"DummyModuleInfo { signatures, imported_funcs, imported_globals, imported_tables, imported_memories, functions, function_bodies, tables, memories, globals, start_func }","parent":null,"children":[{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325}],"decl_id":null,"docs":" The main state belonging to a `DummyEnvironment`. This is split out from\n `DummyEnvironment` to allow it to be borrowed separately from the\n `FuncTranslator` field.\n","sig":null,"attributes":[{"value":"/ The main state belonging to a `DummyEnvironment`. This is split out from","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":123532,"byte_end":123608,"line_start":53,"line_end":53,"column_start":1,"column_end":77}},{"value":"/ `DummyEnvironment` to allow it to be borrowed separately from the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":123609,"byte_end":123678,"line_start":54,"line_end":54,"column_start":1,"column_end":70}},{"value":"/ `FuncTranslator` field.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":123679,"byte_end":123706,"line_start":55,"line_end":55,"column_start":1,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":315},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":123907,"byte_end":123917,"line_start":61,"line_end":61,"column_start":9,"column_end":19},"name":"signatures","qualname":"::environ::dummy::DummyModuleInfo::signatures","value":"cranelift_entity::PrimaryMap<translation_utils::SignatureIndex, cranelift_codegen::ir::Signature>","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Signatures as provided by `declare_signature`.\n","sig":null,"attributes":[{"value":"/ Signatures as provided by `declare_signature`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":123848,"byte_end":123898,"line_start":60,"line_end":60,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":316},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":124062,"byte_end":124076,"line_start":64,"line_end":64,"column_start":9,"column_end":23},"name":"imported_funcs","qualname":"::environ::dummy::DummyModuleInfo::imported_funcs","value":"std::vec::Vec<(std::string::String, std::string::String)>","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Module and field names of imported functions as provided by `declare_func_import`.\n","sig":null,"attributes":[{"value":"/ Module and field names of imported functions as provided by `declare_func_import`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":123967,"byte_end":124053,"line_start":63,"line_end":63,"column_start":5,"column_end":91}}]},{"kind":"Field","id":{"krate":0,"index":317},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":124201,"byte_end":124217,"line_start":67,"line_end":67,"column_start":9,"column_end":25},"name":"imported_globals","qualname":"::environ::dummy::DummyModuleInfo::imported_globals","value":"std::vec::Vec<(std::string::String, std::string::String)>","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Module and field names of imported globals as provided by `declare_global_import`.\n","sig":null,"attributes":[{"value":"/ Module and field names of imported globals as provided by `declare_global_import`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":124106,"byte_end":124192,"line_start":66,"line_end":66,"column_start":5,"column_end":91}}]},{"kind":"Field","id":{"krate":0,"index":318},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":124340,"byte_end":124355,"line_start":70,"line_end":70,"column_start":9,"column_end":24},"name":"imported_tables","qualname":"::environ::dummy::DummyModuleInfo::imported_tables","value":"std::vec::Vec<(std::string::String, std::string::String)>","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Module and field names of imported tables as provided by `declare_table_import`.\n","sig":null,"attributes":[{"value":"/ Module and field names of imported tables as provided by `declare_table_import`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":124247,"byte_end":124331,"line_start":69,"line_end":69,"column_start":5,"column_end":89}}]},{"kind":"Field","id":{"krate":0,"index":319},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":124481,"byte_end":124498,"line_start":73,"line_end":73,"column_start":9,"column_end":26},"name":"imported_memories","qualname":"::environ::dummy::DummyModuleInfo::imported_memories","value":"std::vec::Vec<(std::string::String, std::string::String)>","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Module and field names of imported memories as provided by `declare_memory_import`.\n","sig":null,"attributes":[{"value":"/ Module and field names of imported memories as provided by `declare_memory_import`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":124385,"byte_end":124472,"line_start":72,"line_end":72,"column_start":5,"column_end":92}}]},{"kind":"Field","id":{"krate":0,"index":320},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":124571,"byte_end":124580,"line_start":76,"line_end":76,"column_start":9,"column_end":18},"name":"functions","qualname":"::environ::dummy::DummyModuleInfo::functions","value":"cranelift_entity::PrimaryMap<translation_utils::FuncIndex, environ::dummy::Exportable<translation_utils::SignatureIndex>>","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Functions, imported and local.\n","sig":null,"attributes":[{"value":"/ Functions, imported and local.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":124528,"byte_end":124562,"line_start":75,"line_end":75,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":321},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":124667,"byte_end":124682,"line_start":79,"line_end":79,"column_start":9,"column_end":24},"name":"function_bodies","qualname":"::environ::dummy::DummyModuleInfo::function_bodies","value":"cranelift_entity::PrimaryMap<translation_utils::DefinedFuncIndex, cranelift_codegen::ir::Function>","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Function bodies.\n","sig":null,"attributes":[{"value":"/ Function bodies.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":124638,"byte_end":124658,"line_start":78,"line_end":78,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":322},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":124784,"byte_end":124790,"line_start":82,"line_end":82,"column_start":9,"column_end":15},"name":"tables","qualname":"::environ::dummy::DummyModuleInfo::tables","value":"cranelift_entity::PrimaryMap<translation_utils::TableIndex, environ::dummy::Exportable<translation_utils::Table>>","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Tables as provided by `declare_table`.\n","sig":null,"attributes":[{"value":"/ Tables as provided by `declare_table`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":124733,"byte_end":124775,"line_start":81,"line_end":81,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":323},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":124894,"byte_end":124902,"line_start":85,"line_end":85,"column_start":9,"column_end":17},"name":"memories","qualname":"::environ::dummy::DummyModuleInfo::memories","value":"cranelift_entity::PrimaryMap<translation_utils::MemoryIndex, environ::dummy::Exportable<translation_utils::Memory>>","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Memories as provided by `declare_memory`.\n","sig":null,"attributes":[{"value":"/ Memories as provided by `declare_memory`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":124840,"byte_end":124885,"line_start":84,"line_end":84,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":324},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":125007,"byte_end":125014,"line_start":88,"line_end":88,"column_start":9,"column_end":16},"name":"globals","qualname":"::environ::dummy::DummyModuleInfo::globals","value":"cranelift_entity::PrimaryMap<translation_utils::GlobalIndex, environ::dummy::Exportable<translation_utils::Global>>","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Globals as provided by `declare_global`.\n","sig":null,"attributes":[{"value":"/ Globals as provided by `declare_global`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":124954,"byte_end":124998,"line_start":87,"line_end":87,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":325},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":125098,"byte_end":125108,"line_start":91,"line_end":91,"column_start":9,"column_end":19},"name":"start_func","qualname":"::environ::dummy::DummyModuleInfo::start_func","value":"core::option::Option<translation_utils::FuncIndex>","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" The start function.\n","sig":null,"attributes":[{"value":"/ The start function.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":125066,"byte_end":125089,"line_start":90,"line_end":90,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":125216,"byte_end":125219,"line_start":96,"line_end":96,"column_start":12,"column_end":15},"name":"new","qualname":"<DummyModuleInfo>::new","value":"pub fn new(TargetFrontendConfig) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `DummyModuleInfo` instance.\n","sig":null,"attributes":[{"value":"/ Creates a new `DummyModuleInfo` instance.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":125159,"byte_end":125204,"line_start":95,"line_end":95,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":328},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":126021,"byte_end":126037,"line_start":117,"line_end":117,"column_start":12,"column_end":28},"name":"DummyEnvironment","qualname":"::environ::dummy::DummyEnvironment","value":"DummyEnvironment { info, func_bytecode_sizes, module_name }","parent":null,"children":[{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335}],"decl_id":null,"docs":" This `ModuleEnvironment` implementation is a \"naïve\" one, doing essentially nothing and\n emitting placeholders when forced to. Don't try to execute code translated for this\n environment, essentially here for translation debug purposes.\n","sig":null,"attributes":[{"value":"/ This `ModuleEnvironment` implementation is a \"naïve\" one, doing essentially nothing and","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":125763,"byte_end":125855,"line_start":114,"line_end":114,"column_start":1,"column_end":92}},{"value":"/ emitting placeholders when forced to. Don't try to execute code translated for this","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":125856,"byte_end":125943,"line_start":115,"line_end":115,"column_start":1,"column_end":88}},{"value":"/ environment, essentially here for translation debug purposes.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":125944,"byte_end":126009,"line_start":116,"line_end":116,"column_start":1,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":329},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":126076,"byte_end":126080,"line_start":119,"line_end":119,"column_start":9,"column_end":13},"name":"info","qualname":"::environ::dummy::DummyEnvironment::info","value":"environ::dummy::DummyModuleInfo","parent":{"krate":0,"index":328},"children":[],"decl_id":null,"docs":" Module information.\n","sig":null,"attributes":[{"value":"/ Module information.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":126044,"byte_end":126067,"line_start":118,"line_end":118,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":331},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":126222,"byte_end":126241,"line_start":125,"line_end":125,"column_start":9,"column_end":28},"name":"func_bytecode_sizes","qualname":"::environ::dummy::DummyEnvironment::func_bytecode_sizes","value":"std::vec::Vec<usize>","parent":{"krate":0,"index":328},"children":[],"decl_id":null,"docs":" Vector of wasm bytecode size for each function.\n","sig":null,"attributes":[{"value":"/ Vector of wasm bytecode size for each function.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":126162,"byte_end":126213,"line_start":124,"line_end":124,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":334},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":126462,"byte_end":126473,"line_start":134,"line_end":134,"column_start":9,"column_end":20},"name":"module_name","qualname":"::environ::dummy::DummyEnvironment::module_name","value":"core::option::Option<std::string::String>","parent":{"krate":0,"index":328},"children":[],"decl_id":null,"docs":" Name of the module from the wasm file.\n","sig":null,"attributes":[{"value":"/ Name of the module from the wasm file.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":126411,"byte_end":126453,"line_start":133,"line_end":133,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":126658,"byte_end":126661,"line_start":142,"line_end":142,"column_start":12,"column_end":15},"name":"new","qualname":"<DummyEnvironment>::new","value":"pub fn new(TargetFrontendConfig, ReturnMode, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `DummyEnvironment` instance.\n","sig":null,"attributes":[{"value":"/ Creates a new `DummyEnvironment` instance.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":126600,"byte_end":126646,"line_start":141,"line_end":141,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":127158,"byte_end":127166,"line_start":156,"line_end":156,"column_start":12,"column_end":20},"name":"func_env","qualname":"<DummyEnvironment>::func_env","value":"pub fn func_env(&Self) -> DummyFuncEnvironment","parent":null,"children":[],"decl_id":null,"docs":" Return a `DummyFuncEnvironment` for translating functions within this\n `DummyEnvironment`.\n","sig":null,"attributes":[{"value":"/ Return a `DummyFuncEnvironment` for translating functions within this","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":127045,"byte_end":127118,"line_start":154,"line_end":154,"column_start":5,"column_end":78}},{"value":"/ `DummyEnvironment`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":127123,"byte_end":127146,"line_start":155,"line_end":155,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":127487,"byte_end":127507,"line_start":165,"line_end":165,"column_start":12,"column_end":32},"name":"get_num_func_imports","qualname":"<DummyEnvironment>::get_num_func_imports","value":"pub fn get_num_func_imports(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of imported functions within this `DummyEnvironment`.\n","sig":null,"attributes":[{"value":"/ Return the number of imported functions within this `DummyEnvironment`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":127400,"byte_end":127475,"line_start":164,"line_end":164,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":127696,"byte_end":127709,"line_start":171,"line_end":171,"column_start":12,"column_end":25},"name":"get_func_name","qualname":"<DummyEnvironment>::get_func_name","value":"pub fn get_func_name(&Self, FuncIndex) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Return the name of the function, if a name for the function with\n the corresponding index exists.\n","sig":null,"attributes":[{"value":"/ Return the name of the function, if a name for the function with","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":127576,"byte_end":127644,"line_start":169,"line_end":169,"column_start":5,"column_end":73}},{"value":"/ the corresponding index exists.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":127649,"byte_end":127684,"line_start":170,"line_end":170,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":342},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":127918,"byte_end":127938,"line_start":177,"line_end":177,"column_start":12,"column_end":32},"name":"DummyFuncEnvironment","qualname":"::environ::dummy::DummyFuncEnvironment","value":"DummyFuncEnvironment { mod_info }","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":345}],"decl_id":null,"docs":" The `FuncEnvironment` implementation for use by the `DummyEnvironment`.\n","sig":null,"attributes":[{"value":"/ The `FuncEnvironment` implementation for use by the `DummyEnvironment`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":127831,"byte_end":127906,"line_start":176,"line_end":176,"column_start":1,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":344},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":127969,"byte_end":127977,"line_start":178,"line_end":178,"column_start":9,"column_end":17},"name":"mod_info","qualname":"::environ::dummy::DummyFuncEnvironment::mod_info","value":"&'dummy_environment environ::dummy::DummyModuleInfo","parent":{"krate":0,"index":342},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":128128,"byte_end":128131,"line_start":184,"line_end":184,"column_start":12,"column_end":15},"name":"new","qualname":"<DummyFuncEnvironment>::new","value":"pub fn new(&'dummy_environment DummyModuleInfo, ReturnMode) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1276},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":146554,"byte_end":146557,"line_start":34,"line_end":34,"column_start":5,"column_end":8},"name":"I32","qualname":"::environ::spec::WasmType::I32","value":"WasmType::I32","parent":{"krate":0,"index":1275},"children":[],"decl_id":null,"docs":" I32 type\n","sig":null,"attributes":[{"value":"/ I32 type","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":146537,"byte_end":146549,"line_start":33,"line_end":33,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1278},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":146580,"byte_end":146583,"line_start":36,"line_end":36,"column_start":5,"column_end":8},"name":"I64","qualname":"::environ::spec::WasmType::I64","value":"WasmType::I64","parent":{"krate":0,"index":1275},"children":[],"decl_id":null,"docs":" I64 type\n","sig":null,"attributes":[{"value":"/ I64 type","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":146563,"byte_end":146575,"line_start":35,"line_end":35,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1280},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":146606,"byte_end":146609,"line_start":38,"line_end":38,"column_start":5,"column_end":8},"name":"F32","qualname":"::environ::spec::WasmType::F32","value":"WasmType::F32","parent":{"krate":0,"index":1275},"children":[],"decl_id":null,"docs":" F32 type\n","sig":null,"attributes":[{"value":"/ F32 type","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":146589,"byte_end":146601,"line_start":37,"line_end":37,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1282},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":146632,"byte_end":146635,"line_start":40,"line_end":40,"column_start":5,"column_end":8},"name":"F64","qualname":"::environ::spec::WasmType::F64","value":"WasmType::F64","parent":{"krate":0,"index":1275},"children":[],"decl_id":null,"docs":" F64 type\n","sig":null,"attributes":[{"value":"/ F64 type","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":146615,"byte_end":146627,"line_start":39,"line_end":39,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1284},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":146659,"byte_end":146663,"line_start":42,"line_end":42,"column_start":5,"column_end":9},"name":"V128","qualname":"::environ::spec::WasmType::V128","value":"WasmType::V128","parent":{"krate":0,"index":1275},"children":[],"decl_id":null,"docs":" V128 type\n","sig":null,"attributes":[{"value":"/ V128 type","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":146641,"byte_end":146654,"line_start":41,"line_end":41,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1286},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":146690,"byte_end":146697,"line_start":44,"line_end":44,"column_start":5,"column_end":12},"name":"FuncRef","qualname":"::environ::spec::WasmType::FuncRef","value":"WasmType::FuncRef","parent":{"krate":0,"index":1275},"children":[],"decl_id":null,"docs":" FuncRef type\n","sig":null,"attributes":[{"value":"/ FuncRef type","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":146669,"byte_end":146685,"line_start":43,"line_end":43,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1288},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":146726,"byte_end":146735,"line_start":46,"line_end":46,"column_start":5,"column_end":14},"name":"ExternRef","qualname":"::environ::spec::WasmType::ExternRef","value":"WasmType::ExternRef","parent":{"krate":0,"index":1275},"children":[],"decl_id":null,"docs":" ExternRef type\n","sig":null,"attributes":[{"value":"/ ExternRef type","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":146703,"byte_end":146721,"line_start":45,"line_end":45,"column_start":5,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":1275},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":146522,"byte_end":146530,"line_start":32,"line_end":32,"column_start":10,"column_end":18},"name":"WasmType","qualname":"::environ::spec::WasmType","value":"pub enum WasmType { I32, I64, F32, F64, V128, FuncRef, ExternRef, }","parent":null,"children":[{"krate":0,"index":1276},{"krate":0,"index":1278},{"krate":0,"index":1280},{"krate":0,"index":1282},{"krate":0,"index":1284},{"krate":0,"index":1286},{"krate":0,"index":1288}],"decl_id":null,"docs":" WebAssembly value type -- equivalent of `wasmparser`'s Type.\n","sig":null,"attributes":[{"value":"/ WebAssembly value type -- equivalent of `wasmparser`'s Type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":146327,"byte_end":146391,"line_start":29,"line_end":29,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":1359},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":148133,"byte_end":148145,"line_start":86,"line_end":86,"column_start":12,"column_end":24},"name":"WasmFuncType","qualname":"::environ::spec::WasmFuncType","value":"WasmFuncType { params, returns }","parent":null,"children":[{"krate":0,"index":1360},{"krate":0,"index":1361}],"decl_id":null,"docs":" WebAssembly function type -- equivalent of `wasmparser`'s FuncType.\n","sig":null,"attributes":[{"value":"/ WebAssembly function type -- equivalent of `wasmparser`'s FuncType.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":147935,"byte_end":148006,"line_start":83,"line_end":83,"column_start":1,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":1360},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":148187,"byte_end":148193,"line_start":88,"line_end":88,"column_start":9,"column_end":15},"name":"params","qualname":"::environ::spec::WasmFuncType::params","value":"std::boxed::Box<[environ::spec::WasmType]>","parent":{"krate":0,"index":1359},"children":[],"decl_id":null,"docs":" Function params types.\n","sig":null,"attributes":[{"value":"/ Function params types.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":148152,"byte_end":148178,"line_start":87,"line_end":87,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":1361},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":148250,"byte_end":148257,"line_start":90,"line_end":90,"column_start":9,"column_end":16},"name":"returns","qualname":"::environ::spec::WasmFuncType::returns","value":"std::boxed::Box<[environ::spec::WasmType]>","parent":{"krate":0,"index":1359},"children":[],"decl_id":null,"docs":" Returns params types.\n","sig":null,"attributes":[{"value":"/ Returns params types.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":148216,"byte_end":148241,"line_start":89,"line_end":89,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1412},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":149045,"byte_end":149050,"line_start":117,"line_end":117,"column_start":5,"column_end":10},"name":"Const","qualname":"::environ::spec::GlobalVariable::Const","value":"GlobalVariable::Const(ir::Value)","parent":{"krate":0,"index":1411},"children":[],"decl_id":null,"docs":" This is a constant global with a value known at compile time.\n","sig":null,"attributes":[{"value":"/ This is a constant global with a value known at compile time.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":148975,"byte_end":149040,"line_start":116,"line_end":116,"column_start":5,"column_end":70}}]},{"kind":"StructVariant","id":{"krate":0,"index":1415},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":149156,"byte_end":149162,"line_start":120,"line_end":120,"column_start":5,"column_end":11},"name":"Memory","qualname":"::environ::spec::GlobalVariable::Memory","value":"GlobalVariable::Memory { gv, offset, ty }","parent":{"krate":0,"index":1411},"children":[],"decl_id":null,"docs":" This is a variable in memory that should be referenced through a `GlobalValue`.\n","sig":null,"attributes":[{"value":"/ This is a variable in memory that should be referenced through a `GlobalValue`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":149068,"byte_end":149151,"line_start":119,"line_end":119,"column_start":5,"column_end":88}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1419},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":149474,"byte_end":149480,"line_start":130,"line_end":130,"column_start":5,"column_end":11},"name":"Custom","qualname":"::environ::spec::GlobalVariable::Custom","value":"GlobalVariable::Custom","parent":{"krate":0,"index":1411},"children":[],"decl_id":null,"docs":" This is a global variable that needs to be handled by the environment.\n","sig":null,"attributes":[{"value":"/ This is a global variable that needs to be handled by the environment.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":149395,"byte_end":149469,"line_start":129,"line_end":129,"column_start":5,"column_end":79}}]},{"kind":"Enum","id":{"krate":0,"index":1411},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":148954,"byte_end":148968,"line_start":115,"line_end":115,"column_start":10,"column_end":24},"name":"GlobalVariable","qualname":"::environ::spec::GlobalVariable","value":"pub enum GlobalVariable {\n    Const(ir::Value),\n    Memory {\n        gv: ir::GlobalValue,\n        offset: Offset32,\n        ty: ir::Type,\n    },\n    Custom,\n}","parent":null,"children":[{"krate":0,"index":1412},{"krate":0,"index":1415},{"krate":0,"index":1419}],"decl_id":null,"docs":" The value of a WebAssembly global variable.\n","sig":null,"attributes":[{"value":"/ The value of a WebAssembly global variable.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":148874,"byte_end":148921,"line_start":113,"line_end":113,"column_start":1,"column_end":48}}]},{"kind":"StructVariant","id":{"krate":0,"index":1437},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":150001,"byte_end":150019,"line_start":144,"line_end":144,"column_start":5,"column_end":23},"name":"InvalidWebAssembly","qualname":"::environ::spec::WasmError::InvalidWebAssembly","value":"WasmError::InvalidWebAssembly { message, offset }","parent":{"krate":0,"index":1424},"children":[],"decl_id":null,"docs":" The input WebAssembly code is invalid.","sig":null,"attributes":[{"value":"/ The input WebAssembly code is invalid.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":149699,"byte_end":149741,"line_start":139,"line_end":139,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":149746,"byte_end":149749,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ This error code is used by a WebAssembly translator when it encounters invalid WebAssembly","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":149754,"byte_end":149848,"line_start":141,"line_end":141,"column_start":5,"column_end":99}},{"value":"/ code. This should never happen for validated WebAssembly code.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":149853,"byte_end":149919,"line_start":142,"line_end":142,"column_start":5,"column_end":71}},{"value":"error(\"Invalid input WebAssembly code at offset {offset}: {message}\")","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":149924,"byte_end":149996,"line_start":143,"line_end":143,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1440},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":150438,"byte_end":150449,"line_start":155,"line_end":155,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::environ::spec::WasmError::Unsupported","value":"WasmError::Unsupported(std::string::String)","parent":{"krate":0,"index":1424},"children":[],"decl_id":null,"docs":" A feature used by the WebAssembly code is not supported by the embedding environment.","sig":null,"attributes":[{"value":"/ A feature used by the WebAssembly code is not supported by the embedding environment.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":150207,"byte_end":150296,"line_start":151,"line_end":151,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":150301,"byte_end":150304,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ Embedding environments may have their own limitations and feature restrictions.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":150309,"byte_end":150392,"line_start":153,"line_end":153,"column_start":5,"column_end":88}},{"value":"error(\"Unsupported feature: {0}\")","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":150397,"byte_end":150433,"line_start":154,"line_end":154,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1443},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":150876,"byte_end":150893,"line_start":164,"line_end":164,"column_start":5,"column_end":22},"name":"ImplLimitExceeded","qualname":"::environ::spec::WasmError::ImplLimitExceeded","value":"WasmError::ImplLimitExceeded","parent":{"krate":0,"index":1424},"children":[],"decl_id":null,"docs":" An implementation limit was exceeded.","sig":null,"attributes":[{"value":"/ An implementation limit was exceeded.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":150477,"byte_end":150518,"line_start":157,"line_end":157,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":150523,"byte_end":150526,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ Cranelift can compile very large and complicated functions, but the [implementation has","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":150531,"byte_end":150622,"line_start":159,"line_end":159,"column_start":5,"column_end":96}},{"value":"/ limits][limits] that cause compilation to fail when they are exceeded.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":150627,"byte_end":150701,"line_start":160,"line_end":160,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":150706,"byte_end":150709,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ [limits]: https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/docs/ir.md#implementation-limits","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":150714,"byte_end":150825,"line_start":162,"line_end":162,"column_start":5,"column_end":116}},{"value":"error(\"Implementation limit exceeded\")","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":150830,"byte_end":150871,"line_start":163,"line_end":163,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1445},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":150964,"byte_end":150968,"line_start":168,"line_end":168,"column_start":5,"column_end":9},"name":"User","qualname":"::environ::spec::WasmError::User","value":"WasmError::User(std::string::String)","parent":{"krate":0,"index":1424},"children":[],"decl_id":null,"docs":" Any user-defined error.\n","sig":null,"attributes":[{"value":"/ Any user-defined error.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":150900,"byte_end":150927,"line_start":166,"line_end":166,"column_start":5,"column_end":32}},{"value":"error(\"User error: {0}\")","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":150932,"byte_end":150959,"line_start":167,"line_end":167,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":1424},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":149683,"byte_end":149692,"line_start":138,"line_end":138,"column_start":10,"column_end":19},"name":"WasmError","qualname":"::environ::spec::WasmError","value":"pub enum WasmError {\n    InvalidWebAssembly {\n        message: std::string::String,\n        offset: usize,\n    },\n    Unsupported(std::string::String),\n    ImplLimitExceeded,\n    User(std::string::String),\n}","parent":null,"children":[{"krate":0,"index":1437},{"krate":0,"index":1440},{"krate":0,"index":1443},{"krate":0,"index":1445}],"decl_id":null,"docs":" A WebAssembly translation error.","sig":null,"attributes":[{"value":"/ A WebAssembly translation error.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":149485,"byte_end":149521,"line_start":133,"line_end":133,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":149522,"byte_end":149525,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ When a WebAssembly function can't be translated, one of these error codes will be returned","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":149526,"byte_end":149620,"line_start":135,"line_end":135,"column_start":1,"column_end":95}},{"value":"/ to describe the failure.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":149621,"byte_end":149649,"line_start":136,"line_end":136,"column_start":1,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":506},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":151629,"byte_end":151639,"line_start":189,"line_end":189,"column_start":10,"column_end":20},"name":"WasmResult","qualname":"::environ::spec::WasmResult","value":"Result<T, WasmError>","parent":null,"children":[],"decl_id":null,"docs":" A convenient alias for a `Result` that uses `WasmError` as the error type.\n","sig":null,"attributes":[{"value":"/ A convenient alias for a `Result` that uses `WasmError` as the error type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":151541,"byte_end":151619,"line_start":188,"line_end":188,"column_start":1,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1449},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":151823,"byte_end":151836,"line_start":195,"line_end":195,"column_start":5,"column_end":18},"name":"NormalReturns","qualname":"::environ::spec::ReturnMode::NormalReturns","value":"ReturnMode::NormalReturns","parent":{"krate":0,"index":1448},"children":[],"decl_id":null,"docs":" Use normal return instructions as needed.\n","sig":null,"attributes":[{"value":"/ Use normal return instructions as needed.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":151773,"byte_end":151818,"line_start":194,"line_end":194,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1451},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":151910,"byte_end":151927,"line_start":197,"line_end":197,"column_start":5,"column_end":22},"name":"FallthroughReturn","qualname":"::environ::spec::ReturnMode::FallthroughReturn","value":"ReturnMode::FallthroughReturn","parent":{"krate":0,"index":1448},"children":[],"decl_id":null,"docs":" Use a single fallthrough return at the end of the function.\n","sig":null,"attributes":[{"value":"/ Use a single fallthrough return at the end of the function.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":151842,"byte_end":151905,"line_start":196,"line_end":196,"column_start":5,"column_end":68}}]},{"kind":"Enum","id":{"krate":0,"index":1448},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":151756,"byte_end":151766,"line_start":193,"line_end":193,"column_start":10,"column_end":20},"name":"ReturnMode","qualname":"::environ::spec::ReturnMode","value":"pub enum ReturnMode { NormalReturns, FallthroughReturn, }","parent":null,"children":[{"krate":0,"index":1449},{"krate":0,"index":1451}],"decl_id":null,"docs":" How to return from functions.\n","sig":null,"attributes":[{"value":"/ How to return from functions.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":151668,"byte_end":151701,"line_start":191,"line_end":191,"column_start":1,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":508},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":152002,"byte_end":152019,"line_start":201,"line_end":201,"column_start":11,"column_end":28},"name":"TargetEnvironment","qualname":"::environ::spec::TargetEnvironment","value":"TargetEnvironment","parent":null,"children":[{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512}],"decl_id":null,"docs":" Environment affecting the translation of a WebAssembly.\n","sig":null,"attributes":[{"value":"/ Environment affecting the translation of a WebAssembly.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":151932,"byte_end":151991,"line_start":200,"line_end":200,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":152110,"byte_end":152123,"line_start":203,"line_end":203,"column_start":8,"column_end":21},"name":"target_config","qualname":"::environ::spec::TargetEnvironment::target_config","value":"pub fn target_config(&Self) -> TargetFrontendConfig","parent":{"krate":0,"index":508},"children":[],"decl_id":null,"docs":" Get the information needed to produce Cranelift IR for the given target.\n","sig":null,"attributes":[{"value":"/ Get the information needed to produce Cranelift IR for the given target.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":152026,"byte_end":152102,"line_start":202,"line_end":202,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":152327,"byte_end":152339,"line_start":208,"line_end":208,"column_start":8,"column_end":20},"name":"pointer_type","qualname":"::environ::spec::TargetEnvironment::pointer_type","value":"pub fn pointer_type(&Self) -> ir::Type","parent":{"krate":0,"index":508},"children":[],"decl_id":null,"docs":" Get the Cranelift integer type to use for native pointers.","sig":null,"attributes":[{"value":"/ Get the Cranelift integer type to use for native pointers.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":152161,"byte_end":152223,"line_start":205,"line_end":205,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":152228,"byte_end":152231,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ This returns `I64` for 64-bit architectures and `I32` for 32-bit architectures.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":152236,"byte_end":152319,"line_start":207,"line_end":207,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":152506,"byte_end":152519,"line_start":213,"line_end":213,"column_start":8,"column_end":21},"name":"pointer_bytes","qualname":"::environ::spec::TargetEnvironment::pointer_bytes","value":"pub fn pointer_bytes(&Self) -> u8","parent":{"krate":0,"index":508},"children":[],"decl_id":null,"docs":" Get the size of a native pointer, in bytes.\n","sig":null,"attributes":[{"value":"/ Get the size of a native pointer, in bytes.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":152451,"byte_end":152498,"line_start":212,"line_end":212,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":152941,"byte_end":152955,"line_start":224,"line_end":224,"column_start":8,"column_end":22},"name":"reference_type","qualname":"::environ::spec::TargetEnvironment::reference_type","value":"pub fn reference_type(&Self, WasmType) -> ir::Type","parent":{"krate":0,"index":508},"children":[],"decl_id":null,"docs":" Get the Cranelift reference type to use for the given Wasm reference\n type.","sig":null,"attributes":[{"value":"/ Get the Cranelift reference type to use for the given Wasm reference","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":152591,"byte_end":152663,"line_start":217,"line_end":217,"column_start":5,"column_end":77}},{"value":"/ type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":152668,"byte_end":152677,"line_start":218,"line_end":218,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":152682,"byte_end":152685,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ By default, this returns `R64` for 64-bit architectures and `R32` for","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":152690,"byte_end":152763,"line_start":220,"line_end":220,"column_start":5,"column_end":78}},{"value":"/ 32-bit architectures. If you override this, then you should also","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":152768,"byte_end":152836,"line_start":221,"line_end":221,"column_start":5,"column_end":73}},{"value":"/ override `FuncEnvironment::{translate_ref_null, translate_ref_is_null}`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":152841,"byte_end":152916,"line_start":222,"line_end":222,"column_start":5,"column_end":80}},{"value":"/ as well.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":152921,"byte_end":152933,"line_start":223,"line_end":223,"column_start":5,"column_end":17}}]},{"kind":"Trait","id":{"krate":0,"index":513},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":153522,"byte_end":153537,"line_start":239,"line_end":239,"column_start":11,"column_end":26},"name":"FuncEnvironment","qualname":"::environ::spec::FuncEnvironment","value":"FuncEnvironment: TargetEnvironment","parent":null,"children":[{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547}],"decl_id":null,"docs":" Environment affecting the translation of a single WebAssembly function.","sig":null,"attributes":[{"value":"/ Environment affecting the translation of a single WebAssembly function.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":153211,"byte_end":153286,"line_start":234,"line_end":234,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":153287,"byte_end":153290,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ A `FuncEnvironment` trait object is required to translate a WebAssembly function to Cranelift","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":153291,"byte_end":153388,"line_start":236,"line_end":236,"column_start":1,"column_end":98}},{"value":"/ IR. The function environment provides information about the WebAssembly module as well as the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":153389,"byte_end":153486,"line_start":237,"line_end":237,"column_start":1,"column_end":98}},{"value":"/ runtime environment.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":153487,"byte_end":153511,"line_start":238,"line_end":238,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":153721,"byte_end":153738,"line_start":242,"line_end":242,"column_start":8,"column_end":25},"name":"is_wasm_parameter","qualname":"::environ::spec::FuncEnvironment::is_wasm_parameter","value":"pub fn is_wasm_parameter(&Self, &ir::Signature, usize) -> bool","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":" Is the given parameter of the given function a wasm-level parameter, as opposed to a hidden\n parameter added for use by the implementation?\n","sig":null,"attributes":[{"value":"/ Is the given parameter of the given function a wasm-level parameter, as opposed to a hidden","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":153563,"byte_end":153658,"line_start":240,"line_end":240,"column_start":5,"column_end":100}},{"value":"/ parameter added for use by the implementation?","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":153663,"byte_end":153713,"line_start":241,"line_end":241,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":154034,"byte_end":154048,"line_start":248,"line_end":248,"column_start":8,"column_end":22},"name":"is_wasm_return","qualname":"::environ::spec::FuncEnvironment::is_wasm_return","value":"pub fn is_wasm_return(&Self, &ir::Signature, usize) -> bool","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":" Is the given return of the given function a wasm-level parameter, as\n opposed to a hidden parameter added for use by the implementation?\n","sig":null,"attributes":[{"value":"/ Is the given return of the given function a wasm-level parameter, as","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":153879,"byte_end":153951,"line_start":246,"line_end":246,"column_start":5,"column_end":77}},{"value":"/ opposed to a hidden parameter added for use by the implementation?","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":153956,"byte_end":154026,"line_start":247,"line_end":247,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":154422,"byte_end":154433,"line_start":255,"line_end":255,"column_start":8,"column_end":19},"name":"return_mode","qualname":"::environ::spec::FuncEnvironment::return_mode","value":"pub fn return_mode(&Self) -> ReturnMode","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":" Should the code be structured to use a single `fallthrough_return` instruction at the end\n of the function body, rather than `return` instructions as needed? This is used by VMs\n to append custom epilogues.\n","sig":null,"attributes":[{"value":"/ Should the code be structured to use a single `fallthrough_return` instruction at the end","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":154190,"byte_end":154283,"line_start":252,"line_end":252,"column_start":5,"column_end":98}},{"value":"/ of the function body, rather than `return` instructions as needed? This is used by VMs","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":154288,"byte_end":154378,"line_start":253,"line_end":253,"column_start":5,"column_end":95}},{"value":"/ to append custom epilogues.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":154383,"byte_end":154414,"line_start":254,"line_end":254,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":154864,"byte_end":154875,"line_start":266,"line_end":266,"column_start":8,"column_end":19},"name":"make_global","qualname":"::environ::spec::FuncEnvironment::make_global","value":"pub fn make_global(&mut Self, &mut ir::Function, GlobalIndex)\n-> WasmResult<GlobalVariable>","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":" Set up the necessary preamble definitions in `func` to access the global variable\n identified by `index`.","sig":null,"attributes":[{"value":"/ Set up the necessary preamble definitions in `func` to access the global variable","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":154502,"byte_end":154587,"line_start":259,"line_end":259,"column_start":5,"column_end":90}},{"value":"/ identified by `index`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":154592,"byte_end":154618,"line_start":260,"line_end":260,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":154623,"byte_end":154626,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ The index space covers both imported globals and globals defined by the module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":154631,"byte_end":154714,"line_start":262,"line_end":262,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":154719,"byte_end":154722,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ Return the global variable reference that should be used to access the global and the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":154727,"byte_end":154816,"line_start":264,"line_end":264,"column_start":5,"column_end":94}},{"value":"/ WebAssembly type of the global.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":154821,"byte_end":154856,"line_start":265,"line_end":265,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":155205,"byte_end":155214,"line_start":276,"line_end":276,"column_start":8,"column_end":17},"name":"make_heap","qualname":"::environ::spec::FuncEnvironment::make_heap","value":"pub fn make_heap(&mut Self, &mut ir::Function, MemoryIndex)\n-> WasmResult<ir::Heap>","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":" Set up the necessary preamble definitions in `func` to access the linear memory identified\n by `index`.","sig":null,"attributes":[{"value":"/ Set up the necessary preamble definitions in `func` to access the linear memory identified","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":154999,"byte_end":155093,"line_start":272,"line_end":272,"column_start":5,"column_end":99}},{"value":"/ by `index`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":155098,"byte_end":155113,"line_start":273,"line_end":273,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":155118,"byte_end":155121,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ The index space covers both imported and locally declared memories.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":155126,"byte_end":155197,"line_start":275,"line_end":275,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":155497,"byte_end":155507,"line_start":282,"line_end":282,"column_start":8,"column_end":18},"name":"make_table","qualname":"::environ::spec::FuncEnvironment::make_table","value":"pub fn make_table(&mut Self, &mut ir::Function, TableIndex)\n-> WasmResult<ir::Table>","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":" Set up the necessary preamble definitions in `func` to access the table identified\n by `index`.","sig":null,"attributes":[{"value":"/ Set up the necessary preamble definitions in `func` to access the table identified","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":155301,"byte_end":155387,"line_start":278,"line_end":278,"column_start":5,"column_end":91}},{"value":"/ by `index`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":155392,"byte_end":155407,"line_start":279,"line_end":279,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":155412,"byte_end":155415,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ The index space covers both imported and locally declared tables.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":155420,"byte_end":155489,"line_start":281,"line_end":281,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":156102,"byte_end":156119,"line_start":293,"line_end":293,"column_start":8,"column_end":25},"name":"make_indirect_sig","qualname":"::environ::spec::FuncEnvironment::make_indirect_sig","value":"pub fn make_indirect_sig(&mut Self, &mut ir::Function, SignatureIndex)\n-> WasmResult<ir::SigRef>","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":" Set up a signature definition in the preamble of `func` that can be used for an indirect\n call with signature `index`.","sig":null,"attributes":[{"value":"/ Set up a signature definition in the preamble of `func` that can be used for an indirect","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":155594,"byte_end":155686,"line_start":284,"line_end":284,"column_start":5,"column_end":97}},{"value":"/ call with signature `index`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":155691,"byte_end":155723,"line_start":285,"line_end":285,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":155728,"byte_end":155731,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ The signature may contain additional arguments needed for an indirect call, but the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":155736,"byte_end":155823,"line_start":287,"line_end":287,"column_start":5,"column_end":92}},{"value":"/ arguments marked as `ArgumentPurpose::Normal` must correspond to the WebAssembly signature","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":155828,"byte_end":155922,"line_start":288,"line_end":288,"column_start":5,"column_end":99}},{"value":"/ arguments.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":155927,"byte_end":155941,"line_start":289,"line_end":289,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":155946,"byte_end":155949,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ The signature will only be used for indirect calls, even if the module has direct function","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":155954,"byte_end":156048,"line_start":291,"line_end":291,"column_start":5,"column_end":99}},{"value":"/ calls with the same WebAssembly type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":156053,"byte_end":156094,"line_start":292,"line_end":292,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":156871,"byte_end":156887,"line_start":310,"line_end":310,"column_start":8,"column_end":24},"name":"make_direct_func","qualname":"::environ::spec::FuncEnvironment::make_direct_func","value":"pub fn make_direct_func(&mut Self, &mut ir::Function, FuncIndex)\n-> WasmResult<ir::FuncRef>","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":" Set up an external function definition in the preamble of `func` that can be used to\n directly call the function `index`.","sig":null,"attributes":[{"value":"/ Set up an external function definition in the preamble of `func` that can be used to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":156242,"byte_end":156330,"line_start":299,"line_end":299,"column_start":5,"column_end":93}},{"value":"/ directly call the function `index`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":156335,"byte_end":156374,"line_start":300,"line_end":300,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":156379,"byte_end":156382,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ The index space covers both imported functions and functions defined in the current module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":156387,"byte_end":156482,"line_start":302,"line_end":302,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":156487,"byte_end":156490,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ The function's signature may contain additional arguments needed for a direct call, but the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":156495,"byte_end":156590,"line_start":304,"line_end":304,"column_start":5,"column_end":100}},{"value":"/ arguments marked as `ArgumentPurpose::Normal` must correspond to the WebAssembly signature","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":156595,"byte_end":156689,"line_start":305,"line_end":305,"column_start":5,"column_end":99}},{"value":"/ arguments.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":156694,"byte_end":156708,"line_start":306,"line_end":306,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":156713,"byte_end":156716,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ The function's signature will only be used for direct calls, even if the module has","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":156721,"byte_end":156808,"line_start":308,"line_end":308,"column_start":5,"column_end":92}},{"value":"/ indirect calls with the same WebAssembly type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":156813,"byte_end":156863,"line_start":309,"line_end":309,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":157553,"byte_end":157576,"line_start":326,"line_end":326,"column_start":8,"column_end":31},"name":"translate_call_indirect","qualname":"::environ::spec::FuncEnvironment::translate_call_indirect","value":"pub fn translate_call_indirect(&mut Self, FuncCursor, TableIndex, ir::Table,\n                               SignatureIndex, ir::SigRef, ir::Value,\n                               &[ir::Value]) -> WasmResult<ir::Inst>","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":" Translate a `call_indirect` WebAssembly instruction at `pos`.","sig":null,"attributes":[{"value":"/ Translate a `call_indirect` WebAssembly instruction at `pos`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":157006,"byte_end":157071,"line_start":316,"line_end":316,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":157076,"byte_end":157079,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ Insert instructions at `pos` for an indirect call to the function `callee` in the table","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":157084,"byte_end":157175,"line_start":318,"line_end":318,"column_start":5,"column_end":96}},{"value":"/ `table_index` with WebAssembly signature `sig_index`. The `callee` value will have type","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":157180,"byte_end":157271,"line_start":319,"line_end":319,"column_start":5,"column_end":96}},{"value":"/ `i32`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":157276,"byte_end":157286,"line_start":320,"line_end":320,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":157291,"byte_end":157294,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ The signature `sig_ref` was previously created by `make_indirect_sig()`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":157299,"byte_end":157375,"line_start":322,"line_end":322,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":157380,"byte_end":157383,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ Return the call instruction whose results are the WebAssembly return values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":157388,"byte_end":157468,"line_start":324,"line_end":324,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":158189,"byte_end":158203,"line_start":344,"line_end":344,"column_start":8,"column_end":22},"name":"translate_call","qualname":"::environ::spec::FuncEnvironment::translate_call","value":"pub fn translate_call(&mut Self, FuncCursor, FuncIndex, ir::FuncRef,\n                      &[ir::Value]) -> WasmResult<ir::Inst>","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":" Translate a `call` WebAssembly instruction at `pos`.","sig":null,"attributes":[{"value":"/ Translate a `call` WebAssembly instruction at `pos`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":157841,"byte_end":157897,"line_start":337,"line_end":337,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":157902,"byte_end":157905,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ Insert instructions at `pos` for a direct call to the function `callee_index`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":157910,"byte_end":157992,"line_start":339,"line_end":339,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":157997,"byte_end":158000,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ The function reference `callee` was previously created by `make_direct_func()`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":158005,"byte_end":158088,"line_start":341,"line_end":341,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":158093,"byte_end":158096,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ Return the call instruction whose results are the WebAssembly return values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":158101,"byte_end":158181,"line_start":343,"line_end":343,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":158794,"byte_end":158815,"line_start":362,"line_end":362,"column_start":8,"column_end":29},"name":"translate_memory_grow","qualname":"::environ::spec::FuncEnvironment::translate_memory_grow","value":"pub fn translate_memory_grow(&mut Self, FuncCursor, MemoryIndex, ir::Heap,\n                             ir::Value) -> WasmResult<ir::Value>","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":" Translate a `memory.grow` WebAssembly instruction.","sig":null,"attributes":[{"value":"/ Translate a `memory.grow` WebAssembly instruction.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":158438,"byte_end":158492,"line_start":354,"line_end":354,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":158497,"byte_end":158500,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ The `index` provided identifies the linear memory to grow, and `heap` is the heap reference","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":158505,"byte_end":158600,"line_start":356,"line_end":356,"column_start":5,"column_end":100}},{"value":"/ returned by `make_heap` for the same index.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":158605,"byte_end":158652,"line_start":357,"line_end":357,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":158657,"byte_end":158660,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ The `val` value is the requested memory size in pages.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":158665,"byte_end":158723,"line_start":359,"line_end":359,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":158728,"byte_end":158731,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ Returns the old size (in pages) of the memory.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":158736,"byte_end":158786,"line_start":361,"line_end":361,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":525},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":159255,"byte_end":159276,"line_start":376,"line_end":376,"column_start":8,"column_end":29},"name":"translate_memory_size","qualname":"::environ::spec::FuncEnvironment::translate_memory_size","value":"pub fn translate_memory_size(&mut Self, FuncCursor, MemoryIndex, ir::Heap)\n-> WasmResult<ir::Value>","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":" Translates a `memory.size` WebAssembly instruction.","sig":null,"attributes":[{"value":"/ Translates a `memory.size` WebAssembly instruction.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":158974,"byte_end":159029,"line_start":370,"line_end":370,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":159034,"byte_end":159037,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ The `index` provided identifies the linear memory to query, and `heap` is the heap reference","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":159042,"byte_end":159138,"line_start":372,"line_end":372,"column_start":5,"column_end":101}},{"value":"/ returned by `make_heap` for the same index.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":159143,"byte_end":159190,"line_start":373,"line_end":373,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":159195,"byte_end":159198,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ Returns the size in pages of the memory.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":159203,"byte_end":159247,"line_start":375,"line_end":375,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":159634,"byte_end":159655,"line_start":387,"line_end":387,"column_start":8,"column_end":29},"name":"translate_memory_copy","qualname":"::environ::spec::FuncEnvironment::translate_memory_copy","value":"pub fn translate_memory_copy(&mut Self, FuncCursor, MemoryIndex, ir::Heap,\n                             ir::Value, ir::Value, ir::Value)\n-> WasmResult<()>","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":" Translate a `memory.copy` WebAssembly instruction.","sig":null,"attributes":[{"value":"/ Translate a `memory.copy` WebAssembly instruction.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":159411,"byte_end":159465,"line_start":383,"line_end":383,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":159470,"byte_end":159473,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ The `index` provided identifies the linear memory to query, and `heap` is the heap reference","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":159478,"byte_end":159574,"line_start":385,"line_end":385,"column_start":5,"column_end":101}},{"value":"/ returned by `make_heap` for the same index.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":159579,"byte_end":159626,"line_start":386,"line_end":386,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":527},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":160078,"byte_end":160099,"line_start":401,"line_end":401,"column_start":8,"column_end":29},"name":"translate_memory_fill","qualname":"::environ::spec::FuncEnvironment::translate_memory_fill","value":"pub fn translate_memory_fill(&mut Self, FuncCursor, MemoryIndex, ir::Heap,\n                             ir::Value, ir::Value, ir::Value)\n-> WasmResult<()>","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":" Translate a `memory.fill` WebAssembly instruction.","sig":null,"attributes":[{"value":"/ Translate a `memory.fill` WebAssembly instruction.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":159855,"byte_end":159909,"line_start":397,"line_end":397,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":159914,"byte_end":159917,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ The `index` provided identifies the linear memory to query, and `heap` is the heap reference","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":159922,"byte_end":160018,"line_start":399,"line_end":399,"column_start":5,"column_end":101}},{"value":"/ returned by `make_heap` for the same index.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":160023,"byte_end":160070,"line_start":400,"line_end":400,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":528},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":160625,"byte_end":160646,"line_start":417,"line_end":417,"column_start":8,"column_end":29},"name":"translate_memory_init","qualname":"::environ::spec::FuncEnvironment::translate_memory_init","value":"pub fn translate_memory_init(&mut Self, FuncCursor, MemoryIndex, ir::Heap,\n                             u32, ir::Value, ir::Value, ir::Value)\n-> WasmResult<()>","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":" Translate a `memory.init` WebAssembly instruction.","sig":null,"attributes":[{"value":"/ Translate a `memory.init` WebAssembly instruction.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":160299,"byte_end":160353,"line_start":411,"line_end":411,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":160358,"byte_end":160361,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ The `index` provided identifies the linear memory to query, and `heap` is the heap reference","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":160366,"byte_end":160462,"line_start":413,"line_end":413,"column_start":5,"column_end":101}},{"value":"/ returned by `make_heap` for the same index. `seg_index` is the index of the segment to copy","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":160467,"byte_end":160562,"line_start":414,"line_end":414,"column_start":5,"column_end":100}},{"value":"/ from.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":160567,"byte_end":160576,"line_start":415,"line_end":415,"column_start":5,"column_end":14}},{"value":"allow(clippy :: too_many_arguments)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":160581,"byte_end":160617,"line_start":416,"line_end":416,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":529},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":160930,"byte_end":160949,"line_start":429,"line_end":429,"column_start":8,"column_end":27},"name":"translate_data_drop","qualname":"::environ::spec::FuncEnvironment::translate_data_drop","value":"pub fn translate_data_drop(&mut Self, FuncCursor, u32) -> WasmResult<()>","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":" Translate a `data.drop` WebAssembly instruction.\n","sig":null,"attributes":[{"value":"/ Translate a `data.drop` WebAssembly instruction.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":160870,"byte_end":160922,"line_start":428,"line_end":428,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":161079,"byte_end":161099,"line_start":432,"line_end":432,"column_start":8,"column_end":28},"name":"translate_table_size","qualname":"::environ::spec::FuncEnvironment::translate_table_size","value":"pub fn translate_table_size(&mut Self, FuncCursor, TableIndex, ir::Table)\n-> WasmResult<ir::Value>","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":" Translate a `table.size` WebAssembly instruction.\n","sig":null,"attributes":[{"value":"/ Translate a `table.size` WebAssembly instruction.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":161018,"byte_end":161071,"line_start":431,"line_end":431,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":161296,"byte_end":161316,"line_start":440,"line_end":440,"column_start":8,"column_end":28},"name":"translate_table_grow","qualname":"::environ::spec::FuncEnvironment::translate_table_grow","value":"pub fn translate_table_grow(&mut Self, FuncCursor, TableIndex, ir::Table,\n                            ir::Value, ir::Value) -> WasmResult<ir::Value>","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":" Translate a `table.grow` WebAssembly instruction.\n","sig":null,"attributes":[{"value":"/ Translate a `table.grow` WebAssembly instruction.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":161235,"byte_end":161288,"line_start":439,"line_end":439,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":161575,"byte_end":161594,"line_start":450,"line_end":450,"column_start":8,"column_end":27},"name":"translate_table_get","qualname":"::environ::spec::FuncEnvironment::translate_table_get","value":"pub fn translate_table_get(&mut Self, &mut FunctionBuilder, TableIndex,\n                           ir::Table, ir::Value) -> WasmResult<ir::Value>","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":" Translate a `table.get` WebAssembly instruction.\n","sig":null,"attributes":[{"value":"/ Translate a `table.get` WebAssembly instruction.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":161515,"byte_end":161567,"line_start":449,"line_end":449,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":161836,"byte_end":161855,"line_start":459,"line_end":459,"column_start":8,"column_end":27},"name":"translate_table_set","qualname":"::environ::spec::FuncEnvironment::translate_table_set","value":"pub fn translate_table_set(&mut Self, &mut FunctionBuilder, TableIndex,\n                           ir::Table, ir::Value, ir::Value) -> WasmResult<()>","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":" Translate a `table.set` WebAssembly instruction.\n","sig":null,"attributes":[{"value":"/ Translate a `table.set` WebAssembly instruction.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":161776,"byte_end":161828,"line_start":458,"line_end":458,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":162158,"byte_end":162178,"line_start":470,"line_end":470,"column_start":8,"column_end":28},"name":"translate_table_copy","qualname":"::environ::spec::FuncEnvironment::translate_table_copy","value":"pub fn translate_table_copy(&mut Self, FuncCursor, TableIndex, ir::Table,\n                            TableIndex, ir::Table, ir::Value, ir::Value,\n                            ir::Value) -> WasmResult<()>","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":" Translate a `table.copy` WebAssembly instruction.\n","sig":null,"attributes":[{"value":"/ Translate a `table.copy` WebAssembly instruction.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":162056,"byte_end":162109,"line_start":468,"line_end":468,"column_start":5,"column_end":58}},{"value":"allow(clippy :: too_many_arguments)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":162114,"byte_end":162150,"line_start":469,"line_end":469,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":535},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":162521,"byte_end":162541,"line_start":483,"line_end":483,"column_start":8,"column_end":28},"name":"translate_table_fill","qualname":"::environ::spec::FuncEnvironment::translate_table_fill","value":"pub fn translate_table_fill(&mut Self, FuncCursor, TableIndex, ir::Value,\n                            ir::Value, ir::Value) -> WasmResult<()>","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":" Translate a `table.fill` WebAssembly instruction.\n","sig":null,"attributes":[{"value":"/ Translate a `table.fill` WebAssembly instruction.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":162460,"byte_end":162513,"line_start":482,"line_end":482,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":162824,"byte_end":162844,"line_start":494,"line_end":494,"column_start":8,"column_end":28},"name":"translate_table_init","qualname":"::environ::spec::FuncEnvironment::translate_table_init","value":"pub fn translate_table_init(&mut Self, FuncCursor, u32, TableIndex, ir::Table,\n                            ir::Value, ir::Value, ir::Value) -> WasmResult<()>","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":" Translate a `table.init` WebAssembly instruction.\n","sig":null,"attributes":[{"value":"/ Translate a `table.init` WebAssembly instruction.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":162722,"byte_end":162775,"line_start":492,"line_end":492,"column_start":5,"column_end":58}},{"value":"allow(clippy :: too_many_arguments)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":162780,"byte_end":162816,"line_start":493,"line_end":493,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":537},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":163135,"byte_end":163154,"line_start":506,"line_end":506,"column_start":8,"column_end":27},"name":"translate_elem_drop","qualname":"::environ::spec::FuncEnvironment::translate_elem_drop","value":"pub fn translate_elem_drop(&mut Self, FuncCursor, u32) -> WasmResult<()>","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":" Translate a `elem.drop` WebAssembly instruction.\n","sig":null,"attributes":[{"value":"/ Translate a `elem.drop` WebAssembly instruction.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":163075,"byte_end":163127,"line_start":505,"line_end":505,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":538},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":163697,"byte_end":163715,"line_start":517,"line_end":517,"column_start":8,"column_end":26},"name":"translate_ref_null","qualname":"::environ::spec::FuncEnvironment::translate_ref_null","value":"pub fn translate_ref_null(&mut Self, FuncCursor, WasmType)\n-> WasmResult<ir::Value>","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":" Translate a `ref.null T` WebAssembly instruction.","sig":null,"attributes":[{"value":"/ Translate a `ref.null T` WebAssembly instruction.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":163223,"byte_end":163276,"line_start":508,"line_end":508,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":163281,"byte_end":163284,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ By default, translates into a null reference type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":163289,"byte_end":163343,"line_start":510,"line_end":510,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":163348,"byte_end":163351,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ Override this if you don't use Cranelift reference types for all Wasm","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":163356,"byte_end":163429,"line_start":512,"line_end":512,"column_start":5,"column_end":78}},{"value":"/ reference types (e.g. you use a raw pointer for `funcref`s) or if the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":163434,"byte_end":163507,"line_start":513,"line_end":513,"column_start":5,"column_end":78}},{"value":"/ null sentinel is not a null reference type pointer for your type. If you","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":163512,"byte_end":163588,"line_start":514,"line_end":514,"column_start":5,"column_end":81}},{"value":"/ override this method, then you should also override","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":163593,"byte_end":163648,"line_start":515,"line_end":515,"column_start":5,"column_end":60}},{"value":"/ `translate_ref_is_null` as well.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":163653,"byte_end":163689,"line_start":516,"line_end":516,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":164237,"byte_end":164258,"line_start":530,"line_end":530,"column_start":8,"column_end":29},"name":"translate_ref_is_null","qualname":"::environ::spec::FuncEnvironment::translate_ref_is_null","value":"pub fn translate_ref_is_null(&mut Self, FuncCursor, ir::Value)\n-> WasmResult<ir::Value>","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":" Translate a `ref.is_null` WebAssembly instruction.","sig":null,"attributes":[{"value":"/ Translate a `ref.is_null` WebAssembly instruction.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":163872,"byte_end":163926,"line_start":522,"line_end":522,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":163931,"byte_end":163934,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ By default, assumes that `value` is a Cranelift reference type, and that","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":163939,"byte_end":164015,"line_start":524,"line_end":524,"column_start":5,"column_end":81}},{"value":"/ a null Cranelift reference type is the null value for all Wasm reference","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":164020,"byte_end":164096,"line_start":525,"line_end":525,"column_start":5,"column_end":81}},{"value":"/ types.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":164101,"byte_end":164111,"line_start":526,"line_end":526,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":164116,"byte_end":164119,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ If you override this method, you probably also want to override","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":164124,"byte_end":164191,"line_start":528,"line_end":528,"column_start":5,"column_end":72}},{"value":"/ `translate_ref_null` as well.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":164196,"byte_end":164229,"line_start":529,"line_end":529,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":164537,"byte_end":164555,"line_start":540,"line_end":540,"column_start":8,"column_end":26},"name":"translate_ref_func","qualname":"::environ::spec::FuncEnvironment::translate_ref_func","value":"pub fn translate_ref_func(&mut Self, FuncCursor, FuncIndex)\n-> WasmResult<ir::Value>","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":" Translate a `ref.func` WebAssembly instruction.\n","sig":null,"attributes":[{"value":"/ Translate a `ref.func` WebAssembly instruction.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":164478,"byte_end":164529,"line_start":539,"line_end":539,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":541},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":164775,"byte_end":164802,"line_start":548,"line_end":548,"column_start":8,"column_end":35},"name":"translate_custom_global_get","qualname":"::environ::spec::FuncEnvironment::translate_custom_global_get","value":"pub fn translate_custom_global_get(&mut Self, FuncCursor, GlobalIndex)\n-> WasmResult<ir::Value>","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":" Translate a `global.get` WebAssembly instruction at `pos` for a global\n that is custom.\n","sig":null,"attributes":[{"value":"/ Translate a `global.get` WebAssembly instruction at `pos` for a global","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":164669,"byte_end":164743,"line_start":546,"line_end":546,"column_start":5,"column_end":79}},{"value":"/ that is custom.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":164748,"byte_end":164767,"line_start":547,"line_end":547,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":165026,"byte_end":165053,"line_start":556,"line_end":556,"column_start":8,"column_end":35},"name":"translate_custom_global_set","qualname":"::environ::spec::FuncEnvironment::translate_custom_global_set","value":"pub fn translate_custom_global_set(&mut Self, FuncCursor, GlobalIndex,\n                                   ir::Value) -> WasmResult<()>","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":" Translate a `global.set` WebAssembly instruction at `pos` for a global\n that is custom.\n","sig":null,"attributes":[{"value":"/ Translate a `global.set` WebAssembly instruction at `pos` for a global","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":164920,"byte_end":164994,"line_start":554,"line_end":554,"column_start":5,"column_end":79}},{"value":"/ that is custom.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":164999,"byte_end":165018,"line_start":555,"line_end":555,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":543},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":165677,"byte_end":165698,"line_start":570,"line_end":570,"column_start":8,"column_end":29},"name":"translate_atomic_wait","qualname":"::environ::spec::FuncEnvironment::translate_atomic_wait","value":"pub fn translate_atomic_wait(&mut Self, FuncCursor, MemoryIndex, ir::Heap,\n                             ir::Value, ir::Value, ir::Value)\n-> WasmResult<ir::Value>","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":" Translate an `i32.atomic.wait` or `i64.atomic.wait` WebAssembly instruction.\n The `index` provided identifies the linear memory containing the value\n to wait on, and `heap` is the heap reference returned by `make_heap`\n for the same index.  Whether the waited-on value is 32- or 64-bit can be\n determined by examining the type of `expected`, which must be only I32 or I64.","sig":null,"attributes":[{"value":"/ Translate an `i32.atomic.wait` or `i64.atomic.wait` WebAssembly instruction.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":165188,"byte_end":165268,"line_start":563,"line_end":563,"column_start":5,"column_end":85}},{"value":"/ The `index` provided identifies the linear memory containing the value","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":165273,"byte_end":165347,"line_start":564,"line_end":564,"column_start":5,"column_end":79}},{"value":"/ to wait on, and `heap` is the heap reference returned by `make_heap`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":165352,"byte_end":165424,"line_start":565,"line_end":565,"column_start":5,"column_end":77}},{"value":"/ for the same index.  Whether the waited-on value is 32- or 64-bit can be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":165429,"byte_end":165505,"line_start":566,"line_end":566,"column_start":5,"column_end":81}},{"value":"/ determined by examining the type of `expected`, which must be only I32 or I64.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":165510,"byte_end":165592,"line_start":567,"line_end":567,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":165597,"byte_end":165600,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ Returns an i32, which is negative if the helper call failed.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":165605,"byte_end":165669,"line_start":569,"line_end":569,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":166241,"byte_end":166264,"line_start":586,"line_end":586,"column_start":8,"column_end":31},"name":"translate_atomic_notify","qualname":"::environ::spec::FuncEnvironment::translate_atomic_notify","value":"pub fn translate_atomic_notify(&mut Self, FuncCursor, MemoryIndex, ir::Heap,\n                               ir::Value, ir::Value) -> WasmResult<ir::Value>","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":" Translate an `atomic.notify` WebAssembly instruction.\n The `index` provided identifies the linear memory containing the value\n to wait on, and `heap` is the heap reference returned by `make_heap`\n for the same index.","sig":null,"attributes":[{"value":"/ Translate an `atomic.notify` WebAssembly instruction.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":165915,"byte_end":165972,"line_start":580,"line_end":580,"column_start":5,"column_end":62}},{"value":"/ The `index` provided identifies the linear memory containing the value","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":165977,"byte_end":166051,"line_start":581,"line_end":581,"column_start":5,"column_end":79}},{"value":"/ to wait on, and `heap` is the heap reference returned by `make_heap`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":166056,"byte_end":166128,"line_start":582,"line_end":582,"column_start":5,"column_end":77}},{"value":"/ for the same index.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":166133,"byte_end":166156,"line_start":583,"line_end":583,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":166161,"byte_end":166164,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ Returns an i64, which is negative if the helper call failed.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":166169,"byte_end":166233,"line_start":585,"line_end":585,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":545},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":166628,"byte_end":166649,"line_start":599,"line_end":599,"column_start":8,"column_end":29},"name":"translate_loop_header","qualname":"::environ::spec::FuncEnvironment::translate_loop_header","value":"pub fn translate_loop_header(&mut Self, FuncCursor) -> WasmResult<()>","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":" Emit code at the beginning of every wasm loop.","sig":null,"attributes":[{"value":"/ Emit code at the beginning of every wasm loop.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":166450,"byte_end":166500,"line_start":595,"line_end":595,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":166505,"byte_end":166508,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ This can be used to insert explicit interrupt or safepoint checking at","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":166513,"byte_end":166587,"line_start":597,"line_end":597,"column_start":5,"column_end":79}},{"value":"/ the beginnings of loops.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":166592,"byte_end":166620,"line_start":598,"line_end":598,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":166945,"byte_end":166970,"line_start":606,"line_end":606,"column_start":8,"column_end":33},"name":"before_translate_operator","qualname":"::environ::spec::FuncEnvironment::before_translate_operator","value":"pub fn before_translate_operator(&mut Self, &Operator, &mut FunctionBuilder,\n                                 &FuncTranslationState) -> WasmResult<()>","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":" Optional callback for the `FunctionEnvironment` performing this translation to maintain\n internal state or prepare custom state for the operator to translate\n","sig":null,"attributes":[{"value":"/ Optional callback for the `FunctionEnvironment` performing this translation to maintain","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":166769,"byte_end":166860,"line_start":604,"line_end":604,"column_start":5,"column_end":96}},{"value":"/ internal state or prepare custom state for the operator to translate","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":166865,"byte_end":166937,"line_start":605,"line_end":605,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":547},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":167330,"byte_end":167354,"line_start":617,"line_end":617,"column_start":8,"column_end":32},"name":"after_translate_operator","qualname":"::environ::spec::FuncEnvironment::after_translate_operator","value":"pub fn after_translate_operator(&mut Self, &Operator, &mut FunctionBuilder,\n                                &FuncTranslationState) -> WasmResult<()>","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":" Optional callback for the `FunctionEnvironment` performing this translation to maintain\n internal state or finalize custom state for the operator that was translated\n","sig":null,"attributes":[{"value":"/ Optional callback for the `FunctionEnvironment` performing this translation to maintain","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":167146,"byte_end":167237,"line_start":615,"line_end":615,"column_start":5,"column_end":96}},{"value":"/ internal state or finalize custom state for the operator that was translated","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":167242,"byte_end":167322,"line_start":616,"line_end":616,"column_start":5,"column_end":85}}]},{"kind":"Trait","id":{"krate":0,"index":548},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":167788,"byte_end":167805,"line_start":630,"line_end":630,"column_start":11,"column_end":28},"name":"ModuleEnvironment","qualname":"::environ::spec::ModuleEnvironment","value":"ModuleEnvironment<'data>: TargetEnvironment","parent":null,"children":[{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585}],"decl_id":null,"docs":" An object satisfying the `ModuleEnvironment` trait can be passed as argument to the\n [`translate_module`](fn.translate_module.html) function. These methods should not be called\n by the user, they are only for `cranelift-wasm` internal use.\n","sig":null,"attributes":[{"value":"/ An object satisfying the `ModuleEnvironment` trait can be passed as argument to the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":167528,"byte_end":167615,"line_start":627,"line_end":627,"column_start":1,"column_end":88}},{"value":"/ [`translate_module`](fn.translate_module.html) function. These methods should not be called","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":167616,"byte_end":167711,"line_start":628,"line_end":628,"column_start":1,"column_end":96}},{"value":"/ by the user, they are only for `cranelift-wasm` internal use.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":167712,"byte_end":167777,"line_start":629,"line_end":629,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":167998,"byte_end":168016,"line_start":633,"line_end":633,"column_start":8,"column_end":26},"name":"reserve_signatures","qualname":"::environ::spec::ModuleEnvironment::reserve_signatures","value":"pub fn reserve_signatures(&mut Self, u32) -> WasmResult<()>","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" Provides the number of signatures up front. By default this does nothing, but\n implementations can use this to preallocate memory if desired.\n","sig":null,"attributes":[{"value":"/ Provides the number of signatures up front. By default this does nothing, but","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":167838,"byte_end":167919,"line_start":631,"line_end":631,"column_start":5,"column_end":86}},{"value":"/ implementations can use this to preallocate memory if desired.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":167924,"byte_end":167990,"line_start":632,"line_end":632,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":168146,"byte_end":168163,"line_start":638,"line_end":638,"column_start":8,"column_end":25},"name":"declare_signature","qualname":"::environ::spec::ModuleEnvironment::declare_signature","value":"pub fn declare_signature(&mut Self, WasmFuncType, ir::Signature)\n-> WasmResult<()>","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" Declares a function signature to the environment.\n","sig":null,"attributes":[{"value":"/ Declares a function signature to the environment.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":168085,"byte_end":168138,"line_start":637,"line_end":637,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":168437,"byte_end":168452,"line_start":646,"line_end":646,"column_start":8,"column_end":23},"name":"reserve_imports","qualname":"::environ::spec::ModuleEnvironment::reserve_imports","value":"pub fn reserve_imports(&mut Self, u32) -> WasmResult<()>","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" Provides the number of imports up front. By default this does nothing, but\n implementations can use this to preallocate memory if desired.\n","sig":null,"attributes":[{"value":"/ Provides the number of imports up front. By default this does nothing, but","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":168280,"byte_end":168358,"line_start":644,"line_end":644,"column_start":5,"column_end":83}},{"value":"/ implementations can use this to preallocate memory if desired.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":168363,"byte_end":168429,"line_start":645,"line_end":645,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":168579,"byte_end":168598,"line_start":651,"line_end":651,"column_start":8,"column_end":27},"name":"declare_func_import","qualname":"::environ::spec::ModuleEnvironment::declare_func_import","value":"pub fn declare_func_import(&mut Self, SignatureIndex, &'data str, &'data str)\n-> WasmResult<()>","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" Declares a function import to the environment.\n","sig":null,"attributes":[{"value":"/ Declares a function import to the environment.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":168521,"byte_end":168571,"line_start":650,"line_end":650,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":168794,"byte_end":168814,"line_start":659,"line_end":659,"column_start":8,"column_end":28},"name":"declare_table_import","qualname":"::environ::spec::ModuleEnvironment::declare_table_import","value":"pub fn declare_table_import(&mut Self, Table, &'data str, &'data str)\n-> WasmResult<()>","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" Declares a table import to the environment.\n","sig":null,"attributes":[{"value":"/ Declares a table import to the environment.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":168739,"byte_end":168786,"line_start":658,"line_end":658,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":168998,"byte_end":169019,"line_start":667,"line_end":667,"column_start":8,"column_end":29},"name":"declare_memory_import","qualname":"::environ::spec::ModuleEnvironment::declare_memory_import","value":"pub fn declare_memory_import(&mut Self, Memory, &'data str, &'data str)\n-> WasmResult<()>","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" Declares a memory import to the environment.\n","sig":null,"attributes":[{"value":"/ Declares a memory import to the environment.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":168942,"byte_end":168990,"line_start":666,"line_end":666,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":169205,"byte_end":169226,"line_start":675,"line_end":675,"column_start":8,"column_end":29},"name":"declare_global_import","qualname":"::environ::spec::ModuleEnvironment::declare_global_import","value":"pub fn declare_global_import(&mut Self, Global, &'data str, &'data str)\n-> WasmResult<()>","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" Declares a global import to the environment.\n","sig":null,"attributes":[{"value":"/ Declares a global import to the environment.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":169149,"byte_end":169197,"line_start":674,"line_end":674,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":557},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":169432,"byte_end":169446,"line_start":683,"line_end":683,"column_start":8,"column_end":22},"name":"finish_imports","qualname":"::environ::spec::ModuleEnvironment::finish_imports","value":"pub fn finish_imports(&mut Self) -> WasmResult<()>","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" Notifies the implementation that all imports have been declared.\n","sig":null,"attributes":[{"value":"/ Notifies the implementation that all imports have been declared.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":169356,"byte_end":169424,"line_start":682,"line_end":682,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":169671,"byte_end":169689,"line_start":689,"line_end":689,"column_start":8,"column_end":26},"name":"reserve_func_types","qualname":"::environ::spec::ModuleEnvironment::reserve_func_types","value":"pub fn reserve_func_types(&mut Self, u32) -> WasmResult<()>","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" Provides the number of defined functions up front. By default this does nothing, but\n implementations can use this to preallocate memory if desired.\n","sig":null,"attributes":[{"value":"/ Provides the number of defined functions up front. By default this does nothing, but","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":169504,"byte_end":169592,"line_start":687,"line_end":687,"column_start":5,"column_end":93}},{"value":"/ implementations can use this to preallocate memory if desired.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":169597,"byte_end":169663,"line_start":688,"line_end":688,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":559},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":169834,"byte_end":169851,"line_start":694,"line_end":694,"column_start":8,"column_end":25},"name":"declare_func_type","qualname":"::environ::spec::ModuleEnvironment::declare_func_type","value":"pub fn declare_func_type(&mut Self, SignatureIndex) -> WasmResult<()>","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" Declares the type (signature) of a local function in the module.\n","sig":null,"attributes":[{"value":"/ Declares the type (signature) of a local function in the module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":169758,"byte_end":169826,"line_start":693,"line_end":693,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":560},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":170078,"byte_end":170092,"line_start":698,"line_end":698,"column_start":8,"column_end":22},"name":"reserve_tables","qualname":"::environ::spec::ModuleEnvironment::reserve_tables","value":"pub fn reserve_tables(&mut Self, u32) -> WasmResult<()>","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" Provides the number of defined tables up front. By default this does nothing, but\n implementations can use this to preallocate memory if desired.\n","sig":null,"attributes":[{"value":"/ Provides the number of defined tables up front. By default this does nothing, but","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":169914,"byte_end":169999,"line_start":696,"line_end":696,"column_start":5,"column_end":90}},{"value":"/ implementations can use this to preallocate memory if desired.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":170004,"byte_end":170070,"line_start":697,"line_end":697,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":561},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":170209,"byte_end":170222,"line_start":703,"line_end":703,"column_start":8,"column_end":21},"name":"declare_table","qualname":"::environ::spec::ModuleEnvironment::declare_table","value":"pub fn declare_table(&mut Self, Table) -> WasmResult<()>","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" Declares a table to the environment.\n","sig":null,"attributes":[{"value":"/ Declares a table to the environment.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":170161,"byte_end":170201,"line_start":702,"line_end":702,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":170438,"byte_end":170454,"line_start":707,"line_end":707,"column_start":8,"column_end":24},"name":"reserve_memories","qualname":"::environ::spec::ModuleEnvironment::reserve_memories","value":"pub fn reserve_memories(&mut Self, u32) -> WasmResult<()>","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" Provides the number of defined memories up front. By default this does nothing, but\n implementations can use this to preallocate memory if desired.\n","sig":null,"attributes":[{"value":"/ Provides the number of defined memories up front. By default this does nothing, but","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":170272,"byte_end":170359,"line_start":705,"line_end":705,"column_start":5,"column_end":92}},{"value":"/ implementations can use this to preallocate memory if desired.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":170364,"byte_end":170430,"line_start":706,"line_end":706,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":170571,"byte_end":170585,"line_start":712,"line_end":712,"column_start":8,"column_end":22},"name":"declare_memory","qualname":"::environ::spec::ModuleEnvironment::declare_memory","value":"pub fn declare_memory(&mut Self, Memory) -> WasmResult<()>","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" Declares a memory to the environment\n","sig":null,"attributes":[{"value":"/ Declares a memory to the environment","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":170523,"byte_end":170563,"line_start":711,"line_end":711,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":170802,"byte_end":170817,"line_start":716,"line_end":716,"column_start":8,"column_end":23},"name":"reserve_globals","qualname":"::environ::spec::ModuleEnvironment::reserve_globals","value":"pub fn reserve_globals(&mut Self, u32) -> WasmResult<()>","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" Provides the number of defined globals up front. By default this does nothing, but\n implementations can use this to preallocate memory if desired.\n","sig":null,"attributes":[{"value":"/ Provides the number of defined globals up front. By default this does nothing, but","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":170637,"byte_end":170723,"line_start":714,"line_end":714,"column_start":5,"column_end":91}},{"value":"/ implementations can use this to preallocate memory if desired.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":170728,"byte_end":170794,"line_start":715,"line_end":715,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":170935,"byte_end":170949,"line_start":721,"line_end":721,"column_start":8,"column_end":22},"name":"declare_global","qualname":"::environ::spec::ModuleEnvironment::declare_global","value":"pub fn declare_global(&mut Self, Global) -> WasmResult<()>","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" Declares a global to the environment.\n","sig":null,"attributes":[{"value":"/ Declares a global to the environment.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":170886,"byte_end":170927,"line_start":720,"line_end":720,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":171158,"byte_end":171173,"line_start":725,"line_end":725,"column_start":8,"column_end":23},"name":"reserve_exports","qualname":"::environ::spec::ModuleEnvironment::reserve_exports","value":"pub fn reserve_exports(&mut Self, u32) -> WasmResult<()>","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" Provides the number of exports up front. By default this does nothing, but\n implementations can use this to preallocate memory if desired.\n","sig":null,"attributes":[{"value":"/ Provides the number of exports up front. By default this does nothing, but","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":171001,"byte_end":171079,"line_start":723,"line_end":723,"column_start":5,"column_end":83}},{"value":"/ implementations can use this to preallocate memory if desired.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":171084,"byte_end":171150,"line_start":724,"line_end":724,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":171300,"byte_end":171319,"line_start":730,"line_end":730,"column_start":8,"column_end":27},"name":"declare_func_export","qualname":"::environ::spec::ModuleEnvironment::declare_func_export","value":"pub fn declare_func_export(&mut Self, FuncIndex, &'data str) -> WasmResult<()>","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" Declares a function export to the environment.\n","sig":null,"attributes":[{"value":"/ Declares a function export to the environment.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":171242,"byte_end":171292,"line_start":729,"line_end":729,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":171451,"byte_end":171471,"line_start":733,"line_end":733,"column_start":8,"column_end":28},"name":"declare_table_export","qualname":"::environ::spec::ModuleEnvironment::declare_table_export","value":"pub fn declare_table_export(&mut Self, TableIndex, &'data str)\n-> WasmResult<()>","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" Declares a table export to the environment.\n","sig":null,"attributes":[{"value":"/ Declares a table export to the environment.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":171396,"byte_end":171443,"line_start":732,"line_end":732,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":569},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":171614,"byte_end":171635,"line_start":737,"line_end":737,"column_start":8,"column_end":29},"name":"declare_memory_export","qualname":"::environ::spec::ModuleEnvironment::declare_memory_export","value":"pub fn declare_memory_export(&mut Self, MemoryIndex, &'data str)\n-> WasmResult<()>","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" Declares a memory export to the environment.\n","sig":null,"attributes":[{"value":"/ Declares a memory export to the environment.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":171558,"byte_end":171606,"line_start":736,"line_end":736,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":171803,"byte_end":171824,"line_start":744,"line_end":744,"column_start":8,"column_end":29},"name":"declare_global_export","qualname":"::environ::spec::ModuleEnvironment::declare_global_export","value":"pub fn declare_global_export(&mut Self, GlobalIndex, &'data str)\n-> WasmResult<()>","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" Declares a global export to the environment.\n","sig":null,"attributes":[{"value":"/ Declares a global export to the environment.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":171747,"byte_end":171795,"line_start":743,"line_end":743,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":172012,"byte_end":172026,"line_start":751,"line_end":751,"column_start":8,"column_end":22},"name":"finish_exports","qualname":"::environ::spec::ModuleEnvironment::finish_exports","value":"pub fn finish_exports(&mut Self) -> WasmResult<()>","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" Notifies the implementation that all exports have been declared.\n","sig":null,"attributes":[{"value":"/ Notifies the implementation that all exports have been declared.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":171936,"byte_end":172004,"line_start":750,"line_end":750,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":172133,"byte_end":172151,"line_start":756,"line_end":756,"column_start":8,"column_end":26},"name":"declare_start_func","qualname":"::environ::spec::ModuleEnvironment::declare_start_func","value":"pub fn declare_start_func(&mut Self, FuncIndex) -> WasmResult<()>","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" Declares the optional start function.\n","sig":null,"attributes":[{"value":"/ Declares the optional start function.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":172084,"byte_end":172125,"line_start":755,"line_end":755,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":172375,"byte_end":172397,"line_start":760,"line_end":760,"column_start":8,"column_end":30},"name":"reserve_table_elements","qualname":"::environ::spec::ModuleEnvironment::reserve_table_elements","value":"pub fn reserve_table_elements(&mut Self, u32) -> WasmResult<()>","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" Provides the number of element initializers up front. By default this does nothing, but\n implementations can use this to preallocate memory if desired.\n","sig":null,"attributes":[{"value":"/ Provides the number of element initializers up front. By default this does nothing, but","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":172205,"byte_end":172296,"line_start":758,"line_end":758,"column_start":5,"column_end":96}},{"value":"/ implementations can use this to preallocate memory if desired.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":172301,"byte_end":172367,"line_start":759,"line_end":759,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":172544,"byte_end":172566,"line_start":765,"line_end":765,"column_start":8,"column_end":30},"name":"declare_table_elements","qualname":"::environ::spec::ModuleEnvironment::declare_table_elements","value":"pub fn declare_table_elements(&mut Self, TableIndex, Option<GlobalIndex>,\n                              usize, Box<[FuncIndex]>) -> WasmResult<()>","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" Fills a declared table with references to functions in the module.\n","sig":null,"attributes":[{"value":"/ Fills a declared table with references to functions in the module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":172466,"byte_end":172536,"line_start":764,"line_end":764,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":575},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":172790,"byte_end":172813,"line_start":774,"line_end":774,"column_start":8,"column_end":31},"name":"declare_passive_element","qualname":"::environ::spec::ModuleEnvironment::declare_passive_element","value":"pub fn declare_passive_element(&mut Self, ElemIndex, Box<[FuncIndex]>)\n-> WasmResult<()>","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" Declare a passive element segment.\n","sig":null,"attributes":[{"value":"/ Declare a passive element segment.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":172744,"byte_end":172782,"line_start":773,"line_end":773,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":173114,"byte_end":173134,"line_start":784,"line_end":784,"column_start":8,"column_end":28},"name":"reserve_passive_data","qualname":"::environ::spec::ModuleEnvironment::reserve_passive_data","value":"pub fn reserve_passive_data(&mut Self, u32) -> WasmResult<()>","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" Provides the number of passive data segments up front.","sig":null,"attributes":[{"value":"/ Provides the number of passive data segments up front.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":172926,"byte_end":172984,"line_start":780,"line_end":780,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":172989,"byte_end":172992,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ By default this does nothing, but implementations may use this to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":172997,"byte_end":173066,"line_start":782,"line_end":782,"column_start":5,"column_end":74}},{"value":"/ pre-allocate memory if desired.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":173071,"byte_end":173106,"line_start":783,"line_end":783,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":577},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":173270,"byte_end":173290,"line_start":790,"line_end":790,"column_start":8,"column_end":28},"name":"declare_passive_data","qualname":"::environ::spec::ModuleEnvironment::declare_passive_data","value":"pub fn declare_passive_data(&mut Self, DataIndex, &'data [u8])\n-> WasmResult<()>","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" Declare a passive data segment.\n","sig":null,"attributes":[{"value":"/ Declare a passive data segment.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":173227,"byte_end":173262,"line_start":789,"line_end":789,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":173496,"byte_end":173519,"line_start":794,"line_end":794,"column_start":8,"column_end":31},"name":"reserve_function_bodies","qualname":"::environ::spec::ModuleEnvironment::reserve_function_bodies","value":"pub fn reserve_function_bodies(&mut Self, u32, u64)","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" Indicates how many functions the code section reports and the byte\n offset of where the code sections starts.\n","sig":null,"attributes":[{"value":"/ Indicates how many functions the code section reports and the byte","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":173368,"byte_end":173438,"line_start":792,"line_end":792,"column_start":5,"column_end":75}},{"value":"/ offset of where the code sections starts.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":173443,"byte_end":173488,"line_start":793,"line_end":793,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":579},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":173681,"byte_end":173701,"line_start":799,"line_end":799,"column_start":8,"column_end":28},"name":"define_function_body","qualname":"::environ::spec::ModuleEnvironment::define_function_body","value":"pub fn define_function_body(&mut Self, &ModuleTranslationState, &'data [u8],\n                            usize) -> WasmResult<()>","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" Provides the contents of a function body.\n","sig":null,"attributes":[{"value":"/ Provides the contents of a function body.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":173628,"byte_end":173673,"line_start":798,"line_end":798,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":174039,"byte_end":174064,"line_start":808,"line_end":808,"column_start":8,"column_end":33},"name":"reserve_data_initializers","qualname":"::environ::spec::ModuleEnvironment::reserve_data_initializers","value":"pub fn reserve_data_initializers(&mut Self, u32) -> WasmResult<()>","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" Provides the number of data initializers up front. By default this does nothing, but\n implementations can use this to preallocate memory if desired.\n","sig":null,"attributes":[{"value":"/ Provides the number of data initializers up front. By default this does nothing, but","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":173872,"byte_end":173960,"line_start":806,"line_end":806,"column_start":5,"column_end":93}},{"value":"/ implementations can use this to preallocate memory if desired.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":173965,"byte_end":174031,"line_start":807,"line_end":807,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":174204,"byte_end":174231,"line_start":813,"line_end":813,"column_start":8,"column_end":35},"name":"declare_data_initialization","qualname":"::environ::spec::ModuleEnvironment::declare_data_initialization","value":"pub fn declare_data_initialization(&mut Self, MemoryIndex,\n                                   Option<GlobalIndex>, usize, &'data [u8])\n-> WasmResult<()>","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" Fills a declared memory with bytes at module instantiation.\n","sig":null,"attributes":[{"value":"/ Fills a declared memory with bytes at module instantiation.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":174133,"byte_end":174196,"line_start":812,"line_end":812,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":174624,"byte_end":174643,"line_start":825,"line_end":825,"column_start":8,"column_end":27},"name":"declare_module_name","qualname":"::environ::spec::ModuleEnvironment::declare_module_name","value":"pub fn declare_module_name(&mut Self, &'data str)","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" Declares the name of a module to the environment.","sig":null,"attributes":[{"value":"/ Declares the name of a module to the environment.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":174402,"byte_end":174455,"line_start":821,"line_end":821,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":174460,"byte_end":174463,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ By default this does nothing, but implementations can use this to read","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":174468,"byte_end":174542,"line_start":823,"line_end":823,"column_start":5,"column_end":79}},{"value":"/ the module name subsection of the custom name section if desired.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":174547,"byte_end":174616,"line_start":824,"line_end":824,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":174908,"byte_end":174925,"line_start":831,"line_end":831,"column_start":8,"column_end":25},"name":"declare_func_name","qualname":"::environ::spec::ModuleEnvironment::declare_func_name","value":"pub fn declare_func_name(&mut Self, FuncIndex, &'data str)","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" Declares the name of a function to the environment.","sig":null,"attributes":[{"value":"/ Declares the name of a function to the environment.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":174682,"byte_end":174737,"line_start":827,"line_end":827,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":174742,"byte_end":174745,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ By default this does nothing, but implementations can use this to read","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":174750,"byte_end":174824,"line_start":829,"line_end":829,"column_start":5,"column_end":79}},{"value":"/ the function name subsection of the custom name section if desired.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":174829,"byte_end":174900,"line_start":830,"line_end":830,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":175219,"byte_end":175237,"line_start":837,"line_end":837,"column_start":8,"column_end":26},"name":"declare_local_name","qualname":"::environ::spec::ModuleEnvironment::declare_local_name","value":"pub fn declare_local_name(&mut Self, FuncIndex, u32, &'data str)","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" Declares the name of a function's local to the environment.","sig":null,"attributes":[{"value":"/ Declares the name of a function's local to the environment.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":174988,"byte_end":175051,"line_start":833,"line_end":833,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":175056,"byte_end":175059,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ By default this does nothing, but implementations can use this to read","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":175064,"byte_end":175138,"line_start":835,"line_end":835,"column_start":5,"column_end":79}},{"value":"/ the local name subsection of the custom name section if desired.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":175143,"byte_end":175211,"line_start":836,"line_end":836,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":175399,"byte_end":175413,"line_start":841,"line_end":841,"column_start":8,"column_end":22},"name":"custom_section","qualname":"::environ::spec::ModuleEnvironment::custom_section","value":"pub fn custom_section(&mut Self, &'data str, &'data [u8]) -> WasmResult<()>","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" Indicates that a custom section has been found in the wasm file\n","sig":null,"attributes":[{"value":"/ Indicates that a custom section has been found in the wasm file","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":175324,"byte_end":175391,"line_start":840,"line_end":840,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":690},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\func_translator.rs","byte_start":176714,"byte_end":176728,"line_start":24,"line_end":24,"column_start":12,"column_end":26},"name":"FuncTranslator","qualname":"::func_translator::FuncTranslator","value":"FuncTranslator {  }","parent":null,"children":[{"krate":0,"index":691},{"krate":0,"index":692}],"decl_id":null,"docs":" WebAssembly to Cranelift IR function translator.","sig":null,"attributes":[{"value":"/ WebAssembly to Cranelift IR function translator.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\func_translator.rs","byte_start":176390,"byte_end":176442,"line_start":19,"line_end":19,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\func_translator.rs","byte_start":176443,"byte_end":176446,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ A `FuncTranslator` is used to translate a binary WebAssembly function into Cranelift IR guided","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\func_translator.rs","byte_start":176447,"byte_end":176545,"line_start":21,"line_end":21,"column_start":1,"column_end":99}},{"value":"/ by a `FuncEnvironment` object. A single translator instance can be reused to translate multiple","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\func_translator.rs","byte_start":176546,"byte_end":176645,"line_start":22,"line_end":22,"column_start":1,"column_end":100}},{"value":"/ functions which will reduce heap allocation traffic.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\func_translator.rs","byte_start":176646,"byte_end":176702,"line_start":23,"line_end":23,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\func_translator.rs","byte_start":176871,"byte_end":176874,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"new","qualname":"<FuncTranslator>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new translator.\n","sig":null,"attributes":[{"value":"/ Create a new translator.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\func_translator.rs","byte_start":176831,"byte_end":176859,"line_start":30,"line_end":30,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\func_translator.rs","byte_start":177971,"byte_end":177980,"line_start":56,"line_end":56,"column_start":12,"column_end":21},"name":"translate","qualname":"<FuncTranslator>::translate","value":"pub fn translate<FE: FuncEnvironment +\n                 ?Sized>(&mut Self, &ModuleTranslationState, &[u8], usize,\n                         &mut ir::Function, &mut FE) -> WasmResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Translate a binary WebAssembly function.","sig":null,"attributes":[{"value":"/ Translate a binary WebAssembly function.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\func_translator.rs","byte_start":177024,"byte_end":177068,"line_start":38,"line_end":38,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\func_translator.rs","byte_start":177073,"byte_end":177076,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ The `code` slice contains the binary WebAssembly *function code* as it appears in the code","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\func_translator.rs","byte_start":177081,"byte_end":177175,"line_start":40,"line_end":40,"column_start":5,"column_end":99}},{"value":"/ section of a WebAssembly module, not including the initial size of the function code. The","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\func_translator.rs","byte_start":177180,"byte_end":177273,"line_start":41,"line_end":41,"column_start":5,"column_end":98}},{"value":"/ slice is expected to contain two parts:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\func_translator.rs","byte_start":177278,"byte_end":177321,"line_start":42,"line_end":42,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\func_translator.rs","byte_start":177326,"byte_end":177329,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ - The declaration of *locals*, and","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\func_translator.rs","byte_start":177334,"byte_end":177372,"line_start":44,"line_end":44,"column_start":5,"column_end":43}},{"value":"/ - The function *body* as an expression.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\func_translator.rs","byte_start":177377,"byte_end":177420,"line_start":45,"line_end":45,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\func_translator.rs","byte_start":177425,"byte_end":177428,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ See [the WebAssembly specification][wasm].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\func_translator.rs","byte_start":177433,"byte_end":177479,"line_start":47,"line_end":47,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\func_translator.rs","byte_start":177484,"byte_end":177487,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ [wasm]: https://webassembly.github.io/spec/core/binary/modules.html#code-section","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\func_translator.rs","byte_start":177492,"byte_end":177576,"line_start":49,"line_end":49,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\func_translator.rs","byte_start":177581,"byte_end":177584,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ The Cranelift IR function `func` should be completely empty except for the `func.signature`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\func_translator.rs","byte_start":177589,"byte_end":177684,"line_start":51,"line_end":51,"column_start":5,"column_end":100}},{"value":"/ and `func.name` fields. The signature may contain special-purpose arguments which are not","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\func_translator.rs","byte_start":177689,"byte_end":177782,"line_start":52,"line_end":52,"column_start":5,"column_end":98}},{"value":"/ regarded as WebAssembly local variables. Any signature arguments marked as","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\func_translator.rs","byte_start":177787,"byte_end":177865,"line_start":53,"line_end":53,"column_start":5,"column_end":83}},{"value":"/ `ArgumentPurpose::Normal` are made accessible as WebAssembly local variables.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\func_translator.rs","byte_start":177870,"byte_end":177951,"line_start":54,"line_end":54,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\func_translator.rs","byte_start":177956,"byte_end":177959,"line_start":55,"line_end":55,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\func_translator.rs","byte_start":178498,"byte_end":178519,"line_start":73,"line_end":73,"column_start":12,"column_end":33},"name":"translate_from_reader","qualname":"<FuncTranslator>::translate_from_reader","value":"pub fn translate_from_reader<FE: FuncEnvironment +\n                             ?Sized>(&mut Self, &ModuleTranslationState,\n                                     BinaryReader, &mut ir::Function, &mut FE)\n-> WasmResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Translate a binary WebAssembly function from a `BinaryReader`.\n","sig":null,"attributes":[{"value":"/ Translate a binary WebAssembly function from a `BinaryReader`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\func_translator.rs","byte_start":178420,"byte_end":178486,"line_start":72,"line_end":72,"column_start":5,"column_end":71}}]},{"kind":"Function","id":{"krate":0,"index":769},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\module_translator.rs","byte_start":192169,"byte_end":192185,"line_start":15,"line_end":15,"column_start":8,"column_end":24},"name":"translate_module","qualname":"::module_translator::translate_module","value":"pub fn translate_module<'data>(&'data [u8], &mut dyn ModuleEnvironment)\n-> WasmResult<ModuleTranslationState>","parent":null,"children":[],"decl_id":null,"docs":" Translate a sequence of bytes forming a valid Wasm binary into a list of valid Cranelift IR\n [`Function`](cranelift_codegen::ir::Function).\n","sig":null,"attributes":[{"value":"/ Translate a sequence of bytes forming a valid Wasm binary into a list of valid Cranelift IR","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\module_translator.rs","byte_start":192015,"byte_end":192110,"line_start":13,"line_end":13,"column_start":1,"column_end":96}},{"value":"/ [`Function`](cranelift_codegen::ir::Function).","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\module_translator.rs","byte_start":192111,"byte_end":192161,"line_start":14,"line_end":14,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1027},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\state\\func_state.rs","byte_start":220128,"byte_end":220148,"line_start":217,"line_end":217,"column_start":12,"column_end":32},"name":"FuncTranslationState","qualname":"::state::func_state::FuncTranslationState","value":"FuncTranslationState {  }","parent":null,"children":[{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035}],"decl_id":null,"docs":" Contains information passed along during a function's translation and that records:","sig":null,"attributes":[{"value":"/ Contains information passed along during a function's translation and that records:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\state\\func_state.rs","byte_start":219857,"byte_end":219944,"line_start":212,"line_end":212,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\state\\func_state.rs","byte_start":219945,"byte_end":219948,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ - The current value and control stacks.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\state\\func_state.rs","byte_start":219949,"byte_end":219992,"line_start":214,"line_end":214,"column_start":1,"column_end":44}},{"value":"/ - The depth of the two unreachable control blocks stacks, that are manipulated when translating","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\state\\func_state.rs","byte_start":219993,"byte_end":220092,"line_start":215,"line_end":215,"column_start":1,"column_end":100}},{"value":"/   unreachable code;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\state\\func_state.rs","byte_start":220093,"byte_end":220116,"line_start":216,"line_end":216,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1037},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\state\\func_state.rs","byte_start":221754,"byte_end":221763,"line_start":251,"line_end":251,"column_start":12,"column_end":21},"name":"reachable","qualname":"<FuncTranslationState>::reachable","value":"pub fn reachable(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" True if the current translation state expresses reachable code, false if it is unreachable.\n","sig":null,"attributes":[{"value":"/ True if the current translation state expresses reachable code, false if it is unreachable.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\state\\func_state.rs","byte_start":221633,"byte_end":221728,"line_start":249,"line_end":249,"column_start":5,"column_end":100}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\state\\func_state.rs","byte_start":221733,"byte_end":221742,"line_start":250,"line_end":250,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1496},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\state\\module_state.rs","byte_start":232609,"byte_end":232631,"line_start":19,"line_end":19,"column_start":12,"column_end":34},"name":"ModuleTranslationState","qualname":"::state::module_state::ModuleTranslationState","value":"ModuleTranslationState {  }","parent":null,"children":[{"krate":0,"index":1497}],"decl_id":null,"docs":" Contains information decoded from the Wasm module that must be referenced\n during each Wasm function's translation.","sig":null,"attributes":[{"value":"/ Contains information decoded from the Wasm module that must be referenced","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\state\\module_state.rs","byte_start":232244,"byte_end":232321,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ during each Wasm function's translation.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\state\\module_state.rs","byte_start":232322,"byte_end":232366,"line_start":13,"line_end":13,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\state\\module_state.rs","byte_start":232367,"byte_end":232370,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This is only for data that is maintained by `cranelift-wasm` itself, as","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\state\\module_state.rs","byte_start":232371,"byte_end":232446,"line_start":15,"line_end":15,"column_start":1,"column_end":76}},{"value":"/ opposed to being maintained by the embedder. Data that is maintained by the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\state\\module_state.rs","byte_start":232447,"byte_end":232526,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ embedder is represented with `ModuleEnvironment`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\state\\module_state.rs","byte_start":232527,"byte_end":232580,"line_start":17,"line_end":17,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1100},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\state\\module_state.rs","byte_start":233529,"byte_end":233532,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<ModuleTranslationState>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty ModuleTranslationState.\n","sig":null,"attributes":[{"value":"/ Creates a new empty ModuleTranslationState.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\state\\module_state.rs","byte_start":233470,"byte_end":233517,"line_start":44,"line_end":44,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1101},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\state\\module_state.rs","byte_start":233884,"byte_end":233898,"line_start":55,"line_end":55,"column_start":12,"column_end":26},"name":"from_func_sigs","qualname":"<ModuleTranslationState>::from_func_sigs","value":"pub fn from_func_sigs(&[(&[Type], &[Type])]) -> WasmResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new ModuleTranslationState with the given function signatures,\n provided in terms of Cranelift types. The provided slice of signatures\n is indexed by signature number, and contains pairs of (args, results)\n slices.\n","sig":null,"attributes":[{"value":"/ Create a new ModuleTranslationState with the given function signatures,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\state\\module_state.rs","byte_start":233624,"byte_end":233699,"line_start":51,"line_end":51,"column_start":5,"column_end":80}},{"value":"/ provided in terms of Cranelift types. The provided slice of signatures","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\state\\module_state.rs","byte_start":233704,"byte_end":233778,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ is indexed by signature number, and contains pairs of (args, results)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\state\\module_state.rs","byte_start":233783,"byte_end":233856,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ slices.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\state\\module_state.rs","byte_start":233861,"byte_end":233872,"line_start":54,"line_end":54,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1519},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":235280,"byte_end":235289,"line_start":18,"line_end":18,"column_start":12,"column_end":21},"name":"FuncIndex","qualname":"::translation_utils::FuncIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" Index type of a function (imported or defined) inside the WebAssembly module.\n","sig":null,"attributes":[{"value":"/ Index type of a function (imported or defined) inside the WebAssembly module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":235049,"byte_end":235130,"line_start":15,"line_end":15,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":1556},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":235469,"byte_end":235485,"line_start":23,"line_end":23,"column_start":12,"column_end":28},"name":"DefinedFuncIndex","qualname":"::translation_utils::DefinedFuncIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" Index type of a defined function inside the WebAssembly module.\n","sig":null,"attributes":[{"value":"/ Index type of a defined function inside the WebAssembly module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":235322,"byte_end":235389,"line_start":21,"line_end":21,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":1587},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":235669,"byte_end":235686,"line_start":28,"line_end":28,"column_start":12,"column_end":29},"name":"DefinedTableIndex","qualname":"::translation_utils::DefinedTableIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" Index type of a defined table inside the WebAssembly module.\n","sig":null,"attributes":[{"value":"/ Index type of a defined table inside the WebAssembly module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":235525,"byte_end":235589,"line_start":26,"line_end":26,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":1618},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":235872,"byte_end":235890,"line_start":33,"line_end":33,"column_start":12,"column_end":30},"name":"DefinedMemoryIndex","qualname":"::translation_utils::DefinedMemoryIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" Index type of a defined memory inside the WebAssembly module.\n","sig":null,"attributes":[{"value":"/ Index type of a defined memory inside the WebAssembly module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":235727,"byte_end":235792,"line_start":31,"line_end":31,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":1649},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":236077,"byte_end":236095,"line_start":38,"line_end":38,"column_start":12,"column_end":30},"name":"DefinedGlobalIndex","qualname":"::translation_utils::DefinedGlobalIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" Index type of a defined global inside the WebAssembly module.\n","sig":null,"attributes":[{"value":"/ Index type of a defined global inside the WebAssembly module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":235932,"byte_end":235997,"line_start":36,"line_end":36,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":1699},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":236365,"byte_end":236375,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"TableIndex","qualname":"::translation_utils::TableIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" Index type of a table (imported or defined) inside the WebAssembly module.\n","sig":null,"attributes":[{"value":"/ Index type of a table (imported or defined) inside the WebAssembly module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":236137,"byte_end":236215,"line_start":41,"line_end":41,"column_start":1,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":1755},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":236647,"byte_end":236658,"line_start":50,"line_end":50,"column_start":12,"column_end":23},"name":"GlobalIndex","qualname":"::translation_utils::GlobalIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" Index type of a global variable (imported or defined) inside the WebAssembly module.\n","sig":null,"attributes":[{"value":"/ Index type of a global variable (imported or defined) inside the WebAssembly module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":236409,"byte_end":236497,"line_start":47,"line_end":47,"column_start":1,"column_end":89}}]},{"kind":"Struct","id":{"krate":0,"index":1811},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":236929,"byte_end":236940,"line_start":56,"line_end":56,"column_start":12,"column_end":23},"name":"MemoryIndex","qualname":"::translation_utils::MemoryIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" Index type of a linear memory (imported or defined) inside the WebAssembly module.\n","sig":null,"attributes":[{"value":"/ Index type of a linear memory (imported or defined) inside the WebAssembly module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":236693,"byte_end":236779,"line_start":53,"line_end":53,"column_start":1,"column_end":87}}]},{"kind":"Struct","id":{"krate":0,"index":1867},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":237207,"byte_end":237221,"line_start":62,"line_end":62,"column_start":12,"column_end":26},"name":"SignatureIndex","qualname":"::translation_utils::SignatureIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" Index type of a signature (imported or defined) inside the WebAssembly module.\n","sig":null,"attributes":[{"value":"/ Index type of a signature (imported or defined) inside the WebAssembly module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":236975,"byte_end":237057,"line_start":59,"line_end":59,"column_start":1,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":1923},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":237480,"byte_end":237489,"line_start":68,"line_end":68,"column_start":12,"column_end":21},"name":"DataIndex","qualname":"::translation_utils::DataIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" Index type of a passive data segment inside the WebAssembly module.\n","sig":null,"attributes":[{"value":"/ Index type of a passive data segment inside the WebAssembly module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":237259,"byte_end":237330,"line_start":65,"line_end":65,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":1979},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":237746,"byte_end":237755,"line_start":74,"line_end":74,"column_start":12,"column_end":21},"name":"ElemIndex","qualname":"::translation_utils::ElemIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" Index type of a passive element segment inside the WebAssembly module.\n","sig":null,"attributes":[{"value":"/ Index type of a passive element segment inside the WebAssembly module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":237522,"byte_end":237596,"line_start":71,"line_end":71,"column_start":1,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":2031},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":238334,"byte_end":238340,"line_start":86,"line_end":86,"column_start":12,"column_end":18},"name":"Global","qualname":"::translation_utils::Global","value":"Global { wasm_ty, ty, mutability, initializer }","parent":null,"children":[{"krate":0,"index":2032},{"krate":0,"index":2033},{"krate":0,"index":2034},{"krate":0,"index":2035}],"decl_id":null,"docs":" A WebAssembly global.","sig":null,"attributes":[{"value":"/ A WebAssembly global.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":237788,"byte_end":237813,"line_start":77,"line_end":77,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":237814,"byte_end":237817,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ Note that we record both the original Wasm type and the Cranelift IR type","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":237818,"byte_end":237895,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ used to represent it. This is because multiple different kinds of Wasm types","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":237896,"byte_end":237976,"line_start":80,"line_end":80,"column_start":1,"column_end":81}},{"value":"/ might be represented with the same Cranelift IR type. For example, both a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":237977,"byte_end":238054,"line_start":81,"line_end":81,"column_start":1,"column_end":78}},{"value":"/ Wasm `i64` and a `funcref` might be represented with a Cranelift `i64` on","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":238055,"byte_end":238132,"line_start":82,"line_end":82,"column_start":1,"column_end":78}},{"value":"/ 64-bit architectures, and when GC is not required for func refs.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":238133,"byte_end":238201,"line_start":83,"line_end":83,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":2032},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":238408,"byte_end":238415,"line_start":88,"line_end":88,"column_start":9,"column_end":16},"name":"wasm_ty","qualname":"::translation_utils::Global::wasm_ty","value":"environ::spec::WasmType","parent":{"krate":0,"index":2031},"children":[],"decl_id":null,"docs":" The Wasm type of the value stored in the global.\n","sig":null,"attributes":[{"value":"/ The Wasm type of the value stored in the global.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":238347,"byte_end":238399,"line_start":87,"line_end":87,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":2033},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":238507,"byte_end":238509,"line_start":90,"line_end":90,"column_start":9,"column_end":11},"name":"ty","qualname":"::translation_utils::Global::ty","value":"cranelift_codegen::ir::Type","parent":{"krate":0,"index":2031},"children":[],"decl_id":null,"docs":" The Cranelift IR type of the value stored in the global.\n","sig":null,"attributes":[{"value":"/ The Cranelift IR type of the value stored in the global.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":238438,"byte_end":238498,"line_start":89,"line_end":89,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":2034},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":238596,"byte_end":238606,"line_start":92,"line_end":92,"column_start":9,"column_end":19},"name":"mutability","qualname":"::translation_utils::Global::mutability","value":"bool","parent":{"krate":0,"index":2031},"children":[],"decl_id":null,"docs":" A flag indicating whether the value may change at runtime.\n","sig":null,"attributes":[{"value":"/ A flag indicating whether the value may change at runtime.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":238525,"byte_end":238587,"line_start":91,"line_end":91,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":2035},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":238663,"byte_end":238674,"line_start":94,"line_end":94,"column_start":9,"column_end":20},"name":"initializer","qualname":"::translation_utils::Global::initializer","value":"translation_utils::GlobalInit","parent":{"krate":0,"index":2031},"children":[],"decl_id":null,"docs":" The source of the initial value.\n","sig":null,"attributes":[{"value":"/ The source of the initial value.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":238618,"byte_end":238654,"line_start":93,"line_end":93,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2105},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":238951,"byte_end":238959,"line_start":102,"line_end":102,"column_start":5,"column_end":13},"name":"I32Const","qualname":"::translation_utils::GlobalInit::I32Const","value":"GlobalInit::I32Const(i32)","parent":{"krate":0,"index":2104},"children":[],"decl_id":null,"docs":" An `i32.const`.\n","sig":null,"attributes":[{"value":"/ An `i32.const`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":238927,"byte_end":238946,"line_start":101,"line_end":101,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2108},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":238994,"byte_end":239002,"line_start":104,"line_end":104,"column_start":5,"column_end":13},"name":"I64Const","qualname":"::translation_utils::GlobalInit::I64Const","value":"GlobalInit::I64Const(i64)","parent":{"krate":0,"index":2104},"children":[],"decl_id":null,"docs":" An `i64.const`.\n","sig":null,"attributes":[{"value":"/ An `i64.const`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":238970,"byte_end":238989,"line_start":103,"line_end":103,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2111},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":239037,"byte_end":239045,"line_start":106,"line_end":106,"column_start":5,"column_end":13},"name":"F32Const","qualname":"::translation_utils::GlobalInit::F32Const","value":"GlobalInit::F32Const(u32)","parent":{"krate":0,"index":2104},"children":[],"decl_id":null,"docs":" An `f32.const`.\n","sig":null,"attributes":[{"value":"/ An `f32.const`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":239013,"byte_end":239032,"line_start":105,"line_end":105,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2114},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":239080,"byte_end":239088,"line_start":108,"line_end":108,"column_start":5,"column_end":13},"name":"F64Const","qualname":"::translation_utils::GlobalInit::F64Const","value":"GlobalInit::F64Const(u64)","parent":{"krate":0,"index":2104},"children":[],"decl_id":null,"docs":" An `f64.const`.\n","sig":null,"attributes":[{"value":"/ An `f64.const`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":239056,"byte_end":239075,"line_start":107,"line_end":107,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2117},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":239119,"byte_end":239128,"line_start":110,"line_end":110,"column_start":5,"column_end":14},"name":"V128Const","qualname":"::translation_utils::GlobalInit::V128Const","value":"GlobalInit::V128Const(V128Imm)","parent":{"krate":0,"index":2104},"children":[],"decl_id":null,"docs":" A `vconst`.\n","sig":null,"attributes":[{"value":"/ A `vconst`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":239099,"byte_end":239114,"line_start":109,"line_end":109,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2120},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":239185,"byte_end":239194,"line_start":112,"line_end":112,"column_start":5,"column_end":14},"name":"GetGlobal","qualname":"::translation_utils::GlobalInit::GetGlobal","value":"GlobalInit::GetGlobal(GlobalIndex)","parent":{"krate":0,"index":2104},"children":[],"decl_id":null,"docs":" A `global.get` of another global.\n","sig":null,"attributes":[{"value":"/ A `global.get` of another global.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":239143,"byte_end":239180,"line_start":111,"line_end":111,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2123},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":239235,"byte_end":239247,"line_start":114,"line_end":114,"column_start":5,"column_end":17},"name":"RefNullConst","qualname":"::translation_utils::GlobalInit::RefNullConst","value":"GlobalInit::RefNullConst","parent":{"krate":0,"index":2104},"children":[],"decl_id":null,"docs":" A `ref.null`.\n","sig":null,"attributes":[{"value":"/ A `ref.null`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":239213,"byte_end":239230,"line_start":113,"line_end":113,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2125},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":239283,"byte_end":239290,"line_start":116,"line_end":116,"column_start":5,"column_end":12},"name":"RefFunc","qualname":"::translation_utils::GlobalInit::RefFunc","value":"GlobalInit::RefFunc(FuncIndex)","parent":{"krate":0,"index":2104},"children":[],"decl_id":null,"docs":" A `ref.func <index>`.\n","sig":null,"attributes":[{"value":"/ A `ref.func <index>`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":239253,"byte_end":239278,"line_start":115,"line_end":115,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2128},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":239390,"byte_end":239396,"line_start":118,"line_end":118,"column_start":5,"column_end":11},"name":"Import","qualname":"::translation_utils::GlobalInit::Import","value":"GlobalInit::Import","parent":{"krate":0,"index":2104},"children":[],"decl_id":null,"docs":"< The global is imported from, and thus initialized by, a different module.\n","sig":null,"attributes":[{"value":"/< The global is imported from, and thus initialized by, a different module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":239307,"byte_end":239385,"line_start":117,"line_end":117,"column_start":5,"column_end":83}}]},{"kind":"Enum","id":{"krate":0,"index":2104},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":238910,"byte_end":238920,"line_start":100,"line_end":100,"column_start":10,"column_end":20},"name":"GlobalInit","qualname":"::translation_utils::GlobalInit","value":"pub enum GlobalInit {\n    I32Const(i32),\n    I64Const(i64),\n    F32Const(u32),\n    F64Const(u64),\n    V128Const(V128Imm),\n    GetGlobal(GlobalIndex),\n    RefNullConst,\n    RefFunc(FuncIndex),\n    Import,\n}","parent":null,"children":[{"krate":0,"index":2105},{"krate":0,"index":2108},{"krate":0,"index":2111},{"krate":0,"index":2114},{"krate":0,"index":2117},{"krate":0,"index":2120},{"krate":0,"index":2123},{"krate":0,"index":2125},{"krate":0,"index":2128}],"decl_id":null,"docs":" Globals are initialized via the `const` operators or by referring to another import.\n","sig":null,"attributes":[{"value":"/ Globals are initialized via the `const` operators or by referring to another import.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":238691,"byte_end":238779,"line_start":97,"line_end":97,"column_start":1,"column_end":89}}]},{"kind":"Struct","id":{"krate":0,"index":2204},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":239556,"byte_end":239561,"line_start":124,"line_end":124,"column_start":12,"column_end":17},"name":"Table","qualname":"::translation_utils::Table","value":"Table { wasm_ty, ty, minimum, maximum }","parent":null,"children":[{"krate":0,"index":2205},{"krate":0,"index":2206},{"krate":0,"index":2207},{"krate":0,"index":2208}],"decl_id":null,"docs":" WebAssembly table.\n","sig":null,"attributes":[{"value":"/ WebAssembly table.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":239401,"byte_end":239423,"line_start":121,"line_end":121,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":2205},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":239611,"byte_end":239618,"line_start":126,"line_end":126,"column_start":9,"column_end":16},"name":"wasm_ty","qualname":"::translation_utils::Table::wasm_ty","value":"environ::spec::WasmType","parent":{"krate":0,"index":2204},"children":[],"decl_id":null,"docs":" The table elements' Wasm type.\n","sig":null,"attributes":[{"value":"/ The table elements' Wasm type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":239568,"byte_end":239602,"line_start":125,"line_end":125,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":2206},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":239682,"byte_end":239684,"line_start":128,"line_end":128,"column_start":9,"column_end":11},"name":"ty","qualname":"::translation_utils::Table::ty","value":"translation_utils::TableElementType","parent":{"krate":0,"index":2204},"children":[],"decl_id":null,"docs":" The table elements' Cranelift type.\n","sig":null,"attributes":[{"value":"/ The table elements' Cranelift type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":239634,"byte_end":239673,"line_start":127,"line_end":127,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":2207},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":239765,"byte_end":239772,"line_start":130,"line_end":130,"column_start":9,"column_end":16},"name":"minimum","qualname":"::translation_utils::Table::minimum","value":"u32","parent":{"krate":0,"index":2204},"children":[],"decl_id":null,"docs":" The minimum number of elements in the table.\n","sig":null,"attributes":[{"value":"/ The minimum number of elements in the table.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":239708,"byte_end":239756,"line_start":129,"line_end":129,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":2208},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":239840,"byte_end":239847,"line_start":132,"line_end":132,"column_start":9,"column_end":16},"name":"maximum","qualname":"::translation_utils::Table::maximum","value":"core::option::Option<u32>","parent":{"krate":0,"index":2204},"children":[],"decl_id":null,"docs":" The maximum number of elements in the table.\n","sig":null,"attributes":[{"value":"/ The maximum number of elements in the table.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":239783,"byte_end":239831,"line_start":131,"line_end":131,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2278},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":240108,"byte_end":240111,"line_start":140,"line_end":140,"column_start":5,"column_end":8},"name":"Val","qualname":"::translation_utils::TableElementType::Val","value":"TableElementType::Val(ir::Type)","parent":{"krate":0,"index":2277},"children":[],"decl_id":null,"docs":" A scalar type.\n","sig":null,"attributes":[{"value":"/ A scalar type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":240085,"byte_end":240103,"line_start":139,"line_end":139,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2281},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":240147,"byte_end":240151,"line_start":142,"line_end":142,"column_start":5,"column_end":9},"name":"Func","qualname":"::translation_utils::TableElementType::Func","value":"TableElementType::Func","parent":{"krate":0,"index":2277},"children":[],"decl_id":null,"docs":" A function.\n","sig":null,"attributes":[{"value":"/ A function.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":240127,"byte_end":240142,"line_start":141,"line_end":141,"column_start":5,"column_end":20}}]},{"kind":"Enum","id":{"krate":0,"index":2277},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":240062,"byte_end":240078,"line_start":138,"line_end":138,"column_start":10,"column_end":26},"name":"TableElementType","qualname":"::translation_utils::TableElementType","value":"pub enum TableElementType { Val(ir::Type), Func, }","parent":null,"children":[{"krate":0,"index":2278},{"krate":0,"index":2281}],"decl_id":null,"docs":" WebAssembly table element. Can be a function or a scalar type.\n","sig":null,"attributes":[{"value":"/ WebAssembly table element. Can be a function or a scalar type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":239865,"byte_end":239931,"line_start":135,"line_end":135,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":2343},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":240319,"byte_end":240325,"line_start":148,"line_end":148,"column_start":12,"column_end":18},"name":"Memory","qualname":"::translation_utils::Memory","value":"Memory { minimum, maximum, shared }","parent":null,"children":[{"krate":0,"index":2344},{"krate":0,"index":2345},{"krate":0,"index":2346}],"decl_id":null,"docs":" WebAssembly linear memory.\n","sig":null,"attributes":[{"value":"/ WebAssembly linear memory.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":240156,"byte_end":240186,"line_start":145,"line_end":145,"column_start":1,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":2344},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":240387,"byte_end":240394,"line_start":150,"line_end":150,"column_start":9,"column_end":16},"name":"minimum","qualname":"::translation_utils::Memory::minimum","value":"u32","parent":{"krate":0,"index":2343},"children":[],"decl_id":null,"docs":" The minimum number of pages in the memory.\n","sig":null,"attributes":[{"value":"/ The minimum number of pages in the memory.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":240332,"byte_end":240378,"line_start":149,"line_end":149,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":2345},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":240460,"byte_end":240467,"line_start":152,"line_end":152,"column_start":9,"column_end":16},"name":"maximum","qualname":"::translation_utils::Memory::maximum","value":"core::option::Option<u32>","parent":{"krate":0,"index":2343},"children":[],"decl_id":null,"docs":" The maximum number of pages in the memory.\n","sig":null,"attributes":[{"value":"/ The maximum number of pages in the memory.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":240405,"byte_end":240451,"line_start":151,"line_end":151,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":2346},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":240557,"byte_end":240563,"line_start":154,"line_end":154,"column_start":9,"column_end":15},"name":"shared","qualname":"::translation_utils::Memory::shared","value":"bool","parent":{"krate":0,"index":2343},"children":[],"decl_id":null,"docs":" Whether the memory may be shared between multiple threads.\n","sig":null,"attributes":[{"value":"/ Whether the memory may be shared between multiple threads.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":240486,"byte_end":240548,"line_start":153,"line_end":153,"column_start":5,"column_end":67}}]},{"kind":"Function","id":{"krate":0,"index":1160},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":245186,"byte_end":245207,"line_start":270,"line_end":270,"column_start":8,"column_end":29},"name":"get_vmctx_value_label","qualname":"::translation_utils::get_vmctx_value_label","value":"pub fn get_vmctx_value_label() -> ir::ValueLabel","parent":null,"children":[],"decl_id":null,"docs":" Special VMContext value label. It is tracked as 0xffff_fffe label.\n","sig":null,"attributes":[{"value":"/ Special VMContext value label. It is tracked as 0xffff_fffe label.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\translation_utils.rs","byte_start":245108,"byte_end":245178,"line_start":269,"line_end":269,"column_start":1,"column_end":71}}]},{"kind":"Const","id":{"krate":0,"index":1260},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","byte_start":2506,"byte_end":2513,"line_start":76,"line_end":76,"column_start":11,"column_end":18},"name":"VERSION","qualname":"::VERSION","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" Version number of this crate.\n","sig":null,"attributes":[{"value":"/ Version number of this crate.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\lib.rs","byte_start":2462,"byte_end":2495,"line_start":75,"line_end":75,"column_start":1,"column_end":34}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":123388,"byte_end":123398,"line_start":44,"line_end":44,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":125137,"byte_end":125152,"line_start":94,"line_end":94,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":126577,"byte_end":126593,"line_start":140,"line_end":140,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":128074,"byte_end":128094,"line_start":183,"line_end":183,"column_start":26,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":128982,"byte_end":129002,"line_start":211,"line_end":211,"column_start":48,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":129162,"byte_end":129182,"line_start":217,"line_end":217,"column_start":46,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":139375,"byte_end":139391,"line_start":566,"line_end":566,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":139523,"byte_end":139539,"line_start":572,"line_end":572,"column_start":42,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":146775,"byte_end":146783,"line_start":49,"line_end":49,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":495},{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":147456,"byte_end":147460,"line_start":69,"line_end":69,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":499}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":148318,"byte_end":148330,"line_start":93,"line_end":93,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":501},{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":151297,"byte_end":151306,"line_start":178,"line_end":178,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":505}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\func_translator.rs","byte_start":176810,"byte_end":176824,"line_start":29,"line_end":29,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":697}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\state\\func_state.rs","byte_start":215959,"byte_end":215976,"line_start":91,"line_end":91,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1017},{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1026}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\state\\func_state.rs","byte_start":221606,"byte_end":221626,"line_start":248,"line_end":248,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1037}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\state\\func_state.rs","byte_start":221818,"byte_end":221838,"line_start":256,"line_end":256,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1045},{"krate":0,"index":1046},{"krate":0,"index":1047},{"krate":0,"index":1048},{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1053},{"krate":0,"index":1054},{"krate":0,"index":1055}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\state\\func_state.rs","byte_start":228102,"byte_end":228122,"line_start":444,"line_end":444,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1057},{"krate":0,"index":1059},{"krate":0,"index":1061},{"krate":0,"index":1063},{"krate":0,"index":1065}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\state\\module_state.rs","byte_start":233441,"byte_end":233463,"line_start":43,"line_end":43,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1100},{"krate":0,"index":1101}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":123388,"byte_end":123398,"line_start":44,"line_end":44,"column_start":9,"column_end":19},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":306},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":125137,"byte_end":125152,"line_start":94,"line_end":94,"column_start":6,"column_end":21},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":313},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":126577,"byte_end":126593,"line_start":140,"line_end":140,"column_start":6,"column_end":22},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":328},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":128074,"byte_end":128094,"line_start":183,"line_end":183,"column_start":26,"column_end":46},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":342},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":128982,"byte_end":129002,"line_start":211,"line_end":211,"column_start":48,"column_end":68},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":342},"to":{"krate":0,"index":508}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":129162,"byte_end":129182,"line_start":217,"line_end":217,"column_start":46,"column_end":66},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":342},"to":{"krate":0,"index":513}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":139375,"byte_end":139391,"line_start":566,"line_end":566,"column_start":28,"column_end":44},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":328},"to":{"krate":0,"index":508}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\dummy.rs","byte_start":139523,"byte_end":139539,"line_start":572,"line_end":572,"column_start":42,"column_end":58},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":328},"to":{"krate":0,"index":548}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":146775,"byte_end":146783,"line_start":49,"line_end":49,"column_start":36,"column_end":44},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1275},"to":{"krate":1,"index":2902}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":147456,"byte_end":147460,"line_start":69,"line_end":69,"column_start":37,"column_end":41},"kind":{"Impl":{"id":11}},"from":{"krate":38,"index":2691},"to":{"krate":1,"index":2895}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":148318,"byte_end":148330,"line_start":93,"line_end":93,"column_start":40,"column_end":52},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1359},"to":{"krate":1,"index":2902}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":151297,"byte_end":151306,"line_start":178,"line_end":178,"column_start":34,"column_end":43},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1424},"to":{"krate":1,"index":2895}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":153539,"byte_end":153556,"line_start":239,"line_end":239,"column_start":28,"column_end":45},"kind":"SuperTrait","from":{"krate":0,"index":508},"to":{"krate":0,"index":513}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\environ\\spec.rs","byte_start":167814,"byte_end":167831,"line_start":630,"line_end":630,"column_start":37,"column_end":54},"kind":"SuperTrait","from":{"krate":0,"index":508},"to":{"krate":0,"index":548}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\func_translator.rs","byte_start":176810,"byte_end":176824,"line_start":29,"line_end":29,"column_start":6,"column_end":20},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":690},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\state\\func_state.rs","byte_start":215959,"byte_end":215976,"line_start":91,"line_end":91,"column_start":6,"column_end":23},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1471},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\state\\func_state.rs","byte_start":221606,"byte_end":221626,"line_start":248,"line_end":248,"column_start":6,"column_end":26},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1027},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\state\\func_state.rs","byte_start":221818,"byte_end":221838,"line_start":256,"line_end":256,"column_start":6,"column_end":26},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1027},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\state\\func_state.rs","byte_start":228102,"byte_end":228122,"line_start":444,"line_end":444,"column_start":6,"column_end":26},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1027},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-wasm-0.67.0\\src\\state\\module_state.rs","byte_start":233441,"byte_end":233463,"line_start":43,"line_end":43,"column_start":6,"column_end":28},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1496},"to":{"krate":4294967295,"index":4294967295}}]}