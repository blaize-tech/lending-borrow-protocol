{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2","program":"C:\\Users\\комфи\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","wasmer","--edition=2018","C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"compiler\"","--cfg","feature=\"cranelift\"","--cfg","feature=\"default\"","--cfg","feature=\"default-compiler\"","--cfg","feature=\"default-cranelift\"","--cfg","feature=\"default-engine\"","--cfg","feature=\"default-jit\"","--cfg","feature=\"engine\"","--cfg","feature=\"jit\"","--cfg","feature=\"wasmer-compiler-cranelift\"","--cfg","feature=\"wasmer-engine-jit\"","--cfg","feature=\"wasmer-engine-native\"","--cfg","feature=\"wat\"","-C","metadata=27aad5cb0f2060dc","-C","extra-filename=-27aad5cb0f2060dc","--out-dir","c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps","--extern","cfg_if=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps\\libcfg_if-7ebfe9d187c72daf.rmeta","--extern","indexmap=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps\\libindexmap-227fcb7c96d6e1d8.rmeta","--extern","more_asserts=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps\\libmore_asserts-b83dd17b0982b522.rmeta","--extern","target_lexicon=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps\\libtarget_lexicon-36690c28977a19f7.rmeta","--extern","thiserror=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps\\libthiserror-4e544be42338ddff.rmeta","--extern","wasmer_compiler=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps\\libwasmer_compiler-02c18c6513804f39.rmeta","--extern","wasmer_compiler_cranelift=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps\\libwasmer_compiler_cranelift-f188633f49fc05b3.rmeta","--extern","wasmer_derive=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps\\wasmer_derive-9edc6cf2ff262117.dll","--extern","wasmer_engine=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps\\libwasmer_engine-abd7abddbbd7a376.rmeta","--extern","wasmer_engine_jit=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps\\libwasmer_engine_jit-b90428b51f8df867.rmeta","--extern","wasmer_engine_native=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps\\libwasmer_engine_native-fe3d9204c67cce3e.rmeta","--extern","wasmer_types=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps\\libwasmer_types-c46c9d791741676c.rmeta","--extern","wasmer_vm=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps\\libwasmer_vm-0fdc548a13eadde1.rmeta","--extern","wat=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps\\libwat-971014d1e0c3f718.rmeta","--extern","winapi=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps\\libwinapi-45f10d884985cdd2.rmeta","--cap-lints","allow","-L","native=c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\build\\wasmer-vm-87a28e9ee504f348\\out","--error-format=json","--sysroot","C:\\Users\\комфи\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\комфи\\Documents\\Stest\\nearlend-protocol\\contracts\\dtoken\\target\\rls\\debug\\deps\\libwasmer-27aad5cb0f2060dc.rmeta"},"prelude":{"crate_id":{"name":"wasmer","disambiguator":[18227865878802718408,0]},"crate_root":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src","external_crates":[{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[7976927198175868373,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[11165144592143370822,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[252041924521724887,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5467317383579905353,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7624884120048857693,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[11703982264691436790,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[2970152443746782806,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9222488229097456044,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7853498759631503325,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16147963203778103955,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[14622278557065309757,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[12620427935833221912,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[5227252993197737239,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","num":14,"id":{"name":"thiserror","disambiguator":[16452521269220640097,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","num":15,"id":{"name":"thiserror_impl","disambiguator":[9048138020972467572,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","num":16,"id":{"name":"indexmap","disambiguator":[6864592234072865951,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","num":17,"id":{"name":"serde","disambiguator":[9823350511623119401,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","num":18,"id":{"name":"serde_derive","disambiguator":[15868471050106267783,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","num":19,"id":{"name":"hashbrown","disambiguator":[10599224521677906658,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","num":20,"id":{"name":"ahash","disambiguator":[9774790966930561325,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","num":21,"id":{"name":"once_cell","disambiguator":[1116581588057473973,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","num":22,"id":{"name":"getrandom","disambiguator":[516886532770300459,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","num":23,"id":{"name":"cfg_if","disambiguator":[12394071839129264589,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","num":24,"id":{"name":"wasmer_engine","disambiguator":[14000384178827414969,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","num":25,"id":{"name":"wasmer_compiler","disambiguator":[14420886336525919965,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","num":26,"id":{"name":"wasmer_types","disambiguator":[3475464939275482809,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","num":27,"id":{"name":"cranelift_entity","disambiguator":[4460818883170685327,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","num":28,"id":{"name":"wasmparser","disambiguator":[8811574714319775121,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","num":29,"id":{"name":"wasmer_vm","disambiguator":[4980603863045120766,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","num":30,"id":{"name":"memoffset","disambiguator":[5737023381025111719,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","num":31,"id":{"name":"more_asserts","disambiguator":[14500903528052251730,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","num":32,"id":{"name":"winapi","disambiguator":[158433219665495671,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","num":33,"id":{"name":"backtrace","disambiguator":[18279527200876222632,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","num":34,"id":{"name":"rustc_demangle","disambiguator":[2006755871501211046,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\store.rs","num":35,"id":{"name":"cfg_if","disambiguator":[2603666211785926936,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","num":36,"id":{"name":"region","disambiguator":[4904781915204537961,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","num":37,"id":{"name":"bitflags","disambiguator":[12990884787969604699,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","num":38,"id":{"name":"libc","disambiguator":[4367109586866483853,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","num":39,"id":{"name":"enumset","disambiguator":[14222288311746096494,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","num":40,"id":{"name":"enumset_derive","disambiguator":[9671135398679619006,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\tunables.rs","num":41,"id":{"name":"target_lexicon","disambiguator":[2317706166845696577,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","num":42,"id":{"name":"smallvec","disambiguator":[9259698098513288274,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","num":43,"id":{"name":"serde_bytes","disambiguator":[8955081905689484851,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","num":44,"id":{"name":"memmap2","disambiguator":[6813017146737331155,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","num":45,"id":{"name":"lazy_static","disambiguator":[8441177590269360409,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","num":46,"id":{"name":"bincode","disambiguator":[576794707663839264,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","num":47,"id":{"name":"wasmer_derive","disambiguator":[4795752138385449096,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","num":48,"id":{"name":"wat","disambiguator":[2898619377789749267,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","num":49,"id":{"name":"wast","disambiguator":[5181905013049709359,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","num":50,"id":{"name":"unicode_width","disambiguator":[15041917927987499597,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","num":51,"id":{"name":"leb128","disambiguator":[9761876771889172693,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","num":52,"id":{"name":"memchr","disambiguator":[14479689056587954301,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","num":53,"id":{"name":"wasmer_compiler_cranelift","disambiguator":[5984323041508278936,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","num":54,"id":{"name":"cranelift_codegen","disambiguator":[17988366752973088859,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","num":55,"id":{"name":"cranelift_bforest","disambiguator":[2952026581149434866,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","num":56,"id":{"name":"log","disambiguator":[7262945953961677380,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","num":57,"id":{"name":"cranelift_codegen_shared","disambiguator":[12356658643580409742,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","num":58,"id":{"name":"gimli","disambiguator":[377093619841935239,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","num":59,"id":{"name":"stable_deref_trait","disambiguator":[18085504202279939971,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","num":60,"id":{"name":"fallible_iterator","disambiguator":[6716362794023931551,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","num":61,"id":{"name":"regalloc","disambiguator":[791529430645552951,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","num":62,"id":{"name":"rustc_hash","disambiguator":[2358302366584189522,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","num":63,"id":{"name":"byteorder","disambiguator":[13956033545584725802,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","num":64,"id":{"name":"rayon","disambiguator":[7799872383432784685,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","num":65,"id":{"name":"either","disambiguator":[16758343513663004044,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","num":66,"id":{"name":"rayon_core","disambiguator":[17522628497418583520,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","num":67,"id":{"name":"crossbeam_channel","disambiguator":[3878082362884718717,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","num":68,"id":{"name":"crossbeam_utils","disambiguator":[16509955960531353938,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","num":69,"id":{"name":"crossbeam_deque","disambiguator":[8909266299383619027,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","num":70,"id":{"name":"crossbeam_epoch","disambiguator":[16885596610882384776,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","num":71,"id":{"name":"scopeguard","disambiguator":[18306970893068717338,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","num":72,"id":{"name":"num_cpus","disambiguator":[5602087639290646300,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","num":73,"id":{"name":"cranelift_frontend","disambiguator":[14799904155871911690,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","num":74,"id":{"name":"tracing","disambiguator":[12431005970690417840,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","num":75,"id":{"name":"tracing_core","disambiguator":[5753343767479207645,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","num":76,"id":{"name":"tracing_attributes","disambiguator":[7925999734946582569,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","num":77,"id":{"name":"pin_project_lite","disambiguator":[17116917996566049709,0]}},{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","num":78,"id":{"name":"wasmer_engine_jit","disambiguator":[8468823879978554834,0]}}],"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":0,"byte_end":12958,"line_start":1,"line_end":371,"column_start":1,"column_end":53}},"imports":[{"kind":"Use","ref_id":{"krate":47,"index":134},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":9342,"byte_end":9351,"line_start":272,"line_end":272,"column_start":24,"column_end":33},"alias_span":null,"name":"WasmerEnv","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":480},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":9808,"byte_end":9815,"line_start":283,"line_end":283,"column_start":32,"column_end":39},"alias_span":null,"name":"WithEnv","value":"","parent":{"krate":0,"index":1376}},{"kind":"Use","ref_id":{"krate":0,"index":481},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":9808,"byte_end":9815,"line_start":283,"line_end":283,"column_start":32,"column_end":39},"alias_span":null,"name":"WithEnv","value":"","parent":{"krate":0,"index":1376}},{"kind":"Use","ref_id":{"krate":0,"index":483},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":9817,"byte_end":9827,"line_start":283,"line_end":283,"column_start":41,"column_end":51},"alias_span":null,"name":"WithoutEnv","value":"","parent":{"krate":0,"index":1376}},{"kind":"Use","ref_id":{"krate":0,"index":484},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":9817,"byte_end":9827,"line_start":283,"line_end":283,"column_start":41,"column_end":51},"alias_span":null,"name":"WithoutEnv","value":"","parent":{"krate":0,"index":1376}},{"kind":"Use","ref_id":{"krate":0,"index":1719},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":9854,"byte_end":9870,"line_start":286,"line_end":286,"column_start":22,"column_end":38},"alias_span":null,"name":"HostEnvInitError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":61},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":9872,"byte_end":9880,"line_start":286,"line_end":286,"column_start":40,"column_end":48},"alias_span":null,"name":"LazyInit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":16},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":9882,"byte_end":9891,"line_start":286,"line_end":286,"column_start":50,"column_end":59},"alias_span":null,"name":"WasmerEnv","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1723},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":9919,"byte_end":9930,"line_start":287,"line_end":287,"column_start":26,"column_end":37},"alias_span":null,"name":"ExportError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":200},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":9932,"byte_end":9942,"line_start":287,"line_end":287,"column_start":39,"column_end":49},"alias_span":null,"name":"Exportable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1741},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":9944,"byte_end":9951,"line_start":287,"line_end":287,"column_start":51,"column_end":58},"alias_span":null,"name":"Exports","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":9953,"byte_end":9968,"line_start":287,"line_end":287,"column_start":60,"column_end":75},"alias_span":null,"name":"ExportsIterator","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6930},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":10003,"byte_end":10009,"line_start":289,"line_end":289,"column_start":5,"column_end":11},"alias_span":null,"name":"Extern","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":444},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":10011,"byte_end":10031,"line_start":289,"line_end":289,"column_start":13,"column_end":33},"alias_span":null,"name":"FromToNativeWasmType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1776},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":10033,"byte_end":10041,"line_start":289,"line_end":289,"column_start":35,"column_end":43},"alias_span":null,"name":"Function","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6913},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":10043,"byte_end":10049,"line_start":289,"line_end":289,"column_start":45,"column_end":51},"alias_span":null,"name":"Global","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":473},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":10051,"byte_end":10063,"line_start":289,"line_end":289,"column_start":53,"column_end":65},"alias_span":null,"name":"HostFunction","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6918},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":10065,"byte_end":10071,"line_start":289,"line_end":289,"column_start":67,"column_end":73},"alias_span":null,"name":"Memory","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6925},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":10073,"byte_end":10078,"line_start":289,"line_end":289,"column_start":75,"column_end":80},"alias_span":null,"name":"Table","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":450},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":10080,"byte_end":10092,"line_start":289,"line_end":289,"column_start":82,"column_end":94},"alias_span":null,"name":"WasmTypeList","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6945},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":10128,"byte_end":10140,"line_start":291,"line_end":291,"column_start":32,"column_end":44},"alias_span":null,"name":"ImportObject","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":834},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":10142,"byte_end":10162,"line_start":291,"line_end":291,"column_start":46,"column_end":66},"alias_span":null,"name":"ImportObjectIterator","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":821},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":10164,"byte_end":10177,"line_start":291,"line_end":291,"column_start":68,"column_end":81},"alias_span":null,"name":"LikeNamespace","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6951},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":10206,"byte_end":10214,"line_start":292,"line_end":292,"column_start":27,"column_end":35},"alias_span":null,"name":"Instance","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6957},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":10216,"byte_end":10234,"line_start":292,"line_end":292,"column_start":37,"column_end":55},"alias_span":null,"name":"InstantiationError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6996},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":10260,"byte_end":10266,"line_start":293,"line_end":293,"column_start":24,"column_end":30},"alias_span":null,"name":"Module","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7001},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":10291,"byte_end":10301,"line_start":294,"line_end":294,"column_start":24,"column_end":34},"alias_span":null,"name":"NativeFunc","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1128},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":10324,"byte_end":10329,"line_start":295,"line_end":295,"column_start":22,"column_end":27},"alias_span":null,"name":"Array","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1129},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":10324,"byte_end":10329,"line_start":295,"line_end":295,"column_start":22,"column_end":27},"alias_span":null,"name":"Array","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1130},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":10331,"byte_end":10335,"line_start":295,"line_end":295,"column_start":29,"column_end":33},"alias_span":null,"name":"Item","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1131},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":10331,"byte_end":10335,"line_start":295,"line_end":295,"column_start":29,"column_end":33},"alias_span":null,"name":"Item","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1132},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":10337,"byte_end":10344,"line_start":295,"line_end":295,"column_start":35,"column_end":42},"alias_span":null,"name":"WasmPtr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7747},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":10370,"byte_end":10375,"line_start":296,"line_end":296,"column_start":24,"column_end":29},"alias_span":null,"name":"Store","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1230},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":10377,"byte_end":10388,"line_start":296,"line_end":296,"column_start":31,"column_end":42},"alias_span":null,"name":"StoreObject","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7752},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":10416,"byte_end":10428,"line_start":297,"line_end":297,"column_start":26,"column_end":38},"alias_span":null,"name":"BaseTunables","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":3303},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":10458,"byte_end":10468,"line_start":299,"line_end":299,"column_start":5,"column_end":15},"alias_span":null,"name":"ExportType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":1950},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":10470,"byte_end":10479,"line_start":299,"line_end":299,"column_start":17,"column_end":26},"alias_span":null,"name":"ExternRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":2108},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":10481,"byte_end":10491,"line_start":299,"line_end":299,"column_start":28,"column_end":38},"alias_span":null,"name":"ExternType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":2192},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":10493,"byte_end":10505,"line_start":299,"line_end":299,"column_start":40,"column_end":52},"alias_span":null,"name":"FunctionType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":2923},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":10507,"byte_end":10517,"line_start":299,"line_end":299,"column_start":54,"column_end":64},"alias_span":null,"name":"GlobalType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":274},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":10519,"byte_end":10527,"line_start":299,"line_end":299,"column_start":66,"column_end":74},"alias_span":null,"name":"HostInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":317},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":10529,"byte_end":10536,"line_start":299,"line_end":299,"column_start":76,"column_end":83},"alias_span":null,"name":"HostRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":3222},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":10538,"byte_end":10548,"line_start":299,"line_end":299,"column_start":85,"column_end":95},"alias_span":null,"name":"ImportType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":3146},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":10554,"byte_end":10564,"line_start":300,"line_end":300,"column_start":5,"column_end":15},"alias_span":null,"name":"MemoryType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":2858},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":10566,"byte_end":10576,"line_start":300,"line_end":300,"column_start":17,"column_end":27},"alias_span":null,"name":"Mutability","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":3076},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":10578,"byte_end":10587,"line_start":300,"line_end":300,"column_start":29,"column_end":38},"alias_span":null,"name":"TableType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1359},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":10589,"byte_end":10592,"line_start":300,"line_end":300,"column_start":40,"column_end":43},"alias_span":null,"name":"Val","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":1975},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":10594,"byte_end":10601,"line_start":300,"line_end":300,"column_start":45,"column_end":52},"alias_span":null,"name":"ValType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1359},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":10629,"byte_end":10632,"line_start":302,"line_end":302,"column_start":24,"column_end":27},"alias_span":null,"name":"Value","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":1975},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":10643,"byte_end":10650,"line_start":302,"line_end":302,"column_start":38,"column_end":45},"alias_span":null,"name":"Type","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1371},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":10683,"byte_end":10690,"line_start":303,"line_end":303,"column_start":23,"column_end":30},"alias_span":null,"name":"is_wasm","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":41,"index":415},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":10717,"byte_end":10729,"line_start":304,"line_end":304,"column_start":26,"column_end":38},"alias_span":null,"name":"Architecture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":41,"index":983},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":10731,"byte_end":10748,"line_start":304,"line_end":304,"column_start":40,"column_end":57},"alias_span":null,"name":"CallingConvention","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":41,"index":773},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":10750,"byte_end":10765,"line_start":304,"line_end":304,"column_start":59,"column_end":74},"alias_span":null,"name":"OperatingSystem","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":41,"index":1004},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":10767,"byte_end":10773,"line_start":304,"line_end":304,"column_start":76,"column_end":82},"alias_span":null,"name":"Triple","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":41,"index":372},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":10775,"byte_end":10779,"line_start":304,"line_end":304,"column_start":84,"column_end":88},"alias_span":null,"name":"HOST","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":28,"index":0},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":10842,"byte_end":10852,"line_start":307,"line_end":307,"column_start":5,"column_end":15},"alias_span":null,"name":"wasmparser","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":25,"index":98},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":10854,"byte_end":10868,"line_start":307,"line_end":307,"column_start":17,"column_end":31},"alias_span":null,"name":"CompilerConfig","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":25,"index":592},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":10870,"byte_end":10888,"line_start":307,"line_end":307,"column_start":33,"column_end":51},"alias_span":null,"name":"FunctionMiddleware","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":25,"index":1362},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":10890,"byte_end":10905,"line_start":307,"line_end":307,"column_start":53,"column_end":68},"alias_span":null,"name":"MiddlewareError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":25,"index":2347},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":10907,"byte_end":10928,"line_start":307,"line_end":307,"column_start":70,"column_end":91},"alias_span":null,"name":"MiddlewareReaderState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":25,"index":589},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":10934,"byte_end":10950,"line_start":308,"line_end":308,"column_start":5,"column_end":21},"alias_span":null,"name":"ModuleMiddleware","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":25,"index":1321},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":10986,"byte_end":10998,"line_start":311,"line_end":311,"column_start":5,"column_end":17},"alias_span":null,"name":"CompileError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":25,"index":2115},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":11000,"byte_end":11010,"line_start":311,"line_end":311,"column_start":19,"column_end":29},"alias_span":null,"name":"CpuFeature","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":765},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":11012,"byte_end":11020,"line_start":311,"line_end":311,"column_start":31,"column_end":39},"alias_span":null,"name":"Features","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":25,"index":1394},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":11022,"byte_end":11042,"line_start":311,"line_end":311,"column_start":41,"column_end":61},"alias_span":null,"name":"ParseCpuFeatureError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":25,"index":2190},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":11044,"byte_end":11050,"line_start":311,"line_end":311,"column_start":63,"column_end":69},"alias_span":null,"name":"Target","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":25,"index":1367},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":11052,"byte_end":11061,"line_start":311,"line_end":311,"column_start":71,"column_end":80},"alias_span":null,"name":"WasmError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":25,"index":135},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":11063,"byte_end":11073,"line_start":311,"line_end":311,"column_start":82,"column_end":92},"alias_span":null,"name":"WasmResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":24,"index":350},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":11107,"byte_end":11129,"line_start":314,"line_end":314,"column_start":5,"column_end":27},"alias_span":null,"name":"ChainableNamedResolver","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":24,"index":773},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":11131,"byte_end":11147,"line_start":314,"line_end":314,"column_start":29,"column_end":45},"alias_span":null,"name":"DeserializeError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":24,"index":167},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":11149,"byte_end":11155,"line_start":314,"line_end":314,"column_start":47,"column_end":53},"alias_span":null,"name":"Engine","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":24,"index":864},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":11157,"byte_end":11163,"line_start":314,"line_end":314,"column_start":55,"column_end":61},"alias_span":null,"name":"Export","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":24,"index":989},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":11165,"byte_end":11174,"line_start":314,"line_end":314,"column_start":63,"column_end":72},"alias_span":null,"name":"FrameInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":24,"index":836},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":11176,"byte_end":11185,"line_start":314,"line_end":314,"column_start":74,"column_end":83},"alias_span":null,"name":"LinkError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":24,"index":326},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":11187,"byte_end":11200,"line_start":314,"line_end":314,"column_start":85,"column_end":98},"alias_span":null,"name":"NamedResolver","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":24,"index":345},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":11206,"byte_end":11224,"line_start":315,"line_end":315,"column_start":5,"column_end":23},"alias_span":null,"name":"NamedResolverChain","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":24,"index":324},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":11226,"byte_end":11234,"line_start":315,"line_end":315,"column_start":25,"column_end":33},"alias_span":null,"name":"Resolver","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":24,"index":948},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":11236,"byte_end":11248,"line_start":315,"line_end":315,"column_start":35,"column_end":47},"alias_span":null,"name":"RuntimeError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":24,"index":748},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":11250,"byte_end":11264,"line_start":315,"line_end":315,"column_start":49,"column_end":63},"alias_span":null,"name":"SerializeError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":24,"index":649},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":11266,"byte_end":11274,"line_start":315,"line_end":315,"column_start":65,"column_end":73},"alias_span":null,"name":"Tunables","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":160},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":11307,"byte_end":11317,"line_start":318,"line_end":318,"column_start":5,"column_end":15},"alias_span":null,"name":"Atomically","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":161},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":11307,"byte_end":11317,"line_start":318,"line_end":318,"column_start":5,"column_end":15},"alias_span":null,"name":"Atomically","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":3422},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":11319,"byte_end":11324,"line_start":318,"line_end":318,"column_start":17,"column_end":22},"alias_span":null,"name":"Bytes","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":3423},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":11319,"byte_end":11324,"line_start":318,"line_end":318,"column_start":17,"column_end":22},"alias_span":null,"name":"Bytes","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":1528},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":11326,"byte_end":11337,"line_start":318,"line_end":318,"column_start":24,"column_end":35},"alias_span":null,"name":"ExportIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":2980},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":11339,"byte_end":11349,"line_start":318,"line_end":318,"column_start":37,"column_end":47},"alias_span":null,"name":"GlobalInit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":857},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":11351,"byte_end":11369,"line_start":318,"line_end":318,"column_start":49,"column_end":67},"alias_span":null,"name":"LocalFunctionIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":166},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":11371,"byte_end":11381,"line_start":318,"line_end":318,"column_start":69,"column_end":79},"alias_span":null,"name":"MemoryView","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":3377},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":11383,"byte_end":11388,"line_start":318,"line_end":318,"column_start":81,"column_end":86},"alias_span":null,"name":"Pages","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":3378},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":11383,"byte_end":11388,"line_start":318,"line_end":318,"column_start":81,"column_end":86},"alias_span":null,"name":"Pages","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":245},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":11390,"byte_end":11399,"line_start":318,"line_end":318,"column_start":88,"column_end":97},"alias_span":null,"name":"ValueType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":486},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":11405,"byte_end":11419,"line_start":319,"line_end":319,"column_start":5,"column_end":19},"alias_span":null,"name":"WASM_MAX_PAGES","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":487},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":11421,"byte_end":11435,"line_start":319,"line_end":319,"column_start":21,"column_end":35},"alias_span":null,"name":"WASM_MIN_PAGES","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":485},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":11437,"byte_end":11451,"line_start":319,"line_end":319,"column_start":37,"column_end":51},"alias_span":null,"name":"WASM_PAGE_SIZE","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":29,"index":1149},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":11533,"byte_end":11548,"line_start":323,"line_end":323,"column_start":21,"column_end":36},"alias_span":null,"name":"raise_user_trap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":29,"index":1833},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":11550,"byte_end":11561,"line_start":323,"line_end":323,"column_start":38,"column_end":49},"alias_span":null,"name":"MemoryError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":29,"index":1713},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":11563,"byte_end":11571,"line_start":323,"line_end":323,"column_start":51,"column_end":59},"alias_span":null,"name":"VMExport","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":29,"index":664},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":11671,"byte_end":11677,"line_start":328,"line_end":328,"column_start":9,"column_end":15},"alias_span":null,"name":"Memory","value":"","parent":{"krate":0,"index":1663}},{"kind":"Use","ref_id":{"krate":29,"index":1833},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":11679,"byte_end":11690,"line_start":328,"line_end":328,"column_start":17,"column_end":28},"alias_span":null,"name":"MemoryError","value":"","parent":{"krate":0,"index":1663}},{"kind":"Use","ref_id":{"krate":29,"index":1872},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":11692,"byte_end":11703,"line_start":328,"line_end":328,"column_start":30,"column_end":41},"alias_span":null,"name":"MemoryStyle","value":"","parent":{"krate":0,"index":1663}},{"kind":"Use","ref_id":{"krate":29,"index":1037},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":11705,"byte_end":11710,"line_start":328,"line_end":328,"column_start":43,"column_end":48},"alias_span":null,"name":"Table","value":"","parent":{"krate":0,"index":1663}},{"kind":"Use","ref_id":{"krate":29,"index":2167},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":11712,"byte_end":11722,"line_start":328,"line_end":328,"column_start":50,"column_end":60},"alias_span":null,"name":"TableStyle","value":"","parent":{"krate":0,"index":1663}},{"kind":"Use","ref_id":{"krate":29,"index":2447},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":11724,"byte_end":11742,"line_start":328,"line_end":328,"column_start":62,"column_end":80},"alias_span":null,"name":"VMMemoryDefinition","value":"","parent":{"krate":0,"index":1663}},{"kind":"Use","ref_id":{"krate":29,"index":2455},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":11744,"byte_end":11761,"line_start":328,"line_end":328,"column_start":82,"column_end":99},"alias_span":null,"name":"VMTableDefinition","value":"","parent":{"krate":0,"index":1663}},{"kind":"Use","ref_id":{"krate":48,"index":30},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":11810,"byte_end":11821,"line_start":333,"line_end":333,"column_start":14,"column_end":25},"alias_span":null,"name":"wat2wasm","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":53,"index":1468},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":12581,"byte_end":12590,"line_start":359,"line_end":359,"column_start":37,"column_end":46},"alias_span":null,"name":"Cranelift","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":53,"index":1457},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":12592,"byte_end":12609,"line_start":359,"line_end":359,"column_start":48,"column_end":65},"alias_span":null,"name":"CraneliftOptLevel","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":78,"index":118},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":12743,"byte_end":12754,"line_start":365,"line_end":365,"column_start":29,"column_end":40},"alias_span":null,"name":"JITArtifact","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":78,"index":468},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":12756,"byte_end":12765,"line_start":365,"line_end":365,"column_start":42,"column_end":51},"alias_span":null,"name":"JITEngine","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":78,"index":170},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":12767,"byte_end":12770,"line_start":365,"line_end":365,"column_start":53,"column_end":56},"alias_span":null,"name":"JIT","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":0,"byte_end":12958,"line_start":1,"line_end":371,"column_start":1,"column_end":53},"name":"","qualname":"::","value":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":85},{"krate":0,"index":214},{"krate":0,"index":786},{"krate":0,"index":865},{"krate":0,"index":923},{"krate":0,"index":1020},{"krate":0,"index":1104},{"krate":0,"index":1190},{"krate":0,"index":1232},{"krate":0,"index":1302},{"krate":0,"index":1370},{"krate":0,"index":1373},{"krate":0,"index":1376},{"krate":0,"index":1384},{"krate":0,"index":1385},{"krate":0,"index":1388},{"krate":0,"index":1391},{"krate":0,"index":1394},{"krate":0,"index":1395},{"krate":0,"index":1398},{"krate":0,"index":1401},{"krate":0,"index":1404},{"krate":0,"index":1407},{"krate":0,"index":1408},{"krate":0,"index":1411},{"krate":0,"index":1414},{"krate":0,"index":1417},{"krate":0,"index":1420},{"krate":0,"index":1423},{"krate":0,"index":1426},{"krate":0,"index":1429},{"krate":0,"index":1432},{"krate":0,"index":1433},{"krate":0,"index":1436},{"krate":0,"index":1439},{"krate":0,"index":1442},{"krate":0,"index":1443},{"krate":0,"index":1446},{"krate":0,"index":1449},{"krate":0,"index":1452},{"krate":0,"index":1455},{"krate":0,"index":1456},{"krate":0,"index":1457},{"krate":0,"index":1459},{"krate":0,"index":1460},{"krate":0,"index":1462},{"krate":0,"index":1465},{"krate":0,"index":1466},{"krate":0,"index":1469},{"krate":0,"index":1472},{"krate":0,"index":1475},{"krate":0,"index":1476},{"krate":0,"index":1479},{"krate":0,"index":1482},{"krate":0,"index":1485},{"krate":0,"index":1488},{"krate":0,"index":1491},{"krate":0,"index":1494},{"krate":0,"index":1497},{"krate":0,"index":1500},{"krate":0,"index":1503},{"krate":0,"index":1506},{"krate":0,"index":1509},{"krate":0,"index":1512},{"krate":0,"index":1515},{"krate":0,"index":1516},{"krate":0,"index":1519},{"krate":0,"index":1522},{"krate":0,"index":1525},{"krate":0,"index":1526},{"krate":0,"index":1529},{"krate":0,"index":1532},{"krate":0,"index":1535},{"krate":0,"index":1538},{"krate":0,"index":1541},{"krate":0,"index":1542},{"krate":0,"index":1545},{"krate":0,"index":1548},{"krate":0,"index":1551},{"krate":0,"index":1554},{"krate":0,"index":1557},{"krate":0,"index":1560},{"krate":0,"index":1561},{"krate":0,"index":1564},{"krate":0,"index":1567},{"krate":0,"index":1570},{"krate":0,"index":1573},{"krate":0,"index":1576},{"krate":0,"index":1579},{"krate":0,"index":1582},{"krate":0,"index":1583},{"krate":0,"index":1586},{"krate":0,"index":1589},{"krate":0,"index":1592},{"krate":0,"index":1595},{"krate":0,"index":1598},{"krate":0,"index":1601},{"krate":0,"index":1604},{"krate":0,"index":1607},{"krate":0,"index":1610},{"krate":0,"index":1613},{"krate":0,"index":1616},{"krate":0,"index":1619},{"krate":0,"index":1620},{"krate":0,"index":1621},{"krate":0,"index":1623},{"krate":0,"index":1624},{"krate":0,"index":1626},{"krate":0,"index":1629},{"krate":0,"index":1632},{"krate":0,"index":1635},{"krate":0,"index":1638},{"krate":0,"index":1639},{"krate":0,"index":1641},{"krate":0,"index":1644},{"krate":0,"index":1647},{"krate":0,"index":1650},{"krate":0,"index":1653},{"krate":0,"index":1654},{"krate":0,"index":1657},{"krate":0,"index":1660},{"krate":0,"index":1663},{"krate":0,"index":1686},{"krate":0,"index":1689},{"krate":0,"index":1690},{"krate":0,"index":1693},{"krate":0,"index":1696},{"krate":0,"index":1697},{"krate":0,"index":1700},{"krate":0,"index":1703},{"krate":0,"index":1706}],"decl_id":null,"docs":" This crate contains the `wasmer` API. The `wasmer` API facilitates the efficient,\n sandboxed execution of [WebAssembly (Wasm)][wasm] modules.","sig":null,"attributes":[{"value":"deny(missing_docs, trivial_numeric_casts, unused_extern_crates,\n       broken_intra_doc_links)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":143,"byte_end":252,"line_start":5,"line_end":10,"column_start":1,"column_end":3}},{"value":"warn(unused_import_braces)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":253,"byte_end":283,"line_start":11,"line_end":11,"column_start":1,"column_end":31}},{"value":"/ This crate contains the `wasmer` API. The `wasmer` API facilitates the efficient,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":721,"byte_end":806,"line_start":30,"line_end":30,"column_start":1,"column_end":86}},{"value":"/ sandboxed execution of [WebAssembly (Wasm)][wasm] modules.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":807,"byte_end":869,"line_start":31,"line_end":31,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":870,"byte_end":873,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Here's an example of the `wasmer` API in action:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":874,"byte_end":926,"line_start":33,"line_end":33,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":927,"byte_end":934,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ use wasmer::{Store, Module, Instance, Value, imports};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":935,"byte_end":993,"line_start":35,"line_end":35,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":994,"byte_end":997,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ fn main() -> anyhow::Result<()> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":998,"byte_end":1035,"line_start":37,"line_end":37,"column_start":1,"column_end":38}},{"value":"/     let module_wat = r#\"","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":1036,"byte_end":1064,"line_start":38,"line_end":38,"column_start":1,"column_end":29}},{"value":"/     (module","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":1065,"byte_end":1080,"line_start":39,"line_end":39,"column_start":1,"column_end":16}},{"value":"/     (type $t0 (func (param i32) (result i32)))","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":1081,"byte_end":1131,"line_start":40,"line_end":40,"column_start":1,"column_end":51}},{"value":"/     (func $add_one (export \"add_one\") (type $t0) (param $p0 i32) (result i32)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":1132,"byte_end":1213,"line_start":41,"line_end":41,"column_start":1,"column_end":82}},{"value":"/         get_local $p0","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":1214,"byte_end":1239,"line_start":42,"line_end":42,"column_start":1,"column_end":26}},{"value":"/         i32.const 1","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":1240,"byte_end":1263,"line_start":43,"line_end":43,"column_start":1,"column_end":24}},{"value":"/         i32.add))","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":1264,"byte_end":1285,"line_start":44,"line_end":44,"column_start":1,"column_end":22}},{"value":"/     \"#;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":1286,"byte_end":1297,"line_start":45,"line_end":45,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":1298,"byte_end":1301,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/     let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":1302,"byte_end":1339,"line_start":47,"line_end":47,"column_start":1,"column_end":38}},{"value":"/     let module = Module::new(&store, &module_wat)?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":1340,"byte_end":1395,"line_start":48,"line_end":48,"column_start":1,"column_end":56}},{"value":"/     // The module doesn't import anything, so we create an empty import object.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":1396,"byte_end":1479,"line_start":49,"line_end":49,"column_start":1,"column_end":84}},{"value":"/     let import_object = imports! {};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":1480,"byte_end":1520,"line_start":50,"line_end":50,"column_start":1,"column_end":41}},{"value":"/     let instance = Instance::new(&module, &import_object)?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":1521,"byte_end":1584,"line_start":51,"line_end":51,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":1585,"byte_end":1588,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/     let add_one = instance.exports.get_function(\"add_one\")?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":1589,"byte_end":1653,"line_start":53,"line_end":53,"column_start":1,"column_end":65}},{"value":"/     let result = add_one.call(&[Value::I32(42)])?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":1654,"byte_end":1708,"line_start":54,"line_end":54,"column_start":1,"column_end":55}},{"value":"/     assert_eq!(result[0], Value::I32(43));","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":1709,"byte_end":1755,"line_start":55,"line_end":55,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":1756,"byte_end":1759,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":1760,"byte_end":1774,"line_start":57,"line_end":57,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":1775,"byte_end":1780,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":1781,"byte_end":1788,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":1789,"byte_end":1792,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ For more examples of using the `wasmer` API, check out the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":1793,"byte_end":1855,"line_start":61,"line_end":61,"column_start":1,"column_end":63}},{"value":"/ [wasmer examples][wasmer-examples].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":1856,"byte_end":1895,"line_start":62,"line_end":62,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":1896,"byte_end":1899,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ---------","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":1900,"byte_end":1913,"line_start":64,"line_end":64,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":1914,"byte_end":1917,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ # Table of Contents","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":1918,"byte_end":1941,"line_start":66,"line_end":66,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":1942,"byte_end":1945,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ - [Wasm Primitives](#wasm-primitives)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":1946,"byte_end":1987,"line_start":68,"line_end":68,"column_start":1,"column_end":42}},{"value":"/   - [Externs](#externs)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":1988,"byte_end":2015,"line_start":69,"line_end":69,"column_start":1,"column_end":28}},{"value":"/     - [Functions](#functions)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":2016,"byte_end":2049,"line_start":70,"line_end":70,"column_start":1,"column_end":34}},{"value":"/     - [Memories](#memories)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":2050,"byte_end":2081,"line_start":71,"line_end":71,"column_start":1,"column_end":32}},{"value":"/     - [Globals](#globals)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":2082,"byte_end":2111,"line_start":72,"line_end":72,"column_start":1,"column_end":30}},{"value":"/     - [Tables](#tables)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":2112,"byte_end":2139,"line_start":73,"line_end":73,"column_start":1,"column_end":28}},{"value":"/ - [Project Layout](#project-layout)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":2140,"byte_end":2179,"line_start":74,"line_end":74,"column_start":1,"column_end":40}},{"value":"/   - [Engines](#engines)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":2180,"byte_end":2207,"line_start":75,"line_end":75,"column_start":1,"column_end":28}},{"value":"/   - [Compilers](#compilers)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":2208,"byte_end":2239,"line_start":76,"line_end":76,"column_start":1,"column_end":32}},{"value":"/ - [Features](#features)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":2240,"byte_end":2267,"line_start":77,"line_end":77,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":2268,"byte_end":2271,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":2272,"byte_end":2275,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ # Wasm Primitives","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":2276,"byte_end":2297,"line_start":80,"line_end":80,"column_start":1,"column_end":22}},{"value":"/ In order to make use of the power of the `wasmer` API, it's important","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":2298,"byte_end":2371,"line_start":81,"line_end":81,"column_start":1,"column_end":74}},{"value":"/ to understand the primitives around which the API is built.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":2372,"byte_end":2435,"line_start":82,"line_end":82,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":2436,"byte_end":2439,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Wasm only deals with a small number of core data types, these data","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":2440,"byte_end":2510,"line_start":84,"line_end":84,"column_start":1,"column_end":71}},{"value":"/ types can be found in the [`Value`] type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":2511,"byte_end":2556,"line_start":85,"line_end":85,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":2557,"byte_end":2560,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ In addition to the core Wasm types, the core types of the API are","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":2561,"byte_end":2630,"line_start":87,"line_end":87,"column_start":1,"column_end":70}},{"value":"/ referred to as \"externs\".","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":2631,"byte_end":2660,"line_start":88,"line_end":88,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":2661,"byte_end":2664,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ ## Externs","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":2665,"byte_end":2679,"line_start":90,"line_end":90,"column_start":1,"column_end":15}},{"value":"/ An [`Extern`] is a type that can be imported or exported from a Wasm","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":2680,"byte_end":2752,"line_start":91,"line_end":91,"column_start":1,"column_end":73}},{"value":"/ module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":2753,"byte_end":2764,"line_start":92,"line_end":92,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":2765,"byte_end":2768,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ To import an extern, simply give it a namespace and a name with the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":2769,"byte_end":2840,"line_start":94,"line_end":94,"column_start":1,"column_end":72}},{"value":"/ [`imports`] macro:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":2841,"byte_end":2863,"line_start":95,"line_end":95,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":2864,"byte_end":2867,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":2868,"byte_end":2875,"line_start":97,"line_end":97,"column_start":1,"column_end":8}},{"value":"/ # use wasmer::{imports, Function, Memory, MemoryType, Store, ImportObject};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":2876,"byte_end":2955,"line_start":98,"line_end":98,"column_start":1,"column_end":80}},{"value":"/ # fn imports_example(store: &Store) -> ImportObject {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":2956,"byte_end":3013,"line_start":99,"line_end":99,"column_start":1,"column_end":58}},{"value":"/ let memory = Memory::new(&store, MemoryType::new(1, None, false)).unwrap();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":3014,"byte_end":3093,"line_start":100,"line_end":100,"column_start":1,"column_end":80}},{"value":"/ imports! {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":3094,"byte_end":3108,"line_start":101,"line_end":101,"column_start":1,"column_end":15}},{"value":"/     \"env\" => {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":3109,"byte_end":3127,"line_start":102,"line_end":102,"column_start":1,"column_end":19}},{"value":"/          \"my_function\" => Function::new_native(store, || println!(\"Hello\")),","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":3128,"byte_end":3208,"line_start":103,"line_end":103,"column_start":1,"column_end":81}},{"value":"/          \"memory\" => memory,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":3209,"byte_end":3241,"line_start":104,"line_end":104,"column_start":1,"column_end":33}},{"value":"/     }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":3242,"byte_end":3251,"line_start":105,"line_end":105,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":3252,"byte_end":3257,"line_start":106,"line_end":106,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":3258,"byte_end":3265,"line_start":107,"line_end":107,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":3266,"byte_end":3273,"line_start":108,"line_end":108,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":3274,"byte_end":3277,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ And to access an exported extern, see the [`Exports`] API, accessible","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":3278,"byte_end":3351,"line_start":110,"line_end":110,"column_start":1,"column_end":74}},{"value":"/ from any instance via `instance.exports`:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":3352,"byte_end":3397,"line_start":111,"line_end":111,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":3398,"byte_end":3401,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":3402,"byte_end":3409,"line_start":113,"line_end":113,"column_start":1,"column_end":8}},{"value":"/ # use wasmer::{imports, Instance, Function, Memory, NativeFunc};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":3410,"byte_end":3478,"line_start":114,"line_end":114,"column_start":1,"column_end":69}},{"value":"/ # fn exports_example(instance: &Instance) -> anyhow::Result<()> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":3479,"byte_end":3548,"line_start":115,"line_end":115,"column_start":1,"column_end":70}},{"value":"/ let memory = instance.exports.get_memory(\"memory\")?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":3549,"byte_end":3605,"line_start":116,"line_end":116,"column_start":1,"column_end":57}},{"value":"/ let memory: &Memory = instance.exports.get(\"some_other_memory\")?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":3606,"byte_end":3675,"line_start":117,"line_end":117,"column_start":1,"column_end":70}},{"value":"/ let add: NativeFunc<(i32, i32), i32> = instance.exports.get_native_function(\"add\")?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":3676,"byte_end":3764,"line_start":118,"line_end":118,"column_start":1,"column_end":89}},{"value":"/ let result = add.call(5, 37)?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":3765,"byte_end":3799,"line_start":119,"line_end":119,"column_start":1,"column_end":35}},{"value":"/ assert_eq!(result, 42);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":3800,"byte_end":3827,"line_start":120,"line_end":120,"column_start":1,"column_end":28}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":3828,"byte_end":3840,"line_start":121,"line_end":121,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":3841,"byte_end":3848,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":3849,"byte_end":3856,"line_start":123,"line_end":123,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":3857,"byte_end":3860,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ These are the primary types that the `wasmer` API uses.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":3861,"byte_end":3920,"line_start":125,"line_end":125,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":3921,"byte_end":3924,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ ### Functions","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":3925,"byte_end":3942,"line_start":127,"line_end":127,"column_start":1,"column_end":18}},{"value":"/ There are 2 types of functions in `wasmer`:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":3943,"byte_end":3990,"line_start":128,"line_end":128,"column_start":1,"column_end":48}},{"value":"/ 1. Wasm functions","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":3991,"byte_end":4012,"line_start":129,"line_end":129,"column_start":1,"column_end":22}},{"value":"/ 2. Host functions","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":4013,"byte_end":4034,"line_start":130,"line_end":130,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":4035,"byte_end":4038,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ A Wasm function is a function defined in a WebAssembly module that can","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":4039,"byte_end":4113,"line_start":132,"line_end":132,"column_start":1,"column_end":75}},{"value":"/ only perform computation without side effects and call other functions.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":4114,"byte_end":4189,"line_start":133,"line_end":133,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":4190,"byte_end":4193,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ Wasm functions take 0 or more arguments and return 0 or more results.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":4194,"byte_end":4267,"line_start":135,"line_end":135,"column_start":1,"column_end":74}},{"value":"/ Wasm functions can only deal with the primitive types defined in","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":4268,"byte_end":4336,"line_start":136,"line_end":136,"column_start":1,"column_end":69}},{"value":"/ [`Value`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":4337,"byte_end":4351,"line_start":137,"line_end":137,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":4352,"byte_end":4355,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ A Host function is any function implemented on the host, in this case in","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":4356,"byte_end":4432,"line_start":139,"line_end":139,"column_start":1,"column_end":77}},{"value":"/ Rust.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":4433,"byte_end":4442,"line_start":140,"line_end":140,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":4443,"byte_end":4446,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ Host functions can optionally be created with an environment that","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":4447,"byte_end":4516,"line_start":142,"line_end":142,"column_start":1,"column_end":70}},{"value":"/ implements [`WasmerEnv`]. This environment is useful for maintaining","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":4517,"byte_end":4589,"line_start":143,"line_end":143,"column_start":1,"column_end":73}},{"value":"/ host state (for example the filesystem in WASI).","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":4590,"byte_end":4642,"line_start":144,"line_end":144,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":4643,"byte_end":4646,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ Thus WebAssembly modules by themselves cannot do anything but computation","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":4647,"byte_end":4724,"line_start":146,"line_end":146,"column_start":1,"column_end":78}},{"value":"/ on the core types in [`Value`]. In order to make them more useful we","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":4725,"byte_end":4797,"line_start":147,"line_end":147,"column_start":1,"column_end":73}},{"value":"/ give them access to the outside world with [`imports`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":4798,"byte_end":4857,"line_start":148,"line_end":148,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":4858,"byte_end":4861,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ If you're looking for a sandboxed, POSIX-like environment to execute Wasm","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":4862,"byte_end":4939,"line_start":150,"line_end":150,"column_start":1,"column_end":78}},{"value":"/ in, check out the [`wasmer-wasi`][wasmer-wasi] crate for our implementation of WASI,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":4940,"byte_end":5028,"line_start":151,"line_end":151,"column_start":1,"column_end":89}},{"value":"/ the WebAssembly System Interface.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":5029,"byte_end":5066,"line_start":152,"line_end":152,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":5067,"byte_end":5070,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ In the `wasmer` API we support functions which take their arguments and","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":5071,"byte_end":5146,"line_start":154,"line_end":154,"column_start":1,"column_end":76}},{"value":"/ return their results dynamically, [`Function`], and functions which","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":5147,"byte_end":5218,"line_start":155,"line_end":155,"column_start":1,"column_end":72}},{"value":"/ take their arguments and return their results statically, [`NativeFunc`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":5219,"byte_end":5296,"line_start":156,"line_end":156,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":5297,"byte_end":5300,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ ### Memories","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":5301,"byte_end":5317,"line_start":158,"line_end":158,"column_start":1,"column_end":17}},{"value":"/ Memories store data.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":5318,"byte_end":5342,"line_start":159,"line_end":159,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":5343,"byte_end":5346,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ In most Wasm programs, nearly all data will live in a [`Memory`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":5347,"byte_end":5416,"line_start":161,"line_end":161,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":5417,"byte_end":5420,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ This data can be shared between the host and guest to allow for more","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":5421,"byte_end":5493,"line_start":163,"line_end":163,"column_start":1,"column_end":73}},{"value":"/ interesting programs.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":5494,"byte_end":5519,"line_start":164,"line_end":164,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":5520,"byte_end":5523,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ ### Globals","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":5524,"byte_end":5539,"line_start":166,"line_end":166,"column_start":1,"column_end":16}},{"value":"/ A [`Global`] is a type that may be either mutable or immutable, and","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":5540,"byte_end":5611,"line_start":167,"line_end":167,"column_start":1,"column_end":72}},{"value":"/ contains one of the core Wasm types defined in [`Value`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":5612,"byte_end":5673,"line_start":168,"line_end":168,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":5674,"byte_end":5677,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ ### Tables","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":5678,"byte_end":5692,"line_start":170,"line_end":170,"column_start":1,"column_end":15}},{"value":"/ A [`Table`] is an indexed list of items.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":5693,"byte_end":5737,"line_start":171,"line_end":171,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":5738,"byte_end":5741,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":5742,"byte_end":5745,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ ## Project Layout","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":5746,"byte_end":5767,"line_start":174,"line_end":174,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":5768,"byte_end":5771,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ The Wasmer project is divided into a number of crates, below is a dependency","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":5772,"byte_end":5852,"line_start":176,"line_end":176,"column_start":1,"column_end":81}},{"value":"/ graph with transitive dependencies removed.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":5853,"byte_end":5900,"line_start":177,"line_end":177,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":5901,"byte_end":5904,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ <div>","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":5905,"byte_end":5914,"line_start":179,"line_end":179,"column_start":1,"column_end":10}},{"value":"/ <img src=\"https://raw.githubusercontent.com/wasmerio/wasmer/master/docs/deps_dedup.svg\" />","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":5915,"byte_end":6009,"line_start":180,"line_end":180,"column_start":1,"column_end":95}},{"value":"/ </div>","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":6010,"byte_end":6020,"line_start":181,"line_end":181,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":6021,"byte_end":6024,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ While this crate is the top level API, we also publish crates built","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":6025,"byte_end":6096,"line_start":183,"line_end":183,"column_start":1,"column_end":72}},{"value":"/ on top of this API that you may be interested in using, including:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":6097,"byte_end":6167,"line_start":184,"line_end":184,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":6168,"byte_end":6171,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ - [wasmer-cache][] for caching compiled Wasm modules.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":6172,"byte_end":6229,"line_start":186,"line_end":186,"column_start":1,"column_end":58}},{"value":"/ - [wasmer-emscripten][] for running Wasm modules compiled to the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":6230,"byte_end":6298,"line_start":187,"line_end":187,"column_start":1,"column_end":69}},{"value":"/   Emscripten ABI.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":6299,"byte_end":6320,"line_start":188,"line_end":188,"column_start":1,"column_end":22}},{"value":"/ - [wasmer-wasi][] for running Wasm modules compiled to the WASI ABI.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":6321,"byte_end":6393,"line_start":189,"line_end":189,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":6394,"byte_end":6397,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ --------","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":6398,"byte_end":6410,"line_start":191,"line_end":191,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":6411,"byte_end":6414,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ The Wasmer project has two major abstractions:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":6415,"byte_end":6465,"line_start":193,"line_end":193,"column_start":1,"column_end":51}},{"value":"/ 1. [Engines][wasmer-engine]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":6466,"byte_end":6497,"line_start":194,"line_end":194,"column_start":1,"column_end":32}},{"value":"/ 2. [Compilers][wasmer-compiler]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":6498,"byte_end":6533,"line_start":195,"line_end":195,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":6534,"byte_end":6537,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ These two abstractions have multiple options that can be enabled","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":6538,"byte_end":6606,"line_start":197,"line_end":197,"column_start":1,"column_end":69}},{"value":"/ with features.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":6607,"byte_end":6625,"line_start":198,"line_end":198,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":6626,"byte_end":6629,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ ### Engines","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":6630,"byte_end":6645,"line_start":200,"line_end":200,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":6646,"byte_end":6649,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ An engine is a system that uses a compiler to make a WebAssembly","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":6650,"byte_end":6718,"line_start":202,"line_end":202,"column_start":1,"column_end":69}},{"value":"/ module executable.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":6719,"byte_end":6741,"line_start":203,"line_end":203,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":6742,"byte_end":6745,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ ### Compilers","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":6746,"byte_end":6763,"line_start":205,"line_end":205,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":6764,"byte_end":6767,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ A compiler is a system that handles the details of making a Wasm","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":6768,"byte_end":6836,"line_start":207,"line_end":207,"column_start":1,"column_end":69}},{"value":"/ module executable. For example, by generating native machine code","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":6837,"byte_end":6906,"line_start":208,"line_end":208,"column_start":1,"column_end":70}},{"value":"/ for each Wasm function.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":6907,"byte_end":6934,"line_start":209,"line_end":209,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":6935,"byte_end":6938,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":6939,"byte_end":6942,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ ## Features","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":6943,"byte_end":6958,"line_start":212,"line_end":212,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":6959,"byte_end":6962,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ This crate's features can be broken down into 2 kinds, features that","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":6963,"byte_end":7035,"line_start":214,"line_end":214,"column_start":1,"column_end":73}},{"value":"/ enable new functionality and features that set defaults.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":7036,"byte_end":7096,"line_start":215,"line_end":215,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":7097,"byte_end":7100,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ The features that enable new functionality are:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":7101,"byte_end":7152,"line_start":217,"line_end":217,"column_start":1,"column_end":52}},{"value":"/ - `jit` - enable the JIT engine. (See [wasmer-jit][])","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":7153,"byte_end":7210,"line_start":218,"line_end":218,"column_start":1,"column_end":58}},{"value":"/ - `native` - enable the native engine. (See [wasmer-native][])","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":7211,"byte_end":7277,"line_start":219,"line_end":219,"column_start":1,"column_end":67}},{"value":"/ - `cranelift` - enable Wasmer's Cranelift compiler. (See [wasmer-cranelift][])","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":7278,"byte_end":7360,"line_start":220,"line_end":220,"column_start":1,"column_end":83}},{"value":"/ - `llvm` - enable Wasmer's LLVM compiler. (See [wasmer-llvm][])","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":7361,"byte_end":7428,"line_start":221,"line_end":221,"column_start":1,"column_end":68}},{"value":"/ - `singlepass` - enable Wasmer's Singlepass compiler. (See [wasmer-singlepass][])","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":7429,"byte_end":7514,"line_start":222,"line_end":222,"column_start":1,"column_end":86}},{"value":"/ - `wat` - enable `wasmer` to parse the WebAssembly text format.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":7515,"byte_end":7582,"line_start":223,"line_end":223,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":7583,"byte_end":7586,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ The features that set defaults come in sets that are mutually exclusive.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":7587,"byte_end":7663,"line_start":225,"line_end":225,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":7664,"byte_end":7667,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ The first set is the default compiler set:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":7668,"byte_end":7714,"line_start":227,"line_end":227,"column_start":1,"column_end":47}},{"value":"/ - `default-cranelift` - set Wasmer's Cranelift compiler as the default.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":7715,"byte_end":7790,"line_start":228,"line_end":228,"column_start":1,"column_end":76}},{"value":"/ - `default-llvm` - set Wasmer's LLVM compiler as the default.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":7791,"byte_end":7856,"line_start":229,"line_end":229,"column_start":1,"column_end":66}},{"value":"/ - `default-singlepass` - set Wasmer's Singlepass compiler as the default.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":7857,"byte_end":7934,"line_start":230,"line_end":230,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":7935,"byte_end":7938,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ The next set is the default engine set:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":7939,"byte_end":7982,"line_start":232,"line_end":232,"column_start":1,"column_end":44}},{"value":"/ - `default-jit` - set the JIT engine as the default.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":7983,"byte_end":8039,"line_start":233,"line_end":233,"column_start":1,"column_end":57}},{"value":"/ - `default-native` - set the native engine as the default.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":8040,"byte_end":8102,"line_start":234,"line_end":234,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":8103,"byte_end":8106,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ --------","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":8107,"byte_end":8119,"line_start":236,"line_end":236,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":8120,"byte_end":8123,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/ By default the `wat`, `default-cranelift`, and `default-jit` features","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":8124,"byte_end":8197,"line_start":238,"line_end":238,"column_start":1,"column_end":74}},{"value":"/ are enabled.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":8198,"byte_end":8214,"line_start":239,"line_end":239,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":8215,"byte_end":8218,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":8219,"byte_end":8222,"line_start":241,"line_end":241,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":8223,"byte_end":8226,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ [wasm]: https://webassembly.org/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":8227,"byte_end":8263,"line_start":243,"line_end":243,"column_start":1,"column_end":37}},{"value":"/ [wasmer-examples]: https://github.com/wasmerio/wasmer/tree/master/examples","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":8264,"byte_end":8342,"line_start":244,"line_end":244,"column_start":1,"column_end":79}},{"value":"/ [wasmer-cache]: https://docs.rs/wasmer-cache/*/wasmer_cache/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":8343,"byte_end":8407,"line_start":245,"line_end":245,"column_start":1,"column_end":65}},{"value":"/ [wasmer-compiler]: https://docs.rs/wasmer-compiler/*/wasmer_compiler/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":8408,"byte_end":8481,"line_start":246,"line_end":246,"column_start":1,"column_end":74}},{"value":"/ [wasmer-cranelift]: https://docs.rs/wasmer-cranelift/*/wasmer_cranelift/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":8482,"byte_end":8558,"line_start":247,"line_end":247,"column_start":1,"column_end":77}},{"value":"/ [wasmer-emscripten]: https://docs.rs/wasmer-emscripten/*/wasmer_emscripten/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":8559,"byte_end":8638,"line_start":248,"line_end":248,"column_start":1,"column_end":80}},{"value":"/ [wasmer-engine]: https://docs.rs/wasmer-engine/*/wasmer_engine/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":8639,"byte_end":8706,"line_start":249,"line_end":249,"column_start":1,"column_end":68}},{"value":"/ [wasmer-jit]: https://docs.rs/wasmer-jit/*/wasmer_jit/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":8707,"byte_end":8765,"line_start":250,"line_end":250,"column_start":1,"column_end":59}},{"value":"/ [wasmer-native]: https://docs.rs/wasmer-native/*/wasmer_native/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":8766,"byte_end":8833,"line_start":251,"line_end":251,"column_start":1,"column_end":68}},{"value":"/ [wasmer-singlepass]: https://docs.rs/wasmer-singlepass/*/wasmer_singlepass/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":8834,"byte_end":8913,"line_start":252,"line_end":252,"column_start":1,"column_end":80}},{"value":"/ [wasmer-llvm]: https://docs.rs/wasmer-llvm/*/wasmer_llvm/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":8914,"byte_end":8975,"line_start":253,"line_end":253,"column_start":1,"column_end":62}},{"value":"/ [wasmer-wasi]: https://docs.rs/wasmer-wasi/*/wasmer_wasi/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":8976,"byte_end":9037,"line_start":254,"line_end":254,"column_start":1,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1720},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":13260,"byte_end":13266,"line_start":9,"line_end":9,"column_start":5,"column_end":11},"name":"Export","qualname":"::env::HostEnvInitError::Export","value":"HostEnvInitError::Export(ExportError)","parent":{"krate":0,"index":1719},"children":[],"decl_id":null,"docs":" An error occurred when accessing an export\n","sig":null,"attributes":[{"value":"/ An error occurred when accessing an export","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":13209,"byte_end":13255,"line_start":8,"line_end":8,"column_start":5,"column_end":51}}]},{"kind":"Enum","id":{"krate":0,"index":1719},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":13186,"byte_end":13202,"line_start":7,"line_end":7,"column_start":10,"column_end":26},"name":"HostEnvInitError","qualname":"::env::HostEnvInitError","value":"pub enum HostEnvInitError { Export(ExportError), }","parent":null,"children":[{"krate":0,"index":1720}],"decl_id":null,"docs":" An error while initializing the user supplied host env with the `WasmerEnv` trait.\n","sig":null,"attributes":[{"value":"/ An error while initializing the user supplied host env with the `WasmerEnv` trait.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":13019,"byte_end":13105,"line_start":4,"line_end":4,"column_start":1,"column_end":87}},{"value":"error(\"Host env initialization error: {0}\")","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":13130,"byte_end":13176,"line_start":6,"line_end":6,"column_start":1,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":16},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":15791,"byte_end":15800,"line_start":81,"line_end":81,"column_start":11,"column_end":20},"name":"WasmerEnv","qualname":"::env::WasmerEnv","value":"WasmerEnv: Clone + Send + Sync","parent":null,"children":[{"krate":0,"index":17}],"decl_id":null,"docs":" Trait for initializing the environments passed to host functions after\n instantiation but before execution.","sig":null,"attributes":[{"value":"/ Trait for initializing the environments passed to host functions after","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":13409,"byte_end":13483,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ instantiation but before execution.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":13484,"byte_end":13523,"line_start":19,"line_end":19,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":13524,"byte_end":13527,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This is useful for filling an environment with data that can only be accesed","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":13528,"byte_end":13608,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ after instantiation. For example, exported items such as memories and","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":13609,"byte_end":13682,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/ functions which don't exist prior to instantiation can be accessed here so","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":13683,"byte_end":13761,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ that host functions can use them.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":13762,"byte_end":13799,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":13800,"byte_end":13803,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":13804,"byte_end":13818,"line_start":26,"line_end":26,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":13819,"byte_end":13822,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This trait can be derived like so:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":13823,"byte_end":13861,"line_start":28,"line_end":28,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":13862,"byte_end":13865,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":13866,"byte_end":13873,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use wasmer::{WasmerEnv, LazyInit, Memory, NativeFunc};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":13874,"byte_end":13932,"line_start":31,"line_end":31,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":13933,"byte_end":13936,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ #[derive(WasmerEnv, Clone)]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":13937,"byte_end":13968,"line_start":33,"line_end":33,"column_start":1,"column_end":32}},{"value":"/ pub struct MyEnvWithNoInstanceData {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":13969,"byte_end":14009,"line_start":34,"line_end":34,"column_start":1,"column_end":41}},{"value":"/     non_instance_data: u8,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":14010,"byte_end":14040,"line_start":35,"line_end":35,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":14041,"byte_end":14046,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":14047,"byte_end":14050,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ #[derive(WasmerEnv, Clone)]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":14051,"byte_end":14082,"line_start":38,"line_end":38,"column_start":1,"column_end":32}},{"value":"/ pub struct MyEnvWithInstanceData {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":14083,"byte_end":14121,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/     non_instance_data: u8,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":14122,"byte_end":14152,"line_start":40,"line_end":40,"column_start":1,"column_end":31}},{"value":"/     #[wasmer(export)]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":14153,"byte_end":14178,"line_start":41,"line_end":41,"column_start":1,"column_end":26}},{"value":"/     memory: LazyInit<Memory>,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":14179,"byte_end":14212,"line_start":42,"line_end":42,"column_start":1,"column_end":34}},{"value":"/     #[wasmer(export(name = \"real_name\"))]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":14213,"byte_end":14258,"line_start":43,"line_end":43,"column_start":1,"column_end":46}},{"value":"/     func: LazyInit<NativeFunc<(i32, i32), i32>>,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":14259,"byte_end":14311,"line_start":44,"line_end":44,"column_start":1,"column_end":53}},{"value":"/     #[wasmer(export(optional = true, alias = \"memory2\", alias = \"_memory2\"))]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":14312,"byte_end":14393,"line_start":45,"line_end":45,"column_start":1,"column_end":82}},{"value":"/     optional_memory: LazyInit<Memory>,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":14394,"byte_end":14436,"line_start":46,"line_end":46,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":14437,"byte_end":14442,"line_start":47,"line_end":47,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":14443,"byte_end":14446,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":14447,"byte_end":14454,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":14455,"byte_end":14458,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ When deriving `WasmerEnv`, you must wrap your types to be initialized in","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":14459,"byte_end":14535,"line_start":51,"line_end":51,"column_start":1,"column_end":77}},{"value":"/ [`LazyInit`]. The derive macro will also generate helper methods of the form","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":14536,"byte_end":14616,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ `<field_name>_ref` and `<field_name>_ref_unchecked` for easy access to the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":14617,"byte_end":14695,"line_start":53,"line_end":53,"column_start":1,"column_end":79}},{"value":"/ data.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":14696,"byte_end":14705,"line_start":54,"line_end":54,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":14706,"byte_end":14709,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The valid arguments to `export` are:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":14710,"byte_end":14750,"line_start":56,"line_end":56,"column_start":1,"column_end":41}},{"value":"/ - `name = \"string\"`: specify the name of this item in the Wasm module. If this is not specified, it will default to the name of the field.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":14751,"byte_end":14893,"line_start":57,"line_end":57,"column_start":1,"column_end":143}},{"value":"/ - `optional = true`: specify whether this export is optional. Defaults to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":14894,"byte_end":14971,"line_start":58,"line_end":58,"column_start":1,"column_end":78}},{"value":"/ `false`. Being optional means that if the export can't be found, the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":14972,"byte_end":15044,"line_start":59,"line_end":59,"column_start":1,"column_end":73}},{"value":"/ [`LazyInit`] will be left uninitialized.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":15045,"byte_end":15089,"line_start":60,"line_end":60,"column_start":1,"column_end":45}},{"value":"/ - `alias = \"string\"`: specify additional names to look for in the Wasm module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":15090,"byte_end":15172,"line_start":61,"line_end":61,"column_start":1,"column_end":83}},{"value":"/ `alias` may be specified multiple times to search for multiple aliases.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":15173,"byte_end":15248,"line_start":62,"line_end":62,"column_start":1,"column_end":76}},{"value":"/ -------","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":15249,"byte_end":15260,"line_start":63,"line_end":63,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":15261,"byte_end":15264,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ This trait may also be implemented manually:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":15265,"byte_end":15313,"line_start":65,"line_end":65,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":15314,"byte_end":15321,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/ # use wasmer::{WasmerEnv, LazyInit, Memory, Instance, HostEnvInitError};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":15322,"byte_end":15398,"line_start":67,"line_end":67,"column_start":1,"column_end":77}},{"value":"/ #[derive(Clone)]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":15399,"byte_end":15419,"line_start":68,"line_end":68,"column_start":1,"column_end":21}},{"value":"/ pub struct MyEnv {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":15420,"byte_end":15442,"line_start":69,"line_end":69,"column_start":1,"column_end":23}},{"value":"/    memory: LazyInit<Memory>,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":15443,"byte_end":15475,"line_start":70,"line_end":70,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":15476,"byte_end":15481,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":15482,"byte_end":15485,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ impl WasmerEnv for MyEnv {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":15486,"byte_end":15516,"line_start":73,"line_end":73,"column_start":1,"column_end":31}},{"value":"/     fn init_with_instance(&mut self, instance: &Instance) -> Result<(), HostEnvInitError> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":15517,"byte_end":15612,"line_start":74,"line_end":74,"column_start":1,"column_end":96}},{"value":"/         let memory = instance.exports.get_memory(\"memory\").unwrap();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":15613,"byte_end":15685,"line_start":75,"line_end":75,"column_start":1,"column_end":73}},{"value":"/         self.memory.initialize(memory.clone());","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":15686,"byte_end":15737,"line_start":76,"line_end":76,"column_start":1,"column_end":52}},{"value":"/         Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":15738,"byte_end":15756,"line_start":77,"line_end":77,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":15757,"byte_end":15766,"line_start":78,"line_end":78,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":15767,"byte_end":15772,"line_start":79,"line_end":79,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":15773,"byte_end":15780,"line_start":80,"line_end":80,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":16105,"byte_end":16123,"line_start":87,"line_end":87,"column_start":8,"column_end":26},"name":"init_with_instance","qualname":"::env::WasmerEnv::init_with_instance","value":"pub fn init_with_instance(&mut Self, &Instance)\n-> Result<(), HostEnvInitError>","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" The function that Wasmer will call on your type to let it finish\n setting up the environment with data from the `Instance`.","sig":null,"attributes":[{"value":"/ The function that Wasmer will call on your type to let it finish","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":15828,"byte_end":15896,"line_start":82,"line_end":82,"column_start":5,"column_end":73}},{"value":"/ setting up the environment with data from the `Instance`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":15901,"byte_end":15962,"line_start":83,"line_end":83,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":15967,"byte_end":15970,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ This function is called after `Instance` is created but before it is","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":15975,"byte_end":16047,"line_start":85,"line_end":85,"column_start":5,"column_end":77}},{"value":"/ returned to the user via `Instance::new`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":16052,"byte_end":16097,"line_start":86,"line_end":86,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":61},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":17773,"byte_end":17781,"line_start":133,"line_end":133,"column_start":12,"column_end":20},"name":"LazyInit","qualname":"::env::LazyInit","value":"LazyInit {  }","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":64}],"decl_id":null,"docs":" Lazily init an item\n","sig":null,"attributes":[{"value":"/ Lazily init an item","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":17738,"byte_end":17761,"line_start":132,"line_end":132,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":18015,"byte_end":18018,"line_start":142,"line_end":142,"column_start":12,"column_end":15},"name":"new","qualname":"<LazyInit<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an unitialized value.\n","sig":null,"attributes":[{"value":"/ Creates an unitialized value.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":17970,"byte_end":18003,"line_start":141,"line_end":141,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":18226,"byte_end":18239,"line_start":151,"line_end":151,"column_start":19,"column_end":32},"name":"get_unchecked","qualname":"<LazyInit<T>>::get_unchecked","value":"pub unsafe fn get_unchecked(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" # Safety\n - The data must be initialized first\n","sig":null,"attributes":[{"value":"/ # Safety","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":18150,"byte_end":18162,"line_start":149,"line_end":149,"column_start":5,"column_end":17}},{"value":"/ - The data must be initialized first","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":18167,"byte_end":18207,"line_start":150,"line_end":150,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":18330,"byte_end":18337,"line_start":156,"line_end":156,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<LazyInit<T>>::get_ref","value":"pub fn get_ref(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Get the inner data.\n","sig":null,"attributes":[{"value":"/ Get the inner data.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":18295,"byte_end":18318,"line_start":155,"line_end":155,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":18560,"byte_end":18570,"line_start":165,"line_end":165,"column_start":12,"column_end":22},"name":"initialize","qualname":"<LazyInit<T>>::initialize","value":"pub fn initialize(&mut Self, T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Sets a value and marks the data as initialized.\n","sig":null,"attributes":[{"value":"/ Sets a value and marks the data as initialized.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":18497,"byte_end":18548,"line_start":164,"line_end":164,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1736},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":21824,"byte_end":21840,"line_start":54,"line_end":54,"column_start":5,"column_end":21},"name":"IncompatibleType","qualname":"::exports::ExportError::IncompatibleType","value":"ExportError::IncompatibleType","parent":{"krate":0,"index":1723},"children":[],"decl_id":null,"docs":" An error than occurs when the exported type and the expected type\n are incompatible.\n","sig":null,"attributes":[{"value":"/ An error than occurs when the exported type and the expected type","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":21683,"byte_end":21752,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/ are incompatible.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":21757,"byte_end":21778,"line_start":52,"line_end":52,"column_start":5,"column_end":26}},{"value":"error(\"Incompatible Export Type\")","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":21783,"byte_end":21819,"line_start":53,"line_end":53,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1738},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":21933,"byte_end":21940,"line_start":57,"line_end":57,"column_start":5,"column_end":12},"name":"Missing","qualname":"::exports::ExportError::Missing","value":"ExportError::Missing(String)","parent":{"krate":0,"index":1723},"children":[],"decl_id":null,"docs":" This error arises when an export is missing\n","sig":null,"attributes":[{"value":"/ This error arises when an export is missing","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":21846,"byte_end":21893,"line_start":55,"line_end":55,"column_start":5,"column_end":52}},{"value":"error(\"Missing export {0}\")","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":21898,"byte_end":21928,"line_start":56,"line_end":56,"column_start":5,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":1723},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":21665,"byte_end":21676,"line_start":50,"line_end":50,"column_start":10,"column_end":21},"name":"ExportError","qualname":"::exports::ExportError","value":"pub enum ExportError { IncompatibleType, Missing(String), }","parent":null,"children":[{"krate":0,"index":1736},{"krate":0,"index":1738}],"decl_id":null,"docs":" The `ExportError` can happen when trying to get a specific\n export [`Extern`] from the [`Instance`] exports.","sig":null,"attributes":[{"value":"/ The `ExportError` can happen when trying to get a specific","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":20246,"byte_end":20308,"line_start":12,"line_end":12,"column_start":1,"column_end":63}},{"value":"/ export [`Extern`] from the [`Instance`] exports.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":20309,"byte_end":20361,"line_start":13,"line_end":13,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":20362,"byte_end":20365,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`Instance`]: crate::Instance","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":20366,"byte_end":20399,"line_start":15,"line_end":15,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":20400,"byte_end":20403,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":20404,"byte_end":20418,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":20419,"byte_end":20422,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ## Incompatible export type","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":20423,"byte_end":20454,"line_start":19,"line_end":19,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":20455,"byte_end":20458,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":20459,"byte_end":20478,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"/ # use wasmer::{imports, wat2wasm, Function, Instance, Module, Store, Type, Value, ExportError};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":20479,"byte_end":20578,"line_start":22,"line_end":22,"column_start":1,"column_end":100}},{"value":"/ # let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":20579,"byte_end":20614,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/ # let wasm_bytes = wat2wasm(r#\"","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":20615,"byte_end":20650,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"/ # (module","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":20651,"byte_end":20664,"line_start":25,"line_end":25,"column_start":1,"column_end":14}},{"value":"/ #   (global $one (export \"glob\") f32 (f32.const 1)))","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":20665,"byte_end":20721,"line_start":26,"line_end":26,"column_start":1,"column_end":57}},{"value":"/ # \"#.as_bytes()).unwrap();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":20722,"byte_end":20752,"line_start":27,"line_end":27,"column_start":1,"column_end":31}},{"value":"/ # let module = Module::new(&store, wasm_bytes).unwrap();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":20753,"byte_end":20813,"line_start":28,"line_end":28,"column_start":1,"column_end":61}},{"value":"/ # let import_object = imports! {};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":20814,"byte_end":20852,"line_start":29,"line_end":29,"column_start":1,"column_end":39}},{"value":"/ # let instance = Instance::new(&module, &import_object).unwrap();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":20853,"byte_end":20922,"line_start":30,"line_end":30,"column_start":1,"column_end":70}},{"value":"/ #","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":20923,"byte_end":20928,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ // This results with an error: `ExportError::IncompatibleType`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":20929,"byte_end":20996,"line_start":32,"line_end":32,"column_start":1,"column_end":68}},{"value":"/ let export = instance.exports.get_function(\"glob\").unwrap();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":20997,"byte_end":21061,"line_start":33,"line_end":33,"column_start":1,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":21062,"byte_end":21069,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":21070,"byte_end":21073,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ## Missing export","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":21074,"byte_end":21095,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":21096,"byte_end":21099,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":21100,"byte_end":21119,"line_start":38,"line_end":38,"column_start":1,"column_end":20}},{"value":"/ # use wasmer::{imports, wat2wasm, Function, Instance, Module, Store, Type, Value, ExportError};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":21120,"byte_end":21219,"line_start":39,"line_end":39,"column_start":1,"column_end":100}},{"value":"/ # let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":21220,"byte_end":21255,"line_start":40,"line_end":40,"column_start":1,"column_end":36}},{"value":"/ # let wasm_bytes = wat2wasm(\"(module)\".as_bytes()).unwrap();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":21256,"byte_end":21320,"line_start":41,"line_end":41,"column_start":1,"column_end":65}},{"value":"/ # let module = Module::new(&store, wasm_bytes).unwrap();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":21321,"byte_end":21381,"line_start":42,"line_end":42,"column_start":1,"column_end":61}},{"value":"/ # let import_object = imports! {};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":21382,"byte_end":21420,"line_start":43,"line_end":43,"column_start":1,"column_end":39}},{"value":"/ # let instance = Instance::new(&module, &import_object).unwrap();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":21421,"byte_end":21490,"line_start":44,"line_end":44,"column_start":1,"column_end":70}},{"value":"/ #","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":21491,"byte_end":21496,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ // This results with an error: `ExportError::Missing`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":21497,"byte_end":21555,"line_start":46,"line_end":46,"column_start":1,"column_end":59}},{"value":"/ let export = instance.exports.get_function(\"unknown\").unwrap();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":21556,"byte_end":21623,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":21624,"byte_end":21631,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1741},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":22129,"byte_end":22136,"line_start":65,"line_end":65,"column_start":12,"column_end":19},"name":"Exports","qualname":"::exports::Exports","value":"Exports {  }","parent":null,"children":[{"krate":0,"index":1742}],"decl_id":null,"docs":" Exports is a special kind of map that allows easily unwrapping\n the types of instances.","sig":null,"attributes":[{"value":"/ Exports is a special kind of map that allows easily unwrapping","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":21953,"byte_end":22019,"line_start":60,"line_end":60,"column_start":1,"column_end":67}},{"value":"/ the types of instances.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":22020,"byte_end":22047,"line_start":61,"line_end":61,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":22048,"byte_end":22051,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ TODO: add examples of using exports","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":22052,"byte_end":22091,"line_start":63,"line_end":63,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":22241,"byte_end":22244,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"new","qualname":"<Exports>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Exports`.\n","sig":null,"attributes":[{"value":"/ Creates a new `Exports`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":22201,"byte_end":22229,"line_start":70,"line_end":70,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":22353,"byte_end":22366,"line_start":76,"line_end":76,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Exports>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Exports` with capacity `n`.\n","sig":null,"attributes":[{"value":"/ Creates a new `Exports` with capacity `n`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":22295,"byte_end":22341,"line_start":75,"line_end":75,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":22544,"byte_end":22547,"line_start":83,"line_end":83,"column_start":12,"column_end":15},"name":"len","qualname":"<Exports>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of exports in the `Exports` map.\n","sig":null,"attributes":[{"value":"/ Return the number of exports in the `Exports` map.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":22478,"byte_end":22532,"line_start":82,"line_end":82,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":22658,"byte_end":22666,"line_start":88,"line_end":88,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Exports>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return whether or not there are no exports\n","sig":null,"attributes":[{"value":"/ Return whether or not there are no exports","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":22600,"byte_end":22646,"line_start":87,"line_end":87,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":22779,"byte_end":22785,"line_start":93,"line_end":93,"column_start":12,"column_end":18},"name":"insert","qualname":"<Exports>::insert","value":"pub fn insert<S, E>(&mut Self, S, E) where S: Into<String>, E: Into<Extern>","parent":null,"children":[],"decl_id":null,"docs":" Insert a new export into this `Exports` map.\n","sig":null,"attributes":[{"value":"/ Insert a new export into this `Exports` map.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":22719,"byte_end":22767,"line_start":92,"line_end":92,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":23515,"byte_end":23518,"line_start":114,"line_end":114,"column_start":12,"column_end":15},"name":"get","qualname":"<Exports>::get","value":"pub fn get<'a, T: Exportable>(&'a Self, &str) -> Result<&'a T, ExportError>","parent":null,"children":[],"decl_id":null,"docs":" Get an export given a `name`.","sig":null,"attributes":[{"value":"/ Get an export given a `name`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":23005,"byte_end":23038,"line_start":103,"line_end":103,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":23043,"byte_end":23046,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ The `get` method is specifically made for usage inside of","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":23051,"byte_end":23112,"line_start":105,"line_end":105,"column_start":5,"column_end":66}},{"value":"/ Rust APIs, as we can detect what's the desired type easily.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":23117,"byte_end":23180,"line_start":106,"line_end":106,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":23185,"byte_end":23188,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ If you want to get an export dynamically with type checking","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":23193,"byte_end":23256,"line_start":108,"line_end":108,"column_start":5,"column_end":68}},{"value":"/ please use the following functions: `get_func`, `get_memory`,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":23261,"byte_end":23326,"line_start":109,"line_end":109,"column_start":5,"column_end":70}},{"value":"/ `get_table` or `get_global` instead.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":23331,"byte_end":23371,"line_start":110,"line_end":110,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":23376,"byte_end":23379,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ If you want to get an export dynamically handling manually","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":23384,"byte_end":23446,"line_start":112,"line_end":112,"column_start":5,"column_end":67}},{"value":"/ type checking manually, please use `get_extern`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":23451,"byte_end":23503,"line_start":113,"line_end":113,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":23824,"byte_end":23834,"line_start":122,"line_end":122,"column_start":12,"column_end":22},"name":"get_global","qualname":"<Exports>::get_global","value":"pub fn get_global(&Self, &str) -> Result<&Global, ExportError>","parent":null,"children":[],"decl_id":null,"docs":" Get an export as a `Global`.\n","sig":null,"attributes":[{"value":"/ Get an export as a `Global`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":23780,"byte_end":23812,"line_start":121,"line_end":121,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":23966,"byte_end":23976,"line_start":127,"line_end":127,"column_start":12,"column_end":22},"name":"get_memory","qualname":"<Exports>::get_memory","value":"pub fn get_memory(&Self, &str) -> Result<&Memory, ExportError>","parent":null,"children":[],"decl_id":null,"docs":" Get an export as a `Memory`.\n","sig":null,"attributes":[{"value":"/ Get an export as a `Memory`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":23922,"byte_end":23954,"line_start":126,"line_end":126,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":24107,"byte_end":24116,"line_start":132,"line_end":132,"column_start":12,"column_end":21},"name":"get_table","qualname":"<Exports>::get_table","value":"pub fn get_table(&Self, &str) -> Result<&Table, ExportError>","parent":null,"children":[],"decl_id":null,"docs":" Get an export as a `Table`.\n","sig":null,"attributes":[{"value":"/ Get an export as a `Table`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":24064,"byte_end":24095,"line_start":131,"line_end":131,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":24245,"byte_end":24257,"line_start":137,"line_end":137,"column_start":12,"column_end":24},"name":"get_function","qualname":"<Exports>::get_function","value":"pub fn get_function(&Self, &str) -> Result<&Function, ExportError>","parent":null,"children":[],"decl_id":null,"docs":" Get an export as a `Func`.\n","sig":null,"attributes":[{"value":"/ Get an export as a `Func`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":24203,"byte_end":24233,"line_start":136,"line_end":136,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":24395,"byte_end":24414,"line_start":142,"line_end":142,"column_start":12,"column_end":31},"name":"get_native_function","qualname":"<Exports>::get_native_function","value":"pub fn get_native_function<Args, Rets>(&Self, &str)\n-> Result<NativeFunc<Args, Rets>, ExportError> where Args: WasmTypeList,\nRets: WasmTypeList","parent":null,"children":[],"decl_id":null,"docs":" Get an export as a `NativeFunc`.\n","sig":null,"attributes":[{"value":"/ Get an export as a `NativeFunc`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":24347,"byte_end":24383,"line_start":141,"line_end":141,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":24770,"byte_end":24787,"line_start":156,"line_end":156,"column_start":12,"column_end":29},"name":"get_with_generics","qualname":"<Exports>::get_with_generics","value":"pub fn get_with_generics<'a, T, Args, Rets>(&'a Self, &str)\n-> Result<T, ExportError> where Args: WasmTypeList, Rets: WasmTypeList,\nT: ExportableWithGenerics","parent":null,"children":[],"decl_id":null,"docs":" Hack to get this working with nativefunc too\n","sig":null,"attributes":[{"value":"/ Hack to get this working with nativefunc too","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":24710,"byte_end":24758,"line_start":155,"line_end":155,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":25221,"byte_end":25231,"line_start":169,"line_end":169,"column_start":12,"column_end":22},"name":"get_extern","qualname":"<Exports>::get_extern","value":"pub fn get_extern(&Self, &str) -> Option<&Extern>","parent":null,"children":[],"decl_id":null,"docs":" Get an export as an `Extern`.\n","sig":null,"attributes":[{"value":"/ Get an export as an `Extern`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":25176,"byte_end":25209,"line_start":168,"line_end":168,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":25387,"byte_end":25395,"line_start":174,"line_end":174,"column_start":12,"column_end":20},"name":"contains","qualname":"<Exports>::contains","value":"pub fn contains<S>(&Self, S) -> bool where S: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the `Exports` contains the given export name.\n","sig":null,"attributes":[{"value":"/ Returns true if the `Exports` contains the given export name.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":25310,"byte_end":25375,"line_start":173,"line_end":173,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":25568,"byte_end":25572,"line_start":182,"line_end":182,"column_start":12,"column_end":16},"name":"iter","qualname":"<Exports>::iter","value":"pub fn iter(&Self) -> ExportsIterator<, /*impl Trait*/>","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over the exports.\n","sig":null,"attributes":[{"value":"/ Get an iterator over the exports.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":25519,"byte_end":25556,"line_start":181,"line_end":181,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":25914,"byte_end":25929,"line_start":196,"line_end":196,"column_start":12,"column_end":27},"name":"ExportsIterator","qualname":"::exports::ExportsIterator","value":"ExportsIterator {  }","parent":null,"children":[{"krate":0,"index":167}],"decl_id":null,"docs":" An iterator over exports.\n","sig":null,"attributes":[{"value":"/ An iterator over exports.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":25873,"byte_end":25902,"line_start":195,"line_end":195,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":26606,"byte_end":26615,"line_start":228,"line_end":228,"column_start":12,"column_end":21},"name":"functions","qualname":"<ExportsIterator>::functions","value":"pub fn functions(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Get only the functions.\n","sig":null,"attributes":[{"value":"/ Get only the functions.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":26567,"byte_end":26594,"line_start":227,"line_end":227,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":26894,"byte_end":26902,"line_start":236,"line_end":236,"column_start":12,"column_end":20},"name":"memories","qualname":"<ExportsIterator>::memories","value":"pub fn memories(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Get only the memories.\n","sig":null,"attributes":[{"value":"/ Get only the memories.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":26856,"byte_end":26882,"line_start":235,"line_end":235,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":27172,"byte_end":27179,"line_start":244,"line_end":244,"column_start":12,"column_end":19},"name":"globals","qualname":"<ExportsIterator>::globals","value":"pub fn globals(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Get only the globals.\n","sig":null,"attributes":[{"value":"/ Get only the globals.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":27135,"byte_end":27160,"line_start":243,"line_end":243,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":27448,"byte_end":27454,"line_start":252,"line_end":252,"column_start":12,"column_end":18},"name":"tables","qualname":"<ExportsIterator>::tables","value":"pub fn tables(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Get only the tables.\n","sig":null,"attributes":[{"value":"/ Get only the tables.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":27412,"byte_end":27436,"line_start":251,"line_end":251,"column_start":5,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":200},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":28375,"byte_end":28385,"line_start":284,"line_end":284,"column_start":11,"column_end":21},"name":"Exportable","qualname":"::exports::Exportable","value":"Exportable<'a>: Sized","parent":null,"children":[{"krate":0,"index":202},{"krate":0,"index":203}],"decl_id":null,"docs":" This trait is used to mark types as gettable from an [`Instance`].","sig":null,"attributes":[{"value":"/ This trait is used to mark types as gettable from an [`Instance`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":28256,"byte_end":28326,"line_start":281,"line_end":281,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":28327,"byte_end":28330,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ [`Instance`]: crate::Instance","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":28331,"byte_end":28364,"line_start":283,"line_end":283,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":28585,"byte_end":28594,"line_start":289,"line_end":289,"column_start":8,"column_end":17},"name":"to_export","qualname":"::exports::Exportable::to_export","value":"pub fn to_export(&Self) -> Export","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":" This function is used when providedd the [`Extern`] as exportable, so it\n can be used while instantiating the [`Module`].","sig":null,"attributes":[{"value":"/ This function is used when providedd the [`Extern`] as exportable, so it","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":28403,"byte_end":28479,"line_start":285,"line_end":285,"column_start":5,"column_end":81}},{"value":"/ can be used while instantiating the [`Module`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":28484,"byte_end":28535,"line_start":286,"line_end":286,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":28540,"byte_end":28543,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ [`Module`]: crate::Module","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":28548,"byte_end":28577,"line_start":288,"line_end":288,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":28792,"byte_end":28812,"line_start":295,"line_end":295,"column_start":8,"column_end":28},"name":"get_self_from_extern","qualname":"::exports::Exportable::get_self_from_extern","value":"pub fn get_self_from_extern(&'a Extern) -> Result<&'a Self, ExportError>","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":" Implementation of how to get the export corresponding to the implementing type\n from an [`Instance`] by name.","sig":null,"attributes":[{"value":"/ Implementation of how to get the export corresponding to the implementing type","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":28618,"byte_end":28700,"line_start":291,"line_end":291,"column_start":5,"column_end":87}},{"value":"/ from an [`Instance`] by name.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":28705,"byte_end":28738,"line_start":292,"line_end":292,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":28743,"byte_end":28746,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ [`Instance`]: crate::Instance","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":28751,"byte_end":28784,"line_start":294,"line_end":294,"column_start":5,"column_end":38}}]},{"kind":"Trait","id":{"krate":0,"index":204},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":29050,"byte_end":29072,"line_start":301,"line_end":301,"column_start":11,"column_end":33},"name":"ExportableWithGenerics","qualname":"::exports::ExportableWithGenerics","value":"ExportableWithGenerics<'a, Args: WasmTypeList, Rets: WasmTypeList>: Sized","parent":null,"children":[{"krate":0,"index":208}],"decl_id":null,"docs":" A trait for accessing exports (like [`Exportable`]) but it takes generic\n `Args` and `Rets` parameters so that `NativeFunc` can be accessed directly\n as well.\n","sig":null,"attributes":[{"value":"/ A trait for accessing exports (like [`Exportable`]) but it takes generic","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":28871,"byte_end":28947,"line_start":298,"line_end":298,"column_start":1,"column_end":77}},{"value":"/ `Args` and `Rets` parameters so that `NativeFunc` can be accessed directly","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":28948,"byte_end":29026,"line_start":299,"line_end":299,"column_start":1,"column_end":79}},{"value":"/ as well.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":29027,"byte_end":29039,"line_start":300,"line_end":300,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":29180,"byte_end":29214,"line_start":303,"line_end":303,"column_start":8,"column_end":42},"name":"get_self_from_extern_with_generics","qualname":"::exports::ExportableWithGenerics::get_self_from_extern_with_generics","value":"pub fn get_self_from_extern_with_generics(&'a Extern)\n-> Result<Self, ExportError>","parent":{"krate":0,"index":204},"children":[],"decl_id":null,"docs":" Get an export with the given generics.\n","sig":null,"attributes":[{"value":"/ Get an export with the given generics.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":29130,"byte_end":29172,"line_start":302,"line_end":302,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1776},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":35356,"byte_end":35364,"line_start":65,"line_end":65,"column_start":12,"column_end":20},"name":"Function","qualname":"::externals::function::Function","value":"Function {  }","parent":null,"children":[{"krate":0,"index":1777},{"krate":0,"index":1778},{"krate":0,"index":1779}],"decl_id":null,"docs":" A WebAssembly `function` instance.","sig":null,"attributes":[{"value":"/ A WebAssembly `function` instance.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":34512,"byte_end":34550,"line_start":47,"line_end":47,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":34551,"byte_end":34554,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ A function instance is the runtime representation of a function.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":34555,"byte_end":34623,"line_start":49,"line_end":49,"column_start":1,"column_end":69}},{"value":"/ It effectively is a closure of the original function (defined in either","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":34624,"byte_end":34699,"line_start":50,"line_end":50,"column_start":1,"column_end":76}},{"value":"/ the host or the WebAssembly module) over the runtime `Instance` of its","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":34700,"byte_end":34774,"line_start":51,"line_end":51,"column_start":1,"column_end":75}},{"value":"/ originating `Module`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":34775,"byte_end":34800,"line_start":52,"line_end":52,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":34801,"byte_end":34804,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ The module instance is used to resolve references to other definitions","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":34805,"byte_end":34879,"line_start":54,"line_end":54,"column_start":1,"column_end":75}},{"value":"/ during execution of the function.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":34880,"byte_end":34917,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":34918,"byte_end":34921,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ Spec: <https://webassembly.github.io/spec/core/exec/runtime.html#function-instances>","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":34922,"byte_end":35010,"line_start":57,"line_end":57,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":35011,"byte_end":35014,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":35015,"byte_end":35027,"line_start":59,"line_end":59,"column_start":1,"column_end":13}},{"value":"/ - Closures (functions with captured environments) are not currently supported","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":35028,"byte_end":35109,"line_start":60,"line_end":60,"column_start":1,"column_end":82}},{"value":"/   with native functions. Attempting to create a native `Function` with one will","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":35110,"byte_end":35193,"line_start":61,"line_end":61,"column_start":1,"column_end":84}},{"value":"/   result in a panic.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":35194,"byte_end":35218,"line_start":62,"line_end":62,"column_start":1,"column_end":25}},{"value":"/   [Closures as host functions tracking issue](https://github.com/wasmerio/wasmer/issues/1840)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":35219,"byte_end":35316,"line_start":63,"line_end":63,"column_start":1,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":37925,"byte_end":37928,"line_start":146,"line_end":146,"column_start":12,"column_end":15},"name":"new","qualname":"<Function>::new","value":"pub fn new<FT, F>(&Store, FT, F) -> Self where FT: Into<FunctionType>,\nF: Fn(&[Val]) -> Result<Vec<Val>, RuntimeError> + 'static + Send + Sync","parent":null,"children":[],"decl_id":null,"docs":" Creates a new host `Function` (dynamic) with the provided signature.","sig":null,"attributes":[{"value":"/ Creates a new host `Function` (dynamic) with the provided signature.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":36723,"byte_end":36795,"line_start":113,"line_end":113,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":36800,"byte_end":36803,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ If you know the signature of the host function at compile time,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":36808,"byte_end":36875,"line_start":115,"line_end":115,"column_start":5,"column_end":72}},{"value":"/ consider using [`Function::new_native`] for less runtime overhead.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":36880,"byte_end":36950,"line_start":116,"line_end":116,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":36955,"byte_end":36958,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":36963,"byte_end":36977,"line_start":118,"line_end":118,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":36982,"byte_end":36985,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":36990,"byte_end":36997,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/ # use wasmer::{Function, FunctionType, Type, Store, Value};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":37002,"byte_end":37065,"line_start":121,"line_end":121,"column_start":5,"column_end":68}},{"value":"/ # let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":37070,"byte_end":37105,"line_start":122,"line_end":122,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":37110,"byte_end":37115,"line_start":123,"line_end":123,"column_start":5,"column_end":10}},{"value":"/ let signature = FunctionType::new(vec![Type::I32, Type::I32], vec![Type::I32]);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":37120,"byte_end":37203,"line_start":124,"line_end":124,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":37208,"byte_end":37211,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let f = Function::new(&store, &signature, |args| {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":37216,"byte_end":37270,"line_start":126,"line_end":126,"column_start":5,"column_end":59}},{"value":"/     let sum = args[0].unwrap_i32() + args[1].unwrap_i32();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":37275,"byte_end":37337,"line_start":127,"line_end":127,"column_start":5,"column_end":67}},{"value":"/     Ok(vec![Value::I32(sum)])","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":37342,"byte_end":37375,"line_start":128,"line_end":128,"column_start":5,"column_end":38}},{"value":"/ });","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":37380,"byte_end":37387,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":37392,"byte_end":37399,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":37404,"byte_end":37407,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ With constant signature:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":37412,"byte_end":37440,"line_start":132,"line_end":132,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":37445,"byte_end":37448,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":37453,"byte_end":37460,"line_start":134,"line_end":134,"column_start":5,"column_end":12}},{"value":"/ # use wasmer::{Function, FunctionType, Type, Store, Value};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":37465,"byte_end":37528,"line_start":135,"line_end":135,"column_start":5,"column_end":68}},{"value":"/ # let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":37533,"byte_end":37568,"line_start":136,"line_end":136,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":37573,"byte_end":37578,"line_start":137,"line_end":137,"column_start":5,"column_end":10}},{"value":"/ const I32_I32_TO_I32: ([Type; 2], [Type; 1]) = ([Type::I32, Type::I32], [Type::I32]);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":37583,"byte_end":37672,"line_start":138,"line_end":138,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":37677,"byte_end":37680,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ let f = Function::new(&store, I32_I32_TO_I32, |args| {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":37685,"byte_end":37743,"line_start":140,"line_end":140,"column_start":5,"column_end":63}},{"value":"/     let sum = args[0].unwrap_i32() + args[1].unwrap_i32();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":37748,"byte_end":37810,"line_start":141,"line_end":141,"column_start":5,"column_end":67}},{"value":"/     Ok(vec![Value::I32(sum)])","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":37815,"byte_end":37848,"line_start":142,"line_end":142,"column_start":5,"column_end":38}},{"value":"/ });","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":37853,"byte_end":37860,"line_start":143,"line_end":143,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":37865,"byte_end":37872,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"allow(clippy :: cast_ptr_alignment)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":37877,"byte_end":37913,"line_start":145,"line_end":145,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":42080,"byte_end":42092,"line_start":251,"line_end":251,"column_start":12,"column_end":24},"name":"new_with_env","qualname":"<Function>::new_with_env","value":"pub fn new_with_env<FT, F, Env>(&Store, FT, Env, F) -> Self where\nFT: Into<FunctionType>, F: Fn(&Env, &[Val]) ->\nResult<Vec<Val>, RuntimeError> + 'static + Send + Sync, Env: Sized +\nWasmerEnv + 'static","parent":null,"children":[],"decl_id":null,"docs":" Creates a new host `Function` (dynamic) with the provided signature and environment.","sig":null,"attributes":[{"value":"/ Creates a new host `Function` (dynamic) with the provided signature and environment.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":40457,"byte_end":40545,"line_start":206,"line_end":206,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":40550,"byte_end":40553,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ If you know the signature of the host function at compile time,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":40558,"byte_end":40625,"line_start":208,"line_end":208,"column_start":5,"column_end":72}},{"value":"/ consider using [`Function::new_native_with_env`] for less runtime","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":40630,"byte_end":40699,"line_start":209,"line_end":209,"column_start":5,"column_end":74}},{"value":"/ overhead.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":40704,"byte_end":40717,"line_start":210,"line_end":210,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":40722,"byte_end":40725,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":40730,"byte_end":40744,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":40749,"byte_end":40752,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":40757,"byte_end":40764,"line_start":214,"line_end":214,"column_start":5,"column_end":12}},{"value":"/ # use wasmer::{Function, FunctionType, Type, Store, Value, WasmerEnv};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":40769,"byte_end":40843,"line_start":215,"line_end":215,"column_start":5,"column_end":79}},{"value":"/ # let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":40848,"byte_end":40883,"line_start":216,"line_end":216,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":40888,"byte_end":40893,"line_start":217,"line_end":217,"column_start":5,"column_end":10}},{"value":"/ #[derive(WasmerEnv, Clone)]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":40898,"byte_end":40929,"line_start":218,"line_end":218,"column_start":5,"column_end":36}},{"value":"/ struct Env {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":40934,"byte_end":40950,"line_start":219,"line_end":219,"column_start":5,"column_end":21}},{"value":"/   multiplier: i32,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":40955,"byte_end":40977,"line_start":220,"line_end":220,"column_start":5,"column_end":27}},{"value":"/ };","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":40982,"byte_end":40988,"line_start":221,"line_end":221,"column_start":5,"column_end":11}},{"value":"/ let env = Env { multiplier: 2 };","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":40993,"byte_end":41029,"line_start":222,"line_end":222,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":41034,"byte_end":41037,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ let signature = FunctionType::new(vec![Type::I32, Type::I32], vec![Type::I32]);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":41042,"byte_end":41125,"line_start":224,"line_end":224,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":41130,"byte_end":41133,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ let f = Function::new_with_env(&store, &signature, env, |env, args| {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":41138,"byte_end":41211,"line_start":226,"line_end":226,"column_start":5,"column_end":78}},{"value":"/     let result = env.multiplier * (args[0].unwrap_i32() + args[1].unwrap_i32());","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":41216,"byte_end":41300,"line_start":227,"line_end":227,"column_start":5,"column_end":89}},{"value":"/     Ok(vec![Value::I32(result)])","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":41305,"byte_end":41341,"line_start":228,"line_end":228,"column_start":5,"column_end":41}},{"value":"/ });","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":41346,"byte_end":41353,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":41358,"byte_end":41365,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":41370,"byte_end":41373,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ With constant signature:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":41378,"byte_end":41406,"line_start":232,"line_end":232,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":41411,"byte_end":41414,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":41419,"byte_end":41426,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"/ # use wasmer::{Function, FunctionType, Type, Store, Value, WasmerEnv};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":41431,"byte_end":41505,"line_start":235,"line_end":235,"column_start":5,"column_end":79}},{"value":"/ # let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":41510,"byte_end":41545,"line_start":236,"line_end":236,"column_start":5,"column_end":40}},{"value":"/ const I32_I32_TO_I32: ([Type; 2], [Type; 1]) = ([Type::I32, Type::I32], [Type::I32]);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":41550,"byte_end":41639,"line_start":237,"line_end":237,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":41644,"byte_end":41647,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ #[derive(WasmerEnv, Clone)]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":41652,"byte_end":41683,"line_start":239,"line_end":239,"column_start":5,"column_end":36}},{"value":"/ struct Env {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":41688,"byte_end":41704,"line_start":240,"line_end":240,"column_start":5,"column_end":21}},{"value":"/   multiplier: i32,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":41709,"byte_end":41731,"line_start":241,"line_end":241,"column_start":5,"column_end":27}},{"value":"/ };","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":41736,"byte_end":41742,"line_start":242,"line_end":242,"column_start":5,"column_end":11}},{"value":"/ let env = Env { multiplier: 2 };","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":41747,"byte_end":41783,"line_start":243,"line_end":243,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":41788,"byte_end":41791,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ let f = Function::new_with_env(&store, I32_I32_TO_I32, env, |env, args| {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":41796,"byte_end":41873,"line_start":245,"line_end":245,"column_start":5,"column_end":82}},{"value":"/     let result = env.multiplier * (args[0].unwrap_i32() + args[1].unwrap_i32());","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":41878,"byte_end":41962,"line_start":246,"line_end":246,"column_start":5,"column_end":89}},{"value":"/     Ok(vec![Value::I32(result)])","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":41967,"byte_end":42003,"line_start":247,"line_end":247,"column_start":5,"column_end":41}},{"value":"/ });","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":42008,"byte_end":42015,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":42020,"byte_end":42027,"line_start":249,"line_end":249,"column_start":5,"column_end":12}},{"value":"allow(clippy :: cast_ptr_alignment)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":42032,"byte_end":42068,"line_start":250,"line_end":250,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":44463,"byte_end":44473,"line_start":315,"line_end":315,"column_start":12,"column_end":22},"name":"new_native","qualname":"<Function>::new_native","value":"pub fn new_native<F, Args, Rets, Env>(&Store, F) -> Self where\nF: HostFunction<Args, Rets, WithoutEnv, Env>, Args: WasmTypeList,\nRets: WasmTypeList, Env: Sized + 'static","parent":null,"children":[],"decl_id":null,"docs":" Creates a new host `Function` from a native function.","sig":null,"attributes":[{"value":"/ Creates a new host `Function` from a native function.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":44014,"byte_end":44071,"line_start":298,"line_end":298,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":44076,"byte_end":44079,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ The function signature is automatically retrieved using the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":44084,"byte_end":44147,"line_start":300,"line_end":300,"column_start":5,"column_end":68}},{"value":"/ Rust typing system.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":44152,"byte_end":44175,"line_start":301,"line_end":301,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":44180,"byte_end":44183,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":44188,"byte_end":44201,"line_start":303,"line_end":303,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":44206,"byte_end":44209,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":44214,"byte_end":44221,"line_start":305,"line_end":305,"column_start":5,"column_end":12}},{"value":"/ # use wasmer::{Store, Function};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":44226,"byte_end":44262,"line_start":306,"line_end":306,"column_start":5,"column_end":41}},{"value":"/ # let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":44267,"byte_end":44302,"line_start":307,"line_end":307,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":44307,"byte_end":44312,"line_start":308,"line_end":308,"column_start":5,"column_end":10}},{"value":"/ fn sum(a: i32, b: i32) -> i32 {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":44317,"byte_end":44352,"line_start":309,"line_end":309,"column_start":5,"column_end":40}},{"value":"/     a + b","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":44357,"byte_end":44370,"line_start":310,"line_end":310,"column_start":5,"column_end":18}},{"value":"/ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":44375,"byte_end":44380,"line_start":311,"line_end":311,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":44385,"byte_end":44388,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ let f = Function::new_native(&store, sum);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":44393,"byte_end":44439,"line_start":313,"line_end":313,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":44444,"byte_end":44451,"line_start":314,"line_end":314,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":46460,"byte_end":46479,"line_start":375,"line_end":375,"column_start":12,"column_end":31},"name":"new_native_with_env","qualname":"<Function>::new_native_with_env","value":"pub fn new_native_with_env<F, Args, Rets, Env>(&Store, Env, F) -> Self where\nF: HostFunction<Args, Rets, WithEnv, Env>, Args: WasmTypeList,\nRets: WasmTypeList, Env: Sized + WasmerEnv + 'static","parent":null,"children":[],"decl_id":null,"docs":" Creates a new host `Function` from a native function and a provided environment.","sig":null,"attributes":[{"value":"/ Creates a new host `Function` from a native function and a provided environment.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":45757,"byte_end":45841,"line_start":352,"line_end":352,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":45846,"byte_end":45849,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ The function signature is automatically retrieved using the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":45854,"byte_end":45917,"line_start":354,"line_end":354,"column_start":5,"column_end":68}},{"value":"/ Rust typing system.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":45922,"byte_end":45945,"line_start":355,"line_end":355,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":45950,"byte_end":45953,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":45958,"byte_end":45971,"line_start":357,"line_end":357,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":45976,"byte_end":45979,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":45984,"byte_end":45991,"line_start":359,"line_end":359,"column_start":5,"column_end":12}},{"value":"/ # use wasmer::{Store, Function, WasmerEnv};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":45996,"byte_end":46043,"line_start":360,"line_end":360,"column_start":5,"column_end":52}},{"value":"/ # let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":46048,"byte_end":46083,"line_start":361,"line_end":361,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":46088,"byte_end":46093,"line_start":362,"line_end":362,"column_start":5,"column_end":10}},{"value":"/ #[derive(WasmerEnv, Clone)]","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":46098,"byte_end":46129,"line_start":363,"line_end":363,"column_start":5,"column_end":36}},{"value":"/ struct Env {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":46134,"byte_end":46150,"line_start":364,"line_end":364,"column_start":5,"column_end":21}},{"value":"/     multiplier: i32,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":46155,"byte_end":46179,"line_start":365,"line_end":365,"column_start":5,"column_end":29}},{"value":"/ };","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":46184,"byte_end":46190,"line_start":366,"line_end":366,"column_start":5,"column_end":11}},{"value":"/ let env = Env { multiplier: 2 };","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":46195,"byte_end":46231,"line_start":367,"line_end":367,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":46236,"byte_end":46239,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ fn sum_and_multiply(env: &Env, a: i32, b: i32) -> i32 {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":46244,"byte_end":46303,"line_start":369,"line_end":369,"column_start":5,"column_end":64}},{"value":"/     (a + b) * env.multiplier","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":46308,"byte_end":46340,"line_start":370,"line_end":370,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":46345,"byte_end":46350,"line_start":371,"line_end":371,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":46355,"byte_end":46358,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ let f = Function::new_native_with_env(&store, env, sum_and_multiply);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":46363,"byte_end":46436,"line_start":373,"line_end":373,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":46441,"byte_end":46448,"line_start":374,"line_end":374,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":49767,"byte_end":49769,"line_start":476,"line_end":476,"column_start":12,"column_end":14},"name":"ty","qualname":"<Function>::ty","value":"pub fn ty(&Self) -> &FunctionType","parent":null,"children":[],"decl_id":null,"docs":" Returns the [`FunctionType`] of the `Function`.","sig":null,"attributes":[{"value":"/ Returns the [`FunctionType`] of the `Function`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":49294,"byte_end":49345,"line_start":459,"line_end":459,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":49350,"byte_end":49353,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":49358,"byte_end":49371,"line_start":461,"line_end":461,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":49376,"byte_end":49379,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":49384,"byte_end":49391,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/ # use wasmer::{Function, Store, Type};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":49396,"byte_end":49438,"line_start":464,"line_end":464,"column_start":5,"column_end":47}},{"value":"/ # let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":49443,"byte_end":49478,"line_start":465,"line_end":465,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":49483,"byte_end":49488,"line_start":466,"line_end":466,"column_start":5,"column_end":10}},{"value":"/ fn sum(a: i32, b: i32) -> i32 {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":49493,"byte_end":49528,"line_start":467,"line_end":467,"column_start":5,"column_end":40}},{"value":"/     a + b","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":49533,"byte_end":49546,"line_start":468,"line_end":468,"column_start":5,"column_end":18}},{"value":"/ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":49551,"byte_end":49556,"line_start":469,"line_end":469,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":49561,"byte_end":49564,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ let f = Function::new_native(&store, sum);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":49569,"byte_end":49615,"line_start":471,"line_end":471,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":49620,"byte_end":49623,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.ty().params(), vec![Type::I32, Type::I32]);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":49628,"byte_end":49688,"line_start":473,"line_end":473,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(f.ty().results(), vec![Type::I32]);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":49693,"byte_end":49743,"line_start":474,"line_end":474,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":49748,"byte_end":49755,"line_start":475,"line_end":475,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":49919,"byte_end":49924,"line_start":481,"line_end":481,"column_start":12,"column_end":17},"name":"store","qualname":"<Function>::store","value":"pub fn store(&Self) -> &Store","parent":null,"children":[],"decl_id":null,"docs":" Returns the [`Store`] where the `Function` belongs.\n","sig":null,"attributes":[{"value":"/ Returns the [`Store`] where the `Function` belongs.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":49852,"byte_end":49907,"line_start":480,"line_end":480,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":52765,"byte_end":52776,"line_start":570,"line_end":570,"column_start":12,"column_end":23},"name":"param_arity","qualname":"<Function>::param_arity","value":"pub fn param_arity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of parameters that this function takes.","sig":null,"attributes":[{"value":"/ Returns the number of parameters that this function takes.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":52361,"byte_end":52423,"line_start":554,"line_end":554,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":52428,"byte_end":52431,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":52436,"byte_end":52449,"line_start":556,"line_end":556,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":52454,"byte_end":52457,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":52462,"byte_end":52469,"line_start":558,"line_end":558,"column_start":5,"column_end":12}},{"value":"/ # use wasmer::{Function, Store, Type};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":52474,"byte_end":52516,"line_start":559,"line_end":559,"column_start":5,"column_end":47}},{"value":"/ # let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":52521,"byte_end":52556,"line_start":560,"line_end":560,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":52561,"byte_end":52566,"line_start":561,"line_end":561,"column_start":5,"column_end":10}},{"value":"/ fn sum(a: i32, b: i32) -> i32 {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":52571,"byte_end":52606,"line_start":562,"line_end":562,"column_start":5,"column_end":40}},{"value":"/     a + b","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":52611,"byte_end":52624,"line_start":563,"line_end":563,"column_start":5,"column_end":18}},{"value":"/ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":52629,"byte_end":52634,"line_start":564,"line_end":564,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":52639,"byte_end":52642,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ let f = Function::new_native(&store, sum);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":52647,"byte_end":52693,"line_start":566,"line_end":566,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":52698,"byte_end":52701,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.param_arity(), 2);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":52706,"byte_end":52741,"line_start":568,"line_end":568,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":52746,"byte_end":52753,"line_start":569,"line_end":569,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":53239,"byte_end":53251,"line_start":590,"line_end":590,"column_start":12,"column_end":24},"name":"result_arity","qualname":"<Function>::result_arity","value":"pub fn result_arity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of results this function produces.","sig":null,"attributes":[{"value":"/ Returns the number of results this function produces.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":52839,"byte_end":52896,"line_start":574,"line_end":574,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":52901,"byte_end":52904,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":52909,"byte_end":52922,"line_start":576,"line_end":576,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":52927,"byte_end":52930,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":52935,"byte_end":52942,"line_start":578,"line_end":578,"column_start":5,"column_end":12}},{"value":"/ # use wasmer::{Function, Store, Type};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":52947,"byte_end":52989,"line_start":579,"line_end":579,"column_start":5,"column_end":47}},{"value":"/ # let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":52994,"byte_end":53029,"line_start":580,"line_end":580,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":53034,"byte_end":53039,"line_start":581,"line_end":581,"column_start":5,"column_end":10}},{"value":"/ fn sum(a: i32, b: i32) -> i32 {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":53044,"byte_end":53079,"line_start":582,"line_end":582,"column_start":5,"column_end":40}},{"value":"/     a + b","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":53084,"byte_end":53097,"line_start":583,"line_end":583,"column_start":5,"column_end":18}},{"value":"/ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":53102,"byte_end":53107,"line_start":584,"line_end":584,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":53112,"byte_end":53115,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ let f = Function::new_native(&store, sum);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":53120,"byte_end":53166,"line_start":586,"line_end":586,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":53171,"byte_end":53174,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.result_arity(), 1);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":53179,"byte_end":53215,"line_start":588,"line_end":588,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":53220,"byte_end":53227,"line_start":589,"line_end":589,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":54490,"byte_end":54494,"line_start":623,"line_end":623,"column_start":12,"column_end":16},"name":"call","qualname":"<Function>::call","value":"pub fn call(&Self, &[Val]) -> Result<Box<[Val]>, RuntimeError>","parent":null,"children":[],"decl_id":null,"docs":" Call the `Function` function.","sig":null,"attributes":[{"value":"/ Call the `Function` function.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":53315,"byte_end":53348,"line_start":594,"line_end":594,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":53353,"byte_end":53356,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ Depending on where the Function is defined, it will call it.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":53361,"byte_end":53425,"line_start":596,"line_end":596,"column_start":5,"column_end":69}},{"value":"/ 1. If the function is defined inside a WebAssembly, it will call the trampoline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":53430,"byte_end":53513,"line_start":597,"line_end":597,"column_start":5,"column_end":88}},{"value":"/    for the function signature.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":53518,"byte_end":53552,"line_start":598,"line_end":598,"column_start":5,"column_end":39}},{"value":"/ 2. If the function is defined in the host (in a native way), it will","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":53557,"byte_end":53629,"line_start":599,"line_end":599,"column_start":5,"column_end":77}},{"value":"/    call the trampoline.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":53634,"byte_end":53661,"line_start":600,"line_end":600,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":53666,"byte_end":53669,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":53674,"byte_end":53688,"line_start":602,"line_end":602,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":53693,"byte_end":53696,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":53701,"byte_end":53708,"line_start":604,"line_end":604,"column_start":5,"column_end":12}},{"value":"/ # use wasmer::{imports, wat2wasm, Function, Instance, Module, Store, Type, Value};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":53713,"byte_end":53799,"line_start":605,"line_end":605,"column_start":5,"column_end":91}},{"value":"/ # let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":53804,"byte_end":53839,"line_start":606,"line_end":606,"column_start":5,"column_end":40}},{"value":"/ # let wasm_bytes = wat2wasm(r#\"","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":53844,"byte_end":53879,"line_start":607,"line_end":607,"column_start":5,"column_end":40}},{"value":"/ # (module","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":53884,"byte_end":53897,"line_start":608,"line_end":608,"column_start":5,"column_end":18}},{"value":"/ #   (func (export \"sum\") (param $x i32) (param $y i32) (result i32)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":53902,"byte_end":53973,"line_start":609,"line_end":609,"column_start":5,"column_end":76}},{"value":"/ #     local.get $x","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":53978,"byte_end":54000,"line_start":610,"line_end":610,"column_start":5,"column_end":27}},{"value":"/ #     local.get $y","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":54005,"byte_end":54027,"line_start":611,"line_end":611,"column_start":5,"column_end":27}},{"value":"/ #     i32.add","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":54032,"byte_end":54049,"line_start":612,"line_end":612,"column_start":5,"column_end":22}},{"value":"/ #   ))","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":54054,"byte_end":54064,"line_start":613,"line_end":613,"column_start":5,"column_end":15}},{"value":"/ # \"#.as_bytes()).unwrap();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":54069,"byte_end":54099,"line_start":614,"line_end":614,"column_start":5,"column_end":35}},{"value":"/ # let module = Module::new(&store, wasm_bytes).unwrap();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":54104,"byte_end":54164,"line_start":615,"line_end":615,"column_start":5,"column_end":65}},{"value":"/ # let import_object = imports! {};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":54169,"byte_end":54207,"line_start":616,"line_end":616,"column_start":5,"column_end":43}},{"value":"/ # let instance = Instance::new(&module, &import_object).unwrap();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":54212,"byte_end":54281,"line_start":617,"line_end":617,"column_start":5,"column_end":74}},{"value":"/ #","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":54286,"byte_end":54291,"line_start":618,"line_end":618,"column_start":5,"column_end":10}},{"value":"/ let sum = instance.exports.get_function(\"sum\").unwrap();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":54296,"byte_end":54356,"line_start":619,"line_end":619,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":54361,"byte_end":54364,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sum.call(&[Value::I32(1), Value::I32(2)]).unwrap().to_vec(), vec![Value::I32(3)]);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":54369,"byte_end":54466,"line_start":621,"line_end":621,"column_start":5,"column_end":102}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":54471,"byte_end":54478,"line_start":622,"line_end":622,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":58895,"byte_end":58901,"line_start":741,"line_end":741,"column_start":12,"column_end":18},"name":"native","qualname":"<Function>::native","value":"pub fn native<Args, Rets>(&Self)\n-> Result<NativeFunc<Args, Rets>, RuntimeError> where Args: WasmTypeList,\nRets: WasmTypeList","parent":null,"children":[],"decl_id":null,"docs":" Transform this WebAssembly function into a function with the\n native ABI. See [`NativeFunc`] to learn more.","sig":null,"attributes":[{"value":"/ Transform this WebAssembly function into a function with the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":56029,"byte_end":56093,"line_start":666,"line_end":666,"column_start":5,"column_end":69}},{"value":"/ native ABI. See [`NativeFunc`] to learn more.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":56098,"byte_end":56147,"line_start":667,"line_end":667,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":56152,"byte_end":56155,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":56160,"byte_end":56174,"line_start":669,"line_end":669,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":56179,"byte_end":56182,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":56187,"byte_end":56194,"line_start":671,"line_end":671,"column_start":5,"column_end":12}},{"value":"/ # use wasmer::{imports, wat2wasm, Function, Instance, Module, Store, Type, Value};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":56199,"byte_end":56285,"line_start":672,"line_end":672,"column_start":5,"column_end":91}},{"value":"/ # let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":56290,"byte_end":56325,"line_start":673,"line_end":673,"column_start":5,"column_end":40}},{"value":"/ # let wasm_bytes = wat2wasm(r#\"","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":56330,"byte_end":56365,"line_start":674,"line_end":674,"column_start":5,"column_end":40}},{"value":"/ # (module","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":56370,"byte_end":56383,"line_start":675,"line_end":675,"column_start":5,"column_end":18}},{"value":"/ #   (func (export \"sum\") (param $x i32) (param $y i32) (result i32)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":56388,"byte_end":56459,"line_start":676,"line_end":676,"column_start":5,"column_end":76}},{"value":"/ #     local.get $x","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":56464,"byte_end":56486,"line_start":677,"line_end":677,"column_start":5,"column_end":27}},{"value":"/ #     local.get $y","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":56491,"byte_end":56513,"line_start":678,"line_end":678,"column_start":5,"column_end":27}},{"value":"/ #     i32.add","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":56518,"byte_end":56535,"line_start":679,"line_end":679,"column_start":5,"column_end":22}},{"value":"/ #   ))","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":56540,"byte_end":56550,"line_start":680,"line_end":680,"column_start":5,"column_end":15}},{"value":"/ # \"#.as_bytes()).unwrap();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":56555,"byte_end":56585,"line_start":681,"line_end":681,"column_start":5,"column_end":35}},{"value":"/ # let module = Module::new(&store, wasm_bytes).unwrap();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":56590,"byte_end":56650,"line_start":682,"line_end":682,"column_start":5,"column_end":65}},{"value":"/ # let import_object = imports! {};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":56655,"byte_end":56693,"line_start":683,"line_end":683,"column_start":5,"column_end":43}},{"value":"/ # let instance = Instance::new(&module, &import_object).unwrap();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":56698,"byte_end":56767,"line_start":684,"line_end":684,"column_start":5,"column_end":74}},{"value":"/ #","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":56772,"byte_end":56777,"line_start":685,"line_end":685,"column_start":5,"column_end":10}},{"value":"/ let sum = instance.exports.get_function(\"sum\").unwrap();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":56782,"byte_end":56842,"line_start":686,"line_end":686,"column_start":5,"column_end":65}},{"value":"/ let sum_native = sum.native::<(i32, i32), i32>().unwrap();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":56847,"byte_end":56909,"line_start":687,"line_end":687,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":56914,"byte_end":56917,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sum_native.call(1, 2).unwrap(), 3);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":56922,"byte_end":56972,"line_start":689,"line_end":689,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":56977,"byte_end":56984,"line_start":690,"line_end":690,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":56989,"byte_end":56992,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":56997,"byte_end":57009,"line_start":692,"line_end":692,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":57014,"byte_end":57017,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ If the `Args` generic parameter does not match the exported function","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":57022,"byte_end":57094,"line_start":694,"line_end":694,"column_start":5,"column_end":77}},{"value":"/ an error will be raised:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":57099,"byte_end":57127,"line_start":695,"line_end":695,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":57132,"byte_end":57135,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":57140,"byte_end":57159,"line_start":697,"line_end":697,"column_start":5,"column_end":24}},{"value":"/ # use wasmer::{imports, wat2wasm, Function, Instance, Module, Store, Type, Value};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":57164,"byte_end":57250,"line_start":698,"line_end":698,"column_start":5,"column_end":91}},{"value":"/ # let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":57255,"byte_end":57290,"line_start":699,"line_end":699,"column_start":5,"column_end":40}},{"value":"/ # let wasm_bytes = wat2wasm(r#\"","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":57295,"byte_end":57330,"line_start":700,"line_end":700,"column_start":5,"column_end":40}},{"value":"/ # (module","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":57335,"byte_end":57348,"line_start":701,"line_end":701,"column_start":5,"column_end":18}},{"value":"/ #   (func (export \"sum\") (param $x i32) (param $y i32) (result i32)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":57353,"byte_end":57424,"line_start":702,"line_end":702,"column_start":5,"column_end":76}},{"value":"/ #     local.get $x","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":57429,"byte_end":57451,"line_start":703,"line_end":703,"column_start":5,"column_end":27}},{"value":"/ #     local.get $y","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":57456,"byte_end":57478,"line_start":704,"line_end":704,"column_start":5,"column_end":27}},{"value":"/ #     i32.add","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":57483,"byte_end":57500,"line_start":705,"line_end":705,"column_start":5,"column_end":22}},{"value":"/ #   ))","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":57505,"byte_end":57515,"line_start":706,"line_end":706,"column_start":5,"column_end":15}},{"value":"/ # \"#.as_bytes()).unwrap();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":57520,"byte_end":57550,"line_start":707,"line_end":707,"column_start":5,"column_end":35}},{"value":"/ # let module = Module::new(&store, wasm_bytes).unwrap();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":57555,"byte_end":57615,"line_start":708,"line_end":708,"column_start":5,"column_end":65}},{"value":"/ # let import_object = imports! {};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":57620,"byte_end":57658,"line_start":709,"line_end":709,"column_start":5,"column_end":43}},{"value":"/ # let instance = Instance::new(&module, &import_object).unwrap();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":57663,"byte_end":57732,"line_start":710,"line_end":710,"column_start":5,"column_end":74}},{"value":"/ #","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":57737,"byte_end":57742,"line_start":711,"line_end":711,"column_start":5,"column_end":10}},{"value":"/ let sum = instance.exports.get_function(\"sum\").unwrap();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":57747,"byte_end":57807,"line_start":712,"line_end":712,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":57812,"byte_end":57815,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ // This results in an error: `RuntimeError`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":57820,"byte_end":57867,"line_start":714,"line_end":714,"column_start":5,"column_end":52}},{"value":"/ let sum_native = sum.native::<(i64, i64), i32>().unwrap();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":57872,"byte_end":57934,"line_start":715,"line_end":715,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":57939,"byte_end":57946,"line_start":716,"line_end":716,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":57951,"byte_end":57954,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ If the `Rets` generic parameter does not match the exported function","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":57959,"byte_end":58031,"line_start":718,"line_end":718,"column_start":5,"column_end":77}},{"value":"/ an error will be raised:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":58036,"byte_end":58064,"line_start":719,"line_end":719,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":58069,"byte_end":58072,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":58077,"byte_end":58096,"line_start":721,"line_end":721,"column_start":5,"column_end":24}},{"value":"/ # use wasmer::{imports, wat2wasm, Function, Instance, Module, Store, Type, Value};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":58101,"byte_end":58187,"line_start":722,"line_end":722,"column_start":5,"column_end":91}},{"value":"/ # let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":58192,"byte_end":58227,"line_start":723,"line_end":723,"column_start":5,"column_end":40}},{"value":"/ # let wasm_bytes = wat2wasm(r#\"","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":58232,"byte_end":58267,"line_start":724,"line_end":724,"column_start":5,"column_end":40}},{"value":"/ # (module","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":58272,"byte_end":58285,"line_start":725,"line_end":725,"column_start":5,"column_end":18}},{"value":"/ #   (func (export \"sum\") (param $x i32) (param $y i32) (result i32)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":58290,"byte_end":58361,"line_start":726,"line_end":726,"column_start":5,"column_end":76}},{"value":"/ #     local.get $x","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":58366,"byte_end":58388,"line_start":727,"line_end":727,"column_start":5,"column_end":27}},{"value":"/ #     local.get $y","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":58393,"byte_end":58415,"line_start":728,"line_end":728,"column_start":5,"column_end":27}},{"value":"/ #     i32.add","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":58420,"byte_end":58437,"line_start":729,"line_end":729,"column_start":5,"column_end":22}},{"value":"/ #   ))","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":58442,"byte_end":58452,"line_start":730,"line_end":730,"column_start":5,"column_end":15}},{"value":"/ # \"#.as_bytes()).unwrap();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":58457,"byte_end":58487,"line_start":731,"line_end":731,"column_start":5,"column_end":35}},{"value":"/ # let module = Module::new(&store, wasm_bytes).unwrap();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":58492,"byte_end":58552,"line_start":732,"line_end":732,"column_start":5,"column_end":65}},{"value":"/ # let import_object = imports! {};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":58557,"byte_end":58595,"line_start":733,"line_end":733,"column_start":5,"column_end":43}},{"value":"/ # let instance = Instance::new(&module, &import_object).unwrap();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":58600,"byte_end":58669,"line_start":734,"line_end":734,"column_start":5,"column_end":74}},{"value":"/ #","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":58674,"byte_end":58679,"line_start":735,"line_end":735,"column_start":5,"column_end":10}},{"value":"/ let sum = instance.exports.get_function(\"sum\").unwrap();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":58684,"byte_end":58744,"line_start":736,"line_end":736,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":58749,"byte_end":58752,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ // This results in an error: `RuntimeError`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":58757,"byte_end":58804,"line_start":738,"line_end":738,"column_start":5,"column_end":52}},{"value":"/ let sum_native = sum.native::<(i32, i32), i64>().unwrap();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":58809,"byte_end":58871,"line_start":739,"line_end":739,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":58876,"byte_end":58883,"line_start":740,"line_end":740,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":444},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":65544,"byte_end":65564,"line_start":940,"line_end":940,"column_start":22,"column_end":42},"name":"FromToNativeWasmType","qualname":"::externals::function::inner::FromToNativeWasmType","value":"FromToNativeWasmType: Copy","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447}],"decl_id":null,"docs":" A trait to convert a Rust value to a `WasmNativeType` value,\n or to convert `WasmNativeType` value to a Rust value.","sig":null,"attributes":[{"value":"/ A trait to convert a Rust value to a `WasmNativeType` value,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":65179,"byte_end":65243,"line_start":933,"line_end":933,"column_start":5,"column_end":69}},{"value":"/ or to convert `WasmNativeType` value to a Rust value.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":65248,"byte_end":65305,"line_start":934,"line_end":934,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":65310,"byte_end":65313,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ This trait should ideally be split into two traits:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":65318,"byte_end":65373,"line_start":936,"line_end":936,"column_start":5,"column_end":60}},{"value":"/ `FromNativeWasmType` and `ToNativeWasmType` but it creates a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":65378,"byte_end":65442,"line_start":937,"line_end":937,"column_start":5,"column_end":69}},{"value":"/ non-negligible complexity in the `WasmTypeList`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":65447,"byte_end":65498,"line_start":938,"line_end":938,"column_start":5,"column_end":56}},{"value":"/ implementation.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":65503,"byte_end":65522,"line_start":939,"line_end":939,"column_start":5,"column_end":24}}]},{"kind":"Type","id":{"krate":0,"index":445},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":65651,"byte_end":65657,"line_start":945,"line_end":945,"column_start":14,"column_end":20},"name":"Native","qualname":"::externals::function::inner::FromToNativeWasmType::Native","value":"type Native: NativeWasmType;","parent":{"krate":0,"index":444},"children":[],"decl_id":null,"docs":" Native Wasm type.\n","sig":null,"attributes":[{"value":"/ Native Wasm type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":65616,"byte_end":65637,"line_start":944,"line_end":944,"column_start":9,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":65881,"byte_end":65892,"line_start":953,"line_end":953,"column_start":12,"column_end":23},"name":"from_native","qualname":"::externals::function::inner::FromToNativeWasmType::from_native","value":"pub fn from_native(Self::Native) -> Self","parent":{"krate":0,"index":444},"children":[],"decl_id":null,"docs":" Convert a value of kind `Self::Native` to `Self`.","sig":null,"attributes":[{"value":"/ Convert a value of kind `Self::Native` to `Self`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":65684,"byte_end":65737,"line_start":947,"line_end":947,"column_start":9,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":65746,"byte_end":65749,"line_start":948,"line_end":948,"column_start":9,"column_end":12}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":65758,"byte_end":65770,"line_start":949,"line_end":949,"column_start":9,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":65779,"byte_end":65782,"line_start":950,"line_end":950,"column_start":9,"column_end":12}},{"value":"/ This method panics if `native` cannot fit in the `Self`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":65791,"byte_end":65850,"line_start":951,"line_end":951,"column_start":9,"column_end":68}},{"value":"/ type`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":65859,"byte_end":65869,"line_start":952,"line_end":952,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":66117,"byte_end":66126,"line_start":961,"line_end":961,"column_start":12,"column_end":21},"name":"to_native","qualname":"::externals::function::inner::FromToNativeWasmType::to_native","value":"pub fn to_native(Self) -> Self::Native","parent":{"krate":0,"index":444},"children":[],"decl_id":null,"docs":" Convert self to `Self::Native`.","sig":null,"attributes":[{"value":"/ Convert self to `Self::Native`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":65933,"byte_end":65968,"line_start":955,"line_end":955,"column_start":9,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":65977,"byte_end":65980,"line_start":956,"line_end":956,"column_start":9,"column_end":12}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":65989,"byte_end":66001,"line_start":957,"line_end":957,"column_start":9,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":66010,"byte_end":66013,"line_start":958,"line_end":958,"column_start":9,"column_end":12}},{"value":"/ This method panics if `self` cannot fit in the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":66022,"byte_end":66072,"line_start":959,"line_end":959,"column_start":9,"column_end":59}},{"value":"/ `Self::Native` type.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":66081,"byte_end":66105,"line_start":960,"line_end":960,"column_start":9,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":450},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":68688,"byte_end":68700,"line_start":1049,"line_end":1049,"column_start":15,"column_end":27},"name":"WasmTypeList","qualname":"::externals::function::inner::WasmTypeList","value":"WasmTypeList","parent":null,"children":[{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":459}],"decl_id":null,"docs":" The `WasmTypeList` trait represents a tuple (list) of Wasm\n typed values. It is used to get low-level representation of\n such a tuple.\n","sig":null,"attributes":[{"value":"/ The `WasmTypeList` trait represents a tuple (list) of Wasm","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":68521,"byte_end":68583,"line_start":1046,"line_end":1046,"column_start":5,"column_end":67}},{"value":"/ typed values. It is used to get low-level representation of","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":68588,"byte_end":68651,"line_start":1047,"line_end":1047,"column_start":5,"column_end":68}},{"value":"/ such a tuple.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":68656,"byte_end":68673,"line_start":1048,"line_end":1048,"column_start":5,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":451},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":68849,"byte_end":68856,"line_start":1055,"line_end":1055,"column_start":14,"column_end":21},"name":"CStruct","qualname":"::externals::function::inner::WasmTypeList::CStruct","value":"type CStruct;","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":" The C type (a struct) that can hold/represent all the\n represented values.\n","sig":null,"attributes":[{"value":"/ The C type (a struct) that can hold/represent all the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":68746,"byte_end":68803,"line_start":1053,"line_end":1053,"column_start":9,"column_end":66}},{"value":"/ represented values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":68812,"byte_end":68835,"line_start":1054,"line_end":1054,"column_start":9,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":452},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":69019,"byte_end":69024,"line_start":1060,"line_end":1060,"column_start":14,"column_end":19},"name":"Array","qualname":"::externals::function::inner::WasmTypeList::Array","value":"type Array: AsMut<[i128]>;","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":" The array type that can hold all the represented values.","sig":null,"attributes":[{"value":"/ The array type that can hold all the represented values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":68867,"byte_end":68927,"line_start":1057,"line_end":1057,"column_start":9,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":68936,"byte_end":68939,"line_start":1058,"line_end":1058,"column_start":9,"column_end":12}},{"value":"/ Note that all values are stored in their binary form.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":68948,"byte_end":69005,"line_start":1059,"line_end":1059,"column_start":9,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":69112,"byte_end":69122,"line_start":1063,"line_end":1063,"column_start":12,"column_end":22},"name":"from_array","qualname":"::externals::function::inner::WasmTypeList::from_array","value":"pub fn from_array(Self::Array) -> Self","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":" Constructs `Self` based on an array of values.\n","sig":null,"attributes":[{"value":"/ Constructs `Self` based on an array of values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":69050,"byte_end":69100,"line_start":1062,"line_end":1062,"column_start":9,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":69476,"byte_end":69486,"line_start":1071,"line_end":1071,"column_start":12,"column_end":22},"name":"from_slice","qualname":"::externals::function::inner::WasmTypeList::from_slice","value":"pub fn from_slice(&[i128]) -> Result<Self, TryFromSliceError>","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":" Constructs `Self` based on a slice of values.","sig":null,"attributes":[{"value":"/ Constructs `Self` based on a slice of values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":69161,"byte_end":69210,"line_start":1065,"line_end":1065,"column_start":9,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":69219,"byte_end":69222,"line_start":1066,"line_end":1066,"column_start":9,"column_end":12}},{"value":"/ `from_slice` returns a `Result` because it is possible","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":69231,"byte_end":69289,"line_start":1067,"line_end":1067,"column_start":9,"column_end":67}},{"value":"/ that the slice doesn't have the same size than","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":69298,"byte_end":69348,"line_start":1068,"line_end":1068,"column_start":9,"column_end":59}},{"value":"/ `Self::Array`, in which circumstance an error of kind","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":69357,"byte_end":69414,"line_start":1069,"line_end":1069,"column_start":9,"column_end":66}},{"value":"/ `TryFromSliceError` will be returned.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":69423,"byte_end":69464,"line_start":1070,"line_end":1070,"column_start":9,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":455},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":69650,"byte_end":69660,"line_start":1075,"line_end":1075,"column_start":12,"column_end":22},"name":"into_array","qualname":"::externals::function::inner::WasmTypeList::into_array","value":"pub fn into_array(Self) -> Self::Array","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":" Builds and returns an array of type `Array` from a tuple\n (list) of values.\n","sig":null,"attributes":[{"value":"/ Builds and returns an array of type `Array` from a tuple","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":69548,"byte_end":69608,"line_start":1073,"line_end":1073,"column_start":9,"column_end":69}},{"value":"/ (list) of values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":69617,"byte_end":69638,"line_start":1074,"line_end":1074,"column_start":9,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":69892,"byte_end":69903,"line_start":1080,"line_end":1080,"column_start":12,"column_end":23},"name":"empty_array","qualname":"::externals::function::inner::WasmTypeList::empty_array","value":"pub fn empty_array() -> Self::Array","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":" Allocates and return an empty array of type `Array` that\n will hold a tuple (list) of values, usually to hold the\n returned values of a WebAssembly function call.\n","sig":null,"attributes":[{"value":"/ Allocates and return an empty array of type `Array` that","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":69692,"byte_end":69752,"line_start":1077,"line_end":1077,"column_start":9,"column_end":69}},{"value":"/ will hold a tuple (list) of values, usually to hold the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":69761,"byte_end":69820,"line_start":1078,"line_end":1078,"column_start":9,"column_end":68}},{"value":"/ returned values of a WebAssembly function call.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":69829,"byte_end":69880,"line_start":1079,"line_end":1079,"column_start":9,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":70025,"byte_end":70038,"line_start":1084,"line_end":1084,"column_start":12,"column_end":25},"name":"from_c_struct","qualname":"::externals::function::inner::WasmTypeList::from_c_struct","value":"pub fn from_c_struct(Self::CStruct) -> Self","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":" Builds a tuple (list) of values from a C struct of type\n `CStruct`.\n","sig":null,"attributes":[{"value":"/ Builds a tuple (list) of values from a C struct of type","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":69931,"byte_end":69990,"line_start":1082,"line_end":1082,"column_start":9,"column_end":68}},{"value":"/ `CStruct`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":69999,"byte_end":70013,"line_start":1083,"line_end":1083,"column_start":9,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":70188,"byte_end":70201,"line_start":1088,"line_end":1088,"column_start":12,"column_end":25},"name":"into_c_struct","qualname":"::externals::function::inner::WasmTypeList::into_c_struct","value":"pub fn into_c_struct(Self) -> Self::CStruct","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":" Builds and returns a C struct of type `CStruct` from a\n tuple (list) of values.\n","sig":null,"attributes":[{"value":"/ Builds and returns a C struct of type `CStruct` from a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":70082,"byte_end":70140,"line_start":1086,"line_end":1086,"column_start":9,"column_end":67}},{"value":"/ tuple (list) of values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":70149,"byte_end":70176,"line_start":1087,"line_end":1087,"column_start":9,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":70335,"byte_end":70345,"line_start":1092,"line_end":1092,"column_start":12,"column_end":22},"name":"wasm_types","qualname":"::externals::function::inner::WasmTypeList::wasm_types","value":"pub fn wasm_types() -> &'static [Type]","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":" Get the Wasm types for the tuple (list) of currently\n represented values.\n","sig":null,"attributes":[{"value":"/ Get the Wasm types for the tuple (list) of currently","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":70235,"byte_end":70291,"line_start":1090,"line_end":1090,"column_start":9,"column_end":65}},{"value":"/ represented values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":70300,"byte_end":70323,"line_start":1091,"line_end":1091,"column_start":9,"column_end":32}}]},{"kind":"Trait","id":{"krate":0,"index":460},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":70600,"byte_end":70610,"line_start":1100,"line_end":1100,"column_start":15,"column_end":25},"name":"IntoResult","qualname":"::externals::function::inner::IntoResult","value":"IntoResult<T>","parent":null,"children":[{"krate":0,"index":462},{"krate":0,"index":463}],"decl_id":null,"docs":" The `IntoResult` trait turns a `WasmTypeList` into a\n `Result<WasmTypeList, Self::Error>`.","sig":null,"attributes":[{"value":"/ The `IntoResult` trait turns a `WasmTypeList` into a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":70379,"byte_end":70435,"line_start":1095,"line_end":1095,"column_start":5,"column_end":61}},{"value":"/ `Result<WasmTypeList, Self::Error>`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":70440,"byte_end":70480,"line_start":1096,"line_end":1096,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":70485,"byte_end":70488,"line_start":1097,"line_end":1097,"column_start":5,"column_end":8}},{"value":"/ It is mostly used to turn result values of a Wasm function","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":70493,"byte_end":70555,"line_start":1098,"line_end":1098,"column_start":5,"column_end":67}},{"value":"/ call into a `Result`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":70560,"byte_end":70585,"line_start":1099,"line_end":1099,"column_start":5,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":462},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":70711,"byte_end":70716,"line_start":1105,"line_end":1105,"column_start":14,"column_end":19},"name":"Error","qualname":"::externals::function::inner::IntoResult::Error","value":"type Error: Error + Sync + Send + 'static;","parent":{"krate":0,"index":460},"children":[],"decl_id":null,"docs":" The error type for this trait.\n","sig":null,"attributes":[{"value":"/ The error type for this trait.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":70663,"byte_end":70697,"line_start":1104,"line_end":1104,"column_start":9,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":70808,"byte_end":70819,"line_start":1108,"line_end":1108,"column_start":12,"column_end":23},"name":"into_result","qualname":"::externals::function::inner::IntoResult::into_result","value":"pub fn into_result(Self) -> Result<T, Self::Error>","parent":{"krate":0,"index":460},"children":[],"decl_id":null,"docs":" Transforms `Self` into a `Result`.\n","sig":null,"attributes":[{"value":"/ Transforms `Self` into a `Result`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":70758,"byte_end":70796,"line_start":1107,"line_end":1107,"column_start":9,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":473},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":72826,"byte_end":72838,"line_start":1184,"line_end":1184,"column_start":15,"column_end":27},"name":"HostFunction","qualname":"::externals::function::inner::HostFunction","value":"HostFunction<Args, Rets, Kind, T>","parent":null,"children":[{"krate":0,"index":478}],"decl_id":null,"docs":" The `HostFunction` trait represents the set of functions that\n can be used as host function. To uphold this statement, it is\n necessary for a function to be transformed into a pointer to\n `VMFunctionBody`.\n","sig":null,"attributes":[{"value":"/ The `HostFunction` trait represents the set of functions that","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":72581,"byte_end":72646,"line_start":1180,"line_end":1180,"column_start":5,"column_end":70}},{"value":"/ can be used as host function. To uphold this statement, it is","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":72651,"byte_end":72716,"line_start":1181,"line_end":1181,"column_start":5,"column_end":70}},{"value":"/ necessary for a function to be transformed into a pointer to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":72721,"byte_end":72785,"line_start":1182,"line_end":1182,"column_start":5,"column_end":69}},{"value":"/ `VMFunctionBody`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":72790,"byte_end":72811,"line_start":1183,"line_end":1183,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":73064,"byte_end":73081,"line_start":1193,"line_end":1193,"column_start":12,"column_end":29},"name":"function_body_ptr","qualname":"::externals::function::inner::HostFunction::function_body_ptr","value":"pub fn function_body_ptr(Self) -> *const VMFunctionBody","parent":{"krate":0,"index":473},"children":[],"decl_id":null,"docs":" Get the pointer to the function body.\n","sig":null,"attributes":[{"value":"/ Get the pointer to the function body.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":73011,"byte_end":73052,"line_start":1192,"line_end":1192,"column_start":9,"column_end":50}}]},{"kind":"Trait","id":{"krate":0,"index":479},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":73694,"byte_end":73710,"line_start":1211,"line_end":1211,"column_start":15,"column_end":31},"name":"HostFunctionKind","qualname":"::externals::function::inner::HostFunctionKind","value":"HostFunctionKind","parent":null,"children":[],"decl_id":null,"docs":" Empty trait to specify the kind of `HostFunction`: With or\n without an environment.","sig":null,"attributes":[{"value":"/ Empty trait to specify the kind of `HostFunction`: With or","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":73397,"byte_end":73459,"line_start":1204,"line_end":1204,"column_start":5,"column_end":67}},{"value":"/ without an environment.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":73464,"byte_end":73491,"line_start":1205,"line_end":1205,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":73496,"byte_end":73499,"line_start":1206,"line_end":1206,"column_start":5,"column_end":8}},{"value":"/ This trait is never aimed to be used by a user. It is used by","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":73504,"byte_end":73569,"line_start":1207,"line_end":1207,"column_start":5,"column_end":70}},{"value":"/ the trait system to automatically generate the appropriate","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":73574,"byte_end":73636,"line_start":1208,"line_end":1208,"column_start":5,"column_end":67}},{"value":"/ host functions.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":73641,"byte_end":73660,"line_start":1209,"line_end":1209,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":480},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":73843,"byte_end":73850,"line_start":1215,"line_end":1215,"column_start":16,"column_end":23},"name":"WithEnv","qualname":"::externals::function::inner::WithEnv","value":"","parent":null,"children":[],"decl_id":null,"docs":" An empty struct to help Rust typing to determine\n when a `HostFunction` does have an environment.\n","sig":null,"attributes":[{"value":"/ An empty struct to help Rust typing to determine","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":73719,"byte_end":73771,"line_start":1213,"line_end":1213,"column_start":5,"column_end":57}},{"value":"/ when a `HostFunction` does have an environment.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":73776,"byte_end":73827,"line_start":1214,"line_end":1214,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":483},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":74419,"byte_end":74429,"line_start":1233,"line_end":1233,"column_start":16,"column_end":26},"name":"WithoutEnv","qualname":"::externals::function::inner::WithoutEnv","value":"","parent":null,"children":[],"decl_id":null,"docs":" An empty struct to help Rust typing to determine\n when a `HostFunction` does not have an environment.\n","sig":null,"attributes":[{"value":"/ An empty struct to help Rust typing to determine","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":74291,"byte_end":74343,"line_start":1231,"line_end":1231,"column_start":5,"column_end":57}},{"value":"/ when a `HostFunction` does not have an environment.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":74348,"byte_end":74403,"line_start":1232,"line_end":1232,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1864},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":85884,"byte_end":85886,"line_start":1518,"line_end":1518,"column_start":29,"column_end":31},"name":"S0","qualname":"::externals::function::inner::S0","value":"","parent":null,"children":[],"decl_id":null,"docs":" A structure with a C-compatible representation that can hold a set of Wasm values.\n This type is used by `WasmTypeList::CStruct`.\n","sig":null,"attributes":[{"value":"/ A structure with a C-compatible representation that can hold a set of Wasm values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75826,"byte_end":75912,"line_start":1282,"line_end":1282,"column_start":13,"column_end":99}},{"value":"/ This type is used by `WasmTypeList::CStruct`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75925,"byte_end":75974,"line_start":1283,"line_end":1283,"column_start":13,"column_end":62}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75987,"byte_end":76020,"line_start":1284,"line_end":1284,"column_start":13,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":1908},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":85928,"byte_end":85930,"line_start":1519,"line_end":1519,"column_start":39,"column_end":41},"name":"S1","qualname":"::externals::function::inner::S1","value":"","parent":null,"children":[],"decl_id":null,"docs":" A structure with a C-compatible representation that can hold a set of Wasm values.\n This type is used by `WasmTypeList::CStruct`.\n","sig":null,"attributes":[{"value":"/ A structure with a C-compatible representation that can hold a set of Wasm values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75826,"byte_end":75912,"line_start":1282,"line_end":1282,"column_start":13,"column_end":99}},{"value":"/ This type is used by `WasmTypeList::CStruct`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75925,"byte_end":75974,"line_start":1283,"line_end":1283,"column_start":13,"column_end":62}},{"value":"repr(transparent)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75987,"byte_end":76020,"line_start":1284,"line_end":1284,"column_start":13,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":1963},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":85965,"byte_end":85967,"line_start":1520,"line_end":1520,"column_start":29,"column_end":31},"name":"S2","qualname":"::externals::function::inner::S2","value":"","parent":null,"children":[],"decl_id":null,"docs":" A structure with a C-compatible representation that can hold a set of Wasm values.\n This type is used by `WasmTypeList::CStruct`.\n","sig":null,"attributes":[{"value":"/ A structure with a C-compatible representation that can hold a set of Wasm values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75826,"byte_end":75912,"line_start":1282,"line_end":1282,"column_start":13,"column_end":99}},{"value":"/ This type is used by `WasmTypeList::CStruct`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75925,"byte_end":75974,"line_start":1283,"line_end":1283,"column_start":13,"column_end":62}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75987,"byte_end":76020,"line_start":1284,"line_end":1284,"column_start":13,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":2029},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":86006,"byte_end":86008,"line_start":1521,"line_end":1521,"column_start":29,"column_end":31},"name":"S3","qualname":"::externals::function::inner::S3","value":"","parent":null,"children":[],"decl_id":null,"docs":" A structure with a C-compatible representation that can hold a set of Wasm values.\n This type is used by `WasmTypeList::CStruct`.\n","sig":null,"attributes":[{"value":"/ A structure with a C-compatible representation that can hold a set of Wasm values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75826,"byte_end":75912,"line_start":1282,"line_end":1282,"column_start":13,"column_end":99}},{"value":"/ This type is used by `WasmTypeList::CStruct`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75925,"byte_end":75974,"line_start":1283,"line_end":1283,"column_start":13,"column_end":62}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75987,"byte_end":76020,"line_start":1284,"line_end":1284,"column_start":13,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":2106},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":86051,"byte_end":86053,"line_start":1522,"line_end":1522,"column_start":29,"column_end":31},"name":"S4","qualname":"::externals::function::inner::S4","value":"","parent":null,"children":[],"decl_id":null,"docs":" A structure with a C-compatible representation that can hold a set of Wasm values.\n This type is used by `WasmTypeList::CStruct`.\n","sig":null,"attributes":[{"value":"/ A structure with a C-compatible representation that can hold a set of Wasm values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75826,"byte_end":75912,"line_start":1282,"line_end":1282,"column_start":13,"column_end":99}},{"value":"/ This type is used by `WasmTypeList::CStruct`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75925,"byte_end":75974,"line_start":1283,"line_end":1283,"column_start":13,"column_end":62}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75987,"byte_end":76020,"line_start":1284,"line_end":1284,"column_start":13,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":2194},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":86100,"byte_end":86102,"line_start":1523,"line_end":1523,"column_start":29,"column_end":31},"name":"S5","qualname":"::externals::function::inner::S5","value":"","parent":null,"children":[],"decl_id":null,"docs":" A structure with a C-compatible representation that can hold a set of Wasm values.\n This type is used by `WasmTypeList::CStruct`.\n","sig":null,"attributes":[{"value":"/ A structure with a C-compatible representation that can hold a set of Wasm values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75826,"byte_end":75912,"line_start":1282,"line_end":1282,"column_start":13,"column_end":99}},{"value":"/ This type is used by `WasmTypeList::CStruct`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75925,"byte_end":75974,"line_start":1283,"line_end":1283,"column_start":13,"column_end":62}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75987,"byte_end":76020,"line_start":1284,"line_end":1284,"column_start":13,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":2293},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":86153,"byte_end":86155,"line_start":1524,"line_end":1524,"column_start":29,"column_end":31},"name":"S6","qualname":"::externals::function::inner::S6","value":"","parent":null,"children":[],"decl_id":null,"docs":" A structure with a C-compatible representation that can hold a set of Wasm values.\n This type is used by `WasmTypeList::CStruct`.\n","sig":null,"attributes":[{"value":"/ A structure with a C-compatible representation that can hold a set of Wasm values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75826,"byte_end":75912,"line_start":1282,"line_end":1282,"column_start":13,"column_end":99}},{"value":"/ This type is used by `WasmTypeList::CStruct`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75925,"byte_end":75974,"line_start":1283,"line_end":1283,"column_start":13,"column_end":62}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75987,"byte_end":76020,"line_start":1284,"line_end":1284,"column_start":13,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":2403},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":86210,"byte_end":86212,"line_start":1525,"line_end":1525,"column_start":29,"column_end":31},"name":"S7","qualname":"::externals::function::inner::S7","value":"","parent":null,"children":[],"decl_id":null,"docs":" A structure with a C-compatible representation that can hold a set of Wasm values.\n This type is used by `WasmTypeList::CStruct`.\n","sig":null,"attributes":[{"value":"/ A structure with a C-compatible representation that can hold a set of Wasm values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75826,"byte_end":75912,"line_start":1282,"line_end":1282,"column_start":13,"column_end":99}},{"value":"/ This type is used by `WasmTypeList::CStruct`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75925,"byte_end":75974,"line_start":1283,"line_end":1283,"column_start":13,"column_end":62}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75987,"byte_end":76020,"line_start":1284,"line_end":1284,"column_start":13,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":2524},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":86271,"byte_end":86273,"line_start":1526,"line_end":1526,"column_start":29,"column_end":31},"name":"S8","qualname":"::externals::function::inner::S8","value":"","parent":null,"children":[],"decl_id":null,"docs":" A structure with a C-compatible representation that can hold a set of Wasm values.\n This type is used by `WasmTypeList::CStruct`.\n","sig":null,"attributes":[{"value":"/ A structure with a C-compatible representation that can hold a set of Wasm values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75826,"byte_end":75912,"line_start":1282,"line_end":1282,"column_start":13,"column_end":99}},{"value":"/ This type is used by `WasmTypeList::CStruct`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75925,"byte_end":75974,"line_start":1283,"line_end":1283,"column_start":13,"column_end":62}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75987,"byte_end":76020,"line_start":1284,"line_end":1284,"column_start":13,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":2656},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":86336,"byte_end":86338,"line_start":1527,"line_end":1527,"column_start":29,"column_end":31},"name":"S9","qualname":"::externals::function::inner::S9","value":"","parent":null,"children":[],"decl_id":null,"docs":" A structure with a C-compatible representation that can hold a set of Wasm values.\n This type is used by `WasmTypeList::CStruct`.\n","sig":null,"attributes":[{"value":"/ A structure with a C-compatible representation that can hold a set of Wasm values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75826,"byte_end":75912,"line_start":1282,"line_end":1282,"column_start":13,"column_end":99}},{"value":"/ This type is used by `WasmTypeList::CStruct`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75925,"byte_end":75974,"line_start":1283,"line_end":1283,"column_start":13,"column_end":62}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75987,"byte_end":76020,"line_start":1284,"line_end":1284,"column_start":13,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":2799},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":86405,"byte_end":86408,"line_start":1528,"line_end":1528,"column_start":29,"column_end":32},"name":"S10","qualname":"::externals::function::inner::S10","value":"","parent":null,"children":[],"decl_id":null,"docs":" A structure with a C-compatible representation that can hold a set of Wasm values.\n This type is used by `WasmTypeList::CStruct`.\n","sig":null,"attributes":[{"value":"/ A structure with a C-compatible representation that can hold a set of Wasm values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75826,"byte_end":75912,"line_start":1282,"line_end":1282,"column_start":13,"column_end":99}},{"value":"/ This type is used by `WasmTypeList::CStruct`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75925,"byte_end":75974,"line_start":1283,"line_end":1283,"column_start":13,"column_end":62}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75987,"byte_end":76020,"line_start":1284,"line_end":1284,"column_start":13,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":2953},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":86480,"byte_end":86483,"line_start":1529,"line_end":1529,"column_start":29,"column_end":32},"name":"S11","qualname":"::externals::function::inner::S11","value":"","parent":null,"children":[],"decl_id":null,"docs":" A structure with a C-compatible representation that can hold a set of Wasm values.\n This type is used by `WasmTypeList::CStruct`.\n","sig":null,"attributes":[{"value":"/ A structure with a C-compatible representation that can hold a set of Wasm values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75826,"byte_end":75912,"line_start":1282,"line_end":1282,"column_start":13,"column_end":99}},{"value":"/ This type is used by `WasmTypeList::CStruct`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75925,"byte_end":75974,"line_start":1283,"line_end":1283,"column_start":13,"column_end":62}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75987,"byte_end":76020,"line_start":1284,"line_end":1284,"column_start":13,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":3118},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":86560,"byte_end":86563,"line_start":1530,"line_end":1530,"column_start":29,"column_end":32},"name":"S12","qualname":"::externals::function::inner::S12","value":"","parent":null,"children":[],"decl_id":null,"docs":" A structure with a C-compatible representation that can hold a set of Wasm values.\n This type is used by `WasmTypeList::CStruct`.\n","sig":null,"attributes":[{"value":"/ A structure with a C-compatible representation that can hold a set of Wasm values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75826,"byte_end":75912,"line_start":1282,"line_end":1282,"column_start":13,"column_end":99}},{"value":"/ This type is used by `WasmTypeList::CStruct`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75925,"byte_end":75974,"line_start":1283,"line_end":1283,"column_start":13,"column_end":62}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75987,"byte_end":76020,"line_start":1284,"line_end":1284,"column_start":13,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":3294},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":86645,"byte_end":86648,"line_start":1531,"line_end":1531,"column_start":29,"column_end":32},"name":"S13","qualname":"::externals::function::inner::S13","value":"","parent":null,"children":[],"decl_id":null,"docs":" A structure with a C-compatible representation that can hold a set of Wasm values.\n This type is used by `WasmTypeList::CStruct`.\n","sig":null,"attributes":[{"value":"/ A structure with a C-compatible representation that can hold a set of Wasm values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75826,"byte_end":75912,"line_start":1282,"line_end":1282,"column_start":13,"column_end":99}},{"value":"/ This type is used by `WasmTypeList::CStruct`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75925,"byte_end":75974,"line_start":1283,"line_end":1283,"column_start":13,"column_end":62}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75987,"byte_end":76020,"line_start":1284,"line_end":1284,"column_start":13,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":3481},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":86735,"byte_end":86738,"line_start":1532,"line_end":1532,"column_start":29,"column_end":32},"name":"S14","qualname":"::externals::function::inner::S14","value":"","parent":null,"children":[],"decl_id":null,"docs":" A structure with a C-compatible representation that can hold a set of Wasm values.\n This type is used by `WasmTypeList::CStruct`.\n","sig":null,"attributes":[{"value":"/ A structure with a C-compatible representation that can hold a set of Wasm values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75826,"byte_end":75912,"line_start":1282,"line_end":1282,"column_start":13,"column_end":99}},{"value":"/ This type is used by `WasmTypeList::CStruct`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75925,"byte_end":75974,"line_start":1283,"line_end":1283,"column_start":13,"column_end":62}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75987,"byte_end":76020,"line_start":1284,"line_end":1284,"column_start":13,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":3679},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":86830,"byte_end":86833,"line_start":1533,"line_end":1533,"column_start":29,"column_end":32},"name":"S15","qualname":"::externals::function::inner::S15","value":"","parent":null,"children":[],"decl_id":null,"docs":" A structure with a C-compatible representation that can hold a set of Wasm values.\n This type is used by `WasmTypeList::CStruct`.\n","sig":null,"attributes":[{"value":"/ A structure with a C-compatible representation that can hold a set of Wasm values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75826,"byte_end":75912,"line_start":1282,"line_end":1282,"column_start":13,"column_end":99}},{"value":"/ This type is used by `WasmTypeList::CStruct`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75925,"byte_end":75974,"line_start":1283,"line_end":1283,"column_start":13,"column_end":62}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75987,"byte_end":76020,"line_start":1284,"line_end":1284,"column_start":13,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":3888},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":86930,"byte_end":86933,"line_start":1534,"line_end":1534,"column_start":29,"column_end":32},"name":"S16","qualname":"::externals::function::inner::S16","value":"","parent":null,"children":[],"decl_id":null,"docs":" A structure with a C-compatible representation that can hold a set of Wasm values.\n This type is used by `WasmTypeList::CStruct`.\n","sig":null,"attributes":[{"value":"/ A structure with a C-compatible representation that can hold a set of Wasm values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75826,"byte_end":75912,"line_start":1282,"line_end":1282,"column_start":13,"column_end":99}},{"value":"/ This type is used by `WasmTypeList::CStruct`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75925,"byte_end":75974,"line_start":1283,"line_end":1283,"column_start":13,"column_end":62}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75987,"byte_end":76020,"line_start":1284,"line_end":1284,"column_start":13,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":4108},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":87035,"byte_end":87038,"line_start":1535,"line_end":1535,"column_start":29,"column_end":32},"name":"S17","qualname":"::externals::function::inner::S17","value":"","parent":null,"children":[],"decl_id":null,"docs":" A structure with a C-compatible representation that can hold a set of Wasm values.\n This type is used by `WasmTypeList::CStruct`.\n","sig":null,"attributes":[{"value":"/ A structure with a C-compatible representation that can hold a set of Wasm values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75826,"byte_end":75912,"line_start":1282,"line_end":1282,"column_start":13,"column_end":99}},{"value":"/ This type is used by `WasmTypeList::CStruct`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75925,"byte_end":75974,"line_start":1283,"line_end":1283,"column_start":13,"column_end":62}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75987,"byte_end":76020,"line_start":1284,"line_end":1284,"column_start":13,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":4339},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":87145,"byte_end":87148,"line_start":1536,"line_end":1536,"column_start":29,"column_end":32},"name":"S18","qualname":"::externals::function::inner::S18","value":"","parent":null,"children":[],"decl_id":null,"docs":" A structure with a C-compatible representation that can hold a set of Wasm values.\n This type is used by `WasmTypeList::CStruct`.\n","sig":null,"attributes":[{"value":"/ A structure with a C-compatible representation that can hold a set of Wasm values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75826,"byte_end":75912,"line_start":1282,"line_end":1282,"column_start":13,"column_end":99}},{"value":"/ This type is used by `WasmTypeList::CStruct`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75925,"byte_end":75974,"line_start":1283,"line_end":1283,"column_start":13,"column_end":62}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75987,"byte_end":76020,"line_start":1284,"line_end":1284,"column_start":13,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":4581},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":87260,"byte_end":87263,"line_start":1537,"line_end":1537,"column_start":29,"column_end":32},"name":"S19","qualname":"::externals::function::inner::S19","value":"","parent":null,"children":[],"decl_id":null,"docs":" A structure with a C-compatible representation that can hold a set of Wasm values.\n This type is used by `WasmTypeList::CStruct`.\n","sig":null,"attributes":[{"value":"/ A structure with a C-compatible representation that can hold a set of Wasm values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75826,"byte_end":75912,"line_start":1282,"line_end":1282,"column_start":13,"column_end":99}},{"value":"/ This type is used by `WasmTypeList::CStruct`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75925,"byte_end":75974,"line_start":1283,"line_end":1283,"column_start":13,"column_end":62}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75987,"byte_end":76020,"line_start":1284,"line_end":1284,"column_start":13,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":4834},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":87380,"byte_end":87383,"line_start":1538,"line_end":1538,"column_start":29,"column_end":32},"name":"S20","qualname":"::externals::function::inner::S20","value":"","parent":null,"children":[],"decl_id":null,"docs":" A structure with a C-compatible representation that can hold a set of Wasm values.\n This type is used by `WasmTypeList::CStruct`.\n","sig":null,"attributes":[{"value":"/ A structure with a C-compatible representation that can hold a set of Wasm values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75826,"byte_end":75912,"line_start":1282,"line_end":1282,"column_start":13,"column_end":99}},{"value":"/ This type is used by `WasmTypeList::CStruct`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75925,"byte_end":75974,"line_start":1283,"line_end":1283,"column_start":13,"column_end":62}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75987,"byte_end":76020,"line_start":1284,"line_end":1284,"column_start":13,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":5098},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":87505,"byte_end":87508,"line_start":1539,"line_end":1539,"column_start":29,"column_end":32},"name":"S21","qualname":"::externals::function::inner::S21","value":"","parent":null,"children":[],"decl_id":null,"docs":" A structure with a C-compatible representation that can hold a set of Wasm values.\n This type is used by `WasmTypeList::CStruct`.\n","sig":null,"attributes":[{"value":"/ A structure with a C-compatible representation that can hold a set of Wasm values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75826,"byte_end":75912,"line_start":1282,"line_end":1282,"column_start":13,"column_end":99}},{"value":"/ This type is used by `WasmTypeList::CStruct`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75925,"byte_end":75974,"line_start":1283,"line_end":1283,"column_start":13,"column_end":62}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75987,"byte_end":76020,"line_start":1284,"line_end":1284,"column_start":13,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":5373},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":87635,"byte_end":87638,"line_start":1540,"line_end":1540,"column_start":29,"column_end":32},"name":"S22","qualname":"::externals::function::inner::S22","value":"","parent":null,"children":[],"decl_id":null,"docs":" A structure with a C-compatible representation that can hold a set of Wasm values.\n This type is used by `WasmTypeList::CStruct`.\n","sig":null,"attributes":[{"value":"/ A structure with a C-compatible representation that can hold a set of Wasm values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75826,"byte_end":75912,"line_start":1282,"line_end":1282,"column_start":13,"column_end":99}},{"value":"/ This type is used by `WasmTypeList::CStruct`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75925,"byte_end":75974,"line_start":1283,"line_end":1283,"column_start":13,"column_end":62}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75987,"byte_end":76020,"line_start":1284,"line_end":1284,"column_start":13,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":5659},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":87770,"byte_end":87773,"line_start":1541,"line_end":1541,"column_start":29,"column_end":32},"name":"S23","qualname":"::externals::function::inner::S23","value":"","parent":null,"children":[],"decl_id":null,"docs":" A structure with a C-compatible representation that can hold a set of Wasm values.\n This type is used by `WasmTypeList::CStruct`.\n","sig":null,"attributes":[{"value":"/ A structure with a C-compatible representation that can hold a set of Wasm values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75826,"byte_end":75912,"line_start":1282,"line_end":1282,"column_start":13,"column_end":99}},{"value":"/ This type is used by `WasmTypeList::CStruct`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75925,"byte_end":75974,"line_start":1283,"line_end":1283,"column_start":13,"column_end":62}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75987,"byte_end":76020,"line_start":1284,"line_end":1284,"column_start":13,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":5956},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":87910,"byte_end":87913,"line_start":1542,"line_end":1542,"column_start":29,"column_end":32},"name":"S24","qualname":"::externals::function::inner::S24","value":"","parent":null,"children":[],"decl_id":null,"docs":" A structure with a C-compatible representation that can hold a set of Wasm values.\n This type is used by `WasmTypeList::CStruct`.\n","sig":null,"attributes":[{"value":"/ A structure with a C-compatible representation that can hold a set of Wasm values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75826,"byte_end":75912,"line_start":1282,"line_end":1282,"column_start":13,"column_end":99}},{"value":"/ This type is used by `WasmTypeList::CStruct`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75925,"byte_end":75974,"line_start":1283,"line_end":1283,"column_start":13,"column_end":62}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75987,"byte_end":76020,"line_start":1284,"line_end":1284,"column_start":13,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":6264},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":88055,"byte_end":88058,"line_start":1543,"line_end":1543,"column_start":29,"column_end":32},"name":"S25","qualname":"::externals::function::inner::S25","value":"","parent":null,"children":[],"decl_id":null,"docs":" A structure with a C-compatible representation that can hold a set of Wasm values.\n This type is used by `WasmTypeList::CStruct`.\n","sig":null,"attributes":[{"value":"/ A structure with a C-compatible representation that can hold a set of Wasm values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75826,"byte_end":75912,"line_start":1282,"line_end":1282,"column_start":13,"column_end":99}},{"value":"/ This type is used by `WasmTypeList::CStruct`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75925,"byte_end":75974,"line_start":1283,"line_end":1283,"column_start":13,"column_end":62}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75987,"byte_end":76020,"line_start":1284,"line_end":1284,"column_start":13,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":6583},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":88205,"byte_end":88208,"line_start":1544,"line_end":1544,"column_start":29,"column_end":32},"name":"S26","qualname":"::externals::function::inner::S26","value":"","parent":null,"children":[],"decl_id":null,"docs":" A structure with a C-compatible representation that can hold a set of Wasm values.\n This type is used by `WasmTypeList::CStruct`.\n","sig":null,"attributes":[{"value":"/ A structure with a C-compatible representation that can hold a set of Wasm values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75826,"byte_end":75912,"line_start":1282,"line_end":1282,"column_start":13,"column_end":99}},{"value":"/ This type is used by `WasmTypeList::CStruct`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75925,"byte_end":75974,"line_start":1283,"line_end":1283,"column_start":13,"column_end":62}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":75987,"byte_end":76020,"line_start":1284,"line_end":1284,"column_start":13,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":6913},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":94434,"byte_end":94440,"line_start":20,"line_end":20,"column_start":12,"column_end":18},"name":"Global","qualname":"::externals::global::Global","value":"Global {  }","parent":null,"children":[{"krate":0,"index":6914},{"krate":0,"index":6915}],"decl_id":null,"docs":" A WebAssembly `global` instance.","sig":null,"attributes":[{"value":"/ A WebAssembly `global` instance.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":94116,"byte_end":94152,"line_start":13,"line_end":13,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":94153,"byte_end":94156,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ A global instance is the runtime representation of a global variable.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":94157,"byte_end":94230,"line_start":15,"line_end":15,"column_start":1,"column_end":74}},{"value":"/ It consists of an individual value and a flag indicating whether it is mutable.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":94231,"byte_end":94314,"line_start":16,"line_end":16,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":94315,"byte_end":94318,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Spec: <https://webassembly.github.io/spec/core/exec/runtime.html#global-instances>","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":94319,"byte_end":94405,"line_start":18,"line_end":18,"column_start":1,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":94911,"byte_end":94914,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<Global>::new","value":"pub fn new(&Store, Val) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Global` with the initial value [`Val`].","sig":null,"attributes":[{"value":"/ Create a new `Global` with the initial value [`Val`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":94514,"byte_end":94571,"line_start":26,"line_end":26,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":94576,"byte_end":94579,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":94584,"byte_end":94597,"line_start":28,"line_end":28,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":94602,"byte_end":94605,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":94610,"byte_end":94617,"line_start":30,"line_end":30,"column_start":5,"column_end":12}},{"value":"/ # use wasmer::{Global, Mutability, Store, Value};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":94622,"byte_end":94675,"line_start":31,"line_end":31,"column_start":5,"column_end":58}},{"value":"/ # let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":94680,"byte_end":94715,"line_start":32,"line_end":32,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":94720,"byte_end":94725,"line_start":33,"line_end":33,"column_start":5,"column_end":10}},{"value":"/ let g = Global::new(&store, Value::I32(1));","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":94730,"byte_end":94777,"line_start":34,"line_end":34,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":94782,"byte_end":94785,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(g.get(), Value::I32(1));","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":94790,"byte_end":94829,"line_start":36,"line_end":36,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(g.ty().mutability, Mutability::Const);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":94834,"byte_end":94887,"line_start":37,"line_end":37,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":94892,"byte_end":94899,"line_start":38,"line_end":38,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":95429,"byte_end":95436,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"new_mut","qualname":"<Global>::new_mut","value":"pub fn new_mut(&Store, Val) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a mutable `Global` with the initial value [`Val`].","sig":null,"attributes":[{"value":"/ Create a mutable `Global` with the initial value [`Val`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":95026,"byte_end":95087,"line_start":43,"line_end":43,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":95092,"byte_end":95095,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":95100,"byte_end":95113,"line_start":45,"line_end":45,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":95118,"byte_end":95121,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":95126,"byte_end":95133,"line_start":47,"line_end":47,"column_start":5,"column_end":12}},{"value":"/ # use wasmer::{Global, Mutability, Store, Value};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":95138,"byte_end":95191,"line_start":48,"line_end":48,"column_start":5,"column_end":58}},{"value":"/ # let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":95196,"byte_end":95231,"line_start":49,"line_end":49,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":95236,"byte_end":95241,"line_start":50,"line_end":50,"column_start":5,"column_end":10}},{"value":"/ let g = Global::new_mut(&store, Value::I32(1));","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":95246,"byte_end":95297,"line_start":51,"line_end":51,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":95302,"byte_end":95305,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(g.get(), Value::I32(1));","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":95310,"byte_end":95349,"line_start":53,"line_end":53,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(g.ty().mutability, Mutability::Var);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":95354,"byte_end":95405,"line_start":54,"line_end":54,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":95410,"byte_end":95417,"line_start":55,"line_end":55,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":96799,"byte_end":96801,"line_start":95,"line_end":95,"column_start":12,"column_end":14},"name":"ty","qualname":"<Global>::ty","value":"pub fn ty(&Self) -> &GlobalType","parent":null,"children":[],"decl_id":null,"docs":" Returns the [`GlobalType`] of the `Global`.","sig":null,"attributes":[{"value":"/ Returns the [`GlobalType`] of the `Global`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":96290,"byte_end":96337,"line_start":81,"line_end":81,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":96342,"byte_end":96345,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":96350,"byte_end":96363,"line_start":83,"line_end":83,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":96368,"byte_end":96371,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":96376,"byte_end":96383,"line_start":85,"line_end":85,"column_start":5,"column_end":12}},{"value":"/ # use wasmer::{Global, Mutability, Store, Type, Value, GlobalType};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":96388,"byte_end":96459,"line_start":86,"line_end":86,"column_start":5,"column_end":76}},{"value":"/ # let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":96464,"byte_end":96499,"line_start":87,"line_end":87,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":96504,"byte_end":96509,"line_start":88,"line_end":88,"column_start":5,"column_end":10}},{"value":"/ let c = Global::new(&store, Value::I32(1));","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":96514,"byte_end":96561,"line_start":89,"line_end":89,"column_start":5,"column_end":52}},{"value":"/ let v = Global::new_mut(&store, Value::I64(1));","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":96566,"byte_end":96617,"line_start":90,"line_end":90,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":96622,"byte_end":96625,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(c.ty(), &GlobalType::new(Type::I32, Mutability::Const));","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":96630,"byte_end":96701,"line_start":92,"line_end":92,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(v.ty(), &GlobalType::new(Type::I64, Mutability::Var));","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":96706,"byte_end":96775,"line_start":93,"line_end":93,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":96780,"byte_end":96787,"line_start":94,"line_end":94,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":97180,"byte_end":97185,"line_start":111,"line_end":111,"column_start":12,"column_end":17},"name":"store","qualname":"<Global>::store","value":"pub fn store(&Self) -> &Store","parent":null,"children":[],"decl_id":null,"docs":" Returns the [`Store`] where the `Global` belongs.","sig":null,"attributes":[{"value":"/ Returns the [`Store`] where the `Global` belongs.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":96862,"byte_end":96915,"line_start":99,"line_end":99,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":96920,"byte_end":96923,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":96928,"byte_end":96941,"line_start":101,"line_end":101,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":96946,"byte_end":96949,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":96954,"byte_end":96961,"line_start":103,"line_end":103,"column_start":5,"column_end":12}},{"value":"/ # use wasmer::{Global, Store, Value};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":96966,"byte_end":97007,"line_start":104,"line_end":104,"column_start":5,"column_end":46}},{"value":"/ # let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":97012,"byte_end":97047,"line_start":105,"line_end":105,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":97052,"byte_end":97057,"line_start":106,"line_end":106,"column_start":5,"column_end":10}},{"value":"/ let g = Global::new(&store, Value::I32(1));","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":97062,"byte_end":97109,"line_start":107,"line_end":107,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":97114,"byte_end":97117,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(g.store(), &store);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":97122,"byte_end":97156,"line_start":109,"line_end":109,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":97161,"byte_end":97168,"line_start":110,"line_end":110,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":97566,"byte_end":97569,"line_start":127,"line_end":127,"column_start":12,"column_end":15},"name":"get","qualname":"<Global>::get","value":"pub fn get(&Self) -> Val","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the current value [`Val`] that the Global has.","sig":null,"attributes":[{"value":"/ Retrieves the current value [`Val`] that the Global has.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":97236,"byte_end":97296,"line_start":115,"line_end":115,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":97301,"byte_end":97304,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":97309,"byte_end":97322,"line_start":117,"line_end":117,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":97327,"byte_end":97330,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":97335,"byte_end":97342,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"/ # use wasmer::{Global, Store, Value};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":97347,"byte_end":97388,"line_start":120,"line_end":120,"column_start":5,"column_end":46}},{"value":"/ # let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":97393,"byte_end":97428,"line_start":121,"line_end":121,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":97433,"byte_end":97438,"line_start":122,"line_end":122,"column_start":5,"column_end":10}},{"value":"/ let g = Global::new(&store, Value::I32(1));","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":97443,"byte_end":97490,"line_start":123,"line_end":123,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":97495,"byte_end":97498,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(g.get(), Value::I32(1));","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":97503,"byte_end":97542,"line_start":125,"line_end":125,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":97547,"byte_end":97554,"line_start":126,"line_end":126,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":569},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":98752,"byte_end":98755,"line_start":172,"line_end":172,"column_start":12,"column_end":15},"name":"set","qualname":"<Global>::set","value":"pub fn set(&Self, Val) -> Result<(), RuntimeError>","parent":null,"children":[],"decl_id":null,"docs":" Sets a custom value [`Val`] to the runtime Global.","sig":null,"attributes":[{"value":"/ Sets a custom value [`Val`] to the runtime Global.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":97623,"byte_end":97677,"line_start":131,"line_end":131,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":97682,"byte_end":97685,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":97690,"byte_end":97703,"line_start":133,"line_end":133,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":97708,"byte_end":97711,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":97716,"byte_end":97723,"line_start":135,"line_end":135,"column_start":5,"column_end":12}},{"value":"/ # use wasmer::{Global, Store, Value};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":97728,"byte_end":97769,"line_start":136,"line_end":136,"column_start":5,"column_end":46}},{"value":"/ # let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":97774,"byte_end":97809,"line_start":137,"line_end":137,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":97814,"byte_end":97819,"line_start":138,"line_end":138,"column_start":5,"column_end":10}},{"value":"/ let g = Global::new_mut(&store, Value::I32(1));","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":97824,"byte_end":97875,"line_start":139,"line_end":139,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":97880,"byte_end":97883,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(g.get(), Value::I32(1));","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":97888,"byte_end":97927,"line_start":141,"line_end":141,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":97932,"byte_end":97935,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ g.set(Value::I32(2));","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":97940,"byte_end":97965,"line_start":143,"line_end":143,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":97970,"byte_end":97973,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(g.get(), Value::I32(2));","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":97978,"byte_end":98017,"line_start":145,"line_end":145,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":98022,"byte_end":98029,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":98034,"byte_end":98037,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":98042,"byte_end":98054,"line_start":148,"line_end":148,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":98059,"byte_end":98062,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ Trying to mutate a immutable global will raise an error:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":98067,"byte_end":98127,"line_start":150,"line_end":150,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":98132,"byte_end":98135,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":98140,"byte_end":98159,"line_start":152,"line_end":152,"column_start":5,"column_end":24}},{"value":"/ # use wasmer::{Global, Store, Value};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":98164,"byte_end":98205,"line_start":153,"line_end":153,"column_start":5,"column_end":46}},{"value":"/ # let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":98210,"byte_end":98245,"line_start":154,"line_end":154,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":98250,"byte_end":98255,"line_start":155,"line_end":155,"column_start":5,"column_end":10}},{"value":"/ let g = Global::new(&store, Value::I32(1));","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":98260,"byte_end":98307,"line_start":156,"line_end":156,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":98312,"byte_end":98315,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ g.set(Value::I32(2)).unwrap();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":98320,"byte_end":98354,"line_start":158,"line_end":158,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":98359,"byte_end":98366,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":98371,"byte_end":98374,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Trying to set a value of a incompatible type will raise an error:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":98379,"byte_end":98448,"line_start":161,"line_end":161,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":98453,"byte_end":98456,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":98461,"byte_end":98480,"line_start":163,"line_end":163,"column_start":5,"column_end":24}},{"value":"/ # use wasmer::{Global, Store, Value};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":98485,"byte_end":98526,"line_start":164,"line_end":164,"column_start":5,"column_end":46}},{"value":"/ # let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":98531,"byte_end":98566,"line_start":165,"line_end":165,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":98571,"byte_end":98576,"line_start":166,"line_end":166,"column_start":5,"column_end":10}},{"value":"/ let g = Global::new(&store, Value::I32(1));","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":98581,"byte_end":98628,"line_start":167,"line_end":167,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":98633,"byte_end":98636,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ // This results in an error: `RuntimeError`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":98641,"byte_end":98689,"line_start":169,"line_end":169,"column_start":5,"column_end":53}},{"value":"/ g.set(Value::I64(2)).unwrap();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":98694,"byte_end":98728,"line_start":170,"line_end":170,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":98733,"byte_end":98740,"line_start":171,"line_end":171,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":99648,"byte_end":99652,"line_start":203,"line_end":203,"column_start":12,"column_end":16},"name":"same","qualname":"<Global>::same","value":"pub fn same(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether or not these two globals refer to the same data.","sig":null,"attributes":[{"value":"/ Returns whether or not these two globals refer to the same data.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":99325,"byte_end":99393,"line_start":191,"line_end":191,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":99398,"byte_end":99401,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":99406,"byte_end":99419,"line_start":193,"line_end":193,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":99424,"byte_end":99427,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":99432,"byte_end":99439,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ # use wasmer::{Global, Store, Value};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":99444,"byte_end":99485,"line_start":196,"line_end":196,"column_start":5,"column_end":46}},{"value":"/ # let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":99490,"byte_end":99525,"line_start":197,"line_end":197,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":99530,"byte_end":99535,"line_start":198,"line_end":198,"column_start":5,"column_end":10}},{"value":"/ let g = Global::new(&store, Value::I32(1));","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":99540,"byte_end":99587,"line_start":199,"line_end":199,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":99592,"byte_end":99595,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ assert!(g.same(&g));","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":99600,"byte_end":99624,"line_start":201,"line_end":201,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":99629,"byte_end":99636,"line_start":202,"line_end":202,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6918},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":101540,"byte_end":101546,"line_start":27,"line_end":27,"column_start":12,"column_end":18},"name":"Memory","qualname":"::externals::memory::Memory","value":"Memory {  }","parent":null,"children":[{"krate":0,"index":6919},{"krate":0,"index":6920}],"decl_id":null,"docs":" A WebAssembly `memory` instance.","sig":null,"attributes":[{"value":"/ A WebAssembly `memory` instance.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":100849,"byte_end":100885,"line_start":12,"line_end":12,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":100886,"byte_end":100889,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ A memory instance is the runtime representation of a linear memory.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":100890,"byte_end":100961,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ It consists of a vector of bytes and an optional maximum size.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":100962,"byte_end":101028,"line_start":15,"line_end":15,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":101029,"byte_end":101032,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The length of the vector always is a multiple of the WebAssembly","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":101033,"byte_end":101101,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/ page size, which is defined to be the constant 65536 – abbreviated 64Ki.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":101102,"byte_end":101180,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ Like in a memory type, the maximum size in a memory instance is","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":101181,"byte_end":101248,"line_start":19,"line_end":19,"column_start":1,"column_end":68}},{"value":"/ given in units of this page size.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":101249,"byte_end":101286,"line_start":20,"line_end":20,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":101287,"byte_end":101290,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ A memory created by the host or in WebAssembly code will be accessible and","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":101291,"byte_end":101369,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ mutable from both host and WebAssembly.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":101370,"byte_end":101413,"line_start":23,"line_end":23,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":101414,"byte_end":101417,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Spec: <https://webassembly.github.io/spec/core/exec/runtime.html#memory-instances>","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":101418,"byte_end":101504,"line_start":25,"line_end":25,"column_start":1,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":102090,"byte_end":102093,"line_start":46,"line_end":46,"column_start":12,"column_end":15},"name":"new","qualname":"<Memory>::new","value":"pub fn new(&Store, MemoryType) -> Result<Self, MemoryError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new host `Memory` from the provided [`MemoryType`].","sig":null,"attributes":[{"value":"/ Creates a new host `Memory` from the provided [`MemoryType`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":101624,"byte_end":101689,"line_start":33,"line_end":33,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":101694,"byte_end":101697,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This function will construct the `Memory` using the store","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":101702,"byte_end":101763,"line_start":35,"line_end":35,"column_start":5,"column_end":66}},{"value":"/ [`BaseTunables`][crate::tunables::BaseTunables].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":101768,"byte_end":101820,"line_start":36,"line_end":36,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":101825,"byte_end":101828,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":101833,"byte_end":101846,"line_start":38,"line_end":38,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":101851,"byte_end":101854,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":101859,"byte_end":101866,"line_start":40,"line_end":40,"column_start":5,"column_end":12}},{"value":"/ # use wasmer::{Memory, MemoryType, Pages, Store, Type, Value};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":101871,"byte_end":101937,"line_start":41,"line_end":41,"column_start":5,"column_end":71}},{"value":"/ # let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":101942,"byte_end":101977,"line_start":42,"line_end":42,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":101982,"byte_end":101987,"line_start":43,"line_end":43,"column_start":5,"column_end":10}},{"value":"/ let m = Memory::new(&store, MemoryType::new(1, None, false)).unwrap();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":101992,"byte_end":102066,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":102071,"byte_end":102078,"line_start":45,"line_end":45,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":102783,"byte_end":102785,"line_start":70,"line_end":70,"column_start":12,"column_end":14},"name":"ty","qualname":"<Memory>::ty","value":"pub fn ty(&Self) -> &MemoryType","parent":null,"children":[],"decl_id":null,"docs":" Returns the [`MemoryType`] of the `Memory`.","sig":null,"attributes":[{"value":"/ Returns the [`MemoryType`] of the `Memory`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":102404,"byte_end":102451,"line_start":57,"line_end":57,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":102456,"byte_end":102459,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":102464,"byte_end":102477,"line_start":59,"line_end":59,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":102482,"byte_end":102485,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":102490,"byte_end":102497,"line_start":61,"line_end":61,"column_start":5,"column_end":12}},{"value":"/ # use wasmer::{Memory, MemoryType, Pages, Store, Type, Value};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":102502,"byte_end":102568,"line_start":62,"line_end":62,"column_start":5,"column_end":71}},{"value":"/ # let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":102573,"byte_end":102608,"line_start":63,"line_end":63,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":102613,"byte_end":102618,"line_start":64,"line_end":64,"column_start":5,"column_end":10}},{"value":"/ let mt = MemoryType::new(1, None, false);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":102623,"byte_end":102668,"line_start":65,"line_end":65,"column_start":5,"column_end":50}},{"value":"/ let m = Memory::new(&store, mt).unwrap();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":102673,"byte_end":102718,"line_start":66,"line_end":66,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":102723,"byte_end":102726,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(m.ty(), &mt);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":102731,"byte_end":102759,"line_start":68,"line_end":68,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":102764,"byte_end":102771,"line_start":69,"line_end":69,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":103216,"byte_end":103221,"line_start":86,"line_end":86,"column_start":12,"column_end":17},"name":"store","qualname":"<Memory>::store","value":"pub fn store(&Self) -> &Store","parent":null,"children":[],"decl_id":null,"docs":" Returns the [`Store`] where the `Memory` belongs.","sig":null,"attributes":[{"value":"/ Returns the [`Store`] where the `Memory` belongs.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":102846,"byte_end":102899,"line_start":74,"line_end":74,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":102904,"byte_end":102907,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":102912,"byte_end":102925,"line_start":76,"line_end":76,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":102930,"byte_end":102933,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":102938,"byte_end":102945,"line_start":78,"line_end":78,"column_start":5,"column_end":12}},{"value":"/ # use wasmer::{Memory, MemoryType, Pages, Store, Type, Value};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":102950,"byte_end":103016,"line_start":79,"line_end":79,"column_start":5,"column_end":71}},{"value":"/ # let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":103021,"byte_end":103056,"line_start":80,"line_end":80,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":103061,"byte_end":103066,"line_start":81,"line_end":81,"column_start":5,"column_end":10}},{"value":"/ let m = Memory::new(&store, MemoryType::new(1, None, false)).unwrap();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":103071,"byte_end":103145,"line_start":82,"line_end":82,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":103150,"byte_end":103153,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(m.store(), &store);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":103158,"byte_end":103192,"line_start":84,"line_end":84,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":103197,"byte_end":103204,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":637},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":103586,"byte_end":103600,"line_start":97,"line_end":97,"column_start":19,"column_end":33},"name":"data_unchecked","qualname":"<Memory>::data_unchecked","value":"pub unsafe fn data_unchecked(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Retrieve a slice of the memory contents.","sig":null,"attributes":[{"value":"/ Retrieve a slice of the memory contents.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":103272,"byte_end":103316,"line_start":90,"line_end":90,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":103321,"byte_end":103324,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":103329,"byte_end":103341,"line_start":92,"line_end":92,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":103346,"byte_end":103349,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Until the returned slice is dropped, it is undefined behaviour to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":103354,"byte_end":103423,"line_start":94,"line_end":94,"column_start":5,"column_end":74}},{"value":"/ modify the memory contents in any way including by calling a wasm","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":103428,"byte_end":103497,"line_start":95,"line_end":95,"column_start":5,"column_end":74}},{"value":"/ function that writes to the memory or by resizing the memory.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":103502,"byte_end":103567,"line_start":96,"line_end":96,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":638},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":104146,"byte_end":104164,"line_start":111,"line_end":111,"column_start":19,"column_end":37},"name":"data_unchecked_mut","qualname":"<Memory>::data_unchecked_mut","value":"pub unsafe fn data_unchecked_mut(&Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Retrieve a mutable slice of the memory contents.","sig":null,"attributes":[{"value":"/ Retrieve a mutable slice of the memory contents.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":103664,"byte_end":103716,"line_start":101,"line_end":101,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":103721,"byte_end":103724,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":103729,"byte_end":103741,"line_start":103,"line_end":103,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":103746,"byte_end":103749,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ This method provides interior mutability without an UnsafeCell. Until","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":103754,"byte_end":103827,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"/ the returned value is dropped, it is undefined behaviour to read or","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":103832,"byte_end":103903,"line_start":106,"line_end":106,"column_start":5,"column_end":76}},{"value":"/ write to the pointed-to memory in any way except through this slice,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":103908,"byte_end":103980,"line_start":107,"line_end":107,"column_start":5,"column_end":77}},{"value":"/ including by calling a wasm function that reads the memory contents or","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":103985,"byte_end":104059,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/ by resizing this Memory.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":104064,"byte_end":104092,"line_start":109,"line_end":109,"column_start":5,"column_end":33}},{"value":"allow(clippy :: mut_from_ref)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":104097,"byte_end":104127,"line_start":110,"line_end":110,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":104439,"byte_end":104447,"line_start":118,"line_end":118,"column_start":12,"column_end":20},"name":"data_ptr","qualname":"<Memory>::data_ptr","value":"pub fn data_ptr(&Self) -> *mut u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the pointer to the raw bytes of the `Memory`.\n","sig":null,"attributes":[{"value":"/ Returns the pointer to the raw bytes of the `Memory`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":104370,"byte_end":104427,"line_start":117,"line_end":117,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":104655,"byte_end":104664,"line_start":125,"line_end":125,"column_start":12,"column_end":21},"name":"data_size","qualname":"<Memory>::data_size","value":"pub fn data_size(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the size (in bytes) of the `Memory`.\n","sig":null,"attributes":[{"value":"/ Returns the size (in bytes) of the `Memory`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":104595,"byte_end":104643,"line_start":124,"line_end":124,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":105195,"byte_end":105199,"line_start":143,"line_end":143,"column_start":12,"column_end":16},"name":"size","qualname":"<Memory>::size","value":"pub fn size(&Self) -> Pages","parent":null,"children":[],"decl_id":null,"docs":" Returns the size (in [`Pages`]) of the `Memory`.","sig":null,"attributes":[{"value":"/ Returns the size (in [`Pages`]) of the `Memory`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":104825,"byte_end":104877,"line_start":131,"line_end":131,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":104882,"byte_end":104885,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":104890,"byte_end":104903,"line_start":133,"line_end":133,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":104908,"byte_end":104911,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":104916,"byte_end":104923,"line_start":135,"line_end":135,"column_start":5,"column_end":12}},{"value":"/ # use wasmer::{Memory, MemoryType, Pages, Store, Type, Value};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":104928,"byte_end":104994,"line_start":136,"line_end":136,"column_start":5,"column_end":71}},{"value":"/ # let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":104999,"byte_end":105034,"line_start":137,"line_end":137,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":105039,"byte_end":105044,"line_start":138,"line_end":138,"column_start":5,"column_end":10}},{"value":"/ let m = Memory::new(&store, MemoryType::new(1, None, false)).unwrap();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":105049,"byte_end":105123,"line_start":139,"line_end":139,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":105128,"byte_end":105131,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(m.size(), Pages(1));","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":105136,"byte_end":105171,"line_start":141,"line_end":141,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":105176,"byte_end":105183,"line_start":142,"line_end":142,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":106269,"byte_end":106273,"line_start":177,"line_end":177,"column_start":12,"column_end":16},"name":"grow","qualname":"<Memory>::grow","value":"pub fn grow<IntoPages>(&Self, IntoPages) -> Result<Pages, MemoryError> where\nIntoPages: Into<Pages>","parent":null,"children":[],"decl_id":null,"docs":" Grow memory by the specified amount of WebAssembly [`Pages`] and return\n the previous memory size.","sig":null,"attributes":[{"value":"/ Grow memory by the specified amount of WebAssembly [`Pages`] and return","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":105256,"byte_end":105331,"line_start":147,"line_end":147,"column_start":5,"column_end":80}},{"value":"/ the previous memory size.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":105336,"byte_end":105365,"line_start":148,"line_end":148,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":105370,"byte_end":105373,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":105378,"byte_end":105391,"line_start":150,"line_end":150,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":105396,"byte_end":105399,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":105404,"byte_end":105411,"line_start":152,"line_end":152,"column_start":5,"column_end":12}},{"value":"/ # use wasmer::{Memory, MemoryType, Pages, Store, Type, Value, WASM_MAX_PAGES};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":105416,"byte_end":105498,"line_start":153,"line_end":153,"column_start":5,"column_end":87}},{"value":"/ # let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":105503,"byte_end":105538,"line_start":154,"line_end":154,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":105543,"byte_end":105548,"line_start":155,"line_end":155,"column_start":5,"column_end":10}},{"value":"/ let m = Memory::new(&store, MemoryType::new(1, Some(3), false)).unwrap();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":105553,"byte_end":105630,"line_start":156,"line_end":156,"column_start":5,"column_end":82}},{"value":"/ let p = m.grow(2).unwrap();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":105635,"byte_end":105666,"line_start":157,"line_end":157,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":105671,"byte_end":105674,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(p, Pages(1));","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":105679,"byte_end":105707,"line_start":159,"line_end":159,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(m.size(), Pages(3));","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":105712,"byte_end":105747,"line_start":160,"line_end":160,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":105752,"byte_end":105759,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":105764,"byte_end":105767,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":105772,"byte_end":105784,"line_start":163,"line_end":163,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":105789,"byte_end":105792,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ Returns an error if memory can't be grown by the specified amount","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":105797,"byte_end":105866,"line_start":165,"line_end":165,"column_start":5,"column_end":74}},{"value":"/ of pages.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":105871,"byte_end":105884,"line_start":166,"line_end":166,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":105889,"byte_end":105892,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":105897,"byte_end":105916,"line_start":168,"line_end":168,"column_start":5,"column_end":24}},{"value":"/ # use wasmer::{Memory, MemoryType, Pages, Store, Type, Value, WASM_MAX_PAGES};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":105921,"byte_end":106003,"line_start":169,"line_end":169,"column_start":5,"column_end":87}},{"value":"/ # let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":106008,"byte_end":106043,"line_start":170,"line_end":170,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":106048,"byte_end":106053,"line_start":171,"line_end":171,"column_start":5,"column_end":10}},{"value":"/ let m = Memory::new(&store, MemoryType::new(1, Some(1), false)).unwrap();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":106058,"byte_end":106135,"line_start":172,"line_end":172,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":106140,"byte_end":106143,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ // This results in an error: `MemoryError::CouldNotGrow`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":106148,"byte_end":106209,"line_start":174,"line_end":174,"column_start":5,"column_end":66}},{"value":"/ let s = m.grow(1).unwrap();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":106214,"byte_end":106245,"line_start":175,"line_end":175,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":106250,"byte_end":106257,"line_start":176,"line_end":176,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":644},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":107714,"byte_end":107718,"line_start":215,"line_end":215,"column_start":12,"column_end":16},"name":"view","qualname":"<Memory>::view","value":"pub fn view<T: ValueType>(&Self) -> MemoryView<, T>","parent":null,"children":[],"decl_id":null,"docs":" Return a \"view\" of the currently accessible memory. By\n default, the view is unsynchronized, using regular memory\n accesses. You can force a memory view to use atomic accesses\n by calling the [`MemoryView::atomically`] method.","sig":null,"attributes":[{"value":"/ Return a \"view\" of the currently accessible memory. By","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":106438,"byte_end":106496,"line_start":184,"line_end":184,"column_start":5,"column_end":63}},{"value":"/ default, the view is unsynchronized, using regular memory","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":106501,"byte_end":106562,"line_start":185,"line_end":185,"column_start":5,"column_end":66}},{"value":"/ accesses. You can force a memory view to use atomic accesses","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":106567,"byte_end":106631,"line_start":186,"line_end":186,"column_start":5,"column_end":69}},{"value":"/ by calling the [`MemoryView::atomically`] method.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":106636,"byte_end":106689,"line_start":187,"line_end":187,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":106694,"byte_end":106697,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # Notes:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":106702,"byte_end":106714,"line_start":189,"line_end":189,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":106719,"byte_end":106722,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ This method is safe (as in, it won't cause the host to crash or have UB),","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":106727,"byte_end":106804,"line_start":191,"line_end":191,"column_start":5,"column_end":82}},{"value":"/ but it doesn't obey rust's rules involving data races, especially concurrent ones.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":106809,"byte_end":106895,"line_start":192,"line_end":192,"column_start":5,"column_end":91}},{"value":"/ Therefore, if this memory is shared between multiple threads, a single memory","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":106900,"byte_end":106981,"line_start":193,"line_end":193,"column_start":5,"column_end":86}},{"value":"/ location can be mutated concurrently without synchronization.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":106986,"byte_end":107051,"line_start":194,"line_end":194,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":107056,"byte_end":107059,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ # Usage:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":107064,"byte_end":107076,"line_start":196,"line_end":196,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":107081,"byte_end":107084,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":107089,"byte_end":107096,"line_start":198,"line_end":198,"column_start":5,"column_end":12}},{"value":"/ # use wasmer::{Memory, MemoryView};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":107101,"byte_end":107140,"line_start":199,"line_end":199,"column_start":5,"column_end":44}},{"value":"/ # use std::{cell::Cell, sync::atomic::Ordering};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":107145,"byte_end":107197,"line_start":200,"line_end":200,"column_start":5,"column_end":57}},{"value":"/ # fn view_memory(memory: Memory) {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":107202,"byte_end":107240,"line_start":201,"line_end":201,"column_start":5,"column_end":43}},{"value":"/ // Without synchronization.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":107245,"byte_end":107276,"line_start":202,"line_end":202,"column_start":5,"column_end":36}},{"value":"/ let view: MemoryView<u8> = memory.view();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":107281,"byte_end":107326,"line_start":203,"line_end":203,"column_start":5,"column_end":50}},{"value":"/ for byte in view[0x1000 .. 0x1010].iter().map(Cell::get) {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":107331,"byte_end":107393,"line_start":204,"line_end":204,"column_start":5,"column_end":67}},{"value":"/     println!(\"byte: {}\", byte);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":107398,"byte_end":107433,"line_start":205,"line_end":205,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":107438,"byte_end":107443,"line_start":206,"line_end":206,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":107448,"byte_end":107451,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ // With synchronization.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":107456,"byte_end":107484,"line_start":208,"line_end":208,"column_start":5,"column_end":33}},{"value":"/ let atomic_view = view.atomically();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":107489,"byte_end":107529,"line_start":209,"line_end":209,"column_start":5,"column_end":45}},{"value":"/ for byte in atomic_view[0x1000 .. 0x1010].iter().map(|atom| atom.load(Ordering::SeqCst)) {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":107534,"byte_end":107628,"line_start":210,"line_end":210,"column_start":5,"column_end":99}},{"value":"/     println!(\"byte: {}\", byte);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":107633,"byte_end":107668,"line_start":211,"line_end":211,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":107673,"byte_end":107678,"line_start":212,"line_end":212,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":107683,"byte_end":107690,"line_start":213,"line_end":213,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":107695,"byte_end":107702,"line_start":214,"line_end":214,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":108506,"byte_end":108510,"line_start":242,"line_end":242,"column_start":12,"column_end":16},"name":"same","qualname":"<Memory>::same","value":"pub fn same(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether or not these two memories refer to the same data.","sig":null,"attributes":[{"value":"/ Returns whether or not these two memories refer to the same data.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":108143,"byte_end":108212,"line_start":230,"line_end":230,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":108217,"byte_end":108220,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":108225,"byte_end":108238,"line_start":232,"line_end":232,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":108243,"byte_end":108246,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":108251,"byte_end":108258,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"/ # use wasmer::{Memory, MemoryType, Store, Value};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":108263,"byte_end":108316,"line_start":235,"line_end":235,"column_start":5,"column_end":58}},{"value":"/ # let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":108321,"byte_end":108356,"line_start":236,"line_end":236,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":108361,"byte_end":108366,"line_start":237,"line_end":237,"column_start":5,"column_end":10}},{"value":"/ let m = Memory::new(&store, MemoryType::new(1, None, false)).unwrap();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":108371,"byte_end":108445,"line_start":238,"line_end":238,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":108450,"byte_end":108453,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ assert!(m.same(&m));","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":108458,"byte_end":108482,"line_start":240,"line_end":240,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":108487,"byte_end":108494,"line_start":241,"line_end":241,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6925},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\table.rs","byte_start":109827,"byte_end":109832,"line_start":21,"line_end":21,"column_start":12,"column_end":17},"name":"Table","qualname":"::externals::table::Table","value":"Table {  }","parent":null,"children":[{"krate":0,"index":6926},{"krate":0,"index":6927}],"decl_id":null,"docs":" A WebAssembly `table` instance.","sig":null,"attributes":[{"value":"/ A WebAssembly `table` instance.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\table.rs","byte_start":109421,"byte_end":109456,"line_start":11,"line_end":11,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\table.rs","byte_start":109457,"byte_end":109460,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The `Table` struct is an array-like structure representing a WebAssembly Table,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\table.rs","byte_start":109461,"byte_end":109544,"line_start":13,"line_end":13,"column_start":1,"column_end":84}},{"value":"/ which stores function references.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\table.rs","byte_start":109545,"byte_end":109582,"line_start":14,"line_end":14,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\table.rs","byte_start":109583,"byte_end":109586,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ A table created by the host or in WebAssembly code will be accessible and","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\table.rs","byte_start":109587,"byte_end":109664,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ mutable from both host and WebAssembly.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\table.rs","byte_start":109665,"byte_end":109708,"line_start":17,"line_end":17,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\table.rs","byte_start":109709,"byte_end":109712,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Spec: <https://webassembly.github.io/spec/core/exec/runtime.html#table-instances>","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\table.rs","byte_start":109713,"byte_end":109798,"line_start":19,"line_end":19,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\table.rs","byte_start":110390,"byte_end":110393,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<Table>::new","value":"pub fn new(&Store, TableType, Val) -> Result<Self, RuntimeError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Table` with the provided [`TableType`] definition.","sig":null,"attributes":[{"value":"/ Creates a new `Table` with the provided [`TableType`] definition.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\table.rs","byte_start":110100,"byte_end":110169,"line_start":35,"line_end":35,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\table.rs","byte_start":110174,"byte_end":110177,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ All the elements in the table will be set to the `init` value.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\table.rs","byte_start":110182,"byte_end":110248,"line_start":37,"line_end":37,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\table.rs","byte_start":110253,"byte_end":110256,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ This function will construct the `Table` using the store","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\table.rs","byte_start":110261,"byte_end":110321,"line_start":39,"line_end":39,"column_start":5,"column_end":65}},{"value":"/ [`BaseTunables`][crate::tunables::BaseTunables].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\table.rs","byte_start":110326,"byte_end":110378,"line_start":40,"line_end":40,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\table.rs","byte_start":111024,"byte_end":111026,"line_start":61,"line_end":61,"column_start":12,"column_end":14},"name":"ty","qualname":"<Table>::ty","value":"pub fn ty(&Self) -> &TableType","parent":null,"children":[],"decl_id":null,"docs":" Returns the [`TableType`] of the `Table`.\n","sig":null,"attributes":[{"value":"/ Returns the [`TableType`] of the `Table`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\table.rs","byte_start":110967,"byte_end":111012,"line_start":60,"line_end":60,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\table.rs","byte_start":111149,"byte_end":111154,"line_start":66,"line_end":66,"column_start":12,"column_end":17},"name":"store","qualname":"<Table>::store","value":"pub fn store(&Self) -> &Store","parent":null,"children":[],"decl_id":null,"docs":" Returns the [`Store`] where the `Table` belongs.\n","sig":null,"attributes":[{"value":"/ Returns the [`Store`] where the `Table` belongs.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\table.rs","byte_start":111085,"byte_end":111137,"line_start":65,"line_end":65,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\table.rs","byte_start":111279,"byte_end":111282,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"get","qualname":"<Table>::get","value":"pub fn get(&Self, u32) -> Option<Val>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves an element of the table at the provided `index`.\n","sig":null,"attributes":[{"value":"/ Retrieves an element of the table at the provided `index`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\table.rs","byte_start":111205,"byte_end":111267,"line_start":70,"line_end":70,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\table.rs","byte_start":111514,"byte_end":111517,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"set","qualname":"<Table>::set","value":"pub fn set(&Self, u32, Val) -> Result<(), RuntimeError>","parent":null,"children":[],"decl_id":null,"docs":" Sets an element `val` in the Table at the provided `index`.\n","sig":null,"attributes":[{"value":"/ Sets an element `val` in the Table at the provided `index`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\table.rs","byte_start":111439,"byte_end":111502,"line_start":76,"line_end":76,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\table.rs","byte_start":111767,"byte_end":111771,"line_start":83,"line_end":83,"column_start":12,"column_end":16},"name":"size","qualname":"<Table>::size","value":"pub fn size(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the size of the `Table` (in elements)\n","sig":null,"attributes":[{"value":"/ Retrieves the size of the `Table` (in elements)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\table.rs","byte_start":111704,"byte_end":111755,"line_start":82,"line_end":82,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\table.rs","byte_start":112171,"byte_end":112175,"line_start":96,"line_end":96,"column_start":12,"column_end":16},"name":"grow","qualname":"<Table>::grow","value":"pub fn grow(&Self, u32, Val) -> Result<u32, RuntimeError>","parent":null,"children":[],"decl_id":null,"docs":" Grows the size of the `Table` by `delta`, initializating\n the elements with the provided `init` value.","sig":null,"attributes":[{"value":"/ Grows the size of the `Table` by `delta`, initializating","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\table.rs","byte_start":111825,"byte_end":111885,"line_start":87,"line_end":87,"column_start":5,"column_end":65}},{"value":"/ the elements with the provided `init` value.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\table.rs","byte_start":111890,"byte_end":111938,"line_start":88,"line_end":88,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\table.rs","byte_start":111943,"byte_end":111946,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ It returns the previous size of the `Table` in case is able","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\table.rs","byte_start":111951,"byte_end":112014,"line_start":90,"line_end":90,"column_start":5,"column_end":68}},{"value":"/ to grow the Table successfully.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\table.rs","byte_start":112019,"byte_end":112054,"line_start":91,"line_end":91,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\table.rs","byte_start":112059,"byte_end":112062,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\table.rs","byte_start":112067,"byte_end":112079,"line_start":93,"line_end":93,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\table.rs","byte_start":112084,"byte_end":112087,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the `delta` is out of bounds for the table.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\table.rs","byte_start":112092,"byte_end":112159,"line_start":95,"line_end":95,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\table.rs","byte_start":112982,"byte_end":112986,"line_start":119,"line_end":119,"column_start":12,"column_end":16},"name":"copy","qualname":"<Table>::copy","value":"pub fn copy(&Self, u32, &Self, u32, u32) -> Result<(), RuntimeError>","parent":null,"children":[],"decl_id":null,"docs":" Copies the `len` elements of `src_table` starting at `src_index`\n to the destination table `dst_table` at index `dst_index`.","sig":null,"attributes":[{"value":"/ Copies the `len` elements of `src_table` starting at `src_index`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\table.rs","byte_start":112695,"byte_end":112763,"line_start":112,"line_end":112,"column_start":5,"column_end":73}},{"value":"/ to the destination table `dst_table` at index `dst_index`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\table.rs","byte_start":112768,"byte_end":112830,"line_start":113,"line_end":113,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\table.rs","byte_start":112835,"byte_end":112838,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\table.rs","byte_start":112843,"byte_end":112855,"line_start":115,"line_end":115,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\table.rs","byte_start":112860,"byte_end":112863,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the range is out of bounds of either the source or","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\table.rs","byte_start":112868,"byte_end":112942,"line_start":117,"line_end":117,"column_start":5,"column_end":79}},{"value":"/ destination tables.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\table.rs","byte_start":112947,"byte_end":112970,"line_start":118,"line_end":118,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\table.rs","byte_start":113862,"byte_end":113866,"line_start":150,"line_end":150,"column_start":12,"column_end":16},"name":"same","qualname":"<Table>::same","value":"pub fn same(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether or not these two tables refer to the same data.\n","sig":null,"attributes":[{"value":"/ Returns whether or not these two tables refer to the same data.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\table.rs","byte_start":113783,"byte_end":113850,"line_start":149,"line_end":149,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6931},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\mod.rs","byte_start":30405,"byte_end":30413,"line_start":29,"line_end":29,"column_start":5,"column_end":13},"name":"Function","qualname":"::externals::Extern::Function","value":"Extern::Function(Function)","parent":{"krate":0,"index":6930},"children":[],"decl_id":null,"docs":" A external [`Function`].\n","sig":null,"attributes":[{"value":"/ A external [`Function`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\mod.rs","byte_start":30372,"byte_end":30400,"line_start":28,"line_end":28,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6934},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\mod.rs","byte_start":30460,"byte_end":30466,"line_start":31,"line_end":31,"column_start":5,"column_end":11},"name":"Global","qualname":"::externals::Extern::Global","value":"Extern::Global(Global)","parent":{"krate":0,"index":6930},"children":[],"decl_id":null,"docs":" A external [`Global`].\n","sig":null,"attributes":[{"value":"/ A external [`Global`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\mod.rs","byte_start":30429,"byte_end":30455,"line_start":30,"line_end":30,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6937},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\mod.rs","byte_start":30510,"byte_end":30515,"line_start":33,"line_end":33,"column_start":5,"column_end":10},"name":"Table","qualname":"::externals::Extern::Table","value":"Extern::Table(Table)","parent":{"krate":0,"index":6930},"children":[],"decl_id":null,"docs":" A external [`Table`].\n","sig":null,"attributes":[{"value":"/ A external [`Table`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\mod.rs","byte_start":30480,"byte_end":30505,"line_start":32,"line_end":32,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6940},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\mod.rs","byte_start":30559,"byte_end":30565,"line_start":35,"line_end":35,"column_start":5,"column_end":11},"name":"Memory","qualname":"::externals::Extern::Memory","value":"Extern::Memory(Memory)","parent":{"krate":0,"index":6930},"children":[],"decl_id":null,"docs":" A external [`Memory`].\n","sig":null,"attributes":[{"value":"/ A external [`Memory`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\mod.rs","byte_start":30528,"byte_end":30554,"line_start":34,"line_end":34,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":6930},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\mod.rs","byte_start":30359,"byte_end":30365,"line_start":27,"line_end":27,"column_start":10,"column_end":16},"name":"Extern","qualname":"::externals::Extern","value":"pub enum Extern {\n    Function(Function),\n    Global(Global),\n    Table(Table),\n    Memory(Memory),\n}","parent":null,"children":[{"krate":0,"index":6931},{"krate":0,"index":6934},{"krate":0,"index":6937},{"krate":0,"index":6940}],"decl_id":null,"docs":" An `Extern` is the runtime representation of an entity that\n can be imported or exported.","sig":null,"attributes":[{"value":"/ An `Extern` is the runtime representation of an entity that","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\mod.rs","byte_start":30146,"byte_end":30209,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ can be imported or exported.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\mod.rs","byte_start":30210,"byte_end":30242,"line_start":23,"line_end":23,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\mod.rs","byte_start":30243,"byte_end":30246,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Spec: <https://webassembly.github.io/spec/core/exec/runtime.html#external-values>","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\mod.rs","byte_start":30247,"byte_end":30332,"line_start":25,"line_end":25,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":768},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\mod.rs","byte_start":30660,"byte_end":30662,"line_start":40,"line_end":40,"column_start":12,"column_end":14},"name":"ty","qualname":"<Extern>::ty","value":"pub fn ty(&Self) -> ExternType","parent":null,"children":[],"decl_id":null,"docs":" Return the undelying type of the inner `Extern`.\n","sig":null,"attributes":[{"value":"/ Return the undelying type of the inner `Extern`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\mod.rs","byte_start":30596,"byte_end":30648,"line_start":39,"line_end":39,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":769},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\mod.rs","byte_start":31048,"byte_end":31062,"line_start":50,"line_end":50,"column_start":12,"column_end":26},"name":"from_vm_export","qualname":"<Extern>::from_vm_export","value":"pub fn from_vm_export(&Store, Export) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `Extern` from an `wasmer_vm::Export`.\n","sig":null,"attributes":[{"value":"/ Create an `Extern` from an `wasmer_vm::Export`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\mod.rs","byte_start":30985,"byte_end":31036,"line_start":49,"line_end":49,"column_start":5,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":821},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":115068,"byte_end":115081,"line_start":14,"line_end":14,"column_start":11,"column_end":24},"name":"LikeNamespace","qualname":"::import_object::LikeNamespace","value":"LikeNamespace","parent":null,"children":[{"krate":0,"index":822},{"krate":0,"index":823}],"decl_id":null,"docs":" The `LikeNamespace` trait represents objects that act as a namespace for imports.\n For example, an `Instance` or `Namespace` could be\n considered namespaces that could provide imports to an instance.\n","sig":null,"attributes":[{"value":"/ The `LikeNamespace` trait represents objects that act as a namespace for imports.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":114848,"byte_end":114933,"line_start":11,"line_end":11,"column_start":1,"column_end":86}},{"value":"/ For example, an `Instance` or `Namespace` could be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":114934,"byte_end":114988,"line_start":12,"line_end":12,"column_start":1,"column_end":55}},{"value":"/ considered namespaces that could provide imports to an instance.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":114989,"byte_end":115057,"line_start":13,"line_end":13,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":822},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":115123,"byte_end":115143,"line_start":16,"line_end":16,"column_start":8,"column_end":28},"name":"get_namespace_export","qualname":"::import_object::LikeNamespace::get_namespace_export","value":"pub fn get_namespace_export(&Self, &str) -> Option<Export>","parent":{"krate":0,"index":821},"children":[],"decl_id":null,"docs":" Gets an export by name.\n","sig":null,"attributes":[{"value":"/ Gets an export by name.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":115088,"byte_end":115115,"line_start":15,"line_end":15,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":823},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":115232,"byte_end":115253,"line_start":18,"line_end":18,"column_start":8,"column_end":29},"name":"get_namespace_exports","qualname":"::import_object::LikeNamespace::get_namespace_exports","value":"pub fn get_namespace_exports(&Self) -> Vec<(String, Export)>","parent":{"krate":0,"index":821},"children":[],"decl_id":null,"docs":" Gets all exports in the namespace.\n","sig":null,"attributes":[{"value":"/ Gets all exports in the namespace.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":115186,"byte_end":115224,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":6945},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":115849,"byte_end":115861,"line_start":43,"line_end":43,"column_start":12,"column_end":24},"name":"ImportObject","qualname":"::import_object::ImportObject","value":"ImportObject {  }","parent":null,"children":[{"krate":0,"index":6946}],"decl_id":null,"docs":" All of the import data used when instantiating.","sig":null,"attributes":[{"value":"/ All of the import data used when instantiating.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":115290,"byte_end":115341,"line_start":21,"line_end":21,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":115342,"byte_end":115345,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ It's suggested that you use the [`imports!`] macro","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":115346,"byte_end":115400,"line_start":23,"line_end":23,"column_start":1,"column_end":55}},{"value":"/ instead of creating an `ImportObject` by hand.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":115401,"byte_end":115451,"line_start":24,"line_end":24,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":115452,"byte_end":115455,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`imports!`]: macro.imports.html","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":115456,"byte_end":115492,"line_start":26,"line_end":26,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":115493,"byte_end":115496,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Usage:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":115497,"byte_end":115509,"line_start":28,"line_end":28,"column_start":1,"column_end":13}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":115510,"byte_end":115523,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/ use wasmer::{Exports, ImportObject, Function};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":115524,"byte_end":115574,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":115575,"byte_end":115578,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let mut import_object = ImportObject::new();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":115579,"byte_end":115627,"line_start":32,"line_end":32,"column_start":1,"column_end":49}},{"value":"/ let mut env = Exports::new();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":115628,"byte_end":115661,"line_start":33,"line_end":33,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":115662,"byte_end":115665,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ env.insert(\"foo\", Function::new_native(foo));","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":115666,"byte_end":115715,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ import_object.register(\"env\", env);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":115716,"byte_end":115755,"line_start":36,"line_end":36,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":115756,"byte_end":115759,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ fn foo(n: i32) -> i32 {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":115760,"byte_end":115787,"line_start":38,"line_end":38,"column_start":1,"column_end":28}},{"value":"/     n","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":115788,"byte_end":115797,"line_start":39,"line_end":39,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":115798,"byte_end":115803,"line_start":40,"line_end":40,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":115804,"byte_end":115811,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":825},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":115997,"byte_end":116000,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<ImportObject>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ImportObject`.\n","sig":null,"attributes":[{"value":"/ Create a new `ImportObject`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":115953,"byte_end":115985,"line_start":48,"line_end":48,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":116328,"byte_end":116338,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"name":"get_export","qualname":"<ImportObject>::get_export","value":"pub fn get_export(&Self, &str, &str) -> Option<Export>","parent":null,"children":[],"decl_id":null,"docs":" Gets an export given a module and a name","sig":null,"attributes":[{"value":"/ Gets an export given a module and a name","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":116051,"byte_end":116095,"line_start":53,"line_end":53,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":116100,"byte_end":116103,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ # Usage","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":116108,"byte_end":116119,"line_start":55,"line_end":55,"column_start":5,"column_end":16}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":116124,"byte_end":116137,"line_start":56,"line_end":56,"column_start":5,"column_end":18}},{"value":"/ # use wasmer_vm::{ImportObject, Instance, Namespace};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":116142,"byte_end":116199,"line_start":57,"line_end":57,"column_start":5,"column_end":62}},{"value":"/ let mut import_object = ImportObject::new();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":116204,"byte_end":116252,"line_start":58,"line_end":58,"column_start":5,"column_end":53}},{"value":"/ import_object.get_export(\"module\", \"name\");","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":116257,"byte_end":116304,"line_start":59,"line_end":59,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":116309,"byte_end":116316,"line_start":60,"line_end":60,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":827},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":116754,"byte_end":116772,"line_start":72,"line_end":72,"column_start":12,"column_end":30},"name":"contains_namespace","qualname":"<ImportObject>::contains_namespace","value":"pub fn contains_namespace(&Self, &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the ImportObject contains namespace with the provided name.\n","sig":null,"attributes":[{"value":"/ Returns true if the ImportObject contains namespace with the provided name.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":116663,"byte_end":116742,"line_start":71,"line_end":71,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":828},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":117261,"byte_end":117269,"line_start":87,"line_end":87,"column_start":12,"column_end":20},"name":"register","qualname":"<ImportObject>::register","value":"pub fn register<S, N>(&mut Self, S, N) -> Option<Box<dyn LikeNamespace>> where\nS: Into<String>, N: LikeNamespace + 'static","parent":null,"children":[],"decl_id":null,"docs":" Register anything that implements `LikeNamespace` as a namespace.","sig":null,"attributes":[{"value":"/ Register anything that implements `LikeNamespace` as a namespace.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":116874,"byte_end":116943,"line_start":76,"line_end":76,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":116948,"byte_end":116951,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Usage:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":116956,"byte_end":116968,"line_start":78,"line_end":78,"column_start":5,"column_end":17}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":116973,"byte_end":116986,"line_start":79,"line_end":79,"column_start":5,"column_end":18}},{"value":"/ # use wasmer_vm::{ImportObject, Instance, Namespace};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":116991,"byte_end":117048,"line_start":80,"line_end":80,"column_start":5,"column_end":62}},{"value":"/ let mut import_object = ImportObject::new();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":117053,"byte_end":117101,"line_start":81,"line_end":81,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":117106,"byte_end":117109,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ import_object.register(\"namespace0\", instance);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":117114,"byte_end":117165,"line_start":83,"line_end":83,"column_start":5,"column_end":56}},{"value":"/ import_object.register(\"namespace1\", namespace);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":117170,"byte_end":117222,"line_start":84,"line_end":84,"column_start":5,"column_end":57}},{"value":"/ // ...","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":117227,"byte_end":117237,"line_start":85,"line_end":85,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":117242,"byte_end":117249,"line_start":86,"line_end":86,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":834},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":118384,"byte_end":118404,"line_start":124,"line_end":124,"column_start":12,"column_end":32},"name":"ImportObjectIterator","qualname":"::import_object::ImportObjectIterator","value":"ImportObjectIterator {  }","parent":null,"children":[{"krate":0,"index":835}],"decl_id":null,"docs":" Iterator for an `ImportObject`'s exports.\n","sig":null,"attributes":[{"value":"/ Iterator for an `ImportObject`'s exports.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":118327,"byte_end":118372,"line_start":123,"line_end":123,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":6951},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":126663,"byte_end":126671,"line_start":21,"line_end":21,"column_start":12,"column_end":20},"name":"Instance","qualname":"::instance::Instance","value":"Instance { exports }","parent":null,"children":[{"krate":0,"index":6952},{"krate":0,"index":6953},{"krate":0,"index":6954}],"decl_id":null,"docs":" A WebAssembly Instance is a stateful, executable\n instance of a WebAssembly [`Module`].","sig":null,"attributes":[{"value":"/ A WebAssembly Instance is a stateful, executable","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":126298,"byte_end":126350,"line_start":12,"line_end":12,"column_start":1,"column_end":53}},{"value":"/ instance of a WebAssembly [`Module`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":126351,"byte_end":126392,"line_start":13,"line_end":13,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":126393,"byte_end":126396,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Instance objects contain all the exported WebAssembly","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":126397,"byte_end":126454,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"/ functions, memories, tables and globals that allow","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":126455,"byte_end":126509,"line_start":16,"line_end":16,"column_start":1,"column_end":55}},{"value":"/ interacting with WebAssembly.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":126510,"byte_end":126543,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":126544,"byte_end":126547,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Spec: <https://webassembly.github.io/spec/core/exec/runtime.html#module-instances>","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":126548,"byte_end":126634,"line_start":19,"line_end":19,"column_start":1,"column_end":87}}]},{"kind":"Field","id":{"krate":0,"index":6954},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":126779,"byte_end":126786,"line_start":25,"line_end":25,"column_start":9,"column_end":16},"name":"exports","qualname":"::instance::Instance::exports","value":"exports::Exports","parent":{"krate":0,"index":6951},"children":[],"decl_id":null,"docs":" The exports for an instance.\n","sig":null,"attributes":[{"value":"/ The exports for an instance.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":126738,"byte_end":126770,"line_start":24,"line_end":24,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6967},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":127477,"byte_end":127481,"line_start":54,"line_end":54,"column_start":5,"column_end":9},"name":"Link","qualname":"::instance::InstantiationError::Link","value":"InstantiationError::Link(LinkError)","parent":{"krate":0,"index":6957},"children":[],"decl_id":null,"docs":" A linking ocurred during instantiation.\n","sig":null,"attributes":[{"value":"/ A linking ocurred during instantiation.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":127403,"byte_end":127446,"line_start":52,"line_end":52,"column_start":5,"column_end":48}},{"value":"error(transparent)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":127451,"byte_end":127472,"line_start":53,"line_end":53,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6970},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":127591,"byte_end":127596,"line_start":58,"line_end":58,"column_start":5,"column_end":10},"name":"Start","qualname":"::instance::InstantiationError::Start","value":"InstantiationError::Start(RuntimeError)","parent":{"krate":0,"index":6957},"children":[],"decl_id":null,"docs":" A runtime error occured while invoking the start function\n","sig":null,"attributes":[{"value":"/ A runtime error occured while invoking the start function","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":127499,"byte_end":127560,"line_start":56,"line_end":56,"column_start":5,"column_end":66}},{"value":"error(transparent)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":127565,"byte_end":127586,"line_start":57,"line_end":57,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6973},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":127706,"byte_end":127727,"line_start":62,"line_end":62,"column_start":5,"column_end":26},"name":"HostEnvInitialization","qualname":"::instance::InstantiationError::HostEnvInitialization","value":"InstantiationError::HostEnvInitialization(HostEnvInitError)","parent":{"krate":0,"index":6957},"children":[],"decl_id":null,"docs":" Error occurred when initializing the host environment.\n","sig":null,"attributes":[{"value":"/ Error occurred when initializing the host environment.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":127617,"byte_end":127675,"line_start":60,"line_end":60,"column_start":5,"column_end":63}},{"value":"error(transparent)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":127680,"byte_end":127701,"line_start":61,"line_end":61,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":6957},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":127378,"byte_end":127396,"line_start":51,"line_end":51,"column_start":10,"column_end":28},"name":"InstantiationError","qualname":"::instance::InstantiationError","value":"pub enum InstantiationError {\n    Link(LinkError),\n    Start(RuntimeError),\n    HostEnvInitialization(HostEnvInitError),\n}","parent":null,"children":[{"krate":0,"index":6967},{"krate":0,"index":6970},{"krate":0,"index":6973}],"decl_id":null,"docs":" An error while instantiating a module.","sig":null,"attributes":[{"value":"/ An error while instantiating a module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":126993,"byte_end":127035,"line_start":42,"line_end":42,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":127036,"byte_end":127039,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ This is not a common WebAssembly error, however","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":127040,"byte_end":127091,"line_start":44,"line_end":44,"column_start":1,"column_end":52}},{"value":"/ we need to differentiate from a `LinkError` (an error","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":127092,"byte_end":127149,"line_start":45,"line_end":45,"column_start":1,"column_end":58}},{"value":"/ that happens while linking, on instantiation), a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":127150,"byte_end":127202,"line_start":46,"line_end":46,"column_start":1,"column_end":53}},{"value":"/ Trap that occurs when calling the WebAssembly module","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":127203,"byte_end":127259,"line_start":47,"line_end":47,"column_start":1,"column_end":57}},{"value":"/ start function, and an error when initializing the user's","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":127260,"byte_end":127321,"line_start":48,"line_end":48,"column_start":1,"column_end":62}},{"value":"/ host environments.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":127322,"byte_end":127344,"line_start":49,"line_end":49,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":916},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":129476,"byte_end":129479,"line_start":114,"line_end":114,"column_start":12,"column_end":15},"name":"new","qualname":"<Instance>::new","value":"pub fn new(&Module, &dyn Resolver) -> Result<Self, InstantiationError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Instance` from a WebAssembly [`Module`] and a\n set of imports resolved by the [`Resolver`].","sig":null,"attributes":[{"value":"/ Creates a new `Instance` from a WebAssembly [`Module`] and a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":128245,"byte_end":128309,"line_start":81,"line_end":81,"column_start":5,"column_end":69}},{"value":"/ set of imports resolved by the [`Resolver`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":128314,"byte_end":128362,"line_start":82,"line_end":82,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":128367,"byte_end":128370,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ The resolver can be anything that implements the [`Resolver`] trait,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":128375,"byte_end":128447,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"/ so you can plug custom resolution for the imports, if you wish not","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":128452,"byte_end":128522,"line_start":85,"line_end":85,"column_start":5,"column_end":75}},{"value":"/ to use [`ImportObject`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":128527,"byte_end":128555,"line_start":86,"line_end":86,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":128560,"byte_end":128563,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ The [`ImportObject`] is the easiest way to provide imports to the instance.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":128568,"byte_end":128647,"line_start":88,"line_end":88,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":128652,"byte_end":128655,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ [`ImportObject`]: crate::ImportObject","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":128660,"byte_end":128701,"line_start":90,"line_end":90,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":128706,"byte_end":128709,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":128714,"byte_end":128721,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ # use wasmer::{imports, Store, Module, Global, Value, Instance};","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":128726,"byte_end":128794,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/ # fn main() -> anyhow::Result<()> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":128799,"byte_end":128838,"line_start":94,"line_end":94,"column_start":5,"column_end":44}},{"value":"/ let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":128843,"byte_end":128876,"line_start":95,"line_end":95,"column_start":5,"column_end":38}},{"value":"/ let module = Module::new(&store, \"(module)\")?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":128881,"byte_end":128931,"line_start":96,"line_end":96,"column_start":5,"column_end":55}},{"value":"/ let imports = imports!{","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":128936,"byte_end":128963,"line_start":97,"line_end":97,"column_start":5,"column_end":32}},{"value":"/   \"host\" => {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":128968,"byte_end":128985,"line_start":98,"line_end":98,"column_start":5,"column_end":22}},{"value":"/     \"var\" => Global::new(&store, Value::I32(2))","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":128990,"byte_end":129041,"line_start":99,"line_end":99,"column_start":5,"column_end":56}},{"value":"/   }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":129046,"byte_end":129053,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ };","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":129058,"byte_end":129064,"line_start":101,"line_end":101,"column_start":5,"column_end":11}},{"value":"/ let instance = Instance::new(&module, &imports)?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":129069,"byte_end":129122,"line_start":102,"line_end":102,"column_start":5,"column_end":58}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":129127,"byte_end":129139,"line_start":103,"line_end":103,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":129144,"byte_end":129151,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":129156,"byte_end":129163,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":129168,"byte_end":129171,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ## Errors","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":129176,"byte_end":129189,"line_start":107,"line_end":107,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":129194,"byte_end":129197,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ The function can return [`InstantiationError`]s.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":129202,"byte_end":129254,"line_start":109,"line_end":109,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":129259,"byte_end":129262,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ Those are, as defined by the spec:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":129267,"byte_end":129305,"line_start":111,"line_end":111,"column_start":5,"column_end":43}},{"value":"/  * Link errors that happen when plugging the imports into the instance","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":129310,"byte_end":129384,"line_start":112,"line_end":112,"column_start":5,"column_end":79}},{"value":"/  * Runtime errors that happen when running the module `start` function.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":129389,"byte_end":129464,"line_start":113,"line_end":113,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":918},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":130911,"byte_end":130917,"line_start":153,"line_end":153,"column_start":12,"column_end":18},"name":"module","qualname":"<Instance>::module","value":"pub fn module(&Self) -> &Module","parent":null,"children":[],"decl_id":null,"docs":" Gets the [`Module`] associated with this instance.\n","sig":null,"attributes":[{"value":"/ Gets the [`Module`] associated with this instance.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":130845,"byte_end":130899,"line_start":152,"line_end":152,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":919},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":131037,"byte_end":131042,"line_start":158,"line_end":158,"column_start":12,"column_end":17},"name":"store","qualname":"<Instance>::store","value":"pub fn store(&Self) -> &Store","parent":null,"children":[],"decl_id":null,"docs":" Returns the [`Store`] where the `Instance` belongs.\n","sig":null,"attributes":[{"value":"/ Returns the [`Store`] where the `Instance` belongs.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":130970,"byte_end":131025,"line_start":157,"line_end":157,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":920},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":131127,"byte_end":131136,"line_start":163,"line_end":163,"column_start":12,"column_end":21},"name":"vmctx_ptr","qualname":"<Instance>::vmctx_ptr","value":"pub fn vmctx_ptr(&Self) -> *mut VMContext","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6990},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":131958,"byte_end":131960,"line_start":19,"line_end":19,"column_start":5,"column_end":7},"name":"Io","qualname":"::module::IoCompileError::Io","value":"IoCompileError::Io(io::Error)","parent":{"krate":0,"index":6976},"children":[],"decl_id":null,"docs":" An IO error\n","sig":null,"attributes":[{"value":"/ An IO error","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":131912,"byte_end":131927,"line_start":17,"line_end":17,"column_start":5,"column_end":20}},{"value":"error(transparent)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":131932,"byte_end":131953,"line_start":18,"line_end":18,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6993},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":132039,"byte_end":132046,"line_start":22,"line_end":22,"column_start":5,"column_end":12},"name":"Compile","qualname":"::module::IoCompileError::Compile","value":"IoCompileError::Compile(CompileError)","parent":{"krate":0,"index":6976},"children":[],"decl_id":null,"docs":" A compilation error\n","sig":null,"attributes":[{"value":"/ A compilation error","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":131985,"byte_end":132008,"line_start":20,"line_end":20,"column_start":5,"column_end":28}},{"value":"error(transparent)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":132013,"byte_end":132034,"line_start":21,"line_end":21,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":6976},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":131891,"byte_end":131905,"line_start":16,"line_end":16,"column_start":10,"column_end":24},"name":"IoCompileError","qualname":"::module::IoCompileError","value":"pub enum IoCompileError { Io(io::Error), Compile(CompileError), }","parent":null,"children":[{"krate":0,"index":6990},{"krate":0,"index":6993}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6996},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":132381,"byte_end":132387,"line_start":34,"line_end":34,"column_start":12,"column_end":18},"name":"Module","qualname":"::module::Module","value":"Module {  }","parent":null,"children":[{"krate":0,"index":6997},{"krate":0,"index":6998}],"decl_id":null,"docs":" A WebAssembly Module contains stateless WebAssembly\n code that has already been compiled and can be instantiated\n multiple times.","sig":null,"attributes":[{"value":"/ A WebAssembly Module contains stateless WebAssembly","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":132073,"byte_end":132128,"line_start":25,"line_end":25,"column_start":1,"column_end":56}},{"value":"/ code that has already been compiled and can be instantiated","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":132129,"byte_end":132192,"line_start":26,"line_end":26,"column_start":1,"column_end":64}},{"value":"/ multiple times.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":132193,"byte_end":132212,"line_start":27,"line_end":27,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":132213,"byte_end":132216,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## Cloning a module","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":132217,"byte_end":132240,"line_start":29,"line_end":29,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":132241,"byte_end":132244,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Cloning a module is cheap: it does a shallow copy of the compiled","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":132245,"byte_end":132314,"line_start":31,"line_end":31,"column_start":1,"column_end":70}},{"value":"/ contents rather than a deep copy.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":132315,"byte_end":132352,"line_start":32,"line_end":32,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":985},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":134656,"byte_end":134659,"line_start":100,"line_end":100,"column_start":12,"column_end":15},"name":"new","qualname":"<Module>::new","value":"pub fn new<impl AsRef<[u8]>: AsRef<[u8]>>(&Store, impl AsRef<[u8]>)\n-> Result<Self, CompileError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new WebAssembly Module given the configuration\n in the store.","sig":null,"attributes":[{"value":"/ Creates a new WebAssembly Module given the configuration","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":132462,"byte_end":132522,"line_start":40,"line_end":40,"column_start":5,"column_end":65}},{"value":"/ in the store.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":132527,"byte_end":132544,"line_start":41,"line_end":41,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":132549,"byte_end":132552,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ If the provided bytes are not WebAssembly-like (start with `b\"\\0asm\"`),","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":132557,"byte_end":132632,"line_start":43,"line_end":43,"column_start":5,"column_end":80}},{"value":"/ and the \"wat\" feature is enabled for this crate, this function will try to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":132637,"byte_end":132715,"line_start":44,"line_end":44,"column_start":5,"column_end":83}},{"value":"/ to convert the bytes assuming they correspond to the WebAssembly text","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":132720,"byte_end":132793,"line_start":45,"line_end":45,"column_start":5,"column_end":78}},{"value":"/ format.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":132798,"byte_end":132809,"line_start":46,"line_end":46,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":132814,"byte_end":132817,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ ## Security","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":132822,"byte_end":132837,"line_start":48,"line_end":48,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":132842,"byte_end":132845,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Before the code is compiled, it will be validated using the store","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":132850,"byte_end":132919,"line_start":50,"line_end":50,"column_start":5,"column_end":74}},{"value":"/ features.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":132924,"byte_end":132937,"line_start":51,"line_end":51,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":132942,"byte_end":132945,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ ## Errors","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":132950,"byte_end":132963,"line_start":53,"line_end":53,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":132968,"byte_end":132971,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Creating a WebAssembly module from bytecode can result in a","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":132976,"byte_end":133039,"line_start":55,"line_end":55,"column_start":5,"column_end":68}},{"value":"/ [`CompileError`] since this operation requires to transorm the Wasm","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":133044,"byte_end":133115,"line_start":56,"line_end":56,"column_start":5,"column_end":76}},{"value":"/ bytecode into code the machine can easily execute (normally through a JIT).","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":133120,"byte_end":133199,"line_start":57,"line_end":57,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":133204,"byte_end":133207,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":133212,"byte_end":133226,"line_start":59,"line_end":59,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":133231,"byte_end":133234,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Reading from a WAT file.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":133239,"byte_end":133267,"line_start":61,"line_end":61,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":133272,"byte_end":133275,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":133280,"byte_end":133287,"line_start":63,"line_end":63,"column_start":5,"column_end":12}},{"value":"/ use wasmer::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":133292,"byte_end":133310,"line_start":64,"line_end":64,"column_start":5,"column_end":23}},{"value":"/ # fn main() -> anyhow::Result<()> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":133315,"byte_end":133354,"line_start":65,"line_end":65,"column_start":5,"column_end":44}},{"value":"/ # let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":133359,"byte_end":133394,"line_start":66,"line_end":66,"column_start":5,"column_end":40}},{"value":"/ let wat = \"(module)\";","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":133399,"byte_end":133424,"line_start":67,"line_end":67,"column_start":5,"column_end":30}},{"value":"/ let module = Module::new(&store, wat)?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":133429,"byte_end":133472,"line_start":68,"line_end":68,"column_start":5,"column_end":48}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":133477,"byte_end":133489,"line_start":69,"line_end":69,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":133494,"byte_end":133501,"line_start":70,"line_end":70,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":133506,"byte_end":133513,"line_start":71,"line_end":71,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":133518,"byte_end":133521,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Reading from bytes:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":133526,"byte_end":133549,"line_start":73,"line_end":73,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":133554,"byte_end":133557,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":133562,"byte_end":133569,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use wasmer::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":133574,"byte_end":133592,"line_start":76,"line_end":76,"column_start":5,"column_end":23}},{"value":"/ # fn main() -> anyhow::Result<()> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":133597,"byte_end":133636,"line_start":77,"line_end":77,"column_start":5,"column_end":44}},{"value":"/ # let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":133641,"byte_end":133676,"line_start":78,"line_end":78,"column_start":5,"column_end":40}},{"value":"/ // The following is the same as:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":133681,"byte_end":133717,"line_start":79,"line_end":79,"column_start":5,"column_end":41}},{"value":"/ // (module","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":133722,"byte_end":133736,"line_start":80,"line_end":80,"column_start":5,"column_end":19}},{"value":"/ //   (type $t0 (func (param i32) (result i32)))","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":133741,"byte_end":133792,"line_start":81,"line_end":81,"column_start":5,"column_end":56}},{"value":"/ //   (func $add_one (export \"add_one\") (type $t0) (param $p0 i32) (result i32)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":133797,"byte_end":133879,"line_start":82,"line_end":82,"column_start":5,"column_end":87}},{"value":"/ //     get_local $p0","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":133884,"byte_end":133908,"line_start":83,"line_end":83,"column_start":5,"column_end":29}},{"value":"/ //     i32.const 1","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":133913,"byte_end":133935,"line_start":84,"line_end":84,"column_start":5,"column_end":27}},{"value":"/ //     i32.add)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":133940,"byte_end":133959,"line_start":85,"line_end":85,"column_start":5,"column_end":24}},{"value":"/ // )","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":133964,"byte_end":133972,"line_start":86,"line_end":86,"column_start":5,"column_end":13}},{"value":"/ let bytes: Vec<u8> = vec![","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":133977,"byte_end":134007,"line_start":87,"line_end":87,"column_start":5,"column_end":35}},{"value":"/     0x00, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00, 0x01, 0x06, 0x01, 0x60,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":134012,"byte_end":134091,"line_start":88,"line_end":88,"column_start":5,"column_end":84}},{"value":"/     0x01, 0x7f, 0x01, 0x7f, 0x03, 0x02, 0x01, 0x00, 0x07, 0x0b, 0x01, 0x07,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":134096,"byte_end":134175,"line_start":89,"line_end":89,"column_start":5,"column_end":84}},{"value":"/     0x61, 0x64, 0x64, 0x5f, 0x6f, 0x6e, 0x65, 0x00, 0x00, 0x0a, 0x09, 0x01,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":134180,"byte_end":134259,"line_start":90,"line_end":90,"column_start":5,"column_end":84}},{"value":"/     0x07, 0x00, 0x20, 0x00, 0x41, 0x01, 0x6a, 0x0b, 0x00, 0x1a, 0x04, 0x6e,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":134264,"byte_end":134343,"line_start":91,"line_end":91,"column_start":5,"column_end":84}},{"value":"/     0x61, 0x6d, 0x65, 0x01, 0x0a, 0x01, 0x00, 0x07, 0x61, 0x64, 0x64, 0x5f,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":134348,"byte_end":134427,"line_start":92,"line_end":92,"column_start":5,"column_end":84}},{"value":"/     0x6f, 0x6e, 0x65, 0x02, 0x07, 0x01, 0x00, 0x01, 0x00, 0x02, 0x70, 0x30,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":134432,"byte_end":134511,"line_start":93,"line_end":93,"column_start":5,"column_end":84}},{"value":"/ ];","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":134516,"byte_end":134522,"line_start":94,"line_end":94,"column_start":5,"column_end":11}},{"value":"/ let module = Module::new(&store, bytes)?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":134527,"byte_end":134572,"line_start":95,"line_end":95,"column_start":5,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":134577,"byte_end":134589,"line_start":96,"line_end":96,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":134594,"byte_end":134601,"line_start":97,"line_end":97,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":134606,"byte_end":134613,"line_start":98,"line_end":98,"column_start":5,"column_end":12}},{"value":"allow(unreachable_code)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":134618,"byte_end":134644,"line_start":99,"line_end":99,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":988},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":135113,"byte_end":135122,"line_start":113,"line_end":113,"column_start":12,"column_end":21},"name":"from_file","qualname":"<Module>::from_file","value":"pub fn from_file<impl AsRef<Path>: AsRef<Path>>(&Store, impl AsRef<Path>)\n-> Result<Self, IoCompileError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new WebAssembly module from a file path.\n","sig":null,"attributes":[{"value":"/ Creates a new WebAssembly module from a file path.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":135047,"byte_end":135101,"line_start":112,"line_end":112,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":990},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":135884,"byte_end":135895,"line_start":130,"line_end":130,"column_start":12,"column_end":23},"name":"from_binary","qualname":"<Module>::from_binary","value":"pub fn from_binary(&Store, &[u8]) -> Result<Self, CompileError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new WebAssembly module from a binary.","sig":null,"attributes":[{"value":"/ Creates a new WebAssembly module from a binary.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":135646,"byte_end":135697,"line_start":125,"line_end":125,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":135702,"byte_end":135705,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ Opposed to [`Module::new`], this function is not compatible with","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":135710,"byte_end":135778,"line_start":127,"line_end":127,"column_start":5,"column_end":73}},{"value":"/ the WebAssembly text format (if the \"wat\" feature is enabled for","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":135783,"byte_end":135851,"line_start":128,"line_end":128,"column_start":5,"column_end":73}},{"value":"/ this crate).","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":135856,"byte_end":135872,"line_start":129,"line_end":129,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":991},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":136369,"byte_end":136390,"line_start":142,"line_end":142,"column_start":19,"column_end":40},"name":"from_binary_unchecked","qualname":"<Module>::from_binary_unchecked","value":"pub unsafe fn from_binary_unchecked(&Store, &[u8])\n-> Result<Self, CompileError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new WebAssembly module skipping any kind of validation.","sig":null,"attributes":[{"value":"/ Creates a new WebAssembly module skipping any kind of validation.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":136071,"byte_end":136140,"line_start":135,"line_end":135,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":136145,"byte_end":136148,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":136153,"byte_end":136165,"line_start":137,"line_end":137,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":136170,"byte_end":136173,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ This can speed up compilation time a bit, but it should be only used","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":136178,"byte_end":136250,"line_start":139,"line_end":139,"column_start":5,"column_end":77}},{"value":"/ in environments where the WebAssembly modules are trusted and validated","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":136255,"byte_end":136330,"line_start":140,"line_end":140,"column_start":5,"column_end":80}},{"value":"/ beforehand.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":136335,"byte_end":136350,"line_start":141,"line_end":141,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":992},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":136840,"byte_end":136848,"line_start":156,"line_end":156,"column_start":12,"column_end":20},"name":"validate","qualname":"<Module>::validate","value":"pub fn validate(&Store, &[u8]) -> Result<(), CompileError>","parent":null,"children":[],"decl_id":null,"docs":" Validates a new WebAssembly Module given the configuration\n in the Store.","sig":null,"attributes":[{"value":"/ Validates a new WebAssembly Module given the configuration","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":136558,"byte_end":136620,"line_start":150,"line_end":150,"column_start":5,"column_end":67}},{"value":"/ in the Store.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":136625,"byte_end":136642,"line_start":151,"line_end":151,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":136647,"byte_end":136650,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ This validation is normally pretty fast and checks the enabled","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":136655,"byte_end":136721,"line_start":153,"line_end":153,"column_start":5,"column_end":71}},{"value":"/ WebAssembly features in the Store Engine to assure deterministic","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":136726,"byte_end":136794,"line_start":154,"line_end":154,"column_start":5,"column_end":73}},{"value":"/ validation of the Module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":136799,"byte_end":136828,"line_start":155,"line_end":155,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":994},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":137621,"byte_end":137630,"line_start":179,"line_end":179,"column_start":12,"column_end":21},"name":"serialize","qualname":"<Module>::serialize","value":"pub fn serialize(&Self) -> Result<Vec<u8>, SerializeError>","parent":null,"children":[],"decl_id":null,"docs":" Serializes a module into a binary representation that the `Engine`\n can later process via [`Module::deserialize`].","sig":null,"attributes":[{"value":"/ Serializes a module into a binary representation that the `Engine`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":137167,"byte_end":137237,"line_start":165,"line_end":165,"column_start":5,"column_end":75}},{"value":"/ can later process via [`Module::deserialize`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":137242,"byte_end":137292,"line_start":166,"line_end":166,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":137297,"byte_end":137300,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ # Usage","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":137305,"byte_end":137316,"line_start":168,"line_end":168,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":137321,"byte_end":137324,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":137329,"byte_end":137342,"line_start":170,"line_end":170,"column_start":5,"column_end":18}},{"value":"/ # use wasmer::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":137347,"byte_end":137367,"line_start":171,"line_end":171,"column_start":5,"column_end":25}},{"value":"/ # fn main() -> anyhow::Result<()> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":137372,"byte_end":137411,"line_start":172,"line_end":172,"column_start":5,"column_end":44}},{"value":"/ # let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":137416,"byte_end":137451,"line_start":173,"line_end":173,"column_start":5,"column_end":40}},{"value":"/ # let module = Module::from_file(&store, \"path/to/foo.wasm\")?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":137456,"byte_end":137522,"line_start":174,"line_end":174,"column_start":5,"column_end":71}},{"value":"/ let serialized = module.serialize()?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":137527,"byte_end":137568,"line_start":175,"line_end":175,"column_start":5,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":137573,"byte_end":137585,"line_start":176,"line_end":176,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":137590,"byte_end":137597,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":137602,"byte_end":137609,"line_start":178,"line_end":178,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":995},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":138174,"byte_end":138191,"line_start":197,"line_end":197,"column_start":12,"column_end":29},"name":"serialize_to_file","qualname":"<Module>::serialize_to_file","value":"pub fn serialize_to_file<impl AsRef<Path>: AsRef<Path>>(&Self,\n                                                        impl AsRef<Path>)\n-> Result<(), SerializeError>","parent":null,"children":[],"decl_id":null,"docs":" Serializes a module into a file that the `Engine`\n can later process via [`Module::deserialize_from_file`].","sig":null,"attributes":[{"value":"/ Serializes a module into a file that the `Engine`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":137720,"byte_end":137773,"line_start":183,"line_end":183,"column_start":5,"column_end":58}},{"value":"/ can later process via [`Module::deserialize_from_file`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":137778,"byte_end":137838,"line_start":184,"line_end":184,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":137843,"byte_end":137846,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # Usage","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":137851,"byte_end":137862,"line_start":186,"line_end":186,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":137867,"byte_end":137870,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":137875,"byte_end":137888,"line_start":188,"line_end":188,"column_start":5,"column_end":18}},{"value":"/ # use wasmer::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":137893,"byte_end":137913,"line_start":189,"line_end":189,"column_start":5,"column_end":25}},{"value":"/ # fn main() -> anyhow::Result<()> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":137918,"byte_end":137957,"line_start":190,"line_end":190,"column_start":5,"column_end":44}},{"value":"/ # let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":137962,"byte_end":137997,"line_start":191,"line_end":191,"column_start":5,"column_end":40}},{"value":"/ # let module = Module::from_file(&store, \"path/to/foo.wasm\")?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":138002,"byte_end":138068,"line_start":192,"line_end":192,"column_start":5,"column_end":71}},{"value":"/ module.serialize_to_file(\"path/to/foo.so\")?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":138073,"byte_end":138121,"line_start":193,"line_end":193,"column_start":5,"column_end":53}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":138126,"byte_end":138138,"line_start":194,"line_end":194,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":138143,"byte_end":138150,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":138155,"byte_end":138162,"line_start":196,"line_end":196,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":997},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":139140,"byte_end":139151,"line_start":224,"line_end":224,"column_start":19,"column_end":30},"name":"deserialize","qualname":"<Module>::deserialize","value":"pub unsafe fn deserialize(&Store, &[u8]) -> Result<Self, DeserializeError>","parent":null,"children":[],"decl_id":null,"docs":" Deserializes a serialized Module binary into a `Module`.\n > Note: the module has to be serialized before with the `serialize` method.","sig":null,"attributes":[{"value":"/ Deserializes a serialized Module binary into a `Module`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":138321,"byte_end":138381,"line_start":201,"line_end":201,"column_start":5,"column_end":65}},{"value":"/ > Note: the module has to be serialized before with the `serialize` method.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":138386,"byte_end":138465,"line_start":202,"line_end":202,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":138470,"byte_end":138473,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":138478,"byte_end":138490,"line_start":204,"line_end":204,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":138495,"byte_end":138498,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ This function is inherently **unsafe** as the provided bytes:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":138503,"byte_end":138568,"line_start":206,"line_end":206,"column_start":5,"column_end":70}},{"value":"/ 1. Are going to be deserialized directly into Rust objects.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":138573,"byte_end":138636,"line_start":207,"line_end":207,"column_start":5,"column_end":68}},{"value":"/ 2. Contains the function assembly bodies and, if intercepted,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":138641,"byte_end":138706,"line_start":208,"line_end":208,"column_start":5,"column_end":70}},{"value":"/    a malicious actor could inject code into executable","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":138711,"byte_end":138769,"line_start":209,"line_end":209,"column_start":5,"column_end":63}},{"value":"/    memory.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":138774,"byte_end":138788,"line_start":210,"line_end":210,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":138793,"byte_end":138796,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ And as such, the `deserialize` method is unsafe.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":138801,"byte_end":138853,"line_start":212,"line_end":212,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":138858,"byte_end":138861,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Usage","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":138866,"byte_end":138877,"line_start":214,"line_end":214,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":138882,"byte_end":138885,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":138890,"byte_end":138903,"line_start":216,"line_end":216,"column_start":5,"column_end":18}},{"value":"/ # use wasmer::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":138908,"byte_end":138928,"line_start":217,"line_end":217,"column_start":5,"column_end":25}},{"value":"/ # fn main() -> anyhow::Result<()> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":138933,"byte_end":138972,"line_start":218,"line_end":218,"column_start":5,"column_end":44}},{"value":"/ # let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":138977,"byte_end":139012,"line_start":219,"line_end":219,"column_start":5,"column_end":40}},{"value":"/ let module = Module::deserialize(&store, serialized_data)?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":139017,"byte_end":139080,"line_start":220,"line_end":220,"column_start":5,"column_end":68}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":139085,"byte_end":139097,"line_start":221,"line_end":221,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":139102,"byte_end":139109,"line_start":222,"line_end":222,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":139114,"byte_end":139121,"line_start":223,"line_end":223,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":998},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":139860,"byte_end":139881,"line_start":246,"line_end":246,"column_start":19,"column_end":40},"name":"deserialize_from_file","qualname":"<Module>::deserialize_from_file","value":"pub unsafe fn deserialize_from_file<impl AsRef<Path>: AsRef<Path>>(&Store,\n                                                                   impl AsRef<Path>)\n-> Result<Self, DeserializeError>","parent":null,"children":[],"decl_id":null,"docs":" Deserializes a a serialized Module located in a `Path` into a `Module`.\n > Note: the module has to be serialized before with the `serialize` method.","sig":null,"attributes":[{"value":"/ Deserializes a a serialized Module located in a `Path` into a `Module`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":139336,"byte_end":139411,"line_start":229,"line_end":229,"column_start":5,"column_end":80}},{"value":"/ > Note: the module has to be serialized before with the `serialize` method.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":139416,"byte_end":139495,"line_start":230,"line_end":230,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":139500,"byte_end":139503,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":139508,"byte_end":139520,"line_start":232,"line_end":232,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":139525,"byte_end":139528,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ Please check [`Module::deserialize`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":139533,"byte_end":139574,"line_start":234,"line_end":234,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":139579,"byte_end":139582,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Usage","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":139587,"byte_end":139598,"line_start":236,"line_end":236,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":139603,"byte_end":139606,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":139611,"byte_end":139624,"line_start":238,"line_end":238,"column_start":5,"column_end":18}},{"value":"/ # use wasmer::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":139629,"byte_end":139649,"line_start":239,"line_end":239,"column_start":5,"column_end":25}},{"value":"/ # let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":139654,"byte_end":139689,"line_start":240,"line_end":240,"column_start":5,"column_end":40}},{"value":"/ # fn main() -> anyhow::Result<()> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":139694,"byte_end":139733,"line_start":241,"line_end":241,"column_start":5,"column_end":44}},{"value":"/ let module = Module::deserialize_from_file(&store, path)?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":139738,"byte_end":139800,"line_start":242,"line_end":242,"column_start":5,"column_end":67}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":139805,"byte_end":139817,"line_start":243,"line_end":243,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":139822,"byte_end":139829,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":139834,"byte_end":139841,"line_start":245,"line_end":245,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1002},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":141584,"byte_end":141588,"line_start":298,"line_end":298,"column_start":12,"column_end":16},"name":"name","qualname":"<Module>::name","value":"pub fn name(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of the current module.","sig":null,"attributes":[{"value":"/ Returns the name of the current module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":141024,"byte_end":141067,"line_start":281,"line_end":281,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":141072,"byte_end":141075,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ This name is normally set in the WebAssembly bytecode by some","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":141080,"byte_end":141145,"line_start":283,"line_end":283,"column_start":5,"column_end":70}},{"value":"/ compilers, but can be also overwritten using the [`Module::set_name`] method.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":141150,"byte_end":141231,"line_start":284,"line_end":284,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":141236,"byte_end":141239,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":141244,"byte_end":141257,"line_start":286,"line_end":286,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":141262,"byte_end":141265,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":141270,"byte_end":141277,"line_start":288,"line_end":288,"column_start":5,"column_end":12}},{"value":"/ # use wasmer::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":141282,"byte_end":141302,"line_start":289,"line_end":289,"column_start":5,"column_end":25}},{"value":"/ # fn main() -> anyhow::Result<()> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":141307,"byte_end":141346,"line_start":290,"line_end":290,"column_start":5,"column_end":44}},{"value":"/ # let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":141351,"byte_end":141386,"line_start":291,"line_end":291,"column_start":5,"column_end":40}},{"value":"/ let wat = \"(module $moduleName)\";","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":141391,"byte_end":141428,"line_start":292,"line_end":292,"column_start":5,"column_end":42}},{"value":"/ let module = Module::new(&store, wat)?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":141433,"byte_end":141476,"line_start":293,"line_end":293,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(module.name(), Some(\"moduleName\"));","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":141481,"byte_end":141531,"line_start":294,"line_end":294,"column_start":5,"column_end":55}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":141536,"byte_end":141548,"line_start":295,"line_end":295,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":141553,"byte_end":141560,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":141565,"byte_end":141572,"line_start":297,"line_end":297,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1003},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":142364,"byte_end":142372,"line_start":323,"line_end":323,"column_start":12,"column_end":20},"name":"set_name","qualname":"<Module>::set_name","value":"pub fn set_name(&mut Self, &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Sets the name of the current module.\n This is normally useful for stacktraces and debugging.","sig":null,"attributes":[{"value":"/ Sets the name of the current module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":141676,"byte_end":141716,"line_start":302,"line_end":302,"column_start":5,"column_end":45}},{"value":"/ This is normally useful for stacktraces and debugging.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":141721,"byte_end":141779,"line_start":303,"line_end":303,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":141784,"byte_end":141787,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ It will return `true` if the module name was changed successfully,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":141792,"byte_end":141862,"line_start":305,"line_end":305,"column_start":5,"column_end":75}},{"value":"/ and return `false` otherwise (in case the module is already","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":141867,"byte_end":141930,"line_start":306,"line_end":306,"column_start":5,"column_end":68}},{"value":"/ instantiated).","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":141935,"byte_end":141953,"line_start":307,"line_end":307,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":141958,"byte_end":141961,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":141966,"byte_end":141979,"line_start":309,"line_end":309,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":141984,"byte_end":141987,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":141992,"byte_end":141999,"line_start":311,"line_end":311,"column_start":5,"column_end":12}},{"value":"/ # use wasmer::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":142004,"byte_end":142024,"line_start":312,"line_end":312,"column_start":5,"column_end":25}},{"value":"/ # fn main() -> anyhow::Result<()> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":142029,"byte_end":142068,"line_start":313,"line_end":313,"column_start":5,"column_end":44}},{"value":"/ # let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":142073,"byte_end":142108,"line_start":314,"line_end":314,"column_start":5,"column_end":40}},{"value":"/ let wat = \"(module)\";","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":142113,"byte_end":142138,"line_start":315,"line_end":315,"column_start":5,"column_end":30}},{"value":"/ let mut module = Module::new(&store, wat)?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":142143,"byte_end":142190,"line_start":316,"line_end":316,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(module.name(), None);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":142195,"byte_end":142231,"line_start":317,"line_end":317,"column_start":5,"column_end":41}},{"value":"/ module.set_name(\"foo\");","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":142236,"byte_end":142263,"line_start":318,"line_end":318,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(module.name(), Some(\"foo\"));","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":142268,"byte_end":142311,"line_start":319,"line_end":319,"column_start":5,"column_end":48}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":142316,"byte_end":142328,"line_start":320,"line_end":320,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":142333,"byte_end":142340,"line_start":321,"line_end":321,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":142345,"byte_end":142352,"line_start":322,"line_end":322,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1006},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":143410,"byte_end":143417,"line_start":357,"line_end":357,"column_start":12,"column_end":19},"name":"imports","qualname":"<Module>::imports","value":"pub fn imports<'a>(&'a Self) -> ImportsIterator</*impl Trait*/>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the imported types in the Module.","sig":null,"attributes":[{"value":"/ Returns an iterator over the imported types in the Module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":142676,"byte_end":142738,"line_start":333,"line_end":333,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":142743,"byte_end":142746,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ The order of the imports is guaranteed to be the same as in the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":142751,"byte_end":142818,"line_start":335,"line_end":335,"column_start":5,"column_end":72}},{"value":"/ WebAssembly bytecode.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":142823,"byte_end":142848,"line_start":336,"line_end":336,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":142853,"byte_end":142856,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":142861,"byte_end":142874,"line_start":338,"line_end":338,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":142879,"byte_end":142882,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":142887,"byte_end":142894,"line_start":340,"line_end":340,"column_start":5,"column_end":12}},{"value":"/ # use wasmer::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":142899,"byte_end":142919,"line_start":341,"line_end":341,"column_start":5,"column_end":25}},{"value":"/ # fn main() -> anyhow::Result<()> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":142924,"byte_end":142963,"line_start":342,"line_end":342,"column_start":5,"column_end":44}},{"value":"/ # let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":142968,"byte_end":143003,"line_start":343,"line_end":343,"column_start":5,"column_end":40}},{"value":"/ let wat = r#\"(module","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":143008,"byte_end":143032,"line_start":344,"line_end":344,"column_start":5,"column_end":29}},{"value":"/     (import \"host\" \"func1\" (func))","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":143037,"byte_end":143075,"line_start":345,"line_end":345,"column_start":5,"column_end":43}},{"value":"/     (import \"host\" \"func2\" (func))","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":143080,"byte_end":143118,"line_start":346,"line_end":346,"column_start":5,"column_end":43}},{"value":"/ )\"#;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":143123,"byte_end":143131,"line_start":347,"line_end":347,"column_start":5,"column_end":13}},{"value":"/ let module = Module::new(&store, wat)?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":143136,"byte_end":143179,"line_start":348,"line_end":348,"column_start":5,"column_end":48}},{"value":"/ for import in module.imports() {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":143184,"byte_end":143220,"line_start":349,"line_end":349,"column_start":5,"column_end":41}},{"value":"/     assert_eq!(import.module(), \"host\");","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":143225,"byte_end":143269,"line_start":350,"line_end":350,"column_start":5,"column_end":49}},{"value":"/     assert!(import.name().contains(\"func\"));","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":143274,"byte_end":143322,"line_start":351,"line_end":351,"column_start":5,"column_end":53}},{"value":"/     import.ty();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":143327,"byte_end":143347,"line_start":352,"line_end":352,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":143352,"byte_end":143357,"line_start":353,"line_end":353,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":143362,"byte_end":143374,"line_start":354,"line_end":354,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":143379,"byte_end":143386,"line_start":355,"line_end":355,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":143391,"byte_end":143398,"line_start":356,"line_end":356,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1009},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":144237,"byte_end":144244,"line_start":384,"line_end":384,"column_start":12,"column_end":19},"name":"exports","qualname":"<Module>::exports","value":"pub fn exports<'a>(&'a Self) -> ExportsIterator</*impl Trait*/>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the exported types in the Module.","sig":null,"attributes":[{"value":"/ Returns an iterator over the exported types in the Module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":143548,"byte_end":143610,"line_start":361,"line_end":361,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":143615,"byte_end":143618,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ The order of the exports is guaranteed to be the same as in the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":143623,"byte_end":143690,"line_start":363,"line_end":363,"column_start":5,"column_end":72}},{"value":"/ WebAssembly bytecode.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":143695,"byte_end":143720,"line_start":364,"line_end":364,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":143725,"byte_end":143728,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":143733,"byte_end":143746,"line_start":366,"line_end":366,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":143751,"byte_end":143754,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":143759,"byte_end":143766,"line_start":368,"line_end":368,"column_start":5,"column_end":12}},{"value":"/ # use wasmer::*;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":143771,"byte_end":143791,"line_start":369,"line_end":369,"column_start":5,"column_end":25}},{"value":"/ # fn main() -> anyhow::Result<()> {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":143796,"byte_end":143835,"line_start":370,"line_end":370,"column_start":5,"column_end":44}},{"value":"/ # let store = Store::default();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":143840,"byte_end":143875,"line_start":371,"line_end":371,"column_start":5,"column_end":40}},{"value":"/ let wat = r#\"(module","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":143880,"byte_end":143904,"line_start":372,"line_end":372,"column_start":5,"column_end":29}},{"value":"/     (func (export \"namedfunc\"))","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":143909,"byte_end":143944,"line_start":373,"line_end":373,"column_start":5,"column_end":40}},{"value":"/     (memory (export \"namedmemory\") 1)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":143949,"byte_end":143990,"line_start":374,"line_end":374,"column_start":5,"column_end":46}},{"value":"/ )\"#;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":143995,"byte_end":144003,"line_start":375,"line_end":375,"column_start":5,"column_end":13}},{"value":"/ let module = Module::new(&store, wat)?;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":144008,"byte_end":144051,"line_start":376,"line_end":376,"column_start":5,"column_end":48}},{"value":"/ for export_ in module.exports() {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":144056,"byte_end":144093,"line_start":377,"line_end":377,"column_start":5,"column_end":42}},{"value":"/     assert!(export_.name().contains(\"named\"));","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":144098,"byte_end":144148,"line_start":378,"line_end":378,"column_start":5,"column_end":55}},{"value":"/     export_.ty();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":144153,"byte_end":144174,"line_start":379,"line_end":379,"column_start":5,"column_end":26}},{"value":"/ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":144179,"byte_end":144184,"line_start":380,"line_end":380,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":144189,"byte_end":144201,"line_start":381,"line_end":381,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":144206,"byte_end":144213,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":144218,"byte_end":144225,"line_start":383,"line_end":383,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":144642,"byte_end":144657,"line_start":395,"line_end":395,"column_start":12,"column_end":27},"name":"custom_sections","qualname":"<Module>::custom_sections","value":"pub fn custom_sections<'a>(&'a Self, &'a str) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Get the custom sections of the module given a `name`.","sig":null,"attributes":[{"value":"/ Get the custom sections of the module given a `name`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":144375,"byte_end":144432,"line_start":388,"line_end":388,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":144437,"byte_end":144440,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ # Important","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":144445,"byte_end":144460,"line_start":390,"line_end":390,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":144465,"byte_end":144468,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ Following the WebAssembly spec, one name can have multiple","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":144473,"byte_end":144535,"line_start":392,"line_end":392,"column_start":5,"column_end":67}},{"value":"/ custom sections. That's why an iterator (rather than one element)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":144540,"byte_end":144609,"line_start":393,"line_end":393,"column_start":5,"column_end":74}},{"value":"/ is returned.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":144614,"byte_end":144630,"line_start":394,"line_end":394,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":144864,"byte_end":144869,"line_start":400,"line_end":400,"column_start":12,"column_end":17},"name":"store","qualname":"<Module>::store","value":"pub fn store(&Self) -> &Store","parent":null,"children":[],"decl_id":null,"docs":" Returns the [`Store`] where the `Instance` belongs.\n","sig":null,"attributes":[{"value":"/ Returns the [`Store`] where the `Instance` belongs.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":144797,"byte_end":144852,"line_start":399,"line_end":399,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":145209,"byte_end":145213,"line_start":410,"line_end":410,"column_start":12,"column_end":16},"name":"info","qualname":"<Module>::info","value":"pub fn info(&Self) -> &ModuleInfo","parent":null,"children":[],"decl_id":null,"docs":" The ABI of the ModuleInfo is very unstable, we refactor it very often.\n This function is public because in some cases it can be useful to get some\n extra information from the module.","sig":null,"attributes":[{"value":"/ The ABI of the ModuleInfo is very unstable, we refactor it very often.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":144920,"byte_end":144994,"line_start":404,"line_end":404,"column_start":5,"column_end":79}},{"value":"/ This function is public because in some cases it can be useful to get some","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":144999,"byte_end":145077,"line_start":405,"line_end":405,"column_start":5,"column_end":83}},{"value":"/ extra information from the module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":145082,"byte_end":145120,"line_start":406,"line_end":406,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":145125,"byte_end":145128,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ However, the usage is highly discouraged.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":145133,"byte_end":145178,"line_start":408,"line_end":408,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1017},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":145556,"byte_end":145564,"line_start":420,"line_end":420,"column_start":12,"column_end":20},"name":"artifact","qualname":"<Module>::artifact","value":"pub fn artifact(&Self) -> &Arc<dyn Artifact>","parent":null,"children":[],"decl_id":null,"docs":" Gets the [`Artifact`] used internally by the Module.","sig":null,"attributes":[{"value":"/ Gets the [`Artifact`] used internally by the Module.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":145285,"byte_end":145341,"line_start":414,"line_end":414,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":145346,"byte_end":145349,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ This API is hidden because it's not necessarily stable;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":145354,"byte_end":145413,"line_start":416,"line_end":416,"column_start":5,"column_end":64}},{"value":"/ this functionality is required for some core functionality though, like","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":145418,"byte_end":145493,"line_start":417,"line_end":417,"column_start":5,"column_end":80}},{"value":"/ the object file engine.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":145498,"byte_end":145525,"line_start":418,"line_end":418,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":7001},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\native.rs","byte_start":146762,"byte_end":146772,"line_start":25,"line_end":25,"column_start":12,"column_end":22},"name":"NativeFunc","qualname":"::native::NativeFunc","value":"NativeFunc {  }","parent":null,"children":[{"krate":0,"index":7004},{"krate":0,"index":7005},{"krate":0,"index":7006},{"krate":0,"index":7007}],"decl_id":null,"docs":" A WebAssembly function that can be called natively\n (using the Native ABI).\n","sig":null,"attributes":[{"value":"/ A WebAssembly function that can be called natively","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\native.rs","byte_start":146651,"byte_end":146705,"line_start":22,"line_end":22,"column_start":1,"column_end":55}},{"value":"/ (using the Native ABI).","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\native.rs","byte_start":146706,"byte_end":146733,"line_start":23,"line_end":23,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":1128},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":157285,"byte_end":157290,"line_start":15,"line_end":15,"column_start":12,"column_end":17},"name":"Array","qualname":"::ptr::Array","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `Array` marker type. This type can be used like `WasmPtr<T, Array>`\n to get access to methods\n","sig":null,"attributes":[{"value":"/ The `Array` marker type. This type can be used like `WasmPtr<T, Array>`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":157169,"byte_end":157244,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/ to get access to methods","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":157245,"byte_end":157273,"line_start":14,"line_end":14,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":1130},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":157398,"byte_end":157402,"line_start":18,"line_end":18,"column_start":12,"column_end":16},"name":"Item","qualname":"::ptr::Item","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `Item` marker type. This is the default and does not usually need to be\n specified.\n","sig":null,"attributes":[{"value":"/ The `Item` marker type. This is the default and does not usually need to be","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":157292,"byte_end":157371,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ specified.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":157372,"byte_end":157386,"line_start":17,"line_end":17,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":1132},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":158022,"byte_end":158029,"line_start":36,"line_end":36,"column_start":12,"column_end":19},"name":"WasmPtr","qualname":"::ptr::WasmPtr","value":"WasmPtr {  }","parent":null,"children":[{"krate":0,"index":1135},{"krate":0,"index":1136}],"decl_id":null,"docs":" A zero-cost type that represents a pointer to something in Wasm linear\n memory.","sig":null,"attributes":[{"value":"/ A zero-cost type that represents a pointer to something in Wasm linear","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":157405,"byte_end":157479,"line_start":20,"line_end":20,"column_start":1,"column_end":75}},{"value":"/ memory.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":157480,"byte_end":157491,"line_start":21,"line_end":21,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":157492,"byte_end":157495,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This type can be used directly in the host function arguments:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":157496,"byte_end":157562,"line_start":23,"line_end":23,"column_start":1,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":157563,"byte_end":157570,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ # use wasmer::Memory;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":157571,"byte_end":157596,"line_start":25,"line_end":25,"column_start":1,"column_end":26}},{"value":"/ # use wasmer::WasmPtr;","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":157597,"byte_end":157623,"line_start":26,"line_end":26,"column_start":1,"column_end":27}},{"value":"/ pub fn host_import(memory: Memory, ptr: WasmPtr<u32>) {","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":157624,"byte_end":157683,"line_start":27,"line_end":27,"column_start":1,"column_end":60}},{"value":"/     let derefed_ptr = ptr.deref(&memory).expect(\"pointer in bounds\");","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":157684,"byte_end":157757,"line_start":28,"line_end":28,"column_start":1,"column_end":74}},{"value":"/     let inner_val: u32 = derefed_ptr.get();","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":157758,"byte_end":157805,"line_start":29,"line_end":29,"column_start":1,"column_end":48}},{"value":"/     println!(\"Got {} from Wasm memory address 0x{:X}\", inner_val, ptr.offset());","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":157806,"byte_end":157890,"line_start":30,"line_end":30,"column_start":1,"column_end":85}},{"value":"/     // update the value being pointed to","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":157891,"byte_end":157935,"line_start":31,"line_end":31,"column_start":1,"column_end":45}},{"value":"/     derefed_ptr.set(inner_val + 1);","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":157936,"byte_end":157975,"line_start":32,"line_end":32,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":157976,"byte_end":157981,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":157982,"byte_end":157989,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"repr(transparent)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":157990,"byte_end":158010,"line_start":35,"line_end":35,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1140},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":158268,"byte_end":158271,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<WasmPtr<T, Ty>>::new","value":"pub fn new(u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `WasmPtr` at the given offset.\n","sig":null,"attributes":[{"value":"/ Create a new `WasmPtr` at the given offset.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":158195,"byte_end":158242,"line_start":43,"line_end":43,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":158247,"byte_end":158256,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1141},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":158474,"byte_end":158480,"line_start":54,"line_end":54,"column_start":12,"column_end":18},"name":"offset","qualname":"<WasmPtr<T, Ty>>::offset","value":"pub fn offset(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the offset into Wasm linear memory for this `WasmPtr`.\n","sig":null,"attributes":[{"value":"/ Get the offset into Wasm linear memory for this `WasmPtr`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":158386,"byte_end":158448,"line_start":52,"line_end":52,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":158453,"byte_end":158462,"line_start":53,"line_end":53,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1145},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":159328,"byte_end":159333,"line_start":77,"line_end":77,"column_start":12,"column_end":17},"name":"deref","qualname":"<WasmPtr<T, Item>>::deref","value":"pub fn deref<'a>(Self, &'a Memory) -> Option<&'a Cell<T>>","parent":null,"children":[],"decl_id":null,"docs":" Dereference the `WasmPtr` getting access to a `&Cell<T>` allowing for\n reading and mutating of the inner value.","sig":null,"attributes":[{"value":"/ Dereference the `WasmPtr` getting access to a `&Cell<T>` allowing for","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":158968,"byte_end":159041,"line_start":70,"line_end":70,"column_start":5,"column_end":78}},{"value":"/ reading and mutating of the inner value.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":159046,"byte_end":159090,"line_start":71,"line_end":71,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":159095,"byte_end":159098,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ This method is unsound if used with unsynchronized shared memory.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":159103,"byte_end":159172,"line_start":73,"line_end":73,"column_start":5,"column_end":74}},{"value":"/ If you're unsure what that means, it likely does not apply to you.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":159177,"byte_end":159247,"line_start":74,"line_end":74,"column_start":5,"column_end":75}},{"value":"/ This invariant will be enforced in the future.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":159252,"byte_end":159302,"line_start":75,"line_end":75,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":159307,"byte_end":159316,"line_start":76,"line_end":76,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1147},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":160225,"byte_end":160234,"line_start":100,"line_end":100,"column_start":19,"column_end":28},"name":"deref_mut","qualname":"<WasmPtr<T, Item>>::deref_mut","value":"pub unsafe fn deref_mut<'a>(Self, &'a Memory) -> Option<&'a mut Cell<T>>","parent":null,"children":[],"decl_id":null,"docs":" Mutably dereference this `WasmPtr` getting a `&mut Cell<T>` allowing for\n direct access to a `&mut T`.","sig":null,"attributes":[{"value":"/ Mutably dereference this `WasmPtr` getting a `&mut Cell<T>` allowing for","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":159817,"byte_end":159893,"line_start":92,"line_end":92,"column_start":5,"column_end":81}},{"value":"/ direct access to a `&mut T`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":159898,"byte_end":159930,"line_start":93,"line_end":93,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":159935,"byte_end":159938,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":159943,"byte_end":159955,"line_start":95,"line_end":95,"column_start":5,"column_end":17}},{"value":"/ - This method does not do any aliasing checks: it's possible to create","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":159960,"byte_end":160034,"line_start":96,"line_end":96,"column_start":5,"column_end":79}},{"value":"/  `&mut T` that point to the same memory. You should ensure that you have","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":160039,"byte_end":160115,"line_start":97,"line_end":97,"column_start":5,"column_end":81}},{"value":"/   exclusive access to Wasm linear memory before calling this method.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":160120,"byte_end":160192,"line_start":98,"line_end":98,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":160197,"byte_end":160206,"line_start":99,"line_end":99,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1151},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":161271,"byte_end":161276,"line_start":125,"line_end":125,"column_start":12,"column_end":17},"name":"deref","qualname":"<WasmPtr<T, Array>>::deref","value":"pub fn deref(Self, &Memory, u32, u32) -> Option<&[Cell<T>]>","parent":null,"children":[],"decl_id":null,"docs":" Dereference the `WasmPtr` getting access to a `&[Cell<T>]` allowing for\n reading and mutating of the inner values.","sig":null,"attributes":[{"value":"/ Dereference the `WasmPtr` getting access to a `&[Cell<T>]` allowing for","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":160908,"byte_end":160983,"line_start":118,"line_end":118,"column_start":5,"column_end":80}},{"value":"/ reading and mutating of the inner values.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":160988,"byte_end":161033,"line_start":119,"line_end":119,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":161038,"byte_end":161041,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ This method is unsound if used with unsynchronized shared memory.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":161046,"byte_end":161115,"line_start":121,"line_end":121,"column_start":5,"column_end":74}},{"value":"/ If you're unsure what that means, it likely does not apply to you.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":161120,"byte_end":161190,"line_start":122,"line_end":122,"column_start":5,"column_end":75}},{"value":"/ This invariant will be enforced in the future.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":161195,"byte_end":161245,"line_start":123,"line_end":123,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":161250,"byte_end":161259,"line_start":124,"line_end":124,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1152},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":162728,"byte_end":162737,"line_start":158,"line_end":158,"column_start":19,"column_end":28},"name":"deref_mut","qualname":"<WasmPtr<T, Array>>::deref_mut","value":"pub unsafe fn deref_mut(Self, &Memory, u32, u32) -> Option<&mut [Cell<T>]>","parent":null,"children":[],"decl_id":null,"docs":" Mutably dereference this `WasmPtr` getting a `&mut [Cell<T>]` allowing for\n direct access to a `&mut [T]`.","sig":null,"attributes":[{"value":"/ Mutably dereference this `WasmPtr` getting a `&mut [Cell<T>]` allowing for","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":162316,"byte_end":162394,"line_start":150,"line_end":150,"column_start":5,"column_end":83}},{"value":"/ direct access to a `&mut [T]`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":162399,"byte_end":162433,"line_start":151,"line_end":151,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":162438,"byte_end":162441,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":162446,"byte_end":162458,"line_start":153,"line_end":153,"column_start":5,"column_end":17}},{"value":"/ - This method does not do any aliasing checks: it's possible to create","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":162463,"byte_end":162537,"line_start":154,"line_end":154,"column_start":5,"column_end":79}},{"value":"/  `&mut T` that point to the same memory. You should ensure that you have","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":162542,"byte_end":162618,"line_start":155,"line_end":155,"column_start":5,"column_end":81}},{"value":"/   exclusive access to Wasm linear memory before calling this method.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":162623,"byte_end":162695,"line_start":156,"line_end":156,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":162700,"byte_end":162709,"line_start":157,"line_end":157,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1153},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":164599,"byte_end":164611,"line_start":203,"line_end":203,"column_start":19,"column_end":31},"name":"get_utf8_str","qualname":"<WasmPtr<T, Array>>::get_utf8_str","value":"pub unsafe fn get_utf8_str<'a>(Self, &'a Memory, u32) -> Option<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" Get a UTF-8 string from the `WasmPtr` with the given length.","sig":null,"attributes":[{"value":"/ Get a UTF-8 string from the `WasmPtr` with the given length.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":163783,"byte_end":163847,"line_start":186,"line_end":186,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":163852,"byte_end":163855,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ Note that . The","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":163860,"byte_end":163879,"line_start":188,"line_end":188,"column_start":5,"column_end":24}},{"value":"/ underlying data can be mutated if the Wasm is allowed to execute or","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":163884,"byte_end":163955,"line_start":189,"line_end":189,"column_start":5,"column_end":76}},{"value":"/ an aliasing `WasmPtr` is used to mutate memory.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":163960,"byte_end":164011,"line_start":190,"line_end":190,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":164016,"byte_end":164019,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":164024,"byte_end":164036,"line_start":192,"line_end":192,"column_start":5,"column_end":17}},{"value":"/ This method returns a reference to Wasm linear memory. The underlying","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":164041,"byte_end":164114,"line_start":193,"line_end":193,"column_start":5,"column_end":78}},{"value":"/ data can be mutated if the Wasm is allowed to execute or an aliasing","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":164119,"byte_end":164191,"line_start":194,"line_end":194,"column_start":5,"column_end":77}},{"value":"/ `WasmPtr` is used to mutate memory.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":164196,"byte_end":164235,"line_start":195,"line_end":195,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":164240,"byte_end":164243,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ `str` has invariants that must not be broken by mutating Wasm memory.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":164248,"byte_end":164321,"line_start":197,"line_end":197,"column_start":5,"column_end":78}},{"value":"/ Thus the caller must ensure that the backing memory is not modified","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":164326,"byte_end":164397,"line_start":198,"line_end":198,"column_start":5,"column_end":76}},{"value":"/ while the reference is held.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":164402,"byte_end":164434,"line_start":199,"line_end":199,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":164439,"byte_end":164442,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Additionally, if `memory` is dynamic, the caller must also ensure that `memory`","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":164447,"byte_end":164530,"line_start":201,"line_end":201,"column_start":5,"column_end":88}},{"value":"/ is not grown while the reference is held.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":164535,"byte_end":164580,"line_start":202,"line_end":202,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1155},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":165260,"byte_end":165275,"line_start":219,"line_end":219,"column_start":12,"column_end":27},"name":"get_utf8_string","qualname":"<WasmPtr<T, Array>>::get_utf8_string","value":"pub fn get_utf8_string(Self, &Memory, u32) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Get a UTF-8 `String` from the `WasmPtr` with the given length.","sig":null,"attributes":[{"value":"/ Get a UTF-8 `String` from the `WasmPtr` with the given length.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":165118,"byte_end":165184,"line_start":216,"line_end":216,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":165189,"byte_end":165192,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ an aliasing `WasmPtr` is used to mutate memory.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":165197,"byte_end":165248,"line_start":218,"line_end":218,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1156},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":166473,"byte_end":166494,"line_start":249,"line_end":249,"column_start":19,"column_end":40},"name":"get_utf8_str_with_nul","qualname":"<WasmPtr<T, Array>>::get_utf8_str_with_nul","value":"pub unsafe fn get_utf8_str_with_nul<'a>(Self, &'a Memory) -> Option<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" Get a UTF-8 string from the `WasmPtr`, where the string is nul-terminated.","sig":null,"attributes":[{"value":"/ Get a UTF-8 string from the `WasmPtr`, where the string is nul-terminated.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":166055,"byte_end":166133,"line_start":241,"line_end":241,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":166138,"byte_end":166141,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ Note that this does not account for UTF-8 strings that _contain_ nul themselves,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":166146,"byte_end":166230,"line_start":243,"line_end":243,"column_start":5,"column_end":89}},{"value":"/ [`WasmPtr::get_utf8_str`] has to be used for those.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":166235,"byte_end":166290,"line_start":244,"line_end":244,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":166295,"byte_end":166298,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":166303,"byte_end":166315,"line_start":246,"line_end":246,"column_start":5,"column_end":17}},{"value":"/ This method behaves similarly to [`WasmPtr::get_utf8_str`], all safety invariants on","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":166320,"byte_end":166408,"line_start":247,"line_end":247,"column_start":5,"column_end":93}},{"value":"/ that method must also be upheld here.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":166413,"byte_end":166454,"line_start":248,"line_end":248,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1161},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":167032,"byte_end":167056,"line_start":261,"line_end":261,"column_start":12,"column_end":36},"name":"get_utf8_string_with_nul","qualname":"<WasmPtr<T, Array>>::get_utf8_string_with_nul","value":"pub fn get_utf8_string_with_nul(Self, &Memory) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Get a UTF-8 `String` from the `WasmPtr`, where the string is nul-terminated.","sig":null,"attributes":[{"value":"/ Get a UTF-8 `String` from the `WasmPtr`, where the string is nul-terminated.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":166780,"byte_end":166860,"line_start":257,"line_end":257,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":166865,"byte_end":166868,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ Note that this does not account for UTF-8 strings that _contain_ nul themselves,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":166873,"byte_end":166957,"line_start":259,"line_end":259,"column_start":5,"column_end":89}},{"value":"/ [`WasmPtr::get_utf8_string`] has to be used for those.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":166962,"byte_end":167020,"line_start":260,"line_end":260,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":7747},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\store.rs","byte_start":173791,"byte_end":173796,"line_start":19,"line_end":19,"column_start":12,"column_end":17},"name":"Store","qualname":"::store::Store","value":"Store {  }","parent":null,"children":[{"krate":0,"index":7748},{"krate":0,"index":7749}],"decl_id":null,"docs":" The store represents all global state that can be manipulated by\n WebAssembly programs. It consists of the runtime representation\n of all instances of functions, tables, memories, and globals that\n have been allocated during the lifetime of the abstract machine.","sig":null,"attributes":[{"value":"/ The store represents all global state that can be manipulated by","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\store.rs","byte_start":173173,"byte_end":173241,"line_start":8,"line_end":8,"column_start":1,"column_end":69}},{"value":"/ WebAssembly programs. It consists of the runtime representation","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\store.rs","byte_start":173242,"byte_end":173309,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"/ of all instances of functions, tables, memories, and globals that","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\store.rs","byte_start":173310,"byte_end":173379,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ have been allocated during the lifetime of the abstract machine.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\store.rs","byte_start":173380,"byte_end":173448,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\store.rs","byte_start":173449,"byte_end":173452,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The `Store` holds the engine (that is —amongst many things— used to compile","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\store.rs","byte_start":173453,"byte_end":173536,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ the Wasm bytes into a valid module artifact), in addition to the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\store.rs","byte_start":173537,"byte_end":173605,"line_start":14,"line_end":14,"column_start":1,"column_end":69}},{"value":"/ [`Tunables`] (that are used to create the memories, tables and globals).","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\store.rs","byte_start":173606,"byte_end":173682,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\store.rs","byte_start":173683,"byte_end":173686,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Spec: <https://webassembly.github.io/spec/core/exec/runtime.html#store>","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\store.rs","byte_start":173687,"byte_end":173762,"line_start":17,"line_end":17,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1211},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\store.rs","byte_start":173974,"byte_end":173977,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"name":"new","qualname":"<Store>::new","value":"pub fn new<E: ?Sized>(&E) -> Self where E: Engine + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Store` with a specific [`Engine`].\n","sig":null,"attributes":[{"value":"/ Creates a new `Store` with a specific [`Engine`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\store.rs","byte_start":173909,"byte_end":173962,"line_start":25,"line_end":25,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1213},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\store.rs","byte_start":174275,"byte_end":174292,"line_start":37,"line_end":37,"column_start":12,"column_end":29},"name":"new_with_tunables","qualname":"<Store>::new_with_tunables","value":"pub fn new_with_tunables<E: ?Sized,\n                         impl Tunables + Send + Sync + 'static: Tunables +\n                         Send + Sync +\n                         'static>(&E, impl Tunables + Send + Sync + 'static)\n-> Self where E: Engine + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Store` with a specific [`Engine`] and [`Tunables`].\n","sig":null,"attributes":[{"value":"/ Creates a new `Store` with a specific [`Engine`] and [`Tunables`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\store.rs","byte_start":174193,"byte_end":174263,"line_start":36,"line_end":36,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1216},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\store.rs","byte_start":174565,"byte_end":174573,"line_start":48,"line_end":48,"column_start":12,"column_end":20},"name":"tunables","qualname":"<Store>::tunables","value":"pub fn tunables(&Self) -> &dyn Tunables","parent":null,"children":[],"decl_id":null,"docs":" Returns the [`Tunables`].\n","sig":null,"attributes":[{"value":"/ Returns the [`Tunables`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\store.rs","byte_start":174524,"byte_end":174553,"line_start":47,"line_end":47,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1217},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\store.rs","byte_start":174681,"byte_end":174687,"line_start":53,"line_end":53,"column_start":12,"column_end":18},"name":"engine","qualname":"<Store>::engine","value":"pub fn engine(&Self) -> &Arc<dyn Engine + Send + Sync>","parent":null,"children":[],"decl_id":null,"docs":" Returns the [`Engine`].\n","sig":null,"attributes":[{"value":"/ Returns the [`Engine`].","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\store.rs","byte_start":174642,"byte_end":174669,"line_start":52,"line_end":52,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1218},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\store.rs","byte_start":174952,"byte_end":174956,"line_start":60,"line_end":60,"column_start":12,"column_end":16},"name":"same","qualname":"<Store>::same","value":"pub fn same(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether two stores are identical. A store is considered\n equal to another store if both have the same engine. The\n tunables are excluded from the logic.\n","sig":null,"attributes":[{"value":"/ Checks whether two stores are identical. A store is considered","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\store.rs","byte_start":174763,"byte_end":174829,"line_start":57,"line_end":57,"column_start":5,"column_end":71}},{"value":"/ equal to another store if both have the same engine. The","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\store.rs","byte_start":174834,"byte_end":174894,"line_start":58,"line_end":58,"column_start":5,"column_end":65}},{"value":"/ tunables are excluded from the logic.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\store.rs","byte_start":174899,"byte_end":174940,"line_start":59,"line_end":59,"column_start":5,"column_end":46}}]},{"kind":"Trait","id":{"krate":0,"index":1230},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\store.rs","byte_start":177231,"byte_end":177242,"line_start":125,"line_end":125,"column_start":11,"column_end":22},"name":"StoreObject","qualname":"::store::StoreObject","value":"StoreObject","parent":null,"children":[{"krate":0,"index":1231}],"decl_id":null,"docs":" A trait represinting any object that lives in the `Store`.\n","sig":null,"attributes":[{"value":"/ A trait represinting any object that lives in the `Store`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\store.rs","byte_start":177158,"byte_end":177220,"line_start":124,"line_end":124,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1231},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\store.rs","byte_start":177331,"byte_end":177352,"line_start":127,"line_end":127,"column_start":8,"column_end":29},"name":"comes_from_same_store","qualname":"::store::StoreObject::comes_from_same_store","value":"pub fn comes_from_same_store(&Self, &Store) -> bool","parent":{"krate":0,"index":1230},"children":[],"decl_id":null,"docs":" Return true if the object `Store` is the same as the provided `Store`.\n","sig":null,"attributes":[{"value":"/ Return true if the object `Store` is the same as the provided `Store`.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\store.rs","byte_start":177249,"byte_end":177323,"line_start":126,"line_end":126,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":7752},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\tunables.rs","byte_start":178161,"byte_end":178173,"line_start":23,"line_end":23,"column_start":12,"column_end":24},"name":"BaseTunables","qualname":"::tunables::BaseTunables","value":"BaseTunables { static_memory_bound, static_memory_offset_guard_size, dynamic_memory_offset_guard_size }","parent":null,"children":[{"krate":0,"index":7753},{"krate":0,"index":7754},{"krate":0,"index":7755}],"decl_id":null,"docs":" Tunable parameters for WebAssembly compilation.\n This is the reference implementation of the `Tunables` trait,\n used by default.","sig":null,"attributes":[{"value":"/ Tunable parameters for WebAssembly compilation.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\tunables.rs","byte_start":177766,"byte_end":177817,"line_start":14,"line_end":14,"column_start":1,"column_end":52}},{"value":"/ This is the reference implementation of the `Tunables` trait,","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\tunables.rs","byte_start":177818,"byte_end":177883,"line_start":15,"line_end":15,"column_start":1,"column_end":66}},{"value":"/ used by default.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\tunables.rs","byte_start":177884,"byte_end":177904,"line_start":16,"line_end":16,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\tunables.rs","byte_start":177905,"byte_end":177908,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ You can use this as a template for creating a custom Tunables","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\tunables.rs","byte_start":177909,"byte_end":177974,"line_start":18,"line_end":18,"column_start":1,"column_end":66}},{"value":"/ implementation or use composition to wrap your Tunables around","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\tunables.rs","byte_start":177975,"byte_end":178041,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/ this one. The later approach is demonstrated in the","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\tunables.rs","byte_start":178042,"byte_end":178097,"line_start":20,"line_end":20,"column_start":1,"column_end":56}},{"value":"/ tunables-limit-memory example.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\tunables.rs","byte_start":178098,"byte_end":178132,"line_start":21,"line_end":21,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":7753},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\tunables.rs","byte_start":178275,"byte_end":178294,"line_start":25,"line_end":25,"column_start":9,"column_end":28},"name":"static_memory_bound","qualname":"::tunables::BaseTunables::static_memory_bound","value":"wasmer_types::Pages","parent":{"krate":0,"index":7752},"children":[],"decl_id":null,"docs":" For static heaps, the size in wasm pages of the heap protected by bounds checking.\n","sig":null,"attributes":[{"value":"/ For static heaps, the size in wasm pages of the heap protected by bounds checking.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\tunables.rs","byte_start":178180,"byte_end":178266,"line_start":24,"line_end":24,"column_start":5,"column_end":91}}]},{"kind":"Field","id":{"krate":0,"index":7754},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\tunables.rs","byte_start":178376,"byte_end":178407,"line_start":28,"line_end":28,"column_start":9,"column_end":40},"name":"static_memory_offset_guard_size","qualname":"::tunables::BaseTunables::static_memory_offset_guard_size","value":"u64","parent":{"krate":0,"index":7752},"children":[],"decl_id":null,"docs":" The size in bytes of the offset guard for static heaps.\n","sig":null,"attributes":[{"value":"/ The size in bytes of the offset guard for static heaps.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\tunables.rs","byte_start":178308,"byte_end":178367,"line_start":27,"line_end":27,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":7755},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\tunables.rs","byte_start":178488,"byte_end":178520,"line_start":31,"line_end":31,"column_start":9,"column_end":41},"name":"dynamic_memory_offset_guard_size","qualname":"::tunables::BaseTunables::dynamic_memory_offset_guard_size","value":"u64","parent":{"krate":0,"index":7752},"children":[],"decl_id":null,"docs":" The size in bytes of the offset guard for dynamic heaps.\n","sig":null,"attributes":[{"value":"/ The size in bytes of the offset guard for dynamic heaps.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\tunables.rs","byte_start":178419,"byte_end":178479,"line_start":30,"line_end":30,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1294},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\tunables.rs","byte_start":178614,"byte_end":178624,"line_start":36,"line_end":36,"column_start":12,"column_end":22},"name":"for_target","qualname":"<BaseTunables>::for_target","value":"pub fn for_target(&Target) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the `BaseTunables` for a specific Target\n","sig":null,"attributes":[{"value":"/ Get the `BaseTunables` for a specific Target","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\tunables.rs","byte_start":178554,"byte_end":178602,"line_start":35,"line_end":35,"column_start":5,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":1359},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\types.rs","byte_start":184969,"byte_end":184972,"line_start":17,"line_end":17,"column_start":10,"column_end":13},"name":"Val","qualname":"::types::Val","value":"Value<Function>","parent":null,"children":[],"decl_id":null,"docs":" WebAssembly computations manipulate values of basic value types:\n * Integers (32 or 64 bit width)\n * Floating-point (32 or 64 bit width)\n * Vectors (128 bits, with 32 or 64 bit lanes)","sig":null,"attributes":[{"value":"/ WebAssembly computations manipulate values of basic value types:","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\types.rs","byte_start":184682,"byte_end":184750,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"/ * Integers (32 or 64 bit width)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\types.rs","byte_start":184751,"byte_end":184786,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/ * Floating-point (32 or 64 bit width)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\types.rs","byte_start":184787,"byte_end":184828,"line_start":13,"line_end":13,"column_start":1,"column_end":42}},{"value":"/ * Vectors (128 bits, with 32 or 64 bit lanes)","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\types.rs","byte_start":184829,"byte_end":184878,"line_start":14,"line_end":14,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\types.rs","byte_start":184879,"byte_end":184882,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Spec: <https://webassembly.github.io/spec/core/exec/runtime.html#values>","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\types.rs","byte_start":184883,"byte_end":184959,"line_start":16,"line_end":16,"column_start":1,"column_end":77}}]},{"kind":"Function","id":{"krate":0,"index":1371},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\utils.rs","byte_start":187899,"byte_end":187906,"line_start":2,"line_end":2,"column_start":8,"column_end":15},"name":"is_wasm","qualname":"::utils::is_wasm","value":"pub fn is_wasm<impl AsRef<[u8]>: AsRef<[u8]>>(impl AsRef<[u8]>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the provided bytes are wasm-like\n","sig":null,"attributes":[{"value":"/ Check if the provided bytes are wasm-like","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\utils.rs","byte_start":187846,"byte_end":187891,"line_start":1,"line_end":1,"column_start":1,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":1376},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":9377,"byte_end":9386,"line_start":275,"line_end":275,"column_start":9,"column_end":18},"name":"internals","qualname":"::internals","value":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1377},{"krate":0,"index":1378},{"krate":0,"index":1379},{"krate":0,"index":1381},{"krate":0,"index":1382}],"decl_id":null,"docs":" We use the internals module for exporting types that are only\n intended to use in internal crates such as the compatibility crate\n `wasmer-vm`. Please don't use any of this types directly, as\n they might change frequently or be removed in the future.\n","sig":null,"attributes":[{"value":"/ We use the internals module for exporting types that are only","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":9393,"byte_end":9458,"line_start":276,"line_end":276,"column_start":5,"column_end":70}},{"value":"/ intended to use in internal crates such as the compatibility crate","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":9463,"byte_end":9533,"line_start":277,"line_end":277,"column_start":5,"column_end":75}},{"value":"/ `wasmer-vm`. Please don't use any of this types directly, as","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":9538,"byte_end":9602,"line_start":278,"line_end":278,"column_start":5,"column_end":69}},{"value":"/ they might change frequently or be removed in the future.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":9607,"byte_end":9668,"line_start":279,"line_end":279,"column_start":5,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":1663},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":11582,"byte_end":11584,"line_start":324,"line_end":324,"column_start":9,"column_end":11},"name":"vm","qualname":"::vm","value":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1664},{"krate":0,"index":1665},{"krate":0,"index":1668},{"krate":0,"index":1671},{"krate":0,"index":1674},{"krate":0,"index":1677},{"krate":0,"index":1680},{"krate":0,"index":1683}],"decl_id":null,"docs":" The vm module re-exports wasmer-vm types.\n","sig":null,"attributes":[{"value":"/ The vm module re-exports wasmer-vm types.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":11591,"byte_end":11636,"line_start":325,"line_end":325,"column_start":5,"column_end":50}}]},{"kind":"Const","id":{"krate":0,"index":1706},"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":12916,"byte_end":12923,"line_start":371,"line_end":371,"column_start":11,"column_end":18},"name":"VERSION","qualname":"::VERSION","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" Version number of this crate.\n","sig":null,"attributes":[{"value":"/ Version number of this crate.","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\lib.rs","byte_start":12872,"byte_end":12905,"line_start":370,"line_end":370,"column_start":1,"column_end":34}}]}],"impls":[{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":13311,"byte_end":13327,"line_start":12,"line_end":12,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":15}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":16656,"byte_end":16662,"line_start":108,"line_end":108,"column_start":20,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":17312,"byte_end":17315,"line_start":119,"line_end":119,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":17519,"byte_end":17522,"line_start":125,"line_end":125,"column_start":47,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":17952,"byte_end":17960,"line_start":140,"line_end":140,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":18844,"byte_end":18852,"line_start":177,"line_end":177,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":19062,"byte_end":19070,"line_start":185,"line_end":185,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":19462,"byte_end":19470,"line_start":201,"line_end":201,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":19702,"byte_end":19710,"line_start":212,"line_end":212,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":19802,"byte_end":19810,"line_start":218,"line_end":218,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":22187,"byte_end":22194,"line_start":69,"line_end":69,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":152},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":25743,"byte_end":25750,"line_start":189,"line_end":189,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":26044,"byte_end":26059,"line_start":203,"line_end":203,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":26291,"byte_end":26306,"line_start":214,"line_end":214,"column_start":35,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":26474,"byte_end":26489,"line_start":223,"line_end":223,"column_start":13,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":180},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":27721,"byte_end":27728,"line_start":260,"line_end":260,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":27920,"byte_end":27927,"line_start":268,"line_end":268,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":196},{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":29465,"byte_end":29466,"line_start":308,"line_end":308,"column_start":86,"column_end":87},"value":"","parent":null,"children":[{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":36708,"byte_end":36716,"line_start":112,"line_end":112,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":322},{"krate":0,"index":327},{"krate":0,"index":333},{"krate":0,"index":338},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":60401,"byte_end":60409,"line_start":787,"line_end":787,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":359},{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":60740,"byte_end":60748,"line_start":800,"line_end":800,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":61425,"byte_end":61450,"line_start":822,"line_end":822,"column_start":28,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":61981,"byte_end":62003,"line_start":841,"line_end":841,"column_start":60,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":62234,"byte_end":62256,"line_start":851,"line_end":851,"column_start":33,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":379},{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":62762,"byte_end":62786,"line_start":869,"line_end":869,"column_start":57,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":70890,"byte_end":70891,"line_start":1111,"line_end":1111,"column_start":31,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":466},{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":71190,"byte_end":71196,"line_start":1124,"line_end":1124,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":471},{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":73883,"byte_end":73890,"line_start":1217,"line_end":1217,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":74462,"byte_end":74472,"line_start":1235,"line_end":1235,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":74850,"byte_end":74858,"line_start":1246,"line_end":1246,"column_start":38,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":74896,"byte_end":74904,"line_start":1248,"line_end":1248,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":492},{"krate":0,"index":496},{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":88610,"byte_end":88620,"line_start":1550,"line_end":1550,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":94501,"byte_end":94507,"line_start":25,"line_end":25,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":571},{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":99762,"byte_end":99768,"line_start":208,"line_end":208,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":100029,"byte_end":100035,"line_start":218,"line_end":218,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":577},{"krate":0,"index":578}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":101611,"byte_end":101617,"line_start":32,"line_end":32,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":644},{"krate":0,"index":646},{"krate":0,"index":647}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":108628,"byte_end":108634,"line_start":247,"line_end":247,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":650},{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\table.rs","byte_start":110088,"byte_end":110093,"line_start":34,"line_end":34,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\table.rs","byte_start":113982,"byte_end":113987,"line_start":155,"line_end":155,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":714},{"krate":0,"index":715}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\mod.rs","byte_start":30583,"byte_end":30589,"line_start":38,"line_end":38,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":768},{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\mod.rs","byte_start":31501,"byte_end":31507,"line_start":60,"line_end":60,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":772},{"krate":0,"index":773}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\mod.rs","byte_start":31968,"byte_end":31974,"line_start":76,"line_end":76,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":775}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\mod.rs","byte_start":32320,"byte_end":32326,"line_start":88,"line_end":88,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":777}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\mod.rs","byte_start":32721,"byte_end":32727,"line_start":103,"line_end":103,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":779}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\mod.rs","byte_start":32822,"byte_end":32828,"line_start":109,"line_end":109,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":781}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\mod.rs","byte_start":32919,"byte_end":32925,"line_start":115,"line_end":115,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":783}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\mod.rs","byte_start":33015,"byte_end":33021,"line_start":121,"line_end":121,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":785}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":115934,"byte_end":115946,"line_start":47,"line_end":47,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":831}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":118189,"byte_end":118201,"line_start":117,"line_end":117,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":833}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":118480,"byte_end":118500,"line_start":128,"line_end":128,"column_start":19,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":837},{"krate":0,"index":838}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":118659,"byte_end":118671,"line_start":135,"line_end":135,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":842}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":118916,"byte_end":118928,"line_start":146,"line_end":146,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":844}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":119093,"byte_end":119105,"line_start":153,"line_end":153,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":851}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":119451,"byte_end":119460,"line_start":167,"line_end":167,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":859}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":119698,"byte_end":119707,"line_start":177,"line_end":177,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":861}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":127799,"byte_end":127817,"line_start":65,"line_end":65,"column_start":50,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":912}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":128105,"byte_end":128123,"line_start":74,"line_end":74,"column_start":33,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":914}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":128230,"byte_end":128238,"line_start":80,"line_end":80,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":916},{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":920}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":131241,"byte_end":131249,"line_start":168,"line_end":168,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":922}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":132449,"byte_end":132455,"line_start":39,"line_end":39,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":985},{"krate":0,"index":988},{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":992},{"krate":0,"index":993},{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1006},{"krate":0,"index":1009},{"krate":0,"index":1012},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":145648,"byte_end":145654,"line_start":425,"line_end":425,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\native.rs","byte_start":146958,"byte_end":146968,"line_start":32,"line_end":32,"column_start":34,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\native.rs","byte_start":147002,"byte_end":147012,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1094}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\native.rs","byte_start":148207,"byte_end":148221,"line_start":84,"line_end":84,"column_start":52,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":1098}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\native.rs","byte_start":148422,"byte_end":148430,"line_start":94,"line_end":94,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1102}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":158174,"byte_end":158181,"line_start":42,"line_end":42,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1140},{"krate":0,"index":1141}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":158945,"byte_end":158952,"line_start":69,"line_end":69,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1145},{"krate":0,"index":1147}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":160884,"byte_end":160891,"line_start":117,"line_end":117,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1151},{"krate":0,"index":1152},{"krate":0,"index":1153},{"krate":0,"index":1155},{"krate":0,"index":1156},{"krate":0,"index":1161}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":167235,"byte_end":167242,"line_start":266,"line_end":266,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1166},{"krate":0,"index":1167},{"krate":0,"index":1168}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":167534,"byte_end":167541,"line_start":280,"line_end":280,"column_start":40,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":167581,"byte_end":167588,"line_start":282,"line_end":282,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1175}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":167757,"byte_end":167764,"line_start":291,"line_end":291,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":167808,"byte_end":167815,"line_start":293,"line_end":293,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1182}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":167936,"byte_end":167943,"line_start":299,"line_end":299,"column_start":26,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":167988,"byte_end":167995,"line_start":301,"line_end":301,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1189}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\store.rs","byte_start":173897,"byte_end":173902,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1211},{"krate":0,"index":1213},{"krate":0,"index":1216},{"krate":0,"index":1217},{"krate":0,"index":1218}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\store.rs","byte_start":175054,"byte_end":175059,"line_start":65,"line_end":65,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1220}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\store.rs","byte_start":175310,"byte_end":175315,"line_start":73,"line_end":73,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1222}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\store.rs","byte_start":177041,"byte_end":177046,"line_start":118,"line_end":118,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1229}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\tunables.rs","byte_start":178535,"byte_end":178547,"line_start":34,"line_end":34,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1294}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\tunables.rs","byte_start":180171,"byte_end":180183,"line_start":71,"line_end":71,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1296},{"krate":0,"index":1297},{"krate":0,"index":1298},{"krate":0,"index":1299},{"krate":0,"index":1300},{"krate":0,"index":1301}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\types.rs","byte_start":185014,"byte_end":185017,"line_start":19,"line_end":19,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1361}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\types.rs","byte_start":185453,"byte_end":185456,"line_start":30,"line_end":30,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1363}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\types.rs","byte_start":185901,"byte_end":185904,"line_start":47,"line_end":47,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1368},{"krate":0,"index":1369}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":13311,"byte_end":13327,"line_start":12,"line_end":12,"column_start":28,"column_end":44},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1719},"to":{"krate":2,"index":2895}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":15802,"byte_end":15807,"line_start":81,"line_end":81,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":2610},"to":{"krate":0,"index":16}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":15810,"byte_end":15814,"line_start":81,"line_end":81,"column_start":30,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2989},"to":{"krate":0,"index":16}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":15817,"byte_end":15821,"line_start":81,"line_end":81,"column_start":37,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":3001},"to":{"krate":0,"index":16}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":16656,"byte_end":16662,"line_start":108,"line_end":108,"column_start":20,"column_end":26},"kind":{"Impl":{"id":19}},"from":{"krate":5,"index":7547},"to":{"krate":0,"index":16}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":17312,"byte_end":17315,"line_start":119,"line_end":119,"column_start":34,"column_end":37},"kind":{"Impl":{"id":20}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":16}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":17519,"byte_end":17522,"line_start":125,"line_end":125,"column_start":47,"column_end":50},"kind":{"Impl":{"id":21}},"from":{"krate":5,"index":5922},"to":{"krate":0,"index":16}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":17952,"byte_end":17960,"line_start":140,"line_end":140,"column_start":9,"column_end":17},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":61},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":18844,"byte_end":18852,"line_start":177,"line_end":177,"column_start":46,"column_end":54},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":61},"to":{"krate":2,"index":9300}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":19062,"byte_end":19070,"line_start":185,"line_end":185,"column_start":26,"column_end":34},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":61},"to":{"krate":2,"index":2610}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":19462,"byte_end":19470,"line_start":201,"line_end":201,"column_start":18,"column_end":26},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":61},"to":{"krate":2,"index":3224}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":19702,"byte_end":19710,"line_start":212,"line_end":212,"column_start":21,"column_end":29},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":61},"to":{"krate":2,"index":2967}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\env.rs","byte_start":19802,"byte_end":19810,"line_start":218,"line_end":218,"column_start":31,"column_end":39},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":61},"to":{"krate":2,"index":2989}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":22187,"byte_end":22194,"line_start":69,"line_end":69,"column_start":6,"column_end":13},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1741},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":25743,"byte_end":25750,"line_start":189,"line_end":189,"column_start":21,"column_end":28},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1741},"to":{"krate":2,"index":9300}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":26044,"byte_end":26059,"line_start":203,"line_end":203,"column_start":26,"column_end":41},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":7566}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":26291,"byte_end":26306,"line_start":214,"line_end":214,"column_start":35,"column_end":50},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":7455}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":26474,"byte_end":26489,"line_start":223,"line_end":223,"column_start":13,"column_end":28},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":27721,"byte_end":27728,"line_start":260,"line_end":260,"column_start":41,"column_end":48},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1741},"to":{"krate":2,"index":7382}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":27920,"byte_end":27927,"line_start":268,"line_end":268,"column_start":24,"column_end":31},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1741},"to":{"krate":0,"index":821}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":28391,"byte_end":28396,"line_start":284,"line_end":284,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2994},"to":{"krate":0,"index":200}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":29118,"byte_end":29123,"line_start":301,"line_end":301,"column_start":79,"column_end":84},"kind":"SuperTrait","from":{"krate":2,"index":2994},"to":{"krate":0,"index":204}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\exports.rs","byte_start":29465,"byte_end":29466,"line_start":308,"line_end":308,"column_start":86,"column_end":87},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":211},"to":{"krate":0,"index":204}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":36708,"byte_end":36716,"line_start":112,"line_end":112,"column_start":6,"column_end":14},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1776},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":60401,"byte_end":60409,"line_start":787,"line_end":787,"column_start":29,"column_end":37},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1776},"to":{"krate":0,"index":200}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":60740,"byte_end":60748,"line_start":800,"line_end":800,"column_start":21,"column_end":29},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1776},"to":{"krate":2,"index":9300}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":61041,"byte_end":61045,"line_start":810,"line_end":810,"column_start":37,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":2989},"to":{"krate":0,"index":363}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":61048,"byte_end":61052,"line_start":810,"line_end":810,"column_start":44,"column_end":48},"kind":"SuperTrait","from":{"krate":2,"index":3001},"to":{"krate":0,"index":363}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":61425,"byte_end":61450,"line_start":822,"line_end":822,"column_start":28,"column_end":53},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1786},"to":{"krate":0,"index":363}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":61981,"byte_end":62003,"line_start":841,"line_end":841,"column_start":60,"column_end":82},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":369},"to":{"krate":2,"index":2610}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":62234,"byte_end":62256,"line_start":851,"line_end":851,"column_start":33,"column_end":55},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":369},"to":{"krate":0,"index":363}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":62762,"byte_end":62786,"line_start":869,"line_end":869,"column_start":57,"column_end":81},"kind":{"Impl":{"id":44}},"from":{"krate":29,"index":1315},"to":{"krate":0,"index":381}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":65566,"byte_end":65570,"line_start":940,"line_end":940,"column_start":44,"column_end":48},"kind":"SuperTrait","from":{"krate":2,"index":2999},"to":{"krate":0,"index":444}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":70890,"byte_end":70891,"line_start":1111,"line_end":1111,"column_start":31,"column_end":32},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":465},"to":{"krate":0,"index":460}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":71190,"byte_end":71196,"line_start":1124,"line_end":1124,"column_start":34,"column_end":40},"kind":{"Impl":{"id":56}},"from":{"krate":2,"index":43305},"to":{"krate":0,"index":460}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":73883,"byte_end":73890,"line_start":1217,"line_end":1217,"column_start":31,"column_end":38},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":480},"to":{"krate":0,"index":479}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":74462,"byte_end":74472,"line_start":1235,"line_end":1235,"column_start":31,"column_end":41},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":483},"to":{"krate":0,"index":479}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":74850,"byte_end":74858,"line_start":1246,"line_end":1246,"column_start":38,"column_end":46},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1831},"to":{"krate":2,"index":2989}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":74896,"byte_end":74904,"line_start":1248,"line_end":1248,"column_start":22,"column_end":30},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1831},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\function.rs","byte_start":88610,"byte_end":88620,"line_start":1550,"line_end":1550,"column_start":27,"column_end":37},"kind":{"Impl":{"id":61}},"from":{"krate":2,"index":34670},"to":{"krate":0,"index":450}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":94501,"byte_end":94507,"line_start":25,"line_end":25,"column_start":6,"column_end":12},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":6913},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":99762,"byte_end":99768,"line_start":208,"line_end":208,"column_start":21,"column_end":27},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":6913},"to":{"krate":2,"index":9300}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\global.rs","byte_start":100029,"byte_end":100035,"line_start":218,"line_end":218,"column_start":29,"column_end":35},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":6913},"to":{"krate":0,"index":200}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":101611,"byte_end":101617,"line_start":32,"line_end":32,"column_start":6,"column_end":12},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":6918},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\memory.rs","byte_start":108628,"byte_end":108634,"line_start":247,"line_end":247,"column_start":29,"column_end":35},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":6918},"to":{"krate":0,"index":200}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\table.rs","byte_start":110088,"byte_end":110093,"line_start":34,"line_end":34,"column_start":6,"column_end":11},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":6925},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\table.rs","byte_start":113982,"byte_end":113987,"line_start":155,"line_end":155,"column_start":29,"column_end":34},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":6925},"to":{"krate":0,"index":200}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\mod.rs","byte_start":30583,"byte_end":30589,"line_start":38,"line_end":38,"column_start":6,"column_end":12},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":6930},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\mod.rs","byte_start":31501,"byte_end":31507,"line_start":60,"line_end":60,"column_start":29,"column_end":35},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":6930},"to":{"krate":0,"index":200}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\mod.rs","byte_start":31968,"byte_end":31974,"line_start":76,"line_end":76,"column_start":22,"column_end":28},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":6930},"to":{"krate":0,"index":1230}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\mod.rs","byte_start":32320,"byte_end":32326,"line_start":88,"line_end":88,"column_start":21,"column_end":27},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":6930},"to":{"krate":2,"index":9300}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\mod.rs","byte_start":32721,"byte_end":32727,"line_start":103,"line_end":103,"column_start":25,"column_end":31},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":6930},"to":{"krate":2,"index":2895}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\mod.rs","byte_start":32822,"byte_end":32828,"line_start":109,"line_end":109,"column_start":23,"column_end":29},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":6930},"to":{"krate":2,"index":2895}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\mod.rs","byte_start":32919,"byte_end":32925,"line_start":115,"line_end":115,"column_start":23,"column_end":29},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":6930},"to":{"krate":2,"index":2895}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\externals\\mod.rs","byte_start":33015,"byte_end":33021,"line_start":121,"line_end":121,"column_start":22,"column_end":28},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":6930},"to":{"krate":2,"index":2895}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":115934,"byte_end":115946,"line_start":47,"line_end":47,"column_start":6,"column_end":18},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":6945},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":118189,"byte_end":118201,"line_start":117,"line_end":117,"column_start":24,"column_end":36},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":6945},"to":{"krate":24,"index":326}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":118480,"byte_end":118500,"line_start":128,"line_end":128,"column_start":19,"column_end":39},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":834},"to":{"krate":2,"index":7566}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":118659,"byte_end":118671,"line_start":135,"line_end":135,"column_start":23,"column_end":35},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":6945},"to":{"krate":2,"index":7386}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":118916,"byte_end":118928,"line_start":146,"line_end":146,"column_start":21,"column_end":33},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":6945},"to":{"krate":2,"index":9300}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":119093,"byte_end":119105,"line_start":153,"line_end":153,"column_start":29,"column_end":41},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":845},"to":{"krate":2,"index":9300}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":119451,"byte_end":119460,"line_start":167,"line_end":167,"column_start":14,"column_end":23},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":852},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\import_object.rs","byte_start":119698,"byte_end":119707,"line_start":177,"line_end":177,"column_start":29,"column_end":38},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":852},"to":{"krate":2,"index":9300}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":127799,"byte_end":127817,"line_start":65,"line_end":65,"column_start":50,"column_end":68},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":6957},"to":{"krate":2,"index":2895}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":128105,"byte_end":128123,"line_start":74,"line_end":74,"column_start":33,"column_end":51},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":6957},"to":{"krate":2,"index":2895}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":128230,"byte_end":128238,"line_start":80,"line_end":80,"column_start":6,"column_end":14},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":6951},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\instance.rs","byte_start":131241,"byte_end":131249,"line_start":168,"line_end":168,"column_start":21,"column_end":29},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":6951},"to":{"krate":2,"index":9300}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":132449,"byte_end":132455,"line_start":39,"line_end":39,"column_start":6,"column_end":12},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":6996},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\module.rs","byte_start":145648,"byte_end":145654,"line_start":425,"line_end":425,"column_start":21,"column_end":27},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":6996},"to":{"krate":2,"index":9300}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\native.rs","byte_start":146958,"byte_end":146968,"line_start":32,"line_end":32,"column_start":34,"column_end":44},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":7001},"to":{"krate":2,"index":2989}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\native.rs","byte_start":147002,"byte_end":147012,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":7001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\native.rs","byte_start":148207,"byte_end":148221,"line_start":84,"line_end":84,"column_start":52,"column_end":66},"kind":{"Impl":{"id":99}},"from":{"krate":24,"index":892},"to":{"krate":2,"index":2895}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\native.rs","byte_start":148422,"byte_end":148430,"line_start":94,"line_end":94,"column_start":51,"column_end":59},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1776},"to":{"krate":2,"index":2895}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":158174,"byte_end":158181,"line_start":42,"line_end":42,"column_start":19,"column_end":26},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1132},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":158945,"byte_end":158952,"line_start":69,"line_end":69,"column_start":27,"column_end":34},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1132},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":160884,"byte_end":160891,"line_start":117,"line_end":117,"column_start":27,"column_end":34},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1132},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":167235,"byte_end":167242,"line_start":266,"line_end":266,"column_start":51,"column_end":58},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1132},"to":{"krate":0,"index":444}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":167534,"byte_end":167541,"line_start":280,"line_end":280,"column_start":40,"column_end":47},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1132},"to":{"krate":26,"index":245}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":167581,"byte_end":167588,"line_start":282,"line_end":282,"column_start":29,"column_end":36},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1132},"to":{"krate":2,"index":2610}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":167757,"byte_end":167764,"line_start":291,"line_end":291,"column_start":28,"column_end":35},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1132},"to":{"krate":2,"index":2999}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":167808,"byte_end":167815,"line_start":293,"line_end":293,"column_start":33,"column_end":40},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1132},"to":{"krate":2,"index":2640}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":167936,"byte_end":167943,"line_start":299,"line_end":299,"column_start":26,"column_end":33},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1132},"to":{"krate":2,"index":2645}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\ptr.rs","byte_start":167988,"byte_end":167995,"line_start":301,"line_end":301,"column_start":34,"column_end":41},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1132},"to":{"krate":2,"index":9300}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\store.rs","byte_start":173897,"byte_end":173902,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":7747},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\store.rs","byte_start":175054,"byte_end":175059,"line_start":65,"line_end":65,"column_start":20,"column_end":25},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":7747},"to":{"krate":2,"index":2640}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\store.rs","byte_start":175310,"byte_end":175315,"line_start":73,"line_end":73,"column_start":18,"column_end":23},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":7747},"to":{"krate":2,"index":2967}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\store.rs","byte_start":177041,"byte_end":177046,"line_start":118,"line_end":118,"column_start":21,"column_end":26},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":7747},"to":{"krate":2,"index":9300}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\tunables.rs","byte_start":178535,"byte_end":178547,"line_start":34,"line_end":34,"column_start":6,"column_end":18},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":7752},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\tunables.rs","byte_start":180171,"byte_end":180183,"line_start":71,"line_end":71,"column_start":19,"column_end":31},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":7752},"to":{"krate":24,"index":649}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\types.rs","byte_start":185014,"byte_end":185017,"line_start":19,"line_end":19,"column_start":22,"column_end":25},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1359},"to":{"krate":0,"index":1230}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\types.rs","byte_start":185453,"byte_end":185456,"line_start":30,"line_end":30,"column_start":25,"column_end":28},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1359},"to":{"krate":2,"index":2895}},{"span":{"file_name":"C:\\Users\\комфи\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wasmer-1.0.2\\src\\types.rs","byte_start":185901,"byte_end":185904,"line_start":47,"line_end":47,"column_start":21,"column_end":24},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1359},"to":{"krate":0,"index":1364}}]}